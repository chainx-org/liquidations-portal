/*! For license information please see index.js.LICENSE.txt */ ! function webpackUniversalModuleDefinition(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports["@makerdao/dai-plugin-mcd"] = e() : t["@makerdao/dai-plugin-mcd"] = e()
}(window, (function () {
    return function (t) {
        var e = {};

        function __webpack_require__(r) {
            if (e[r]) return e[r].exports;
            var n = e[r] = {
                i: r,
                l: !1,
                exports: {}
            };
            return t[r].call(n.exports, n, n.exports, __webpack_require__), n.l = !0, n.exports
        }
        return __webpack_require__.m = t, __webpack_require__.c = e, __webpack_require__.d = function (t, e, r) {
            __webpack_require__.o(t, e) || Object.defineProperty(t, e, {
                enumerable: !0,
                get: r
            })
        }, __webpack_require__.r = function (t) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(t, "__esModule", {
                value: !0
            })
        }, __webpack_require__.t = function (t, e) {
            if (1 & e && (t = __webpack_require__(t)), 8 & e) return t;
            if (4 & e && "object" == typeof t && t && t.__esModule) return t;
            var r = Object.create(null);
            if (__webpack_require__.r(r), Object.defineProperty(r, "default", {
                    enumerable: !0,
                    value: t
                }), 2 & e && "string" != typeof t)
                for (var n in t) __webpack_require__.d(r, n, function (e) {
                    return t[e]
                }.bind(null, n));
            return r
        }, __webpack_require__.n = function (t) {
            var e = t && t.__esModule ? function getDefault() {
                return t.default
            } : function getModuleExports() {
                return t
            };
            return __webpack_require__.d(e, "a", e), e
        }, __webpack_require__.o = function (t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }, __webpack_require__.p = "", __webpack_require__(__webpack_require__.s = 350)
    }([function (t, e, r) {
        (function (t) {
            var n = r(562),
                i = r(563),
                o = r(258);

            function kMaxLength() {
                return Buffer.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
            }

            function createBuffer(t, e) {
                if (kMaxLength() < e) throw new RangeError("Invalid typed array length");
                return Buffer.TYPED_ARRAY_SUPPORT ? (t = new Uint8Array(e)).__proto__ = Buffer.prototype : (null === t && (t = new Buffer(e)), t.length = e), t
            }

            function Buffer(t, e, r) {
                if (!(Buffer.TYPED_ARRAY_SUPPORT || this instanceof Buffer)) return new Buffer(t, e, r);
                if ("number" == typeof t) {
                    if ("string" == typeof e) throw new Error("If encoding is specified then the first argument must be a string");
                    return allocUnsafe(this, t)
                }
                return from(this, t, e, r)
            }

            function from(t, e, r, n) {
                if ("number" == typeof e) throw new TypeError('"value" argument must not be a number');
                return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer ? function fromArrayBuffer(t, e, r, n) {
                    if (e.byteLength, r < 0 || e.byteLength < r) throw new RangeError("'offset' is out of bounds");
                    if (e.byteLength < r + (n || 0)) throw new RangeError("'length' is out of bounds");
                    e = void 0 === r && void 0 === n ? new Uint8Array(e) : void 0 === n ? new Uint8Array(e, r) : new Uint8Array(e, r, n);
                    Buffer.TYPED_ARRAY_SUPPORT ? (t = e).__proto__ = Buffer.prototype : t = fromArrayLike(t, e);
                    return t
                }(t, e, r, n) : "string" == typeof e ? function fromString(t, e, r) {
                    "string" == typeof r && "" !== r || (r = "utf8");
                    if (!Buffer.isEncoding(r)) throw new TypeError('"encoding" must be a valid string encoding');
                    var n = 0 | byteLength(e, r),
                        i = (t = createBuffer(t, n)).write(e, r);
                    i !== n && (t = t.slice(0, i));
                    return t
                }(t, e, r) : function fromObject(t, e) {
                    if (Buffer.isBuffer(e)) {
                        var r = 0 | checked(e.length);
                        return 0 === (t = createBuffer(t, r)).length || e.copy(t, 0, 0, r), t
                    }
                    if (e) {
                        if ("undefined" != typeof ArrayBuffer && e.buffer instanceof ArrayBuffer || "length" in e) return "number" != typeof e.length || function isnan(t) {
                            return t != t
                        }(e.length) ? createBuffer(t, 0) : fromArrayLike(t, e);
                        if ("Buffer" === e.type && o(e.data)) return fromArrayLike(t, e.data)
                    }
                    throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
                }(t, e)
            }

            function assertSize(t) {
                if ("number" != typeof t) throw new TypeError('"size" argument must be a number');
                if (t < 0) throw new RangeError('"size" argument must not be negative')
            }

            function allocUnsafe(t, e) {
                if (assertSize(e), t = createBuffer(t, e < 0 ? 0 : 0 | checked(e)), !Buffer.TYPED_ARRAY_SUPPORT)
                    for (var r = 0; r < e; ++r) t[r] = 0;
                return t
            }

            function fromArrayLike(t, e) {
                var r = e.length < 0 ? 0 : 0 | checked(e.length);
                t = createBuffer(t, r);
                for (var n = 0; n < r; n += 1) t[n] = 255 & e[n];
                return t
            }

            function checked(t) {
                if (t >= kMaxLength()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + kMaxLength().toString(16) + " bytes");
                return 0 | t
            }

            function byteLength(t, e) {
                if (Buffer.isBuffer(t)) return t.length;
                if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(t) || t instanceof ArrayBuffer)) return t.byteLength;
                "string" != typeof t && (t = "" + t);
                var r = t.length;
                if (0 === r) return 0;
                for (var n = !1;;) switch (e) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                        return r;
                    case "utf8":
                    case "utf-8":
                    case void 0:
                        return utf8ToBytes(t).length;
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return 2 * r;
                    case "hex":
                        return r >>> 1;
                    case "base64":
                        return base64ToBytes(t).length;
                    default:
                        if (n) return utf8ToBytes(t).length;
                        e = ("" + e).toLowerCase(), n = !0
                }
            }

            function slowToString(t, e, r) {
                var n = !1;
                if ((void 0 === e || e < 0) && (e = 0), e > this.length) return "";
                if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) return "";
                if ((r >>>= 0) <= (e >>>= 0)) return "";
                for (t || (t = "utf8");;) switch (t) {
                    case "hex":
                        return hexSlice(this, e, r);
                    case "utf8":
                    case "utf-8":
                        return utf8Slice(this, e, r);
                    case "ascii":
                        return asciiSlice(this, e, r);
                    case "latin1":
                    case "binary":
                        return latin1Slice(this, e, r);
                    case "base64":
                        return base64Slice(this, e, r);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return utf16leSlice(this, e, r);
                    default:
                        if (n) throw new TypeError("Unknown encoding: " + t);
                        t = (t + "").toLowerCase(), n = !0
                }
            }

            function swap(t, e, r) {
                var n = t[e];
                t[e] = t[r], t[r] = n
            }

            function bidirectionalIndexOf(t, e, r, n, i) {
                if (0 === t.length) return -1;
                if ("string" == typeof r ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, isNaN(r) && (r = i ? 0 : t.length - 1), r < 0 && (r = t.length + r), r >= t.length) {
                    if (i) return -1;
                    r = t.length - 1
                } else if (r < 0) {
                    if (!i) return -1;
                    r = 0
                }
                if ("string" == typeof e && (e = Buffer.from(e, n)), Buffer.isBuffer(e)) return 0 === e.length ? -1 : arrayIndexOf(t, e, r, n, i);
                if ("number" == typeof e) return e &= 255, Buffer.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(t, e, r) : Uint8Array.prototype.lastIndexOf.call(t, e, r) : arrayIndexOf(t, [e], r, n, i);
                throw new TypeError("val must be string, number or Buffer")
            }

            function arrayIndexOf(t, e, r, n, i) {
                var o, a = 1,
                    s = t.length,
                    u = e.length;
                if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                    if (t.length < 2 || e.length < 2) return -1;
                    a = 2, s /= 2, u /= 2, r /= 2
                }

                function read(t, e) {
                    return 1 === a ? t[e] : t.readUInt16BE(e * a)
                }
                if (i) {
                    var c = -1;
                    for (o = r; o < s; o++)
                        if (read(t, o) === read(e, -1 === c ? 0 : o - c)) {
                            if (-1 === c && (c = o), o - c + 1 === u) return c * a
                        } else -1 !== c && (o -= o - c), c = -1
                } else
                    for (r + u > s && (r = s - u), o = r; o >= 0; o--) {
                        for (var l = !0, h = 0; h < u; h++)
                            if (read(t, o + h) !== read(e, h)) {
                                l = !1;
                                break
                            } if (l) return o
                    }
                return -1
            }

            function hexWrite(t, e, r, n) {
                r = Number(r) || 0;
                var i = t.length - r;
                n ? (n = Number(n)) > i && (n = i) : n = i;
                var o = e.length;
                if (o % 2 != 0) throw new TypeError("Invalid hex string");
                n > o / 2 && (n = o / 2);
                for (var a = 0; a < n; ++a) {
                    var s = parseInt(e.substr(2 * a, 2), 16);
                    if (isNaN(s)) return a;
                    t[r + a] = s
                }
                return a
            }

            function utf8Write(t, e, r, n) {
                return blitBuffer(utf8ToBytes(e, t.length - r), t, r, n)
            }

            function asciiWrite(t, e, r, n) {
                return blitBuffer(function asciiToBytes(t) {
                    for (var e = [], r = 0; r < t.length; ++r) e.push(255 & t.charCodeAt(r));
                    return e
                }(e), t, r, n)
            }

            function latin1Write(t, e, r, n) {
                return asciiWrite(t, e, r, n)
            }

            function base64Write(t, e, r, n) {
                return blitBuffer(base64ToBytes(e), t, r, n)
            }

            function ucs2Write(t, e, r, n) {
                return blitBuffer(function utf16leToBytes(t, e) {
                    for (var r, n, i, o = [], a = 0; a < t.length && !((e -= 2) < 0); ++a) r = t.charCodeAt(a), n = r >> 8, i = r % 256, o.push(i), o.push(n);
                    return o
                }(e, t.length - r), t, r, n)
            }

            function base64Slice(t, e, r) {
                return 0 === e && r === t.length ? n.fromByteArray(t) : n.fromByteArray(t.slice(e, r))
            }

            function utf8Slice(t, e, r) {
                r = Math.min(t.length, r);
                for (var n = [], i = e; i < r;) {
                    var o, a, s, u, c = t[i],
                        l = null,
                        h = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1;
                    if (i + h <= r) switch (h) {
                        case 1:
                            c < 128 && (l = c);
                            break;
                        case 2:
                            128 == (192 & (o = t[i + 1])) && (u = (31 & c) << 6 | 63 & o) > 127 && (l = u);
                            break;
                        case 3:
                            o = t[i + 1], a = t[i + 2], 128 == (192 & o) && 128 == (192 & a) && (u = (15 & c) << 12 | (63 & o) << 6 | 63 & a) > 2047 && (u < 55296 || u > 57343) && (l = u);
                            break;
                        case 4:
                            o = t[i + 1], a = t[i + 2], s = t[i + 3], 128 == (192 & o) && 128 == (192 & a) && 128 == (192 & s) && (u = (15 & c) << 18 | (63 & o) << 12 | (63 & a) << 6 | 63 & s) > 65535 && u < 1114112 && (l = u)
                    }
                    null === l ? (l = 65533, h = 1) : l > 65535 && (l -= 65536, n.push(l >>> 10 & 1023 | 55296), l = 56320 | 1023 & l), n.push(l), i += h
                }
                return function decodeCodePointsArray(t) {
                    var e = t.length;
                    if (e <= 4096) return String.fromCharCode.apply(String, t);
                    var r = "",
                        n = 0;
                    for (; n < e;) r += String.fromCharCode.apply(String, t.slice(n, n += 4096));
                    return r
                }(n)
            }
            e.Buffer = Buffer, e.SlowBuffer = function SlowBuffer(t) {
                +t != t && (t = 0);
                return Buffer.alloc(+t)
            }, e.INSPECT_MAX_BYTES = 50, Buffer.TYPED_ARRAY_SUPPORT = void 0 !== t.TYPED_ARRAY_SUPPORT ? t.TYPED_ARRAY_SUPPORT : function typedArraySupport() {
                try {
                    var t = new Uint8Array(1);
                    return t.__proto__ = {
                        __proto__: Uint8Array.prototype,
                        foo: function () {
                            return 42
                        }
                    }, 42 === t.foo() && "function" == typeof t.subarray && 0 === t.subarray(1, 1).byteLength
                } catch (t) {
                    return !1
                }
            }(), e.kMaxLength = kMaxLength(), Buffer.poolSize = 8192, Buffer._augment = function (t) {
                return t.__proto__ = Buffer.prototype, t
            }, Buffer.from = function (t, e, r) {
                return from(null, t, e, r)
            }, Buffer.TYPED_ARRAY_SUPPORT && (Buffer.prototype.__proto__ = Uint8Array.prototype, Buffer.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && Buffer[Symbol.species] === Buffer && Object.defineProperty(Buffer, Symbol.species, {
                value: null,
                configurable: !0
            })), Buffer.alloc = function (t, e, r) {
                return function alloc(t, e, r, n) {
                    return assertSize(e), e <= 0 ? createBuffer(t, e) : void 0 !== r ? "string" == typeof n ? createBuffer(t, e).fill(r, n) : createBuffer(t, e).fill(r) : createBuffer(t, e)
                }(null, t, e, r)
            }, Buffer.allocUnsafe = function (t) {
                return allocUnsafe(null, t)
            }, Buffer.allocUnsafeSlow = function (t) {
                return allocUnsafe(null, t)
            }, Buffer.isBuffer = function isBuffer(t) {
                return !(null == t || !t._isBuffer)
            }, Buffer.compare = function compare(t, e) {
                if (!Buffer.isBuffer(t) || !Buffer.isBuffer(e)) throw new TypeError("Arguments must be Buffers");
                if (t === e) return 0;
                for (var r = t.length, n = e.length, i = 0, o = Math.min(r, n); i < o; ++i)
                    if (t[i] !== e[i]) {
                        r = t[i], n = e[i];
                        break
                    } return r < n ? -1 : n < r ? 1 : 0
            }, Buffer.isEncoding = function isEncoding(t) {
                switch (String(t).toLowerCase()) {
                    case "hex":
                    case "utf8":
                    case "utf-8":
                    case "ascii":
                    case "latin1":
                    case "binary":
                    case "base64":
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return !0;
                    default:
                        return !1
                }
            }, Buffer.concat = function concat(t, e) {
                if (!o(t)) throw new TypeError('"list" argument must be an Array of Buffers');
                if (0 === t.length) return Buffer.alloc(0);
                var r;
                if (void 0 === e)
                    for (e = 0, r = 0; r < t.length; ++r) e += t[r].length;
                var n = Buffer.allocUnsafe(e),
                    i = 0;
                for (r = 0; r < t.length; ++r) {
                    var a = t[r];
                    if (!Buffer.isBuffer(a)) throw new TypeError('"list" argument must be an Array of Buffers');
                    a.copy(n, i), i += a.length
                }
                return n
            }, Buffer.byteLength = byteLength, Buffer.prototype._isBuffer = !0, Buffer.prototype.swap16 = function swap16() {
                var t = this.length;
                if (t % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                for (var e = 0; e < t; e += 2) swap(this, e, e + 1);
                return this
            }, Buffer.prototype.swap32 = function swap32() {
                var t = this.length;
                if (t % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                for (var e = 0; e < t; e += 4) swap(this, e, e + 3), swap(this, e + 1, e + 2);
                return this
            }, Buffer.prototype.swap64 = function swap64() {
                var t = this.length;
                if (t % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                for (var e = 0; e < t; e += 8) swap(this, e, e + 7), swap(this, e + 1, e + 6), swap(this, e + 2, e + 5), swap(this, e + 3, e + 4);
                return this
            }, Buffer.prototype.toString = function toString() {
                var t = 0 | this.length;
                return 0 === t ? "" : 0 === arguments.length ? utf8Slice(this, 0, t) : slowToString.apply(this, arguments)
            }, Buffer.prototype.equals = function equals(t) {
                if (!Buffer.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
                return this === t || 0 === Buffer.compare(this, t)
            }, Buffer.prototype.inspect = function inspect() {
                var t = "",
                    r = e.INSPECT_MAX_BYTES;
                return this.length > 0 && (t = this.toString("hex", 0, r).match(/.{2}/g).join(" "), this.length > r && (t += " ... ")), "<Buffer " + t + ">"
            }, Buffer.prototype.compare = function compare(t, e, r, n, i) {
                if (!Buffer.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
                if (void 0 === e && (e = 0), void 0 === r && (r = t ? t.length : 0), void 0 === n && (n = 0), void 0 === i && (i = this.length), e < 0 || r > t.length || n < 0 || i > this.length) throw new RangeError("out of range index");
                if (n >= i && e >= r) return 0;
                if (n >= i) return -1;
                if (e >= r) return 1;
                if (this === t) return 0;
                for (var o = (i >>>= 0) - (n >>>= 0), a = (r >>>= 0) - (e >>>= 0), s = Math.min(o, a), u = this.slice(n, i), c = t.slice(e, r), l = 0; l < s; ++l)
                    if (u[l] !== c[l]) {
                        o = u[l], a = c[l];
                        break
                    } return o < a ? -1 : a < o ? 1 : 0
            }, Buffer.prototype.includes = function includes(t, e, r) {
                return -1 !== this.indexOf(t, e, r)
            }, Buffer.prototype.indexOf = function indexOf(t, e, r) {
                return bidirectionalIndexOf(this, t, e, r, !0)
            }, Buffer.prototype.lastIndexOf = function lastIndexOf(t, e, r) {
                return bidirectionalIndexOf(this, t, e, r, !1)
            }, Buffer.prototype.write = function write(t, e, r, n) {
                if (void 0 === e) n = "utf8", r = this.length, e = 0;
                else if (void 0 === r && "string" == typeof e) n = e, r = this.length, e = 0;
                else {
                    if (!isFinite(e)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                    e |= 0, isFinite(r) ? (r |= 0, void 0 === n && (n = "utf8")) : (n = r, r = void 0)
                }
                var i = this.length - e;
                if ((void 0 === r || r > i) && (r = i), t.length > 0 && (r < 0 || e < 0) || e > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                n || (n = "utf8");
                for (var o = !1;;) switch (n) {
                    case "hex":
                        return hexWrite(this, t, e, r);
                    case "utf8":
                    case "utf-8":
                        return utf8Write(this, t, e, r);
                    case "ascii":
                        return asciiWrite(this, t, e, r);
                    case "latin1":
                    case "binary":
                        return latin1Write(this, t, e, r);
                    case "base64":
                        return base64Write(this, t, e, r);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return ucs2Write(this, t, e, r);
                    default:
                        if (o) throw new TypeError("Unknown encoding: " + n);
                        n = ("" + n).toLowerCase(), o = !0
                }
            }, Buffer.prototype.toJSON = function toJSON() {
                return {
                    type: "Buffer",
                    data: Array.prototype.slice.call(this._arr || this, 0)
                }
            };

            function asciiSlice(t, e, r) {
                var n = "";
                r = Math.min(t.length, r);
                for (var i = e; i < r; ++i) n += String.fromCharCode(127 & t[i]);
                return n
            }

            function latin1Slice(t, e, r) {
                var n = "";
                r = Math.min(t.length, r);
                for (var i = e; i < r; ++i) n += String.fromCharCode(t[i]);
                return n
            }

            function hexSlice(t, e, r) {
                var n = t.length;
                (!e || e < 0) && (e = 0), (!r || r < 0 || r > n) && (r = n);
                for (var i = "", o = e; o < r; ++o) i += toHex(t[o]);
                return i
            }

            function utf16leSlice(t, e, r) {
                for (var n = t.slice(e, r), i = "", o = 0; o < n.length; o += 2) i += String.fromCharCode(n[o] + 256 * n[o + 1]);
                return i
            }

            function checkOffset(t, e, r) {
                if (t % 1 != 0 || t < 0) throw new RangeError("offset is not uint");
                if (t + e > r) throw new RangeError("Trying to access beyond buffer length")
            }

            function checkInt(t, e, r, n, i, o) {
                if (!Buffer.isBuffer(t)) throw new TypeError('"buffer" argument must be a Buffer instance');
                if (e > i || e < o) throw new RangeError('"value" argument is out of bounds');
                if (r + n > t.length) throw new RangeError("Index out of range")
            }

            function objectWriteUInt16(t, e, r, n) {
                e < 0 && (e = 65535 + e + 1);
                for (var i = 0, o = Math.min(t.length - r, 2); i < o; ++i) t[r + i] = (e & 255 << 8 * (n ? i : 1 - i)) >>> 8 * (n ? i : 1 - i)
            }

            function objectWriteUInt32(t, e, r, n) {
                e < 0 && (e = 4294967295 + e + 1);
                for (var i = 0, o = Math.min(t.length - r, 4); i < o; ++i) t[r + i] = e >>> 8 * (n ? i : 3 - i) & 255
            }

            function checkIEEE754(t, e, r, n, i, o) {
                if (r + n > t.length) throw new RangeError("Index out of range");
                if (r < 0) throw new RangeError("Index out of range")
            }

            function writeFloat(t, e, r, n, o) {
                return o || checkIEEE754(t, 0, r, 4), i.write(t, e, r, n, 23, 4), r + 4
            }

            function writeDouble(t, e, r, n, o) {
                return o || checkIEEE754(t, 0, r, 8), i.write(t, e, r, n, 52, 8), r + 8
            }
            Buffer.prototype.slice = function slice(t, e) {
                var r, n = this.length;
                if ((t = ~~t) < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n), (e = void 0 === e ? n : ~~e) < 0 ? (e += n) < 0 && (e = 0) : e > n && (e = n), e < t && (e = t), Buffer.TYPED_ARRAY_SUPPORT)(r = this.subarray(t, e)).__proto__ = Buffer.prototype;
                else {
                    var i = e - t;
                    r = new Buffer(i, void 0);
                    for (var o = 0; o < i; ++o) r[o] = this[o + t]
                }
                return r
            }, Buffer.prototype.readUIntLE = function readUIntLE(t, e, r) {
                t |= 0, e |= 0, r || checkOffset(t, e, this.length);
                for (var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);) n += this[t + o] * i;
                return n
            }, Buffer.prototype.readUIntBE = function readUIntBE(t, e, r) {
                t |= 0, e |= 0, r || checkOffset(t, e, this.length);
                for (var n = this[t + --e], i = 1; e > 0 && (i *= 256);) n += this[t + --e] * i;
                return n
            }, Buffer.prototype.readUInt8 = function readUInt8(t, e) {
                return e || checkOffset(t, 1, this.length), this[t]
            }, Buffer.prototype.readUInt16LE = function readUInt16LE(t, e) {
                return e || checkOffset(t, 2, this.length), this[t] | this[t + 1] << 8
            }, Buffer.prototype.readUInt16BE = function readUInt16BE(t, e) {
                return e || checkOffset(t, 2, this.length), this[t] << 8 | this[t + 1]
            }, Buffer.prototype.readUInt32LE = function readUInt32LE(t, e) {
                return e || checkOffset(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3]
            }, Buffer.prototype.readUInt32BE = function readUInt32BE(t, e) {
                return e || checkOffset(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3])
            }, Buffer.prototype.readIntLE = function readIntLE(t, e, r) {
                t |= 0, e |= 0, r || checkOffset(t, e, this.length);
                for (var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);) n += this[t + o] * i;
                return n >= (i *= 128) && (n -= Math.pow(2, 8 * e)), n
            }, Buffer.prototype.readIntBE = function readIntBE(t, e, r) {
                t |= 0, e |= 0, r || checkOffset(t, e, this.length);
                for (var n = e, i = 1, o = this[t + --n]; n > 0 && (i *= 256);) o += this[t + --n] * i;
                return o >= (i *= 128) && (o -= Math.pow(2, 8 * e)), o
            }, Buffer.prototype.readInt8 = function readInt8(t, e) {
                return e || checkOffset(t, 1, this.length), 128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
            }, Buffer.prototype.readInt16LE = function readInt16LE(t, e) {
                e || checkOffset(t, 2, this.length);
                var r = this[t] | this[t + 1] << 8;
                return 32768 & r ? 4294901760 | r : r
            }, Buffer.prototype.readInt16BE = function readInt16BE(t, e) {
                e || checkOffset(t, 2, this.length);
                var r = this[t + 1] | this[t] << 8;
                return 32768 & r ? 4294901760 | r : r
            }, Buffer.prototype.readInt32LE = function readInt32LE(t, e) {
                return e || checkOffset(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24
            }, Buffer.prototype.readInt32BE = function readInt32BE(t, e) {
                return e || checkOffset(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]
            }, Buffer.prototype.readFloatLE = function readFloatLE(t, e) {
                return e || checkOffset(t, 4, this.length), i.read(this, t, !0, 23, 4)
            }, Buffer.prototype.readFloatBE = function readFloatBE(t, e) {
                return e || checkOffset(t, 4, this.length), i.read(this, t, !1, 23, 4)
            }, Buffer.prototype.readDoubleLE = function readDoubleLE(t, e) {
                return e || checkOffset(t, 8, this.length), i.read(this, t, !0, 52, 8)
            }, Buffer.prototype.readDoubleBE = function readDoubleBE(t, e) {
                return e || checkOffset(t, 8, this.length), i.read(this, t, !1, 52, 8)
            }, Buffer.prototype.writeUIntLE = function writeUIntLE(t, e, r, n) {
                (t = +t, e |= 0, r |= 0, n) || checkInt(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
                var i = 1,
                    o = 0;
                for (this[e] = 255 & t; ++o < r && (i *= 256);) this[e + o] = t / i & 255;
                return e + r
            }, Buffer.prototype.writeUIntBE = function writeUIntBE(t, e, r, n) {
                (t = +t, e |= 0, r |= 0, n) || checkInt(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
                var i = r - 1,
                    o = 1;
                for (this[e + i] = 255 & t; --i >= 0 && (o *= 256);) this[e + i] = t / o & 255;
                return e + r
            }, Buffer.prototype.writeUInt8 = function writeUInt8(t, e, r) {
                return t = +t, e |= 0, r || checkInt(this, t, e, 1, 255, 0), Buffer.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), this[e] = 255 & t, e + 1
            }, Buffer.prototype.writeUInt16LE = function writeUInt16LE(t, e, r) {
                return t = +t, e |= 0, r || checkInt(this, t, e, 2, 65535, 0), Buffer.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8) : objectWriteUInt16(this, t, e, !0), e + 2
            }, Buffer.prototype.writeUInt16BE = function writeUInt16BE(t, e, r) {
                return t = +t, e |= 0, r || checkInt(this, t, e, 2, 65535, 0), Buffer.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8, this[e + 1] = 255 & t) : objectWriteUInt16(this, t, e, !1), e + 2
            }, Buffer.prototype.writeUInt32LE = function writeUInt32LE(t, e, r) {
                return t = +t, e |= 0, r || checkInt(this, t, e, 4, 4294967295, 0), Buffer.TYPED_ARRAY_SUPPORT ? (this[e + 3] = t >>> 24, this[e + 2] = t >>> 16, this[e + 1] = t >>> 8, this[e] = 255 & t) : objectWriteUInt32(this, t, e, !0), e + 4
            }, Buffer.prototype.writeUInt32BE = function writeUInt32BE(t, e, r) {
                return t = +t, e |= 0, r || checkInt(this, t, e, 4, 4294967295, 0), Buffer.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t) : objectWriteUInt32(this, t, e, !1), e + 4
            }, Buffer.prototype.writeIntLE = function writeIntLE(t, e, r, n) {
                if (t = +t, e |= 0, !n) {
                    var i = Math.pow(2, 8 * r - 1);
                    checkInt(this, t, e, r, i - 1, -i)
                }
                var o = 0,
                    a = 1,
                    s = 0;
                for (this[e] = 255 & t; ++o < r && (a *= 256);) t < 0 && 0 === s && 0 !== this[e + o - 1] && (s = 1), this[e + o] = (t / a >> 0) - s & 255;
                return e + r
            }, Buffer.prototype.writeIntBE = function writeIntBE(t, e, r, n) {
                if (t = +t, e |= 0, !n) {
                    var i = Math.pow(2, 8 * r - 1);
                    checkInt(this, t, e, r, i - 1, -i)
                }
                var o = r - 1,
                    a = 1,
                    s = 0;
                for (this[e + o] = 255 & t; --o >= 0 && (a *= 256);) t < 0 && 0 === s && 0 !== this[e + o + 1] && (s = 1), this[e + o] = (t / a >> 0) - s & 255;
                return e + r
            }, Buffer.prototype.writeInt8 = function writeInt8(t, e, r) {
                return t = +t, e |= 0, r || checkInt(this, t, e, 1, 127, -128), Buffer.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)), t < 0 && (t = 255 + t + 1), this[e] = 255 & t, e + 1
            }, Buffer.prototype.writeInt16LE = function writeInt16LE(t, e, r) {
                return t = +t, e |= 0, r || checkInt(this, t, e, 2, 32767, -32768), Buffer.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8) : objectWriteUInt16(this, t, e, !0), e + 2
            }, Buffer.prototype.writeInt16BE = function writeInt16BE(t, e, r) {
                return t = +t, e |= 0, r || checkInt(this, t, e, 2, 32767, -32768), Buffer.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 8, this[e + 1] = 255 & t) : objectWriteUInt16(this, t, e, !1), e + 2
            }, Buffer.prototype.writeInt32LE = function writeInt32LE(t, e, r) {
                return t = +t, e |= 0, r || checkInt(this, t, e, 4, 2147483647, -2147483648), Buffer.TYPED_ARRAY_SUPPORT ? (this[e] = 255 & t, this[e + 1] = t >>> 8, this[e + 2] = t >>> 16, this[e + 3] = t >>> 24) : objectWriteUInt32(this, t, e, !0), e + 4
            }, Buffer.prototype.writeInt32BE = function writeInt32BE(t, e, r) {
                return t = +t, e |= 0, r || checkInt(this, t, e, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), Buffer.TYPED_ARRAY_SUPPORT ? (this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t) : objectWriteUInt32(this, t, e, !1), e + 4
            }, Buffer.prototype.writeFloatLE = function writeFloatLE(t, e, r) {
                return writeFloat(this, t, e, !0, r)
            }, Buffer.prototype.writeFloatBE = function writeFloatBE(t, e, r) {
                return writeFloat(this, t, e, !1, r)
            }, Buffer.prototype.writeDoubleLE = function writeDoubleLE(t, e, r) {
                return writeDouble(this, t, e, !0, r)
            }, Buffer.prototype.writeDoubleBE = function writeDoubleBE(t, e, r) {
                return writeDouble(this, t, e, !1, r)
            }, Buffer.prototype.copy = function copy(t, e, r, n) {
                if (r || (r = 0), n || 0 === n || (n = this.length), e >= t.length && (e = t.length), e || (e = 0), n > 0 && n < r && (n = r), n === r) return 0;
                if (0 === t.length || 0 === this.length) return 0;
                if (e < 0) throw new RangeError("targetStart out of bounds");
                if (r < 0 || r >= this.length) throw new RangeError("sourceStart out of bounds");
                if (n < 0) throw new RangeError("sourceEnd out of bounds");
                n > this.length && (n = this.length), t.length - e < n - r && (n = t.length - e + r);
                var i, o = n - r;
                if (this === t && r < e && e < n)
                    for (i = o - 1; i >= 0; --i) t[i + e] = this[i + r];
                else if (o < 1e3 || !Buffer.TYPED_ARRAY_SUPPORT)
                    for (i = 0; i < o; ++i) t[i + e] = this[i + r];
                else Uint8Array.prototype.set.call(t, this.subarray(r, r + o), e);
                return o
            }, Buffer.prototype.fill = function fill(t, e, r, n) {
                if ("string" == typeof t) {
                    if ("string" == typeof e ? (n = e, e = 0, r = this.length) : "string" == typeof r && (n = r, r = this.length), 1 === t.length) {
                        var i = t.charCodeAt(0);
                        i < 256 && (t = i)
                    }
                    if (void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
                    if ("string" == typeof n && !Buffer.isEncoding(n)) throw new TypeError("Unknown encoding: " + n)
                } else "number" == typeof t && (t &= 255);
                if (e < 0 || this.length < e || this.length < r) throw new RangeError("Out of range index");
                if (r <= e) return this;
                var o;
                if (e >>>= 0, r = void 0 === r ? this.length : r >>> 0, t || (t = 0), "number" == typeof t)
                    for (o = e; o < r; ++o) this[o] = t;
                else {
                    var a = Buffer.isBuffer(t) ? t : utf8ToBytes(new Buffer(t, n).toString()),
                        s = a.length;
                    for (o = 0; o < r - e; ++o) this[o + e] = a[o % s]
                }
                return this
            };
            var a = /[^+\/0-9A-Za-z-_]/g;

            function toHex(t) {
                return t < 16 ? "0" + t.toString(16) : t.toString(16)
            }

            function utf8ToBytes(t, e) {
                var r;
                e = e || 1 / 0;
                for (var n = t.length, i = null, o = [], a = 0; a < n; ++a) {
                    if ((r = t.charCodeAt(a)) > 55295 && r < 57344) {
                        if (!i) {
                            if (r > 56319) {
                                (e -= 3) > -1 && o.push(239, 191, 189);
                                continue
                            }
                            if (a + 1 === n) {
                                (e -= 3) > -1 && o.push(239, 191, 189);
                                continue
                            }
                            i = r;
                            continue
                        }
                        if (r < 56320) {
                            (e -= 3) > -1 && o.push(239, 191, 189), i = r;
                            continue
                        }
                        r = 65536 + (i - 55296 << 10 | r - 56320)
                    } else i && (e -= 3) > -1 && o.push(239, 191, 189);
                    if (i = null, r < 128) {
                        if ((e -= 1) < 0) break;
                        o.push(r)
                    } else if (r < 2048) {
                        if ((e -= 2) < 0) break;
                        o.push(r >> 6 | 192, 63 & r | 128)
                    } else if (r < 65536) {
                        if ((e -= 3) < 0) break;
                        o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128)
                    } else {
                        if (!(r < 1114112)) throw new Error("Invalid code point");
                        if ((e -= 4) < 0) break;
                        o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128)
                    }
                }
                return o
            }

            function base64ToBytes(t) {
                return n.toByteArray(function base64clean(t) {
                    if ((t = function stringtrim(t) {
                            return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "")
                        }(t).replace(a, "")).length < 2) return "";
                    for (; t.length % 4 != 0;) t += "=";
                    return t
                }(t))
            }

            function blitBuffer(t, e, r, n) {
                for (var i = 0; i < n && !(i + r >= e.length || i >= t.length); ++i) e[i + r] = t[i];
                return i
            }
        }).call(this, r(6))
    }, function (t, e) {
        "function" == typeof Object.create ? t.exports = function inherits(t, e) {
            e && (t.super_ = e, t.prototype = Object.create(e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }))
        } : t.exports = function inherits(t, e) {
            if (e) {
                t.super_ = e;
                var TempCtor = function () {};
                TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
            }
        }
    }, function (t, e, r) {
        (function (t) {
            ! function (t, e) {
                function assert(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }

                function inherits(t, e) {
                    t.super_ = e;
                    var TempCtor = function () {};
                    TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
                }

                function BN(t, e, r) {
                    if (BN.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                var n;
                "object" == typeof t ? t.exports = BN : e.BN = BN, BN.BN = BN, BN.wordSize = 26;
                try {
                    n = r(618).Buffer
                } catch (t) {}

                function parseHex(t, e, r) {
                    for (var n = 0, i = Math.min(t.length, r), o = e; o < i; o++) {
                        var a = t.charCodeAt(o) - 48;
                        n <<= 4, n |= a >= 49 && a <= 54 ? a - 49 + 10 : a >= 17 && a <= 22 ? a - 17 + 10 : 15 & a
                    }
                    return n
                }

                function parseBase(t, e, r, n) {
                    for (var i = 0, o = Math.min(t.length, r), a = e; a < o; a++) {
                        var s = t.charCodeAt(a) - 48;
                        i *= n, i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s
                    }
                    return i
                }
                BN.isBN = function isBN(t) {
                    return t instanceof BN || null !== t && "object" == typeof t && t.constructor.wordSize === BN.wordSize && Array.isArray(t.words)
                }, BN.max = function max(t, e) {
                    return t.cmp(e) > 0 ? t : e
                }, BN.min = function min(t, e) {
                    return t.cmp(e) < 0 ? t : e
                }, BN.prototype._init = function init(t, e, r) {
                    if ("number" == typeof t) return this._initNumber(t, e, r);
                    if ("object" == typeof t) return this._initArray(t, e, r);
                    "hex" === e && (e = 16), assert(e === (0 | e) && e >= 2 && e <= 36);
                    var n = 0;
                    "-" === (t = t.toString().replace(/\s+/g, ""))[0] && n++, 16 === e ? this._parseHex(t, n) : this._parseBase(t, e, n), "-" === t[0] && (this.negative = 1), this.strip(), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initNumber = function _initNumber(t, e, r) {
                    t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (assert(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initArray = function _initArray(t, e, r) {
                    if (assert("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                    this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o, a = 0;
                    if ("be" === r)
                        for (n = t.length - 1, i = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    else if ("le" === r)
                        for (n = 0, i = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    return this.strip()
                }, BN.prototype._parseHex = function _parseHex(t, e) {
                    this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                    for (var r = 0; r < this.length; r++) this.words[r] = 0;
                    var n, i, o = 0;
                    for (r = t.length - 6, n = 0; r >= e; r -= 6) i = parseHex(t, r, r + 6), this.words[n] |= i << o & 67108863, this.words[n + 1] |= i >>> 26 - o & 4194303, (o += 24) >= 26 && (o -= 26, n++);
                    r + 6 !== e && (i = parseHex(t, e, r + 6), this.words[n] |= i << o & 67108863, this.words[n + 1] |= i >>> 26 - o & 4194303), this.strip()
                }, BN.prototype._parseBase = function _parseBase(t, e, r) {
                    this.words = [0], this.length = 1;
                    for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                    n--, i = i / e | 0;
                    for (var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n) u = parseBase(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== a) {
                        var l = 1;
                        for (u = parseBase(t, c, t.length, e), c = 0; c < a; c++) l *= e;
                        this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                }, BN.prototype.copy = function copy(t) {
                    t.words = new Array(this.length);
                    for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                    t.length = this.length, t.negative = this.negative, t.red = this.red
                }, BN.prototype.clone = function clone() {
                    var t = new BN(null);
                    return this.copy(t), t
                }, BN.prototype._expand = function _expand(t) {
                    for (; this.length < t;) this.words[this.length++] = 0;
                    return this
                }, BN.prototype.strip = function strip() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                    return this._normSign()
                }, BN.prototype._normSign = function _normSign() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                }, BN.prototype.inspect = function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                };
                var i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    o = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    a = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function smallMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, d = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= d; p++) {
                            var m = c - p | 0;
                            l += (a = (i = 0 | t.words[m]) * (o = 0 | e.words[p]) + h) / 67108864 | 0, h = 67108863 & a
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r.strip()
                }
                BN.prototype.toString = function toString(t, e) {
                    var r;
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var n = 0, s = 0, u = 0; u < this.length; u++) {
                            var c = this.words[u],
                                l = (16777215 & (c << n | s)).toString(16);
                            r = 0 !== (s = c >>> 24 - n & 16777215) || u !== this.length - 1 ? i[6 - l.length] + l + r : l + r, (n += 2) >= 26 && (n -= 26, u--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var h = o[t],
                            d = a[t];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero();) {
                            var m = p.modn(d).toString(t);
                            r = (p = p.idivn(d)).isZero() ? m + r : i[h - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    assert(!1, "Base should be between 2 and 36")
                }, BN.prototype.toNumber = function toNumber() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, BN.prototype.toJSON = function toJSON() {
                    return this.toString(16)
                }, BN.prototype.toBuffer = function toBuffer(t, e) {
                    return assert(void 0 !== n), this.toArrayLike(n, t, e)
                }, BN.prototype.toArray = function toArray(t, e) {
                    return this.toArrayLike(Array, t, e)
                }, BN.prototype.toArrayLike = function toArrayLike(t, e, r) {
                    var n = this.byteLength(),
                        i = r || Math.max(1, n);
                    assert(n <= i, "byte array longer than desired length"), assert(i > 0, "Requested array length <= 0"), this.strip();
                    var o, a, s = "le" === e,
                        u = new t(i),
                        c = this.clone();
                    if (s) {
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[a] = o;
                        for (; a < i; a++) u[a] = 0
                    } else {
                        for (a = 0; a < i - n; a++) u[a] = 0;
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[i - a - 1] = o
                    }
                    return u
                }, Math.clz32 ? BN.prototype._countBits = function _countBits(t) {
                    return 32 - Math.clz32(t)
                } : BN.prototype._countBits = function _countBits(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, BN.prototype._zeroBits = function _zeroBits(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r
                }, BN.prototype.bitLength = function bitLength() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return 26 * (this.length - 1) + e
                }, BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8)
                }, BN.prototype.toTwos = function toTwos(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, BN.prototype.fromTwos = function fromTwos(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, BN.prototype.isNeg = function isNeg() {
                    return 0 !== this.negative
                }, BN.prototype.neg = function neg() {
                    return this.clone().ineg()
                }, BN.prototype.ineg = function ineg() {
                    return this.isZero() || (this.negative ^= 1), this
                }, BN.prototype.iuor = function iuor(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this.strip()
                }, BN.prototype.ior = function ior(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuor(t)
                }, BN.prototype.or = function or(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, BN.prototype.uor = function uor(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, BN.prototype.iuand = function iuand(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this.strip()
                }, BN.prototype.iand = function iand(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuand(t)
                }, BN.prototype.and = function and(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, BN.prototype.uand = function uand(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, BN.prototype.iuxor = function iuxor(t) {
                    var e, r;
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this.strip()
                }, BN.prototype.ixor = function ixor(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuxor(t)
                }, BN.prototype.xor = function xor(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, BN.prototype.uxor = function uxor(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, BN.prototype.inotn = function inotn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip()
                }, BN.prototype.notn = function notn(t) {
                    return this.clone().inotn(t)
                }, BN.prototype.setn = function setn(t, e) {
                    assert("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        n = t % 26;
                    return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip()
                }, BN.prototype.iadd = function iadd(t) {
                    var e, r, n;
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, BN.prototype.add = function add(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, BN.prototype.isub = function isub(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e = this.iadd(t);
                        return t.negative = 1, e._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var r, n, i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (r = this, n = t) : (r = t, n = this);
                    for (var o = 0, a = 0; a < n.length; a++) o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    for (; 0 !== o && a < r.length; a++) o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    if (0 === o && a < r.length && r !== this)
                        for (; a < r.length; a++) this.words[a] = r.words[a];
                    return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this.strip()
                }, BN.prototype.sub = function sub(t) {
                    return this.clone().isub(t)
                };
                var s = function comb10MulTo(t, e, r) {
                    var n, i, o, a = t.words,
                        s = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        h = 8191 & l,
                        d = l >>> 13,
                        p = 0 | a[1],
                        m = 8191 & p,
                        y = p >>> 13,
                        b = 0 | a[2],
                        g = 8191 & b,
                        v = b >>> 13,
                        w = 0 | a[3],
                        M = 8191 & w,
                        A = w >>> 13,
                        x = 0 | a[4],
                        B = 8191 & x,
                        E = x >>> 13,
                        k = 0 | a[5],
                        N = 8191 & k,
                        T = k >>> 13,
                        C = 0 | a[6],
                        P = 8191 & C,
                        I = C >>> 13,
                        O = 0 | a[7],
                        D = 8191 & O,
                        j = O >>> 13,
                        L = 0 | a[8],
                        U = 8191 & L,
                        H = L >>> 13,
                        q = 0 | a[9],
                        z = 8191 & q,
                        G = q >>> 13,
                        V = 0 | s[0],
                        J = 8191 & V,
                        W = V >>> 13,
                        Z = 0 | s[1],
                        X = 8191 & Z,
                        Y = Z >>> 13,
                        $ = 0 | s[2],
                        Q = 8191 & $,
                        tt = $ >>> 13,
                        et = 0 | s[3],
                        rt = 8191 & et,
                        nt = et >>> 13,
                        it = 0 | s[4],
                        ot = 8191 & it,
                        st = it >>> 13,
                        ut = 0 | s[5],
                        ct = 8191 & ut,
                        ht = ut >>> 13,
                        dt = 0 | s[6],
                        pt = 8191 & dt,
                        mt = dt >>> 13,
                        yt = 0 | s[7],
                        bt = 8191 & yt,
                        vt = yt >>> 13,
                        wt = 0 | s[8],
                        Mt = 8191 & wt,
                        _t = wt >>> 13,
                        At = 0 | s[9],
                        xt = 8191 & At,
                        Bt = At >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var Et = (c + (n = Math.imul(h, J)) | 0) + ((8191 & (i = (i = Math.imul(h, W)) + Math.imul(d, J) | 0)) << 13) | 0;
                    c = ((o = Math.imul(d, W)) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(m, J), i = (i = Math.imul(m, W)) + Math.imul(y, J) | 0, o = Math.imul(y, W);
                    var kt = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(d, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Y) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(g, J), i = (i = Math.imul(g, W)) + Math.imul(v, J) | 0, o = Math.imul(v, W), n = n + Math.imul(m, X) | 0, i = (i = i + Math.imul(m, Y) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, Y) | 0;
                    var Nt = (c + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, tt) | 0) + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(M, J), i = (i = Math.imul(M, W)) + Math.imul(A, J) | 0, o = Math.imul(A, W), n = n + Math.imul(g, X) | 0, i = (i = i + Math.imul(g, Y) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, Y) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0;
                    var St = (c + (n = n + Math.imul(h, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, nt) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, nt) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(B, J), i = (i = Math.imul(B, W)) + Math.imul(E, J) | 0, o = Math.imul(E, W), n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(g, Q) | 0, i = (i = i + Math.imul(g, tt) | 0) + Math.imul(v, Q) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                    var Tt = (c + (n = n + Math.imul(h, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, st) | 0) + Math.imul(d, ot) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, st) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(N, J), i = (i = Math.imul(N, W)) + Math.imul(T, J) | 0, o = Math.imul(T, W), n = n + Math.imul(B, X) | 0, i = (i = i + Math.imul(B, Y) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(g, rt) | 0, i = (i = i + Math.imul(g, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                    var Ct = (c + (n = n + Math.imul(h, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ht) | 0) + Math.imul(d, ct) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, ht) | 0) + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(P, J), i = (i = Math.imul(P, W)) + Math.imul(I, J) | 0, o = Math.imul(I, W), n = n + Math.imul(N, X) | 0, i = (i = i + Math.imul(N, Y) | 0) + Math.imul(T, X) | 0, o = o + Math.imul(T, Y) | 0, n = n + Math.imul(B, Q) | 0, i = (i = i + Math.imul(B, tt) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(M, rt) | 0, i = (i = i + Math.imul(M, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(g, ot) | 0, i = (i = i + Math.imul(g, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(m, ct) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, ht) | 0;
                    var Pt = (c + (n = n + Math.imul(h, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, mt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, mt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(D, J), i = (i = Math.imul(D, W)) + Math.imul(j, J) | 0, o = Math.imul(j, W), n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(N, Q) | 0, i = (i = i + Math.imul(N, tt) | 0) + Math.imul(T, Q) | 0, o = o + Math.imul(T, tt) | 0, n = n + Math.imul(B, rt) | 0, i = (i = i + Math.imul(B, nt) | 0) + Math.imul(E, rt) | 0, o = o + Math.imul(E, nt) | 0, n = n + Math.imul(M, ot) | 0, i = (i = i + Math.imul(M, st) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(g, ct) | 0, i = (i = i + Math.imul(g, ht) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(m, pt) | 0, i = (i = i + Math.imul(m, mt) | 0) + Math.imul(y, pt) | 0, o = o + Math.imul(y, mt) | 0;
                    var It = (c + (n = n + Math.imul(h, bt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, vt) | 0) + Math.imul(d, bt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, vt) | 0) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(U, J), i = (i = Math.imul(U, W)) + Math.imul(H, J) | 0, o = Math.imul(H, W), n = n + Math.imul(D, X) | 0, i = (i = i + Math.imul(D, Y) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, tt) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = (i = i + Math.imul(N, nt) | 0) + Math.imul(T, rt) | 0, o = o + Math.imul(T, nt) | 0, n = n + Math.imul(B, ot) | 0, i = (i = i + Math.imul(B, st) | 0) + Math.imul(E, ot) | 0, o = o + Math.imul(E, st) | 0, n = n + Math.imul(M, ct) | 0, i = (i = i + Math.imul(M, ht) | 0) + Math.imul(A, ct) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(g, pt) | 0, i = (i = i + Math.imul(g, mt) | 0) + Math.imul(v, pt) | 0, o = o + Math.imul(v, mt) | 0, n = n + Math.imul(m, bt) | 0, i = (i = i + Math.imul(m, vt) | 0) + Math.imul(y, bt) | 0, o = o + Math.imul(y, vt) | 0;
                    var Ot = (c + (n = n + Math.imul(h, Mt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, _t) | 0) + Math.imul(d, Mt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, _t) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(z, J), i = (i = Math.imul(z, W)) + Math.imul(G, J) | 0, o = Math.imul(G, W), n = n + Math.imul(U, X) | 0, i = (i = i + Math.imul(U, Y) | 0) + Math.imul(H, X) | 0, o = o + Math.imul(H, Y) | 0, n = n + Math.imul(D, Q) | 0, i = (i = i + Math.imul(D, tt) | 0) + Math.imul(j, Q) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(P, rt) | 0, i = (i = i + Math.imul(P, nt) | 0) + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = (i = i + Math.imul(N, st) | 0) + Math.imul(T, ot) | 0, o = o + Math.imul(T, st) | 0, n = n + Math.imul(B, ct) | 0, i = (i = i + Math.imul(B, ht) | 0) + Math.imul(E, ct) | 0, o = o + Math.imul(E, ht) | 0, n = n + Math.imul(M, pt) | 0, i = (i = i + Math.imul(M, mt) | 0) + Math.imul(A, pt) | 0, o = o + Math.imul(A, mt) | 0, n = n + Math.imul(g, bt) | 0, i = (i = i + Math.imul(g, vt) | 0) + Math.imul(v, bt) | 0, o = o + Math.imul(v, vt) | 0, n = n + Math.imul(m, Mt) | 0, i = (i = i + Math.imul(m, _t) | 0) + Math.imul(y, Mt) | 0, o = o + Math.imul(y, _t) | 0;
                    var Rt = (c + (n = n + Math.imul(h, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Bt) | 0) + Math.imul(d, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Bt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(z, X), i = (i = Math.imul(z, Y)) + Math.imul(G, X) | 0, o = Math.imul(G, Y), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, tt) | 0) + Math.imul(H, Q) | 0, o = o + Math.imul(H, tt) | 0, n = n + Math.imul(D, rt) | 0, i = (i = i + Math.imul(D, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(P, ot) | 0, i = (i = i + Math.imul(P, st) | 0) + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ct) | 0, i = (i = i + Math.imul(N, ht) | 0) + Math.imul(T, ct) | 0, o = o + Math.imul(T, ht) | 0, n = n + Math.imul(B, pt) | 0, i = (i = i + Math.imul(B, mt) | 0) + Math.imul(E, pt) | 0, o = o + Math.imul(E, mt) | 0, n = n + Math.imul(M, bt) | 0, i = (i = i + Math.imul(M, vt) | 0) + Math.imul(A, bt) | 0, o = o + Math.imul(A, vt) | 0, n = n + Math.imul(g, Mt) | 0, i = (i = i + Math.imul(g, _t) | 0) + Math.imul(v, Mt) | 0, o = o + Math.imul(v, _t) | 0;
                    var Ft = (c + (n = n + Math.imul(m, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, Bt) | 0) + Math.imul(y, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, Bt) | 0) + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(z, Q), i = (i = Math.imul(z, tt)) + Math.imul(G, Q) | 0, o = Math.imul(G, tt), n = n + Math.imul(U, rt) | 0, i = (i = i + Math.imul(U, nt) | 0) + Math.imul(H, rt) | 0, o = o + Math.imul(H, nt) | 0, n = n + Math.imul(D, ot) | 0, i = (i = i + Math.imul(D, st) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, st) | 0, n = n + Math.imul(P, ct) | 0, i = (i = i + Math.imul(P, ht) | 0) + Math.imul(I, ct) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, pt) | 0, i = (i = i + Math.imul(N, mt) | 0) + Math.imul(T, pt) | 0, o = o + Math.imul(T, mt) | 0, n = n + Math.imul(B, bt) | 0, i = (i = i + Math.imul(B, vt) | 0) + Math.imul(E, bt) | 0, o = o + Math.imul(E, vt) | 0, n = n + Math.imul(M, Mt) | 0, i = (i = i + Math.imul(M, _t) | 0) + Math.imul(A, Mt) | 0, o = o + Math.imul(A, _t) | 0;
                    var Dt = (c + (n = n + Math.imul(g, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(g, Bt) | 0) + Math.imul(v, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(v, Bt) | 0) + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(z, rt), i = (i = Math.imul(z, nt)) + Math.imul(G, rt) | 0, o = Math.imul(G, nt), n = n + Math.imul(U, ot) | 0, i = (i = i + Math.imul(U, st) | 0) + Math.imul(H, ot) | 0, o = o + Math.imul(H, st) | 0, n = n + Math.imul(D, ct) | 0, i = (i = i + Math.imul(D, ht) | 0) + Math.imul(j, ct) | 0, o = o + Math.imul(j, ht) | 0, n = n + Math.imul(P, pt) | 0, i = (i = i + Math.imul(P, mt) | 0) + Math.imul(I, pt) | 0, o = o + Math.imul(I, mt) | 0, n = n + Math.imul(N, bt) | 0, i = (i = i + Math.imul(N, vt) | 0) + Math.imul(T, bt) | 0, o = o + Math.imul(T, vt) | 0, n = n + Math.imul(B, Mt) | 0, i = (i = i + Math.imul(B, _t) | 0) + Math.imul(E, Mt) | 0, o = o + Math.imul(E, _t) | 0;
                    var jt = (c + (n = n + Math.imul(M, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, Bt) | 0) + Math.imul(A, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, Bt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(z, ot), i = (i = Math.imul(z, st)) + Math.imul(G, ot) | 0, o = Math.imul(G, st), n = n + Math.imul(U, ct) | 0, i = (i = i + Math.imul(U, ht) | 0) + Math.imul(H, ct) | 0, o = o + Math.imul(H, ht) | 0, n = n + Math.imul(D, pt) | 0, i = (i = i + Math.imul(D, mt) | 0) + Math.imul(j, pt) | 0, o = o + Math.imul(j, mt) | 0, n = n + Math.imul(P, bt) | 0, i = (i = i + Math.imul(P, vt) | 0) + Math.imul(I, bt) | 0, o = o + Math.imul(I, vt) | 0, n = n + Math.imul(N, Mt) | 0, i = (i = i + Math.imul(N, _t) | 0) + Math.imul(T, Mt) | 0, o = o + Math.imul(T, _t) | 0;
                    var Lt = (c + (n = n + Math.imul(B, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, Bt) | 0) + Math.imul(E, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, Bt) | 0) + (i >>> 13) | 0) + (Lt >>> 26) | 0, Lt &= 67108863, n = Math.imul(z, ct), i = (i = Math.imul(z, ht)) + Math.imul(G, ct) | 0, o = Math.imul(G, ht), n = n + Math.imul(U, pt) | 0, i = (i = i + Math.imul(U, mt) | 0) + Math.imul(H, pt) | 0, o = o + Math.imul(H, mt) | 0, n = n + Math.imul(D, bt) | 0, i = (i = i + Math.imul(D, vt) | 0) + Math.imul(j, bt) | 0, o = o + Math.imul(j, vt) | 0, n = n + Math.imul(P, Mt) | 0, i = (i = i + Math.imul(P, _t) | 0) + Math.imul(I, Mt) | 0, o = o + Math.imul(I, _t) | 0;
                    var Ut = (c + (n = n + Math.imul(N, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(N, Bt) | 0) + Math.imul(T, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(T, Bt) | 0) + (i >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, n = Math.imul(z, pt), i = (i = Math.imul(z, mt)) + Math.imul(G, pt) | 0, o = Math.imul(G, mt), n = n + Math.imul(U, bt) | 0, i = (i = i + Math.imul(U, vt) | 0) + Math.imul(H, bt) | 0, o = o + Math.imul(H, vt) | 0, n = n + Math.imul(D, Mt) | 0, i = (i = i + Math.imul(D, _t) | 0) + Math.imul(j, Mt) | 0, o = o + Math.imul(j, _t) | 0;
                    var Ht = (c + (n = n + Math.imul(P, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, Bt) | 0) + Math.imul(I, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, Bt) | 0) + (i >>> 13) | 0) + (Ht >>> 26) | 0, Ht &= 67108863, n = Math.imul(z, bt), i = (i = Math.imul(z, vt)) + Math.imul(G, bt) | 0, o = Math.imul(G, vt), n = n + Math.imul(U, Mt) | 0, i = (i = i + Math.imul(U, _t) | 0) + Math.imul(H, Mt) | 0, o = o + Math.imul(H, _t) | 0;
                    var qt = (c + (n = n + Math.imul(D, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(D, Bt) | 0) + Math.imul(j, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, Bt) | 0) + (i >>> 13) | 0) + (qt >>> 26) | 0, qt &= 67108863, n = Math.imul(z, Mt), i = (i = Math.imul(z, _t)) + Math.imul(G, Mt) | 0, o = Math.imul(G, _t);
                    var zt = (c + (n = n + Math.imul(U, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, Bt) | 0) + Math.imul(H, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(H, Bt) | 0) + (i >>> 13) | 0) + (zt >>> 26) | 0, zt &= 67108863;
                    var Gt = (c + (n = Math.imul(z, xt)) | 0) + ((8191 & (i = (i = Math.imul(z, Bt)) + Math.imul(G, xt) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(G, Bt)) + (i >>> 13) | 0) + (Gt >>> 26) | 0, Gt &= 67108863, u[0] = Et, u[1] = kt, u[2] = Nt, u[3] = St, u[4] = Tt, u[5] = Ct, u[6] = Pt, u[7] = It, u[8] = Ot, u[9] = Rt, u[10] = Ft, u[11] = Dt, u[12] = jt, u[13] = Lt, u[14] = Ut, u[15] = Ht, u[16] = qt, u[17] = zt, u[18] = Gt, 0 !== c && (u[19] = c, r.length++), r
                };

                function jumboMulTo(t, e, r) {
                    return (new FFTM).mulp(t, e, r)
                }

                function FFTM(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (s = smallMulTo), BN.prototype.mulTo = function mulTo(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? s(this, t, e) : r < 63 ? smallMulTo(this, t, e) : r < 1024 ? function bigMulTo(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var a = i;
                            i = 0;
                            for (var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                                var l = o - c,
                                    h = (0 | t.words[l]) * (0 | e.words[c]),
                                    d = 67108863 & h;
                                s = 67108863 & (d = d + s | 0), i += (a = (a = a + (h / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863
                            }
                            r.words[o] = s, n = a, a = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }(this, t, e) : jumboMulTo(this, t, e)
                }, FFTM.prototype.makeRBT = function makeRBT(t) {
                    for (var e = new Array(t), r = BN.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, FFTM.prototype.revBin = function revBin(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, FFTM.prototype.permute = function permute(t, e, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = e[t[a]], i[a] = r[t[a]]
                }, FFTM.prototype.transform = function transform(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var h = u, d = c, p = 0; p < a; p++) {
                                var m = r[l + p],
                                    y = n[l + p],
                                    b = r[l + p + a],
                                    g = n[l + p + a],
                                    v = h * b - d * g;
                                g = h * g + d * b, b = v, r[l + p] = m + b, n[l + p] = y + g, r[l + p + a] = m - b, n[l + p + a] = y - g, p !== s && (v = u * h - c * d, d = u * d + c * h, h = v)
                            }
                }, FFTM.prototype.guessLen13b = function guessLen13b(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, FFTM.prototype.conjugate = function conjugate(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, FFTM.prototype.normalize13b = function normalize13b(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, FFTM.prototype.convert13b = function convert13b(t, e, r, n) {
                    for (var i = 0, o = 0; o < e; o++) i += 0 | t[o], r[2 * o] = 8191 & i, i >>>= 13, r[2 * o + 1] = 8191 & i, i >>>= 13;
                    for (o = 2 * e; o < n; ++o) r[o] = 0;
                    assert(0 === i), assert(0 == (-8192 & i))
                }, FFTM.prototype.stub = function stub(t) {
                    for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, FFTM.prototype.mulp = function mulp(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = new Array(n),
                        s = new Array(n),
                        u = new Array(n),
                        c = new Array(n),
                        l = new Array(n),
                        h = new Array(n),
                        d = r.words;
                    d.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var p = 0; p < n; p++) {
                        var m = s[p] * l[p] - u[p] * h[p];
                        u[p] = s[p] * h[p] + u[p] * l[p], s[p] = m
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, d, o, n, i), this.conjugate(d, o, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                }, BN.prototype.mul = function mul(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                }, BN.prototype.mulf = function mulf(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), jumboMulTo(this, t, e)
                }, BN.prototype.imul = function imul(t) {
                    return this.clone().mulTo(t, this)
                }, BN.prototype.imuln = function imuln(t) {
                    assert("number" == typeof t), assert(t < 67108864);
                    for (var e = 0, r = 0; r < this.length; r++) {
                        var n = (0 | this.words[r]) * t,
                            i = (67108863 & n) + (67108863 & e);
                        e >>= 26, e += n / 67108864 | 0, e += i >>> 26, this.words[r] = 67108863 & i
                    }
                    return 0 !== e && (this.words[r] = e, this.length++), this
                }, BN.prototype.muln = function muln(t) {
                    return this.clone().imuln(t)
                }, BN.prototype.sqr = function sqr() {
                    return this.mul(this)
                }, BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone())
                }, BN.prototype.pow = function pow(t) {
                    var e = function toBitArray(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }(t);
                    if (0 === e.length) return new BN(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, BN.prototype.iushln = function iushln(t) {
                    assert("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        n = (t - r) / 26,
                        i = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & i,
                                s = (0 | this.words[e]) - a << r;
                            this.words[e] = s | o, o = a >>> 26 - r
                        }
                        o && (this.words[e] = o, this.length++)
                    }
                    if (0 !== n) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                        for (e = 0; e < n; e++) this.words[e] = 0;
                        this.length += n
                    }
                    return this.strip()
                }, BN.prototype.ishln = function ishln(t) {
                    return assert(0 === this.negative), this.iushln(t)
                }, BN.prototype.iushrn = function iushrn(t, e, r) {
                    var n;
                    assert("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                    var i = t % 26,
                        o = Math.min((t - i) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> i << i,
                        s = r;
                    if (n -= o, n = Math.max(0, n), s) {
                        for (var u = 0; u < o; u++) s.words[u] = this.words[u];
                        s.length = o
                    }
                    if (0 === o);
                    else if (this.length > o)
                        for (this.length -= o, u = 0; u < this.length; u++) this.words[u] = this.words[u + o];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= n); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - i | l >>> i, c = l & a
                    }
                    return s && 0 !== c && (s.words[s.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                }, BN.prototype.ishrn = function ishrn(t, e, r) {
                    return assert(0 === this.negative), this.iushrn(t, e, r)
                }, BN.prototype.shln = function shln(t) {
                    return this.clone().ishln(t)
                }, BN.prototype.ushln = function ushln(t) {
                    return this.clone().iushln(t)
                }, BN.prototype.shrn = function shrn(t) {
                    return this.clone().ishrn(t)
                }, BN.prototype.ushrn = function ushrn(t) {
                    return this.clone().iushrn(t)
                }, BN.prototype.testn = function testn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }, BN.prototype.imaskn = function imaskn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var n = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= n
                    }
                    return this.strip()
                }, BN.prototype.maskn = function maskn(t) {
                    return this.clone().imaskn(t)
                }, BN.prototype.iaddn = function iaddn(t) {
                    return assert("number" == typeof t), assert(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                }, BN.prototype._iaddn = function _iaddn(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, BN.prototype.isubn = function isubn(t) {
                    if (assert("number" == typeof t), assert(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this.strip()
                }, BN.prototype.addn = function addn(t) {
                    return this.clone().iaddn(t)
                }, BN.prototype.subn = function subn(t) {
                    return this.clone().isubn(t)
                }, BN.prototype.iabs = function iabs() {
                    return this.negative = 0, this
                }, BN.prototype.abs = function abs() {
                    return this.clone().iabs()
                }, BN.prototype._ishlnsubmul = function _ishlnsubmul(t, e, r) {
                    var n, i, o = t.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < t.length; n++) {
                        i = (0 | this.words[n + r]) + a;
                        var s = (0 | t.words[n]) * e;
                        a = ((i -= 67108863 & s) >> 26) - (s / 67108864 | 0), this.words[n + r] = 67108863 & i
                    }
                    for (; n < this.length - r; n++) a = (i = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & i;
                    if (0 === a) return this.strip();
                    for (assert(-1 === a), a = 0, n = 0; n < this.length; n++) a = (i = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & i;
                    return this.negative = 1, this.strip()
                }, BN.prototype._wordDiv = function _wordDiv(t, e) {
                    var r = (this.length, t.length),
                        n = this.clone(),
                        i = t,
                        o = 0 | i.words[i.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                    var a, s = n.length - i.length;
                    if ("mod" !== e) {
                        (a = new BN(null)).length = s + 1, a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++) a.words[u] = 0
                    }
                    var c = n.clone()._ishlnsubmul(i, 1, s);
                    0 === c.negative && (n = c, a && (a.words[s] = 1));
                    for (var l = s - 1; l >= 0; l--) {
                        var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                        for (h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;) h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                        a && (a.words[l] = h)
                    }
                    return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                        div: a || null,
                        mod: n
                    }
                }, BN.prototype.divmod = function divmod(t, e, r) {
                    return assert(!t.isZero()), this.isZero() ? {
                        div: new BN(0),
                        mod: new BN(0)
                    } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), "mod" !== e && (n = o.div.neg()), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(t)), {
                        div: n,
                        mod: i
                    }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), "mod" !== e && (n = o.div.neg()), {
                        div: n,
                        mod: o.mod
                    }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(t)), {
                        div: o.div,
                        mod: i
                    }) : t.length > this.length || this.cmp(t) < 0 ? {
                        div: new BN(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new BN(this.modn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new BN(this.modn(t.words[0]))
                    } : this._wordDiv(t, e);
                    var n, i, o
                }, BN.prototype.div = function div(t) {
                    return this.divmod(t, "div", !1).div
                }, BN.prototype.mod = function mod(t) {
                    return this.divmod(t, "mod", !1).mod
                }, BN.prototype.umod = function umod(t) {
                    return this.divmod(t, "mod", !0).mod
                }, BN.prototype.divRound = function divRound(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, BN.prototype.modn = function modn(t) {
                    assert(t <= 67108863);
                    for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) r = (e * r + (0 | this.words[n])) % t;
                    return r
                }, BN.prototype.idivn = function idivn(t) {
                    assert(t <= 67108863);
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = (0 | this.words[r]) + 67108864 * e;
                        this.words[r] = n / t | 0, e = n % t
                    }
                    return this.strip()
                }, BN.prototype.divn = function divn(t) {
                    return this.clone().idivn(t)
                }, BN.prototype.egcd = function egcd(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n = new BN(1), i = new BN(0), o = new BN(0), a = new BN(1), s = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++s;
                    for (var u = r.clone(), c = e.clone(); !e.isZero();) {
                        for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                        if (l > 0)
                            for (e.iushrn(l); l-- > 0;)(n.isOdd() || i.isOdd()) && (n.iadd(u), i.isub(c)), n.iushrn(1), i.iushrn(1);
                        for (var d = 0, p = 1; 0 == (r.words[0] & p) && d < 26; ++d, p <<= 1);
                        if (d > 0)
                            for (r.iushrn(d); d-- > 0;)(o.isOdd() || a.isOdd()) && (o.iadd(u), a.isub(c)), o.iushrn(1), a.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), n.isub(o), i.isub(a)) : (r.isub(e), o.isub(n), a.isub(i))
                    }
                    return {
                        a: o,
                        b: a,
                        gcd: r.iushln(s)
                    }
                }, BN.prototype._invmp = function _invmp(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n, i = new BN(1), o = new BN(0), a = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var s = 0, u = 1; 0 == (e.words[0] & u) && s < 26; ++s, u <<= 1);
                        if (s > 0)
                            for (e.iushrn(s); s-- > 0;) i.isOdd() && i.iadd(a), i.iushrn(1);
                        for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(a), o.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(o)) : (r.isub(e), o.isub(i))
                    }
                    return (n = 0 === e.cmpn(1) ? i : o).cmpn(0) < 0 && n.iadd(t), n
                }, BN.prototype.gcd = function gcd(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, BN.prototype.invm = function invm(t) {
                    return this.egcd(t).a.umod(t)
                }, BN.prototype.isEven = function isEven() {
                    return 0 == (1 & this.words[0])
                }, BN.prototype.isOdd = function isOdd() {
                    return 1 == (1 & this.words[0])
                }, BN.prototype.andln = function andln(t) {
                    return this.words[0] & t
                }, BN.prototype.bincn = function bincn(t) {
                    assert("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                    for (var i = n, o = r; 0 !== i && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        i = (a += i) >>> 26, a &= 67108863, this.words[o] = a
                    }
                    return 0 !== i && (this.words[o] = i, this.length++), this
                }, BN.prototype.isZero = function isZero() {
                    return 1 === this.length && 0 === this.words[0]
                }, BN.prototype.cmpn = function cmpn(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this.strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), assert(t <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        e = n === t ? 0 : n < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.cmp = function cmp(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.ucmp = function ucmp(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, BN.prototype.gtn = function gtn(t) {
                    return 1 === this.cmpn(t)
                }, BN.prototype.gt = function gt(t) {
                    return 1 === this.cmp(t)
                }, BN.prototype.gten = function gten(t) {
                    return this.cmpn(t) >= 0
                }, BN.prototype.gte = function gte(t) {
                    return this.cmp(t) >= 0
                }, BN.prototype.ltn = function ltn(t) {
                    return -1 === this.cmpn(t)
                }, BN.prototype.lt = function lt(t) {
                    return -1 === this.cmp(t)
                }, BN.prototype.lten = function lten(t) {
                    return this.cmpn(t) <= 0
                }, BN.prototype.lte = function lte(t) {
                    return this.cmp(t) <= 0
                }, BN.prototype.eqn = function eqn(t) {
                    return 0 === this.cmpn(t)
                }, BN.prototype.eq = function eq(t) {
                    return 0 === this.cmp(t)
                }, BN.red = function red(t) {
                    return new Red(t)
                }, BN.prototype.toRed = function toRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, BN.prototype.fromRed = function fromRed() {
                    return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, BN.prototype._forceRed = function _forceRed(t) {
                    return this.red = t, this
                }, BN.prototype.forceRed = function forceRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, BN.prototype.redAdd = function redAdd(t) {
                    return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, BN.prototype.redIAdd = function redIAdd(t) {
                    return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, BN.prototype.redSub = function redSub(t) {
                    return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, BN.prototype.redISub = function redISub(t) {
                    return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, BN.prototype.redShl = function redShl(t) {
                    return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, BN.prototype.redMul = function redMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, BN.prototype.redIMul = function redIMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, BN.prototype.redSqr = function redSqr() {
                    return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, BN.prototype.redISqr = function redISqr() {
                    return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, BN.prototype.redSqrt = function redSqrt() {
                    return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, BN.prototype.redInvm = function redInvm() {
                    return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, BN.prototype.redNeg = function redNeg() {
                    return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, BN.prototype.redPow = function redPow(t) {
                    return assert(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var u = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function MPrime(t, e) {
                    this.name = t, this.p = new BN(e, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function Red(t) {
                    if ("string" == typeof t) {
                        var e = BN._prime(t);
                        this.m = e.p, this.prime = e
                    } else assert(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function Mont(t) {
                    Red.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                MPrime.prototype._tmp = function _tmp() {
                    var t = new BN(null);
                    return t.words = new Array(Math.ceil(this.n / 13)), t
                }, MPrime.prototype.ireduce = function ireduce(t) {
                    var e, r = t;
                    do {
                        this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : r.strip(), r
                }, MPrime.prototype.split = function split(t, e) {
                    t.iushrn(this.n, 0, e)
                }, MPrime.prototype.imulK = function imulK(t) {
                    return t.imul(this.k)
                }, inherits(K256, MPrime), K256.prototype.split = function split(t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++) e.words[n] = t.words[n];
                    if (e.length = r, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                    var i = t.words[9];
                    for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, K256.prototype.imulK = function imulK(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function imulK(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 19 * (0 | t.words[r]) + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, BN._prime = function prime(t) {
                    if (u[t]) return u[t];
                    var prime;
                    if ("k256" === t) prime = new K256;
                    else if ("p224" === t) prime = new P224;
                    else if ("p192" === t) prime = new P192;
                    else {
                        if ("p25519" !== t) throw new Error("Unknown prime " + t);
                        prime = new P25519
                    }
                    return u[t] = prime, prime
                }, Red.prototype._verify1 = function _verify1(t) {
                    assert(0 === t.negative, "red works only with positives"), assert(t.red, "red works only with red numbers")
                }, Red.prototype._verify2 = function _verify2(t, e) {
                    assert(0 == (t.negative | e.negative), "red works only with positives"), assert(t.red && t.red === e.red, "red works only with red numbers")
                }, Red.prototype.imod = function imod(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                }, Red.prototype.neg = function neg(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, Red.prototype.add = function add(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, Red.prototype.iadd = function iadd(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, Red.prototype.sub = function sub(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                }, Red.prototype.isub = function isub(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r
                }, Red.prototype.shl = function shl(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, Red.prototype.imul = function imul(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, Red.prototype.mul = function mul(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, Red.prototype.isqr = function isqr(t) {
                    return this.imul(t, t.clone())
                }, Red.prototype.sqr = function sqr(t) {
                    return this.mul(t, t)
                }, Red.prototype.sqrt = function sqrt(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (assert(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var n = this.m.subn(1), i = 0; !n.isZero() && 0 === n.andln(1);) i++, n.iushrn(1);
                    assert(!n.isZero());
                    var o = new BN(1).toRed(this),
                        a = o.redNeg(),
                        s = this.m.subn(1).iushrn(1),
                        u = this.m.bitLength();
                    for (u = new BN(2 * u * u).toRed(this); 0 !== this.pow(u, s).cmp(a);) u.redIAdd(a);
                    for (var c = this.pow(u, n), l = this.pow(t, n.addn(1).iushrn(1)), h = this.pow(t, n), d = i; 0 !== h.cmp(o);) {
                        for (var p = h, m = 0; 0 !== p.cmp(o); m++) p = p.redSqr();
                        assert(m < d);
                        var y = this.pow(c, new BN(1).iushln(d - m - 1));
                        l = l.redMul(y), c = y.redSqr(), h = h.redMul(c), d = m
                    }
                    return l
                }, Red.prototype.invm = function invm(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, Red.prototype.pow = function pow(t, e) {
                    if (e.isZero()) return new BN(1).toRed(this);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = new Array(16);
                    r[0] = new BN(1).toRed(this), r[1] = t;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], t);
                    var i = r[0],
                        o = 0,
                        a = 0,
                        s = e.bitLength() % 26;
                    for (0 === s && (s = 26), n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = s - 1; c >= 0; c--) {
                            var l = u >> c & 1;
                            i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 === ++a || 0 === n && 0 === c) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0
                        }
                        s = 26
                    }
                    return i
                }, Red.prototype.convertTo = function convertTo(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, Red.prototype.convertFrom = function convertFrom(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, BN.mont = function mont(t) {
                    return new Mont(t)
                }, inherits(Mont, Red), Mont.prototype.convertTo = function convertTo(t) {
                    return this.imod(t.ushln(this.shift))
                }, Mont.prototype.convertFrom = function convertFrom(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, Mont.prototype.imul = function imul(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.mul = function mul(t, e) {
                    if (t.isZero() || e.isZero()) return new BN(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.invm = function invm(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t, this)
        }).call(this, r(8)(t))
    }, function (t, e, r) {
        var n = r(0),
            i = n.Buffer;

        function copyProps(t, e) {
            for (var r in t) e[r] = t[r]
        }

        function SafeBuffer(t, e, r) {
            return i(t, e, r)
        }
        i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t.exports = n : (copyProps(n, e), e.Buffer = SafeBuffer), SafeBuffer.prototype = Object.create(i.prototype), copyProps(i, SafeBuffer), SafeBuffer.from = function (t, e, r) {
            if ("number" == typeof t) throw new TypeError("Argument must not be a number");
            return i(t, e, r)
        }, SafeBuffer.alloc = function (t, e, r) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            var n = i(t);
            return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n
        }, SafeBuffer.allocUnsafe = function (t) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            return i(t)
        }, SafeBuffer.allocUnsafeSlow = function (t) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            return n.SlowBuffer(t)
        }
    }, function (t, e) {
        t.exports = function _interopRequireDefault(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"bytes32","name":"symbol_","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"authority","type":"address"}],"name":"LogSetAuthority","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"LogSetOwner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[],"name":"Start","type":"event"},{"anonymous":false,"inputs":[],"name":"Stop","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"authority","outputs":[{"internalType":"contract DSAuthority","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"move","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"pull","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"push","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"contract DSAuthority","name":"authority_","type":"address"}],"name":"setAuthority","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"name_","type":"bytes32"}],"name":"setName","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"owner_","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"start","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"stop","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"stopped","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t, e) {
        var r;
        r = function () {
            return this
        }();
        try {
            r = r || new Function("return this")()
        } catch (t) {
            "object" == typeof window && (r = window)
        }
        t.exports = r
    }, function (t, e) {
        var r, n, i = t.exports = {};

        function defaultSetTimout() {
            throw new Error("setTimeout has not been defined")
        }

        function defaultClearTimeout() {
            throw new Error("clearTimeout has not been defined")
        }

        function runTimeout(t) {
            if (r === setTimeout) return setTimeout(t, 0);
            if ((r === defaultSetTimout || !r) && setTimeout) return r = setTimeout, setTimeout(t, 0);
            try {
                return r(t, 0)
            } catch (e) {
                try {
                    return r.call(null, t, 0)
                } catch (e) {
                    return r.call(this, t, 0)
                }
            }
        }! function () {
            try {
                r = "function" == typeof setTimeout ? setTimeout : defaultSetTimout
            } catch (t) {
                r = defaultSetTimout
            }
            try {
                n = "function" == typeof clearTimeout ? clearTimeout : defaultClearTimeout
            } catch (t) {
                n = defaultClearTimeout
            }
        }();
        var o, a = [],
            s = !1,
            u = -1;

        function cleanUpNextTick() {
            s && o && (s = !1, o.length ? a = o.concat(a) : u = -1, a.length && drainQueue())
        }

        function drainQueue() {
            if (!s) {
                var t = runTimeout(cleanUpNextTick);
                s = !0;
                for (var e = a.length; e;) {
                    for (o = a, a = []; ++u < e;) o && o[u].run();
                    u = -1, e = a.length
                }
                o = null, s = !1,
                    function runClearTimeout(t) {
                        if (n === clearTimeout) return clearTimeout(t);
                        if ((n === defaultClearTimeout || !n) && clearTimeout) return n = clearTimeout, clearTimeout(t);
                        try {
                            return n(t)
                        } catch (e) {
                            try {
                                return n.call(null, t)
                            } catch (e) {
                                return n.call(this, t)
                            }
                        }
                    }(t)
            }
        }

        function Item(t, e) {
            this.fun = t, this.array = e
        }

        function noop() {}
        i.nextTick = function (t) {
            var e = new Array(arguments.length - 1);
            if (arguments.length > 1)
                for (var r = 1; r < arguments.length; r++) e[r - 1] = arguments[r];
            a.push(new Item(t, e)), 1 !== a.length || s || runTimeout(drainQueue)
        }, Item.prototype.run = function () {
            this.fun.apply(null, this.array)
        }, i.title = "browser", i.browser = !0, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = noop, i.addListener = noop, i.once = noop, i.off = noop, i.removeListener = noop, i.removeAllListeners = noop, i.emit = noop, i.prependListener = noop, i.prependOnceListener = noop, i.listeners = function (t) {
            return []
        }, i.binding = function (t) {
            throw new Error("process.binding is not supported")
        }, i.cwd = function () {
            return "/"
        }, i.chdir = function (t) {
            throw new Error("process.chdir is not supported")
        }, i.umask = function () {
            return 0
        }
    }, function (t, e) {
        t.exports = function (t) {
            return t.webpackPolyfill || (t.deprecate = function () {}, t.paths = [], t.children || (t.children = []), Object.defineProperty(t, "loaded", {
                enumerable: !0,
                get: function () {
                    return t.l
                }
            }), Object.defineProperty(t, "id", {
                enumerable: !0,
                get: function () {
                    return t.i
                }
            }), t.webpackPolyfill = 1), t
        }
    }, function (t, e) {
        t.exports = function _classCallCheck(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
        }
    }, function (t, e, r) {
        var n = r(716),
            i = r(717);
        t.exports = {
            errors: n,
            formatters: i
        }
    }, function (t, e) {
        function _defineProperties(t, e) {
            for (var r = 0; r < e.length; r++) {
                var n = e[r];
                n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n)
            }
        }
        t.exports = function _createClass(t, e, r) {
            return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
        }
    }, function (t, e, r) {
        var n = r(701),
            i = r(702);
        t.exports = {
            errors: n,
            formatters: i
        }
    }, function (t, e) {
        var r = t.exports = {
            version: "2.6.11"
        };
        "number" == typeof __e && (__e = r)
    }, function (t, e) {
        function _getPrototypeOf(e) {
            return t.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(t) {
                return t.__proto__ || Object.getPrototypeOf(t)
            }, _getPrototypeOf(e)
        }
        t.exports = _getPrototypeOf
    }, function (t, e, r) {
        (function (e, n) {
            var i = r(3).Buffer,
                o = e.crypto || e.msCrypto;
            o && o.getRandomValues ? t.exports = function randomBytes(t, e) {
                if (t > 4294967295) throw new RangeError("requested too many random bytes");
                var r = i.allocUnsafe(t);
                if (t > 0)
                    if (t > 65536)
                        for (var a = 0; a < t; a += 65536) o.getRandomValues(r.slice(a, a + 65536));
                    else o.getRandomValues(r);
                if ("function" == typeof e) return n.nextTick((function () {
                    e(null, r)
                }));
                return r
            } : t.exports = function oldBrowser() {
                throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")
            }
        }).call(this, r(6), r(7))
    }, function (t, e, r) {
        var n = r(263),
            i = r(581);

        function Url() {
            this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null
        }
        e.parse = urlParse, e.resolve = function urlResolve(t, e) {
            return urlParse(t, !1, !0).resolve(e)
        }, e.resolveObject = function urlResolveObject(t, e) {
            return t ? urlParse(t, !1, !0).resolveObject(e) : e
        }, e.format = function urlFormat(t) {
            i.isString(t) && (t = urlParse(t));
            return t instanceof Url ? t.format() : Url.prototype.format.call(t)
        }, e.Url = Url;
        var o = /^([a-z0-9.+-]+:)/i,
            a = /:[0-9]*$/,
            s = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
            u = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", "\n", "\t"]),
            c = ["'"].concat(u),
            l = ["%", "/", "?", ";", "#"].concat(c),
            h = ["/", "?", "#"],
            d = /^[+a-z0-9A-Z_-]{0,63}$/,
            p = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
            m = {
                javascript: !0,
                "javascript:": !0
            },
            y = {
                javascript: !0,
                "javascript:": !0
            },
            b = {
                http: !0,
                https: !0,
                ftp: !0,
                gopher: !0,
                file: !0,
                "http:": !0,
                "https:": !0,
                "ftp:": !0,
                "gopher:": !0,
                "file:": !0
            },
            g = r(582);

        function urlParse(t, e, r) {
            if (t && i.isObject(t) && t instanceof Url) return t;
            var n = new Url;
            return n.parse(t, e, r), n
        }
        Url.prototype.parse = function (t, e, r) {
            if (!i.isString(t)) throw new TypeError("Parameter 'url' must be a string, not " + typeof t);
            var a = t.indexOf("?"),
                u = -1 !== a && a < t.indexOf("#") ? "?" : "#",
                v = t.split(u);
            v[0] = v[0].replace(/\\/g, "/");
            var w = t = v.join(u);
            if (w = w.trim(), !r && 1 === t.split("#").length) {
                var M = s.exec(w);
                if (M) return this.path = w, this.href = w, this.pathname = M[1], M[2] ? (this.search = M[2], this.query = e ? g.parse(this.search.substr(1)) : this.search.substr(1)) : e && (this.search = "", this.query = {}), this
            }
            var A = o.exec(w);
            if (A) {
                var x = (A = A[0]).toLowerCase();
                this.protocol = x, w = w.substr(A.length)
            }
            if (r || A || w.match(/^\/\/[^@\/]+@[^@\/]+/)) {
                var B = "//" === w.substr(0, 2);
                !B || A && y[A] || (w = w.substr(2), this.slashes = !0)
            }
            if (!y[A] && (B || A && !b[A])) {
                for (var E, k, N = -1, T = 0; T < h.length; T++) {
                    -1 !== (C = w.indexOf(h[T])) && (-1 === N || C < N) && (N = C)
                } - 1 !== (k = -1 === N ? w.lastIndexOf("@") : w.lastIndexOf("@", N)) && (E = w.slice(0, k), w = w.slice(k + 1), this.auth = decodeURIComponent(E)), N = -1;
                for (T = 0; T < l.length; T++) {
                    var C; - 1 !== (C = w.indexOf(l[T])) && (-1 === N || C < N) && (N = C)
                } - 1 === N && (N = w.length), this.host = w.slice(0, N), w = w.slice(N), this.parseHost(), this.hostname = this.hostname || "";
                var P = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
                if (!P)
                    for (var I = this.hostname.split(/\./), O = (T = 0, I.length); T < O; T++) {
                        var D = I[T];
                        if (D && !D.match(d)) {
                            for (var j = "", L = 0, U = D.length; L < U; L++) D.charCodeAt(L) > 127 ? j += "x" : j += D[L];
                            if (!j.match(d)) {
                                var H = I.slice(0, T),
                                    q = I.slice(T + 1),
                                    z = D.match(p);
                                z && (H.push(z[1]), q.unshift(z[2])), q.length && (w = "/" + q.join(".") + w), this.hostname = H.join(".");
                                break
                            }
                        }
                    }
                this.hostname.length > 255 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), P || (this.hostname = n.toASCII(this.hostname));
                var G = this.port ? ":" + this.port : "",
                    V = this.hostname || "";
                this.host = V + G, this.href += this.host, P && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), "/" !== w[0] && (w = "/" + w))
            }
            if (!m[x])
                for (T = 0, O = c.length; T < O; T++) {
                    var J = c[T];
                    if (-1 !== w.indexOf(J)) {
                        var W = encodeURIComponent(J);
                        W === J && (W = escape(J)), w = w.split(J).join(W)
                    }
                }
            var Z = w.indexOf("#"); - 1 !== Z && (this.hash = w.substr(Z), w = w.slice(0, Z));
            var X = w.indexOf("?");
            if (-1 !== X ? (this.search = w.substr(X), this.query = w.substr(X + 1), e && (this.query = g.parse(this.query)), w = w.slice(0, X)) : e && (this.search = "", this.query = {}), w && (this.pathname = w), b[x] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
                G = this.pathname || "";
                var Y = this.search || "";
                this.path = G + Y
            }
            return this.href = this.format(), this
        }, Url.prototype.format = function () {
            var t = this.auth || "";
            t && (t = (t = encodeURIComponent(t)).replace(/%3A/i, ":"), t += "@");
            var e = this.protocol || "",
                r = this.pathname || "",
                n = this.hash || "",
                o = !1,
                a = "";
            this.host ? o = t + this.host : this.hostname && (o = t + (-1 === this.hostname.indexOf(":") ? this.hostname : "[" + this.hostname + "]"), this.port && (o += ":" + this.port)), this.query && i.isObject(this.query) && Object.keys(this.query).length && (a = g.stringify(this.query));
            var s = this.search || a && "?" + a || "";
            return e && ":" !== e.substr(-1) && (e += ":"), this.slashes || (!e || b[e]) && !1 !== o ? (o = "//" + (o || ""), r && "/" !== r.charAt(0) && (r = "/" + r)) : o || (o = ""), n && "#" !== n.charAt(0) && (n = "#" + n), s && "?" !== s.charAt(0) && (s = "?" + s), e + o + (r = r.replace(/[?#]/g, (function (t) {
                return encodeURIComponent(t)
            }))) + (s = s.replace("#", "%23")) + n
        }, Url.prototype.resolve = function (t) {
            return this.resolveObject(urlParse(t, !1, !0)).format()
        }, Url.prototype.resolveObject = function (t) {
            if (i.isString(t)) {
                var e = new Url;
                e.parse(t, !1, !0), t = e
            }
            for (var r = new Url, n = Object.keys(this), o = 0; o < n.length; o++) {
                var a = n[o];
                r[a] = this[a]
            }
            if (r.hash = t.hash, "" === t.href) return r.href = r.format(), r;
            if (t.slashes && !t.protocol) {
                for (var s = Object.keys(t), u = 0; u < s.length; u++) {
                    var c = s[u];
                    "protocol" !== c && (r[c] = t[c])
                }
                return b[r.protocol] && r.hostname && !r.pathname && (r.path = r.pathname = "/"), r.href = r.format(), r
            }
            if (t.protocol && t.protocol !== r.protocol) {
                if (!b[t.protocol]) {
                    for (var l = Object.keys(t), h = 0; h < l.length; h++) {
                        var d = l[h];
                        r[d] = t[d]
                    }
                    return r.href = r.format(), r
                }
                if (r.protocol = t.protocol, t.host || y[t.protocol]) r.pathname = t.pathname;
                else {
                    for (var p = (t.pathname || "").split("/"); p.length && !(t.host = p.shift()););
                    t.host || (t.host = ""), t.hostname || (t.hostname = ""), "" !== p[0] && p.unshift(""), p.length < 2 && p.unshift(""), r.pathname = p.join("/")
                }
                if (r.search = t.search, r.query = t.query, r.host = t.host || "", r.auth = t.auth, r.hostname = t.hostname || t.host, r.port = t.port, r.pathname || r.search) {
                    var m = r.pathname || "",
                        g = r.search || "";
                    r.path = m + g
                }
                return r.slashes = r.slashes || t.slashes, r.href = r.format(), r
            }
            var v = r.pathname && "/" === r.pathname.charAt(0),
                w = t.host || t.pathname && "/" === t.pathname.charAt(0),
                M = w || v || r.host && t.pathname,
                A = M,
                x = r.pathname && r.pathname.split("/") || [],
                B = (p = t.pathname && t.pathname.split("/") || [], r.protocol && !b[r.protocol]);
            if (B && (r.hostname = "", r.port = null, r.host && ("" === x[0] ? x[0] = r.host : x.unshift(r.host)), r.host = "", t.protocol && (t.hostname = null, t.port = null, t.host && ("" === p[0] ? p[0] = t.host : p.unshift(t.host)), t.host = null), M = M && ("" === p[0] || "" === x[0])), w) r.host = t.host || "" === t.host ? t.host : r.host, r.hostname = t.hostname || "" === t.hostname ? t.hostname : r.hostname, r.search = t.search, r.query = t.query, x = p;
            else if (p.length) x || (x = []), x.pop(), x = x.concat(p), r.search = t.search, r.query = t.query;
            else if (!i.isNullOrUndefined(t.search)) {
                if (B) r.hostname = r.host = x.shift(), (C = !!(r.host && r.host.indexOf("@") > 0) && r.host.split("@")) && (r.auth = C.shift(), r.host = r.hostname = C.shift());
                return r.search = t.search, r.query = t.query, i.isNull(r.pathname) && i.isNull(r.search) || (r.path = (r.pathname ? r.pathname : "") + (r.search ? r.search : "")), r.href = r.format(), r
            }
            if (!x.length) return r.pathname = null, r.search ? r.path = "/" + r.search : r.path = null, r.href = r.format(), r;
            for (var E = x.slice(-1)[0], k = (r.host || t.host || x.length > 1) && ("." === E || ".." === E) || "" === E, N = 0, T = x.length; T >= 0; T--) "." === (E = x[T]) ? x.splice(T, 1) : ".." === E ? (x.splice(T, 1), N++) : N && (x.splice(T, 1), N--);
            if (!M && !A)
                for (; N--; N) x.unshift("..");
            !M || "" === x[0] || x[0] && "/" === x[0].charAt(0) || x.unshift(""), k && "/" !== x.join("/").substr(-1) && x.push("");
            var C, P = "" === x[0] || x[0] && "/" === x[0].charAt(0);
            B && (r.hostname = r.host = P ? "" : x.length ? x.shift() : "", (C = !!(r.host && r.host.indexOf("@") > 0) && r.host.split("@")) && (r.auth = C.shift(), r.host = r.hostname = C.shift()));
            return (M = M || r.host && x.length) && !P && x.unshift(""), x.length ? r.pathname = x.join("/") : (r.pathname = null, r.path = null), i.isNull(r.pathname) && i.isNull(r.search) || (r.path = (r.pathname ? r.pathname : "") + (r.search ? r.search : "")), r.auth = t.auth || r.auth, r.slashes = r.slashes || t.slashes, r.href = r.format(), r
        }, Url.prototype.parseHost = function () {
            var t = this.host,
                e = a.exec(t);
            e && (":" !== (e = e[0]) && (this.port = e.substr(1)), t = t.substr(0, t.length - e.length)), t && (this.hostname = t)
        }
    }, function (t, e) {
        function assert(t, e) {
            if (!t) throw new Error(e || "Assertion failed")
        }
        t.exports = assert, assert.equal = function assertEqual(t, e, r) {
            if (t != e) throw new Error(r || "Assertion failed: " + t + " != " + e)
        }
    }, function (t, e, r) {
        (function (e) {
            var n = r(141);

            function compare(t, e) {
                if (t === e) return 0;
                for (var r = t.length, n = e.length, i = 0, o = Math.min(r, n); i < o; ++i)
                    if (t[i] !== e[i]) {
                        r = t[i], n = e[i];
                        break
                    } return r < n ? -1 : n < r ? 1 : 0
            }

            function isBuffer(t) {
                return e.Buffer && "function" == typeof e.Buffer.isBuffer ? e.Buffer.isBuffer(t) : !(null == t || !t._isBuffer)
            }
            var i = r(59),
                o = Object.prototype.hasOwnProperty,
                a = Array.prototype.slice,
                s = "foo" === function foo() {}.name;

            function pToString(t) {
                return Object.prototype.toString.call(t)
            }

            function isView(t) {
                return !isBuffer(t) && ("function" == typeof e.ArrayBuffer && ("function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(t) : !!t && (t instanceof DataView || !!(t.buffer && t.buffer instanceof ArrayBuffer))))
            }
            var u = t.exports = ok,
                c = /\s*function\s+([^\(\s]*)\s*/;

            function getName(t) {
                if (i.isFunction(t)) {
                    if (s) return t.name;
                    var e = t.toString().match(c);
                    return e && e[1]
                }
            }

            function truncate(t, e) {
                return "string" == typeof t ? t.length < e ? t : t.slice(0, e) : t
            }

            function inspect(t) {
                if (s || !i.isFunction(t)) return i.inspect(t);
                var e = getName(t);
                return "[Function" + (e ? ": " + e : "") + "]"
            }

            function fail(t, e, r, n, i) {
                throw new u.AssertionError({
                    message: r,
                    actual: t,
                    expected: e,
                    operator: n,
                    stackStartFunction: i
                })
            }

            function ok(t, e) {
                t || fail(t, !0, e, "==", u.ok)
            }

            function _deepEqual(t, e, r, n) {
                if (t === e) return !0;
                if (isBuffer(t) && isBuffer(e)) return 0 === compare(t, e);
                if (i.isDate(t) && i.isDate(e)) return t.getTime() === e.getTime();
                if (i.isRegExp(t) && i.isRegExp(e)) return t.source === e.source && t.global === e.global && t.multiline === e.multiline && t.lastIndex === e.lastIndex && t.ignoreCase === e.ignoreCase;
                if (null !== t && "object" == typeof t || null !== e && "object" == typeof e) {
                    if (isView(t) && isView(e) && pToString(t) === pToString(e) && !(t instanceof Float32Array || t instanceof Float64Array)) return 0 === compare(new Uint8Array(t.buffer), new Uint8Array(e.buffer));
                    if (isBuffer(t) !== isBuffer(e)) return !1;
                    var o = (n = n || {
                        actual: [],
                        expected: []
                    }).actual.indexOf(t);
                    return -1 !== o && o === n.expected.indexOf(e) || (n.actual.push(t), n.expected.push(e), function objEquiv(t, e, r, n) {
                        if (null == t || null == e) return !1;
                        if (i.isPrimitive(t) || i.isPrimitive(e)) return t === e;
                        if (r && Object.getPrototypeOf(t) !== Object.getPrototypeOf(e)) return !1;
                        var o = isArguments(t),
                            s = isArguments(e);
                        if (o && !s || !o && s) return !1;
                        if (o) return t = a.call(t), e = a.call(e), _deepEqual(t, e, r);
                        var u, c, h = l(t),
                            d = l(e);
                        if (h.length !== d.length) return !1;
                        for (h.sort(), d.sort(), c = h.length - 1; c >= 0; c--)
                            if (h[c] !== d[c]) return !1;
                        for (c = h.length - 1; c >= 0; c--)
                            if (u = h[c], !_deepEqual(t[u], e[u], r, n)) return !1;
                        return !0
                    }(t, e, r, n))
                }
                return r ? t === e : t == e
            }

            function isArguments(t) {
                return "[object Arguments]" == Object.prototype.toString.call(t)
            }

            function expectedException(t, e) {
                if (!t || !e) return !1;
                if ("[object RegExp]" == Object.prototype.toString.call(e)) return e.test(t);
                try {
                    if (t instanceof e) return !0
                } catch (t) {}
                return !Error.isPrototypeOf(e) && !0 === e.call({}, t)
            }

            function _throws(t, e, r, n) {
                var o;
                if ("function" != typeof e) throw new TypeError('"block" argument must be a function');
                "string" == typeof r && (n = r, r = null), o = function _tryBlock(t) {
                    var e;
                    try {
                        t()
                    } catch (t) {
                        e = t
                    }
                    return e
                }(e), n = (r && r.name ? " (" + r.name + ")." : ".") + (n ? " " + n : "."), t && !o && fail(o, r, "Missing expected exception" + n);
                var a = "string" == typeof n,
                    s = !t && o && !r;
                if ((!t && i.isError(o) && a && expectedException(o, r) || s) && fail(o, r, "Got unwanted exception" + n), t && o && r && !expectedException(o, r) || !t && o) throw o
            }
            u.AssertionError = function AssertionError(t) {
                this.name = "AssertionError", this.actual = t.actual, this.expected = t.expected, this.operator = t.operator, t.message ? (this.message = t.message, this.generatedMessage = !1) : (this.message = function getMessage(t) {
                    return truncate(inspect(t.actual), 128) + " " + t.operator + " " + truncate(inspect(t.expected), 128)
                }(this), this.generatedMessage = !0);
                var e = t.stackStartFunction || fail;
                if (Error.captureStackTrace) Error.captureStackTrace(this, e);
                else {
                    var r = new Error;
                    if (r.stack) {
                        var n = r.stack,
                            i = getName(e),
                            o = n.indexOf("\n" + i);
                        if (o >= 0) {
                            var a = n.indexOf("\n", o + 1);
                            n = n.substring(a + 1)
                        }
                        this.stack = n
                    }
                }
            }, i.inherits(u.AssertionError, Error), u.fail = fail, u.ok = ok, u.equal = function equal(t, e, r) {
                t != e && fail(t, e, r, "==", u.equal)
            }, u.notEqual = function notEqual(t, e, r) {
                t == e && fail(t, e, r, "!=", u.notEqual)
            }, u.deepEqual = function deepEqual(t, e, r) {
                _deepEqual(t, e, !1) || fail(t, e, r, "deepEqual", u.deepEqual)
            }, u.deepStrictEqual = function deepStrictEqual(t, e, r) {
                _deepEqual(t, e, !0) || fail(t, e, r, "deepStrictEqual", u.deepStrictEqual)
            }, u.notDeepEqual = function notDeepEqual(t, e, r) {
                _deepEqual(t, e, !1) && fail(t, e, r, "notDeepEqual", u.notDeepEqual)
            }, u.notDeepStrictEqual = function notDeepStrictEqual(t, e, r) {
                _deepEqual(t, e, !0) && fail(t, e, r, "notDeepStrictEqual", notDeepStrictEqual)
            }, u.strictEqual = function strictEqual(t, e, r) {
                t !== e && fail(t, e, r, "===", u.strictEqual)
            }, u.notStrictEqual = function notStrictEqual(t, e, r) {
                t === e && fail(t, e, r, "!==", u.notStrictEqual)
            }, u.throws = function (t, e, r) {
                _throws(!0, t, e, r)
            }, u.doesNotThrow = function (t, e, r) {
                _throws(!1, t, e, r)
            }, u.ifError = function (t) {
                if (t) throw t
            }, u.strict = n((function strict(t, e) {
                t || fail(t, !0, e, "==", strict)
            }), u, {
                equal: u.strictEqual,
                deepEqual: u.deepStrictEqual,
                notEqual: u.notStrictEqual,
                notDeepEqual: u.notDeepStrictEqual
            }), u.strict.strict = u.strict;
            var l = Object.keys || function (t) {
                var e = [];
                for (var r in t) o.call(t, r) && e.push(r);
                return e
            }
        }).call(this, r(6))
    }, function (t, e, r) {
        var n = e,
            i = r(2),
            o = r(17),
            a = r(181);
        n.assert = o, n.toArray = a.toArray, n.zero2 = a.zero2, n.toHex = a.toHex, n.encode = a.encode, n.getNAF = function getNAF(t, e, r) {
            var n = new Array(Math.max(t.bitLength(), r) + 1);
            n.fill(0);
            for (var i = 1 << e + 1, o = t.clone(), a = 0; a < n.length; a++) {
                var s, u = o.andln(i - 1);
                o.isOdd() ? (s = u > (i >> 1) - 1 ? (i >> 1) - u : u, o.isubn(s)) : s = 0, n[a] = s, o.iushrn(1)
            }
            return n
        }, n.getJSF = function getJSF(t, e) {
            var r = [
                [],
                []
            ];
            t = t.clone(), e = e.clone();
            for (var n = 0, i = 0; t.cmpn(-n) > 0 || e.cmpn(-i) > 0;) {
                var o, a, s, u = t.andln(3) + n & 3,
                    c = e.andln(3) + i & 3;
                if (3 === u && (u = -1), 3 === c && (c = -1), 0 == (1 & u)) o = 0;
                else o = 3 !== (s = t.andln(7) + n & 7) && 5 !== s || 2 !== c ? u : -u;
                if (r[0].push(o), 0 == (1 & c)) a = 0;
                else a = 3 !== (s = e.andln(7) + i & 7) && 5 !== s || 2 !== u ? c : -c;
                r[1].push(a), 2 * n === o + 1 && (n = 1 - n), 2 * i === a + 1 && (i = 1 - i), t.iushrn(1), e.iushrn(1)
            }
            return r
        }, n.cachedProperty = function cachedProperty(t, e, r) {
            var n = "_" + e;
            t.prototype[e] = function cachedProperty() {
                return void 0 !== this[n] ? this[n] : this[n] = r.call(this)
            }
        }, n.parseBytes = function parseBytes(t) {
            return "string" == typeof t ? n.toArray(t, "hex") : t
        }, n.intFromLE = function intFromLE(t) {
            return new i(t, "hex", "le")
        }
    }, function (t, e, r) {
        (function (e) {
            var n = r(260),
                i = r(259);

            function padToEven(t) {
                var e = t;
                if ("string" != typeof e) throw new Error("[ethjs-util] while padding to even, value must be string, is currently " + typeof e + ", while padToEven.");
                return e.length % 2 && (e = "0" + e), e
            }

            function intToHex(t) {
                return "0x" + t.toString(16)
            }
            t.exports = {
                arrayContainsArray: function arrayContainsArray(t, e, r) {
                    if (!0 !== Array.isArray(t)) throw new Error("[ethjs-util] method arrayContainsArray requires input 'superset' to be an array got type '" + typeof t + "'");
                    if (!0 !== Array.isArray(e)) throw new Error("[ethjs-util] method arrayContainsArray requires input 'subset' to be an array got type '" + typeof e + "'");
                    return e[Boolean(r) ? "some" : "every"]((function (e) {
                        return t.indexOf(e) >= 0
                    }))
                },
                intToBuffer: function intToBuffer(t) {
                    var r = intToHex(t);
                    return new e(padToEven(r.slice(2)), "hex")
                },
                getBinarySize: function getBinarySize(t) {
                    if ("string" != typeof t) throw new Error("[ethjs-util] while getting binary size, method getBinarySize requires input 'str' to be type String, got '" + typeof t + "'.");
                    return e.byteLength(t, "utf8")
                },
                isHexPrefixed: n,
                stripHexPrefix: i,
                padToEven: padToEven,
                intToHex: intToHex,
                fromAscii: function fromAscii(t) {
                    for (var e = "", r = 0; r < t.length; r++) {
                        var n = t.charCodeAt(r).toString(16);
                        e += n.length < 2 ? "0" + n : n
                    }
                    return "0x" + e
                },
                fromUtf8: function fromUtf8(t) {
                    return "0x" + padToEven(new e(t, "utf8").toString("hex")).replace(/^0+|0+$/g, "")
                },
                toAscii: function toAscii(t) {
                    var e = "",
                        r = 0,
                        n = t.length;
                    for ("0x" === t.substring(0, 2) && (r = 2); r < n; r += 2) {
                        var i = parseInt(t.substr(r, 2), 16);
                        e += String.fromCharCode(i)
                    }
                    return e
                },
                toUtf8: function toUtf8(t) {
                    return new e(padToEven(i(t).replace(/^0+|0+$/g, "")), "hex").toString("utf8")
                },
                getKeys: function getKeys(t, e, r) {
                    if (!Array.isArray(t)) throw new Error("[ethjs-util] method getKeys expecting type Array as 'params' input, got '" + typeof t + "'");
                    if ("string" != typeof e) throw new Error("[ethjs-util] method getKeys expecting type String for input 'key' got '" + typeof e + "'.");
                    for (var n = [], i = 0; i < t.length; i++) {
                        var o = t[i][e];
                        if (r && !o) o = "";
                        else if ("string" != typeof o) throw new Error("invalid abi");
                        n.push(o)
                    }
                    return n
                },
                isHexString: function isHexString(t, e) {
                    return !("string" != typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
                }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = e,
            i = r(2),
            o = r(17),
            a = r(181);
        n.assert = o, n.toArray = a.toArray, n.zero2 = a.zero2, n.toHex = a.toHex, n.encode = a.encode, n.getNAF = function getNAF(t, e, r) {
            var n = new Array(Math.max(t.bitLength(), r) + 1);
            n.fill(0);
            for (var i = 1 << e + 1, o = t.clone(), a = 0; a < n.length; a++) {
                var s, u = o.andln(i - 1);
                o.isOdd() ? (s = u > (i >> 1) - 1 ? (i >> 1) - u : u, o.isubn(s)) : s = 0, n[a] = s, o.iushrn(1)
            }
            return n
        }, n.getJSF = function getJSF(t, e) {
            var r = [
                [],
                []
            ];
            t = t.clone(), e = e.clone();
            for (var n = 0, i = 0; t.cmpn(-n) > 0 || e.cmpn(-i) > 0;) {
                var o, a, s, u = t.andln(3) + n & 3,
                    c = e.andln(3) + i & 3;
                if (3 === u && (u = -1), 3 === c && (c = -1), 0 == (1 & u)) o = 0;
                else o = 3 !== (s = t.andln(7) + n & 7) && 5 !== s || 2 !== c ? u : -u;
                if (r[0].push(o), 0 == (1 & c)) a = 0;
                else a = 3 !== (s = e.andln(7) + i & 7) && 5 !== s || 2 !== u ? c : -c;
                r[1].push(a), 2 * n === o + 1 && (n = 1 - n), 2 * i === a + 1 && (i = 1 - i), t.iushrn(1), e.iushrn(1)
            }
            return r
        }, n.cachedProperty = function cachedProperty(t, e, r) {
            var n = "_" + e;
            t.prototype[e] = function cachedProperty() {
                return void 0 !== this[n] ? this[n] : this[n] = r.call(this)
            }
        }, n.parseBytes = function parseBytes(t) {
            return "string" == typeof t ? n.toArray(t, "hex") : t
        }, n.intFromLE = function intFromLE(t) {
            return new i(t, "hex", "le")
        }
    }, function (t, e) {
        var r = Array.isArray;
        t.exports = r
    }, function (t, e, r) {
        var n = r(166);
        t.exports = function _inherits(t, e) {
            if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    writable: !0,
                    configurable: !0
                }
            }), e && n(t, e)
        }
    }, function (t, e, r) {
        var n = r(47),
            i = r(540);
        t.exports = function _possibleConstructorReturn(t, e) {
            return !e || "object" !== n(e) && "function" != typeof e ? i(t) : e
        }
    }, function (t, e, r) {
        var n = r(567),
            i = r(568);
        t.exports = {
            errors: n,
            formatters: i
        }
    }, function (t, e, r) {
        var n = r(778),
            i = r(779);
        t.exports = {
            errors: n,
            formatters: i
        }
    }, function (t, e, r) {
        var n = r(158)("wks"),
            i = r(113),
            o = r(37).Symbol,
            a = "function" == typeof o;
        (t.exports = function (t) {
            return n[t] || (n[t] = a && o[t] || (a ? o : i)("Symbol." + t))
        }).store = n
    }, function (t, e, r) {
        t.exports = r(536)
    }, function (t, e) {
        function asyncGeneratorStep(t, e, r, n, i, o, a) {
            try {
                var s = t[o](a),
                    u = s.value
            } catch (t) {
                return void r(t)
            }
            s.done ? e(u) : Promise.resolve(u).then(n, i)
        }
        t.exports = function _asyncToGenerator(t) {
            return function () {
                var e = this,
                    r = arguments;
                return new Promise((function (n, i) {
                    var o = t.apply(e, r);

                    function _next(t) {
                        asyncGeneratorStep(o, n, i, _next, _throw, "next", t)
                    }

                    function _throw(t) {
                        asyncGeneratorStep(o, n, i, _next, _throw, "throw", t)
                    }
                    _next(void 0)
                }))
            }
        }
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.SECONDS_PER_YEAR = e.RAD = e.RAY = e.WAD = e.ServiceRoles = void 0;
        var i = n(r(40));
        e.ServiceRoles = {
            CDP_MANAGER: "mcd:cdpManager",
            CDP_TYPE: "mcd:cdpType",
            AUCTION: "mcd:auction",
            SYSTEM_DATA: "mcd:systemData",
            SAVINGS: "mcd:savings"
        };
        var o = new i.default("1e18");
        e.WAD = o;
        var a = new i.default("1e27");
        e.RAY = a;
        var s = new i.default("1e45");
        e.RAD = s;
        e.SECONDS_PER_YEAR = 31536e3
    }, function (t, e, r) {
        var n = r(17),
            i = r(1);

        function isSurrogatePair(t, e) {
            return 55296 == (64512 & t.charCodeAt(e)) && (!(e < 0 || e + 1 >= t.length) && 56320 == (64512 & t.charCodeAt(e + 1)))
        }

        function htonl(t) {
            return (t >>> 24 | t >>> 8 & 65280 | t << 8 & 16711680 | (255 & t) << 24) >>> 0
        }

        function zero2(t) {
            return 1 === t.length ? "0" + t : t
        }

        function zero8(t) {
            return 7 === t.length ? "0" + t : 6 === t.length ? "00" + t : 5 === t.length ? "000" + t : 4 === t.length ? "0000" + t : 3 === t.length ? "00000" + t : 2 === t.length ? "000000" + t : 1 === t.length ? "0000000" + t : t
        }
        e.inherits = i, e.toArray = function toArray(t, e) {
            if (Array.isArray(t)) return t.slice();
            if (!t) return [];
            var r = [];
            if ("string" == typeof t)
                if (e) {
                    if ("hex" === e)
                        for ((t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t = "0" + t), i = 0; i < t.length; i += 2) r.push(parseInt(t[i] + t[i + 1], 16))
                } else
                    for (var n = 0, i = 0; i < t.length; i++) {
                        var o = t.charCodeAt(i);
                        o < 128 ? r[n++] = o : o < 2048 ? (r[n++] = o >> 6 | 192, r[n++] = 63 & o | 128) : isSurrogatePair(t, i) ? (o = 65536 + ((1023 & o) << 10) + (1023 & t.charCodeAt(++i)), r[n++] = o >> 18 | 240, r[n++] = o >> 12 & 63 | 128, r[n++] = o >> 6 & 63 | 128, r[n++] = 63 & o | 128) : (r[n++] = o >> 12 | 224, r[n++] = o >> 6 & 63 | 128, r[n++] = 63 & o | 128)
                    } else
                        for (i = 0; i < t.length; i++) r[i] = 0 | t[i];
            return r
        }, e.toHex = function toHex(t) {
            for (var e = "", r = 0; r < t.length; r++) e += zero2(t[r].toString(16));
            return e
        }, e.htonl = htonl, e.toHex32 = function toHex32(t, e) {
            for (var r = "", n = 0; n < t.length; n++) {
                var i = t[n];
                "little" === e && (i = htonl(i)), r += zero8(i.toString(16))
            }
            return r
        }, e.zero2 = zero2, e.zero8 = zero8, e.join32 = function join32(t, e, r, i) {
            var o = r - e;
            n(o % 4 == 0);
            for (var a = new Array(o / 4), s = 0, u = e; s < a.length; s++, u += 4) {
                var c;
                c = "big" === i ? t[u] << 24 | t[u + 1] << 16 | t[u + 2] << 8 | t[u + 3] : t[u + 3] << 24 | t[u + 2] << 16 | t[u + 1] << 8 | t[u], a[s] = c >>> 0
            }
            return a
        }, e.split32 = function split32(t, e) {
            for (var r = new Array(4 * t.length), n = 0, i = 0; n < t.length; n++, i += 4) {
                var o = t[n];
                "big" === e ? (r[i] = o >>> 24, r[i + 1] = o >>> 16 & 255, r[i + 2] = o >>> 8 & 255, r[i + 3] = 255 & o) : (r[i + 3] = o >>> 24, r[i + 2] = o >>> 16 & 255, r[i + 1] = o >>> 8 & 255, r[i] = 255 & o)
            }
            return r
        }, e.rotr32 = function rotr32(t, e) {
            return t >>> e | t << 32 - e
        }, e.rotl32 = function rotl32(t, e) {
            return t << e | t >>> 32 - e
        }, e.sum32 = function sum32(t, e) {
            return t + e >>> 0
        }, e.sum32_3 = function sum32_3(t, e, r) {
            return t + e + r >>> 0
        }, e.sum32_4 = function sum32_4(t, e, r, n) {
            return t + e + r + n >>> 0
        }, e.sum32_5 = function sum32_5(t, e, r, n, i) {
            return t + e + r + n + i >>> 0
        }, e.sum64 = function sum64(t, e, r, n) {
            var i = t[e],
                o = n + t[e + 1] >>> 0,
                a = (o < n ? 1 : 0) + r + i;
            t[e] = a >>> 0, t[e + 1] = o
        }, e.sum64_hi = function sum64_hi(t, e, r, n) {
            return (e + n >>> 0 < e ? 1 : 0) + t + r >>> 0
        }, e.sum64_lo = function sum64_lo(t, e, r, n) {
            return e + n >>> 0
        }, e.sum64_4_hi = function sum64_4_hi(t, e, r, n, i, o, a, s) {
            var u = 0,
                c = e;
            return u += (c = c + n >>> 0) < e ? 1 : 0, u += (c = c + o >>> 0) < o ? 1 : 0, t + r + i + a + (u += (c = c + s >>> 0) < s ? 1 : 0) >>> 0
        }, e.sum64_4_lo = function sum64_4_lo(t, e, r, n, i, o, a, s) {
            return e + n + o + s >>> 0
        }, e.sum64_5_hi = function sum64_5_hi(t, e, r, n, i, o, a, s, u, c) {
            var l = 0,
                h = e;
            return l += (h = h + n >>> 0) < e ? 1 : 0, l += (h = h + o >>> 0) < o ? 1 : 0, l += (h = h + s >>> 0) < s ? 1 : 0, t + r + i + a + u + (l += (h = h + c >>> 0) < c ? 1 : 0) >>> 0
        }, e.sum64_5_lo = function sum64_5_lo(t, e, r, n, i, o, a, s, u, c) {
            return e + n + o + s + c >>> 0
        }, e.rotr64_hi = function rotr64_hi(t, e, r) {
            return (e << 32 - r | t >>> r) >>> 0
        }, e.rotr64_lo = function rotr64_lo(t, e, r) {
            return (t << 32 - r | e >>> r) >>> 0
        }, e.shr64_hi = function shr64_hi(t, e, r) {
            return t >>> r
        }, e.shr64_lo = function shr64_lo(t, e, r) {
            return (t << 32 - r | e >>> r) >>> 0
        }
    }, function (t, e, r) {
        var n = r(859),
            i = r(860);
        t.exports = {
            errors: n,
            formatters: i
        }
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = e.McdPlugin = e.defaultTokens = e.ALLOWANCE_AMOUNT = e.SAI = e.defaultCdpTypes = e.UNIV2DAIUSDT = e.UNIV2AAVEETH = e.UNIV2WBTCDAI = e.UNIV2UNIETH = e.UNIV2LINKETH = e.UNIV2ETHUSDT = e.UNIV2DAIUSDC = e.UNIV2USDCETH = e.UNIV2WBTCETH = e.UNIV2DAIETH = e.AAVE = e.RENBTC = e.UNI = e.GUSD = e.BAL = e.YFI = e.LINK = e.LRC = e.COMP = e.PAXUSD = e.USDT = e.MANA = e.TUSD = e.WBTC = e.USDC = e.GNT = e.DGD = e.BAT = e.OMG = e.KNC = e.ZRX = e.REP = e.DSR_DAI = e.DAI = e.WETH = e.USD_ETH = e.USD = e.MKR = e.ETH = e.ServiceRoles = void 0;
        var i = n(r(351)),
            o = n(r(101)),
            a = n(r(18)),
            s = n(r(357)),
            u = n(r(428)),
            c = n(r(432)),
            l = r(110),
            h = n(r(494)),
            d = n(r(495)),
            p = n(r(496)),
            m = n(r(497)),
            y = n(r(535)),
            b = n(r(924)),
            g = n(r(925)),
            v = n(r(927)),
            w = n(r(929)),
            M = r(30),
            A = n(r(40)),
            x = n(r(930));

        function ownKeys(t, e) {
            var r = Object.keys(t);
            if (Object.getOwnPropertySymbols) {
                var n = Object.getOwnPropertySymbols(t);
                e && (n = n.filter((function (e) {
                    return Object.getOwnPropertyDescriptor(t, e).enumerable
                }))), r.push.apply(r, n)
            }
            return r
        }

        function _objectSpread(t) {
            for (var e = 1; e < arguments.length; e++) {
                var r = null != arguments[e] ? arguments[e] : {};
                e % 2 ? ownKeys(Object(r), !0).forEach((function (e) {
                    (0, i.default)(t, e, r[e])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : ownKeys(Object(r)).forEach((function (e) {
                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e))
                }))
            }
            return t
        }
        var B = M.ServiceRoles;
        e.ServiceRoles = B;
        var E = B.CDP_MANAGER,
            k = B.CDP_TYPE,
            N = B.SYSTEM_DATA,
            T = B.AUCTION,
            C = B.SAVINGS,
            P = (0, u.default)(h.default, (function (t, e, r) {
                var n = m.default[r];
                if (!n) {
                    var i = Object.keys(m.default).find((function (t) {
                        return "*" == t.substring(t.length - 1) && t.substring(0, t.length - 1) == r.substring(0, t.length - 1)
                    }));
                    i && (n = m.default[i])
                }
                return n && (t[r] = {
                    abi: n,
                    address: {
                        testnet: e,
                        kovan: d.default[r],
                        mainnet: p.default[r]
                    }
                }), t
            }), {}),
            I = (0, l.createCurrency)("ETH");
        e.ETH = I;
        var O = (0, l.createCurrency)("MKR");
        e.MKR = O;
        var D = (0, l.createCurrency)("USD");
        e.USD = D;
        var j = (0, l.createCurrencyRatio)(D, I);
        e.USD_ETH = j;
        var L = (0, l.createCurrency)("WETH");
        e.WETH = L;
        var U = (0, l.createCurrency)("DAI");
        e.DAI = U;
        var H = (0, l.createCurrency)("DSR-DAI");
        e.DSR_DAI = H;
        var q = (0, l.createCurrency)("REP");
        e.REP = q;
        var z = (0, l.createCurrency)("ZRX");
        e.ZRX = z;
        var G = (0, l.createCurrency)("KNC");
        e.KNC = G;
        var V = (0, l.createCurrency)("OMG");
        e.OMG = V;
        var J = (0, l.createCurrency)("BAT");
        e.BAT = J;
        var W = (0, l.createCurrency)("DGD");
        e.DGD = W;
        var Z = (0, l.createCurrency)("GNT");
        e.GNT = Z;
        var X = (0, l.createCurrency)("USDC");
        e.USDC = X;
        var Y = (0, l.createCurrency)("WBTC");
        e.WBTC = Y;
        var $ = (0, l.createCurrency)("TUSD");
        e.TUSD = $;
        var Q = (0, l.createCurrency)("MANA");
        e.MANA = Q;
        var tt = (0, l.createCurrency)("USDT");
        e.USDT = tt;
        var et = (0, l.createCurrency)("PAXUSD");
        e.PAXUSD = et;
        var rt = (0, l.createCurrency)("COMP");
        e.COMP = rt;
        var nt = (0, l.createCurrency)("LRC");
        e.LRC = nt;
        var it = (0, l.createCurrency)("LINK");
        e.LINK = it;
        var ot = (0, l.createCurrency)("YFI");
        e.YFI = ot;
        var st = (0, l.createCurrency)("BAL");
        e.BAL = st;
        var ut = (0, l.createCurrency)("GUSD");
        e.GUSD = ut;
        var ct = (0, l.createCurrency)("UNI");
        e.UNI = ct;
        var ht = (0, l.createCurrency)("RENBTC");
        e.RENBTC = ht;
        var dt = (0, l.createCurrency)("AAVE");
        e.AAVE = dt;
        var pt = (0, l.createCurrency)("UNIV2DAIETH");
        e.UNIV2DAIETH = pt;
        var mt = (0, l.createCurrency)("UNIV2WBTCETH");
        e.UNIV2WBTCETH = mt;
        var yt = (0, l.createCurrency)("UNIV2USDCETH");
        e.UNIV2USDCETH = yt;
        var bt = (0, l.createCurrency)("UNIV2DAIUSDC");
        e.UNIV2DAIUSDC = bt;
        var vt = (0, l.createCurrency)("UNIV2ETHUSDT");
        e.UNIV2ETHUSDT = vt;
        var wt = (0, l.createCurrency)("UNIV2LINKETH");
        e.UNIV2LINKETH = wt;
        var Mt = (0, l.createCurrency)("UNIV2UNIETH");
        e.UNIV2UNIETH = Mt;
        var _t = (0, l.createCurrency)("UNIV2WBTCDAI");
        e.UNIV2WBTCDAI = _t;
        var At = (0, l.createCurrency)("UNIV2AAVEETH");
        e.UNIV2AAVEETH = At;
        var xt = (0, l.createCurrency)("UNIV2DAIUSDT");
        e.UNIV2DAIUSDT = xt;
        var Bt = [{
            currency: I,
            ilk: "ETH-A"
        }, {
            currency: I,
            ilk: "ETH-B"
        }, {
            currency: I,
            ilk: "ETH-C"
        }, {
            currency: J,
            ilk: "BAT-A"
        }, {
            currency: X,
            ilk: "USDC-A",
            decimals: 6
        }, {
            currency: Y,
            ilk: "WBTC-A",
            decimals: 8
        }, {
            currency: X,
            ilk: "USDC-B",
            decimals: 6
        }, {
            currency: $,
            ilk: "TUSD-A",
            decimals: 18
        }, {
            currency: G,
            ilk: "KNC-A",
            decimals: 18
        }, {
            currency: z,
            ilk: "ZRX-A",
            decimals: 18
        }, {
            currency: Q,
            ilk: "MANA-A",
            decimals: 18
        }, {
            currency: tt,
            ilk: "USDT-A",
            decimals: 6
        }, {
            currency: et,
            ilk: "PAXUSD-A",
            decimals: 18
        }, {
            currency: rt,
            ilk: "COMP-A",
            decimals: 18
        }, {
            currency: nt,
            ilk: "LRC-A",
            decimals: 18
        }, {
            currency: it,
            ilk: "LINK-A",
            decimals: 18
        }, {
            currency: ot,
            ilk: "YFI-A",
            decimals: 18
        }, {
            currency: st,
            ilk: "BAL-A",
            decimals: 18
        }, {
            currency: ut,
            ilk: "GUSD-A",
            decimals: 2
        }, {
            currency: ct,
            ilk: "UNI-A",
            decimals: 18
        }, {
            currency: ht,
            ilk: "RENBTC-A",
            decimals: 8
        }, {
            currency: dt,
            ilk: "AAVE-A",
            decimals: 18
        }, {
            currency: pt,
            ilk: "UNIV2DAIETH-A",
            decimals: 18
        }, {
            currency: mt,
            ilk: "UNIV2WBTCETH-A",
            decimals: 18
        }, {
            currency: yt,
            ilk: "UNIV2USDCETH-A",
            decimals: 18
        }, {
            currency: bt,
            ilk: "UNIV2DAIUSDC-A",
            decimals: 18
        }, {
            currency: vt,
            ilk: "UNIV2ETHUSDT-A",
            decimals: 18
        }, {
            currency: wt,
            ilk: "UNIV2LINKETH-A",
            decimals: 18
        }, {
            currency: Mt,
            ilk: "UNIV2UNIETH-A",
            decimals: 18
        }, {
            currency: _t,
            ilk: "UNIV2WBTCDAI-A",
            decimals: 18
        }, {
            currency: At,
            ilk: "UNIV2AAVEETH-A",
            decimals: 18
        }, {
            currency: xt,
            ilk: "UNIV2DAIUSDT-A",
            decimals: 18
        }];
        e.defaultCdpTypes = Bt;
        var Et = (0, l.createCurrency)("SAI");
        e.SAI = Et;
        var kt = (0, A.default)("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
        e.ALLOWANCE_AMOUNT = kt;
        var Nt = (0, o.default)(new Set([].concat((0, o.default)(Bt.map((function (t) {
            return t.currency
        }))), [U, L, Et, H])));
        e.defaultTokens = Nt;
        var St = {
            addConfig: function addConfig(t) {
                var e, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = r.cdpTypes,
                    u = void 0 === n ? Bt : n,
                    l = r.addressOverrides,
                    h = r.prefetch,
                    d = void 0 === h || h;
                l && (P = (0, s.default)(P, (function (t, e) {
                    return _objectSpread(_objectSpread({}, t), {}, {
                        address: l[e] || t.address
                    })
                })));
                var p = (0, c.default)(u, "currency").map((function (t) {
                    var e = t.currency,
                        r = t.address,
                        n = t.abi,
                        i = t.decimals,
                        o = r && n ? {
                            address: r,
                            abi: n
                        } : P[e.symbol];
                    return (0, a.default)(o, 'No address and ABI found for "'.concat(e.symbol, '"')), {
                        currency: e,
                        abi: o.abi,
                        address: o.address,
                        decimals: o.decimals || i
                    }
                }));
                return A.default.config({
                    POW_PRECISION: 100
                }), e = {
                    smartContract: {
                        addContracts: P
                    },
                    token: {
                        erc20: [{
                            currency: U,
                            address: P.MCD_DAI.address
                        }, {
                            currency: L,
                            address: P.ETH.address,
                            abi: x.default
                        }].concat((0, o.default)(p))
                    },
                    additionalServices: [E, k, T, N, C]
                }, (0, i.default)(e, k, [g.default, {
                    cdpTypes: u,
                    prefetch: d
                }]), (0, i.default)(e, E, y.default), (0, i.default)(e, C, b.default), (0, i.default)(e, T, v.default), (0, i.default)(e, N, w.default), e
            }
        };
        e.McdPlugin = St;
        var Tt = St;
        e.default = Tt
    }, function (t, e, r) {
        var n = r(209),
            i = "object" == typeof self && self && self.Object === Object && self,
            o = n || i || Function("return this")();
        t.exports = o
    }, function (t, e, r) {
        var n = r(65),
            i = r(285),
            o = r(704),
            a = r(15),
            s = r(126),
            _flattenTypes = function (t, e) {
                var r = [];
                return e.forEach((function (e) {
                    if ("object" == typeof e.components) {
                        if ("tuple" !== e.type.substring(0, 5)) throw new Error("components found but type is not tuple; report on GitHub");
                        var n = "",
                            i = e.type.indexOf("[");
                        i >= 0 && (n = e.type.substring(i));
                        var o = _flattenTypes(t, e.components);
                        Array.isArray(o) && t ? r.push("tuple(" + o.join(",") + ")" + n) : t ? r.push("(" + o + ")") : r.push("(" + o.join(",") + ")" + n)
                    } else r.push(e.type)
                })), r
            },
            hexToAscii = function (t) {
                if (!i.isHexStrict(t)) throw new Error("The parameter must be a valid HEX string.");
                var e = "",
                    r = 0,
                    n = t.length;
                for ("0x" === t.substring(0, 2) && (r = 2); r < n; r += 2) {
                    var o = parseInt(t.substr(r, 2), 16);
                    e += String.fromCharCode(o)
                }
                return e
            },
            asciiToHex = function (t) {
                if (!t) return "0x00";
                for (var e = "", r = 0; r < t.length; r++) {
                    var n = t.charCodeAt(r).toString(16);
                    e += n.length < 2 ? "0" + n : n
                }
                return "0x" + e
            },
            getUnitValue = function (t) {
                if (t = t ? t.toLowerCase() : "ether", !n.unitMap[t]) throw new Error('This unit "' + t + "\" doesn't exist, please use the one of the following units" + JSON.stringify(n.unitMap, null, 2));
                return t
            };
        t.exports = {
            _fireError: function (t, e, r, n, i) {
                return !t || "object" != typeof t || t instanceof Error || !t.data || ((t.data && "object" == typeof t.data || Array.isArray(t.data)) && (t.data = JSON.stringify(t.data, null, 2)), t = t.message + "\n" + t.data), "string" == typeof t && (t = new Error(t)), "function" == typeof n && n(t, i), "function" == typeof r && ((e && "function" == typeof e.listeners && e.listeners("error").length || "function" == typeof n) && e.catch((function () {})), setTimeout((function () {
                    r(t)
                }), 1)), e && "function" == typeof e.emit && setTimeout((function () {
                    e.emit("error", t, i), e.removeAllListeners()
                }), 1), e
            },
            _jsonInterfaceMethodToString: function (t) {
                return t && "object" == typeof t && t.name && -1 !== t.name.indexOf("(") ? t.name : t.name + "(" + _flattenTypes(!1, t.inputs).join(",") + ")"
            },
            _flattenTypes: _flattenTypes,
            randomHex: function (t) {
                return "0x" + a(t).toString("hex")
            },
            BN: i.BN,
            isBN: i.isBN,
            isBigNumber: i.isBigNumber,
            isHex: i.isHex,
            isHexStrict: i.isHexStrict,
            sha3: i.sha3,
            sha3Raw: i.sha3Raw,
            keccak256: i.sha3,
            soliditySha3: o.soliditySha3,
            soliditySha3Raw: o.soliditySha3Raw,
            encodePacked: o.encodePacked,
            isAddress: i.isAddress,
            checkAddressChecksum: i.checkAddressChecksum,
            toChecksumAddress: function (t) {
                if (void 0 === t) return "";
                if (!/^(0x)?[0-9a-f]{40}$/i.test(t)) throw new Error('Given address "' + t + '" is not a valid Ethereum address.');
                t = t.toLowerCase().replace(/^0x/i, "");
                for (var e = i.sha3(t).replace(/^0x/i, ""), r = "0x", n = 0; n < t.length; n++) parseInt(e[n], 16) > 7 ? r += t[n].toUpperCase() : r += t[n];
                return r
            },
            toHex: i.toHex,
            toBN: i.toBN,
            bytesToHex: i.bytesToHex,
            hexToBytes: i.hexToBytes,
            hexToNumberString: i.hexToNumberString,
            hexToNumber: i.hexToNumber,
            toDecimal: i.hexToNumber,
            numberToHex: i.numberToHex,
            fromDecimal: i.numberToHex,
            hexToUtf8: i.hexToUtf8,
            hexToString: i.hexToUtf8,
            toUtf8: i.hexToUtf8,
            stripHexPrefix: i.stripHexPrefix,
            utf8ToHex: i.utf8ToHex,
            stringToHex: i.utf8ToHex,
            fromUtf8: i.utf8ToHex,
            hexToAscii: hexToAscii,
            toAscii: hexToAscii,
            asciiToHex: asciiToHex,
            fromAscii: asciiToHex,
            unitMap: n.unitMap,
            toWei: function (t, e) {
                if (e = getUnitValue(e), !i.isBN(t) && "string" != typeof t) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                return i.isBN(t) ? n.toWei(t, e) : n.toWei(t, e).toString(10)
            },
            fromWei: function (t, e) {
                if (e = getUnitValue(e), !i.isBN(t) && "string" != typeof t) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                return i.isBN(t) ? n.fromWei(t, e) : n.fromWei(t, e).toString(10)
            },
            padLeft: i.leftPad,
            leftPad: i.leftPad,
            padRight: i.rightPad,
            rightPad: i.rightPad,
            toTwosComplement: i.toTwosComplement,
            isBloom: i.isBloom,
            isUserEthereumAddressInBloom: i.isUserEthereumAddressInBloom,
            isContractAddressInBloom: i.isContractAddressInBloom,
            isTopic: i.isTopic,
            isTopicInBloom: i.isTopicInBloom,
            isInBloom: i.isInBloom,
            compareBlockNumbers: function (t, e) {
                if (t == e) return 0;
                if ("genesis" != t && "earliest" != t && 0 != t || "genesis" != e && "earliest" != e && 0 != e) {
                    if ("genesis" == t || "earliest" == t) return -1;
                    if ("genesis" == e || "earliest" == e) return 1;
                    if ("latest" == t) return "pending" == e ? -1 : 1;
                    if ("latest" === e) return "pending" == t ? 1 : -1;
                    if ("pending" == t) return 1;
                    if ("pending" == e) return -1; {
                        let r = new s(t),
                            n = new s(e);
                        return r.lt(n) ? -1 : r.eq(n) ? 0 : 1
                    }
                }
                return 0
            },
            toNumber: i.toNumber
        }
    }, function (t, e, r) {
        var n = r(37),
            i = r(13),
            o = r(152),
            a = r(60),
            s = r(46),
            $export = function (t, e, r) {
                var u, c, l, h = t & $export.F,
                    d = t & $export.G,
                    p = t & $export.S,
                    m = t & $export.P,
                    y = t & $export.B,
                    b = t & $export.W,
                    g = d ? i : i[e] || (i[e] = {}),
                    v = g.prototype,
                    w = d ? n : p ? n[e] : (n[e] || {}).prototype;
                for (u in d && (r = e), r)(c = !h && w && void 0 !== w[u]) && s(g, u) || (l = c ? w[u] : r[u], g[u] = d && "function" != typeof w[u] ? r[u] : y && c ? o(l, n) : b && w[u] == l ? function (t) {
                    var F = function (e, r, n) {
                        if (this instanceof t) {
                            switch (arguments.length) {
                                case 0:
                                    return new t;
                                case 1:
                                    return new t(e);
                                case 2:
                                    return new t(e, r)
                            }
                            return new t(e, r, n)
                        }
                        return t.apply(this, arguments)
                    };
                    return F.prototype = t.prototype, F
                }(l) : m && "function" == typeof l ? o(Function.call, l) : l, m && ((g.virtual || (g.virtual = {}))[u] = l, t & $export.R && v && !v[u] && a(v, u, l)))
            };
        $export.F = 1, $export.G = 2, $export.S = 4, $export.P = 8, $export.B = 16, $export.W = 32, $export.U = 64, $export.R = 128, t.exports = $export
    }, function (t, e) {
        var r = t.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
        "number" == typeof __g && (__g = r)
    }, function (t, e, r) {
        var n = r(45),
            i = r(235),
            o = r(153),
            a = Object.defineProperty;
        e.f = r(39) ? Object.defineProperty : function defineProperty(t, e, r) {
            if (n(t), e = o(e, !0), n(r), i) try {
                return a(t, e, r)
            } catch (t) {}
            if ("get" in r || "set" in r) throw TypeError("Accessors not supported!");
            return "value" in r && (t[e] = r.value), t
        }
    }, function (t, e, r) {
        t.exports = !r(62)((function () {
            return 7 != Object.defineProperty({}, "a", {
                get: function () {
                    return 7
                }
            }).a
        }))
    }, function (t, e, r) {
        var n;
        ! function (i) {
            var o, a = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
                s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator,
                u = Math.ceil,
                c = Math.floor,
                l = "[BigNumber Error] ",
                h = l + "Number primitive has more than 15 significant digits: ",
                d = 1e14,
                p = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
                m = 1e9;

            function bitFloor(t) {
                var e = 0 | t;
                return t > 0 || t === e ? e : e - 1
            }

            function coeffToString(t) {
                for (var e, r, n = 1, i = t.length, o = t[0] + ""; n < i;) {
                    for (r = 14 - (e = t[n++] + "").length; r--; e = "0" + e);
                    o += e
                }
                for (i = o.length; 48 === o.charCodeAt(--i););
                return o.slice(0, i + 1 || 1)
            }

            function compare(t, e) {
                var r, n, i = t.c,
                    o = e.c,
                    a = t.s,
                    s = e.s,
                    u = t.e,
                    c = e.e;
                if (!a || !s) return null;
                if (r = i && !i[0], n = o && !o[0], r || n) return r ? n ? 0 : -s : a;
                if (a != s) return a;
                if (r = a < 0, n = u == c, !i || !o) return n ? 0 : !i ^ r ? 1 : -1;
                if (!n) return u > c ^ r ? 1 : -1;
                for (s = (u = i.length) < (c = o.length) ? u : c, a = 0; a < s; a++)
                    if (i[a] != o[a]) return i[a] > o[a] ^ r ? 1 : -1;
                return u == c ? 0 : u > c ^ r ? 1 : -1
            }

            function intCheck(t, e, r, n) {
                if (t < e || t > r || t !== c(t)) throw Error(l + (n || "Argument") + ("number" == typeof t ? t < e || t > r ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(t))
            }

            function isOdd(t) {
                var e = t.c.length - 1;
                return bitFloor(t.e / 14) == e && t.c[e] % 2 != 0
            }

            function toExponential(t, e) {
                return (t.length > 1 ? t.charAt(0) + "." + t.slice(1) : t) + (e < 0 ? "e" : "e+") + e
            }

            function toFixedPoint(t, e, r) {
                var n, i;
                if (e < 0) {
                    for (i = r + "."; ++e; i += r);
                    t = i + t
                } else if (++e > (n = t.length)) {
                    for (i = r, e -= n; --e; i += r);
                    t += i
                } else e < n && (t = t.slice(0, e) + "." + t.slice(e));
                return t
            }(o = function clone(t) {
                var e, r, n, i, o, y, b, g, v, w = BigNumber.prototype = {
                        constructor: BigNumber,
                        toString: null,
                        valueOf: null
                    },
                    M = new BigNumber(1),
                    A = 20,
                    x = 4,
                    B = -7,
                    E = 21,
                    k = -1e7,
                    N = 1e7,
                    T = !1,
                    C = 1,
                    P = 0,
                    I = {
                        prefix: "",
                        groupSize: 3,
                        secondaryGroupSize: 0,
                        groupSeparator: ",",
                        decimalSeparator: ".",
                        fractionGroupSize: 0,
                        fractionGroupSeparator: " ",
                        suffix: ""
                    },
                    O = "0123456789abcdefghijklmnopqrstuvwxyz";

                function BigNumber(t, e) {
                    var i, o, s, u, l, d, p, m, y = this;
                    if (!(y instanceof BigNumber)) return new BigNumber(t, e);
                    if (null == e) {
                        if (t && !0 === t._isBigNumber) return y.s = t.s, void(!t.c || t.e > N ? y.c = y.e = null : t.e < k ? y.c = [y.e = 0] : (y.e = t.e, y.c = t.c.slice()));
                        if ((d = "number" == typeof t) && 0 * t == 0) {
                            if (y.s = 1 / t < 0 ? (t = -t, -1) : 1, t === ~~t) {
                                for (u = 0, l = t; l >= 10; l /= 10, u++);
                                return void(u > N ? y.c = y.e = null : (y.e = u, y.c = [t]))
                            }
                            m = String(t)
                        } else {
                            if (!a.test(m = String(t))) return n(y, m, d);
                            y.s = 45 == m.charCodeAt(0) ? (m = m.slice(1), -1) : 1
                        }(u = m.indexOf(".")) > -1 && (m = m.replace(".", "")), (l = m.search(/e/i)) > 0 ? (u < 0 && (u = l), u += +m.slice(l + 1), m = m.substring(0, l)) : u < 0 && (u = m.length)
                    } else {
                        if (intCheck(e, 2, O.length, "Base"), 10 == e) return round(y = new BigNumber(t), A + y.e + 1, x);
                        if (m = String(t), d = "number" == typeof t) {
                            if (0 * t != 0) return n(y, m, d, e);
                            if (y.s = 1 / t < 0 ? (m = m.slice(1), -1) : 1, BigNumber.DEBUG && m.replace(/^0\.0*|\./, "").length > 15) throw Error(h + t)
                        } else y.s = 45 === m.charCodeAt(0) ? (m = m.slice(1), -1) : 1;
                        for (i = O.slice(0, e), u = l = 0, p = m.length; l < p; l++)
                            if (i.indexOf(o = m.charAt(l)) < 0) {
                                if ("." == o) {
                                    if (l > u) {
                                        u = p;
                                        continue
                                    }
                                } else if (!s && (m == m.toUpperCase() && (m = m.toLowerCase()) || m == m.toLowerCase() && (m = m.toUpperCase()))) {
                                    s = !0, l = -1, u = 0;
                                    continue
                                }
                                return n(y, String(t), d, e)
                            } d = !1, (u = (m = r(m, e, 10, y.s)).indexOf(".")) > -1 ? m = m.replace(".", "") : u = m.length
                    }
                    for (l = 0; 48 === m.charCodeAt(l); l++);
                    for (p = m.length; 48 === m.charCodeAt(--p););
                    if (m = m.slice(l, ++p)) {
                        if (p -= l, d && BigNumber.DEBUG && p > 15 && (t > 9007199254740991 || t !== c(t))) throw Error(h + y.s * t);
                        if ((u = u - l - 1) > N) y.c = y.e = null;
                        else if (u < k) y.c = [y.e = 0];
                        else {
                            if (y.e = u, y.c = [], l = (u + 1) % 14, u < 0 && (l += 14), l < p) {
                                for (l && y.c.push(+m.slice(0, l)), p -= 14; l < p;) y.c.push(+m.slice(l, l += 14));
                                l = 14 - (m = m.slice(l)).length
                            } else l -= p;
                            for (; l--; m += "0");
                            y.c.push(+m)
                        }
                    } else y.c = [y.e = 0]
                }

                function format(t, e, r, n) {
                    var i, o, a, s, u;
                    if (null == r ? r = x : intCheck(r, 0, 8), !t.c) return t.toString();
                    if (i = t.c[0], a = t.e, null == e) u = coeffToString(t.c), u = 1 == n || 2 == n && (a <= B || a >= E) ? toExponential(u, a) : toFixedPoint(u, a, "0");
                    else if (o = (t = round(new BigNumber(t), e, r)).e, s = (u = coeffToString(t.c)).length, 1 == n || 2 == n && (e <= o || o <= B)) {
                        for (; s < e; u += "0", s++);
                        u = toExponential(u, o)
                    } else if (e -= a, u = toFixedPoint(u, o, "0"), o + 1 > s) {
                        if (--e > 0)
                            for (u += "."; e--; u += "0");
                    } else if ((e += o - s) > 0)
                        for (o + 1 == s && (u += "."); e--; u += "0");
                    return t.s < 0 && i ? "-" + u : u
                }

                function maxOrMin(t, e) {
                    for (var r, n = 1, i = new BigNumber(t[0]); n < t.length; n++) {
                        if (!(r = new BigNumber(t[n])).s) {
                            i = r;
                            break
                        }
                        e.call(i, r) && (i = r)
                    }
                    return i
                }

                function normalise(t, e, r) {
                    for (var n = 1, i = e.length; !e[--i]; e.pop());
                    for (i = e[0]; i >= 10; i /= 10, n++);
                    return (r = n + 14 * r - 1) > N ? t.c = t.e = null : r < k ? t.c = [t.e = 0] : (t.e = r, t.c = e), t
                }

                function round(t, e, r, n) {
                    var i, o, a, s, l, h, m, y = t.c,
                        b = p;
                    if (y) {
                        t: {
                            for (i = 1, s = y[0]; s >= 10; s /= 10, i++);
                            if ((o = e - i) < 0) o += 14,
                            a = e,
                            m = (l = y[h = 0]) / b[i - a - 1] % 10 | 0;
                            else if ((h = u((o + 1) / 14)) >= y.length) {
                                if (!n) break t;
                                for (; y.length <= h; y.push(0));
                                l = m = 0, i = 1, a = (o %= 14) - 14 + 1
                            } else {
                                for (l = s = y[h], i = 1; s >= 10; s /= 10, i++);
                                m = (a = (o %= 14) - 14 + i) < 0 ? 0 : l / b[i - a - 1] % 10 | 0
                            }
                            if (n = n || e < 0 || null != y[h + 1] || (a < 0 ? l : l % b[i - a - 1]), n = r < 4 ? (m || n) && (0 == r || r == (t.s < 0 ? 3 : 2)) : m > 5 || 5 == m && (4 == r || n || 6 == r && (o > 0 ? a > 0 ? l / b[i - a] : 0 : y[h - 1]) % 10 & 1 || r == (t.s < 0 ? 8 : 7)), e < 1 || !y[0]) return y.length = 0,
                            n ? (e -= t.e + 1, y[0] = b[(14 - e % 14) % 14], t.e = -e || 0) : y[0] = t.e = 0,
                            t;
                            if (0 == o ? (y.length = h, s = 1, h--) : (y.length = h + 1, s = b[14 - o], y[h] = a > 0 ? c(l / b[i - a] % b[a]) * s : 0), n)
                                for (;;) {
                                    if (0 == h) {
                                        for (o = 1, a = y[0]; a >= 10; a /= 10, o++);
                                        for (a = y[0] += s, s = 1; a >= 10; a /= 10, s++);
                                        o != s && (t.e++, y[0] == d && (y[0] = 1));
                                        break
                                    }
                                    if (y[h] += s, y[h] != d) break;
                                    y[h--] = 0, s = 1
                                }
                            for (o = y.length; 0 === y[--o]; y.pop());
                        }
                        t.e > N ? t.c = t.e = null : t.e < k && (t.c = [t.e = 0])
                    }
                    return t
                }

                function valueOf(t) {
                    var e, r = t.e;
                    return null === r ? t.toString() : (e = coeffToString(t.c), e = r <= B || r >= E ? toExponential(e, r) : toFixedPoint(e, r, "0"), t.s < 0 ? "-" + e : e)
                }
                return BigNumber.clone = clone, BigNumber.ROUND_UP = 0, BigNumber.ROUND_DOWN = 1, BigNumber.ROUND_CEIL = 2, BigNumber.ROUND_FLOOR = 3, BigNumber.ROUND_HALF_UP = 4, BigNumber.ROUND_HALF_DOWN = 5, BigNumber.ROUND_HALF_EVEN = 6, BigNumber.ROUND_HALF_CEIL = 7, BigNumber.ROUND_HALF_FLOOR = 8, BigNumber.EUCLID = 9, BigNumber.config = BigNumber.set = function (t) {
                    var e, r;
                    if (null != t) {
                        if ("object" != typeof t) throw Error(l + "Object expected: " + t);
                        if (t.hasOwnProperty(e = "DECIMAL_PLACES") && (intCheck(r = t[e], 0, m, e), A = r), t.hasOwnProperty(e = "ROUNDING_MODE") && (intCheck(r = t[e], 0, 8, e), x = r), t.hasOwnProperty(e = "EXPONENTIAL_AT") && ((r = t[e]) && r.pop ? (intCheck(r[0], -m, 0, e), intCheck(r[1], 0, m, e), B = r[0], E = r[1]) : (intCheck(r, -m, m, e), B = -(E = r < 0 ? -r : r))), t.hasOwnProperty(e = "RANGE"))
                            if ((r = t[e]) && r.pop) intCheck(r[0], -m, -1, e), intCheck(r[1], 1, m, e), k = r[0], N = r[1];
                            else {
                                if (intCheck(r, -m, m, e), !r) throw Error(l + e + " cannot be zero: " + r);
                                k = -(N = r < 0 ? -r : r)
                            } if (t.hasOwnProperty(e = "CRYPTO")) {
                            if ((r = t[e]) !== !!r) throw Error(l + e + " not true or false: " + r);
                            if (r) {
                                if ("undefined" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw T = !r, Error(l + "crypto unavailable");
                                T = r
                            } else T = r
                        }
                        if (t.hasOwnProperty(e = "MODULO_MODE") && (intCheck(r = t[e], 0, 9, e), C = r), t.hasOwnProperty(e = "POW_PRECISION") && (intCheck(r = t[e], 0, m, e), P = r), t.hasOwnProperty(e = "FORMAT")) {
                            if ("object" != typeof (r = t[e])) throw Error(l + e + " not an object: " + r);
                            I = r
                        }
                        if (t.hasOwnProperty(e = "ALPHABET")) {
                            if ("string" != typeof (r = t[e]) || /^.$|[+-.\s]|(.).*\1/.test(r)) throw Error(l + e + " invalid: " + r);
                            O = r
                        }
                    }
                    return {
                        DECIMAL_PLACES: A,
                        ROUNDING_MODE: x,
                        EXPONENTIAL_AT: [B, E],
                        RANGE: [k, N],
                        CRYPTO: T,
                        MODULO_MODE: C,
                        POW_PRECISION: P,
                        FORMAT: I,
                        ALPHABET: O
                    }
                }, BigNumber.isBigNumber = function (t) {
                    if (!t || !0 !== t._isBigNumber) return !1;
                    if (!BigNumber.DEBUG) return !0;
                    var e, r, n = t.c,
                        i = t.e,
                        o = t.s;
                    t: if ("[object Array]" == {}.toString.call(n)) {
                        if ((1 === o || -1 === o) && i >= -m && i <= m && i === c(i)) {
                            if (0 === n[0]) {
                                if (0 === i && 1 === n.length) return !0;
                                break t
                            }
                            if ((e = (i + 1) % 14) < 1 && (e += 14), String(n[0]).length == e) {
                                for (e = 0; e < n.length; e++)
                                    if ((r = n[e]) < 0 || r >= d || r !== c(r)) break t;
                                if (0 !== r) return !0
                            }
                        }
                    } else if (null === n && null === i && (null === o || 1 === o || -1 === o)) return !0;
                    throw Error(l + "Invalid BigNumber: " + t)
                }, BigNumber.maximum = BigNumber.max = function () {
                    return maxOrMin(arguments, w.lt)
                }, BigNumber.minimum = BigNumber.min = function () {
                    return maxOrMin(arguments, w.gt)
                }, BigNumber.random = (i = 9007199254740992 * Math.random() & 2097151 ? function () {
                    return c(9007199254740992 * Math.random())
                } : function () {
                    return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0)
                }, function (t) {
                    var e, r, n, o, a, s = 0,
                        h = [],
                        d = new BigNumber(M);
                    if (null == t ? t = A : intCheck(t, 0, m), o = u(t / 14), T)
                        if (crypto.getRandomValues) {
                            for (e = crypto.getRandomValues(new Uint32Array(o *= 2)); s < o;)(a = 131072 * e[s] + (e[s + 1] >>> 11)) >= 9e15 ? (r = crypto.getRandomValues(new Uint32Array(2)), e[s] = r[0], e[s + 1] = r[1]) : (h.push(a % 1e14), s += 2);
                            s = o / 2
                        } else {
                            if (!crypto.randomBytes) throw T = !1, Error(l + "crypto unavailable");
                            for (e = crypto.randomBytes(o *= 7); s < o;)(a = 281474976710656 * (31 & e[s]) + 1099511627776 * e[s + 1] + 4294967296 * e[s + 2] + 16777216 * e[s + 3] + (e[s + 4] << 16) + (e[s + 5] << 8) + e[s + 6]) >= 9e15 ? crypto.randomBytes(7).copy(e, s) : (h.push(a % 1e14), s += 7);
                            s = o / 7
                        } if (!T)
                        for (; s < o;)(a = i()) < 9e15 && (h[s++] = a % 1e14);
                    for (t %= 14, (o = h[--s]) && t && (a = p[14 - t], h[s] = c(o / a) * a); 0 === h[s]; h.pop(), s--);
                    if (s < 0) h = [n = 0];
                    else {
                        for (n = -1; 0 === h[0]; h.splice(0, 1), n -= 14);
                        for (s = 1, a = h[0]; a >= 10; a /= 10, s++);
                        s < 14 && (n -= 14 - s)
                    }
                    return d.e = n, d.c = h, d
                }), BigNumber.sum = function () {
                    for (var t = 1, e = arguments, r = new BigNumber(e[0]); t < e.length;) r = r.plus(e[t++]);
                    return r
                }, r = function () {
                    function toBaseOut(t, e, r, n) {
                        for (var i, o, a = [0], s = 0, u = t.length; s < u;) {
                            for (o = a.length; o--; a[o] *= e);
                            for (a[0] += n.indexOf(t.charAt(s++)), i = 0; i < a.length; i++) a[i] > r - 1 && (null == a[i + 1] && (a[i + 1] = 0), a[i + 1] += a[i] / r | 0, a[i] %= r)
                        }
                        return a.reverse()
                    }
                    return function (t, r, n, i, o) {
                        var a, s, u, c, l, h, d, p, m = t.indexOf("."),
                            y = A,
                            b = x;
                        for (m >= 0 && (c = P, P = 0, t = t.replace(".", ""), h = (p = new BigNumber(r)).pow(t.length - m), P = c, p.c = toBaseOut(toFixedPoint(coeffToString(h.c), h.e, "0"), 10, n, "0123456789"), p.e = p.c.length), u = c = (d = toBaseOut(t, r, n, o ? (a = O, "0123456789") : (a = "0123456789", O))).length; 0 == d[--c]; d.pop());
                        if (!d[0]) return a.charAt(0);
                        if (m < 0 ? --u : (h.c = d, h.e = u, h.s = i, d = (h = e(h, p, y, b, n)).c, l = h.r, u = h.e), m = d[s = u + y + 1], c = n / 2, l = l || s < 0 || null != d[s + 1], l = b < 4 ? (null != m || l) && (0 == b || b == (h.s < 0 ? 3 : 2)) : m > c || m == c && (4 == b || l || 6 == b && 1 & d[s - 1] || b == (h.s < 0 ? 8 : 7)), s < 1 || !d[0]) t = l ? toFixedPoint(a.charAt(1), -y, a.charAt(0)) : a.charAt(0);
                        else {
                            if (d.length = s, l)
                                for (--n; ++d[--s] > n;) d[s] = 0, s || (++u, d = [1].concat(d));
                            for (c = d.length; !d[--c];);
                            for (m = 0, t = ""; m <= c; t += a.charAt(d[m++]));
                            t = toFixedPoint(t, u, a.charAt(0))
                        }
                        return t
                    }
                }(), e = function () {
                    function multiply(t, e, r) {
                        var n, i, o, a, s = 0,
                            u = t.length,
                            c = e % 1e7,
                            l = e / 1e7 | 0;
                        for (t = t.slice(); u--;) s = ((i = c * (o = t[u] % 1e7) + (n = l * o + (a = t[u] / 1e7 | 0) * c) % 1e7 * 1e7 + s) / r | 0) + (n / 1e7 | 0) + l * a, t[u] = i % r;
                        return s && (t = [s].concat(t)), t
                    }

                    function compare(t, e, r, n) {
                        var i, o;
                        if (r != n) o = r > n ? 1 : -1;
                        else
                            for (i = o = 0; i < r; i++)
                                if (t[i] != e[i]) {
                                    o = t[i] > e[i] ? 1 : -1;
                                    break
                                } return o
                    }

                    function subtract(t, e, r, n) {
                        for (var i = 0; r--;) t[r] -= i, i = t[r] < e[r] ? 1 : 0, t[r] = i * n + t[r] - e[r];
                        for (; !t[0] && t.length > 1; t.splice(0, 1));
                    }
                    return function (t, e, r, n, i) {
                        var o, a, s, u, l, h, p, m, y, b, g, v, w, M, A, x, B, E = t.s == e.s ? 1 : -1,
                            k = t.c,
                            N = e.c;
                        if (!(k && k[0] && N && N[0])) return new BigNumber(t.s && e.s && (k ? !N || k[0] != N[0] : N) ? k && 0 == k[0] || !N ? 0 * E : E / 0 : NaN);
                        for (y = (m = new BigNumber(E)).c = [], E = r + (a = t.e - e.e) + 1, i || (i = d, a = bitFloor(t.e / 14) - bitFloor(e.e / 14), E = E / 14 | 0), s = 0; N[s] == (k[s] || 0); s++);
                        if (N[s] > (k[s] || 0) && a--, E < 0) y.push(1), u = !0;
                        else {
                            for (M = k.length, x = N.length, s = 0, E += 2, (l = c(i / (N[0] + 1))) > 1 && (N = multiply(N, l, i), k = multiply(k, l, i), x = N.length, M = k.length), w = x, g = (b = k.slice(0, x)).length; g < x; b[g++] = 0);
                            B = N.slice(), B = [0].concat(B), A = N[0], N[1] >= i / 2 && A++;
                            do {
                                if (l = 0, (o = compare(N, b, x, g)) < 0) {
                                    if (v = b[0], x != g && (v = v * i + (b[1] || 0)), (l = c(v / A)) > 1)
                                        for (l >= i && (l = i - 1), p = (h = multiply(N, l, i)).length, g = b.length; 1 == compare(h, b, p, g);) l--, subtract(h, x < p ? B : N, p, i), p = h.length, o = 1;
                                    else 0 == l && (o = l = 1), p = (h = N.slice()).length;
                                    if (p < g && (h = [0].concat(h)), subtract(b, h, g, i), g = b.length, -1 == o)
                                        for (; compare(N, b, x, g) < 1;) l++, subtract(b, x < g ? B : N, g, i), g = b.length
                                } else 0 === o && (l++, b = [0]);
                                y[s++] = l, b[0] ? b[g++] = k[w] || 0 : (b = [k[w]], g = 1)
                            } while ((w++ < M || null != b[0]) && E--);
                            u = null != b[0], y[0] || y.splice(0, 1)
                        }
                        if (i == d) {
                            for (s = 1, E = y[0]; E >= 10; E /= 10, s++);
                            round(m, r + (m.e = s + 14 * a - 1) + 1, n, u)
                        } else m.e = a, m.r = +u;
                        return m
                    }
                }(), o = /^(-?)0([xbo])(?=\w[\w.]*$)/i, y = /^([^.]+)\.$/, b = /^\.([^.]+)$/, g = /^-?(Infinity|NaN)$/, v = /^\s*\+(?=[\w.])|^\s+|\s+$/g, n = function (t, e, r, n) {
                    var i, a = r ? e : e.replace(v, "");
                    if (g.test(a)) t.s = isNaN(a) ? null : a < 0 ? -1 : 1;
                    else {
                        if (!r && (a = a.replace(o, (function (t, e, r) {
                                return i = "x" == (r = r.toLowerCase()) ? 16 : "b" == r ? 2 : 8, n && n != i ? t : e
                            })), n && (i = n, a = a.replace(y, "$1").replace(b, "0.$1")), e != a)) return new BigNumber(a, i);
                        if (BigNumber.DEBUG) throw Error(l + "Not a" + (n ? " base " + n : "") + " number: " + e);
                        t.s = null
                    }
                    t.c = t.e = null
                }, w.absoluteValue = w.abs = function () {
                    var t = new BigNumber(this);
                    return t.s < 0 && (t.s = 1), t
                }, w.comparedTo = function (t, e) {
                    return compare(this, new BigNumber(t, e))
                }, w.decimalPlaces = w.dp = function (t, e) {
                    var r, n, i, o = this;
                    if (null != t) return intCheck(t, 0, m), null == e ? e = x : intCheck(e, 0, 8), round(new BigNumber(o), t + o.e + 1, e);
                    if (!(r = o.c)) return null;
                    if (n = 14 * ((i = r.length - 1) - bitFloor(this.e / 14)), i = r[i])
                        for (; i % 10 == 0; i /= 10, n--);
                    return n < 0 && (n = 0), n
                }, w.dividedBy = w.div = function (t, r) {
                    return e(this, new BigNumber(t, r), A, x)
                }, w.dividedToIntegerBy = w.idiv = function (t, r) {
                    return e(this, new BigNumber(t, r), 0, 1)
                }, w.exponentiatedBy = w.pow = function (t, e) {
                    var r, n, i, o, a, s, h, d, p = this;
                    if ((t = new BigNumber(t)).c && !t.isInteger()) throw Error(l + "Exponent not an integer: " + valueOf(t));
                    if (null != e && (e = new BigNumber(e)), a = t.e > 14, !p.c || !p.c[0] || 1 == p.c[0] && !p.e && 1 == p.c.length || !t.c || !t.c[0]) return d = new BigNumber(Math.pow(+valueOf(p), a ? 2 - isOdd(t) : +valueOf(t))), e ? d.mod(e) : d;
                    if (s = t.s < 0, e) {
                        if (e.c ? !e.c[0] : !e.s) return new BigNumber(NaN);
                        (n = !s && p.isInteger() && e.isInteger()) && (p = p.mod(e))
                    } else {
                        if (t.e > 9 && (p.e > 0 || p.e < -1 || (0 == p.e ? p.c[0] > 1 || a && p.c[1] >= 24e7 : p.c[0] < 8e13 || a && p.c[0] <= 9999975e7))) return o = p.s < 0 && isOdd(t) ? -0 : 0, p.e > -1 && (o = 1 / o), new BigNumber(s ? 1 / o : o);
                        P && (o = u(P / 14 + 2))
                    }
                    for (a ? (r = new BigNumber(.5), s && (t.s = 1), h = isOdd(t)) : h = (i = Math.abs(+valueOf(t))) % 2, d = new BigNumber(M);;) {
                        if (h) {
                            if (!(d = d.times(p)).c) break;
                            o ? d.c.length > o && (d.c.length = o) : n && (d = d.mod(e))
                        }
                        if (i) {
                            if (0 === (i = c(i / 2))) break;
                            h = i % 2
                        } else if (round(t = t.times(r), t.e + 1, 1), t.e > 14) h = isOdd(t);
                        else {
                            if (0 === (i = +valueOf(t))) break;
                            h = i % 2
                        }
                        p = p.times(p), o ? p.c && p.c.length > o && (p.c.length = o) : n && (p = p.mod(e))
                    }
                    return n ? d : (s && (d = M.div(d)), e ? d.mod(e) : o ? round(d, P, x, void 0) : d)
                }, w.integerValue = function (t) {
                    var e = new BigNumber(this);
                    return null == t ? t = x : intCheck(t, 0, 8), round(e, e.e + 1, t)
                }, w.isEqualTo = w.eq = function (t, e) {
                    return 0 === compare(this, new BigNumber(t, e))
                }, w.isFinite = function () {
                    return !!this.c
                }, w.isGreaterThan = w.gt = function (t, e) {
                    return compare(this, new BigNumber(t, e)) > 0
                }, w.isGreaterThanOrEqualTo = w.gte = function (t, e) {
                    return 1 === (e = compare(this, new BigNumber(t, e))) || 0 === e
                }, w.isInteger = function () {
                    return !!this.c && bitFloor(this.e / 14) > this.c.length - 2
                }, w.isLessThan = w.lt = function (t, e) {
                    return compare(this, new BigNumber(t, e)) < 0
                }, w.isLessThanOrEqualTo = w.lte = function (t, e) {
                    return -1 === (e = compare(this, new BigNumber(t, e))) || 0 === e
                }, w.isNaN = function () {
                    return !this.s
                }, w.isNegative = function () {
                    return this.s < 0
                }, w.isPositive = function () {
                    return this.s > 0
                }, w.isZero = function () {
                    return !!this.c && 0 == this.c[0]
                }, w.minus = function (t, e) {
                    var r, n, i, o, a = this,
                        s = a.s;
                    if (e = (t = new BigNumber(t, e)).s, !s || !e) return new BigNumber(NaN);
                    if (s != e) return t.s = -e, a.plus(t);
                    var u = a.e / 14,
                        c = t.e / 14,
                        l = a.c,
                        h = t.c;
                    if (!u || !c) {
                        if (!l || !h) return l ? (t.s = -e, t) : new BigNumber(h ? a : NaN);
                        if (!l[0] || !h[0]) return h[0] ? (t.s = -e, t) : new BigNumber(l[0] ? a : 3 == x ? -0 : 0)
                    }
                    if (u = bitFloor(u), c = bitFloor(c), l = l.slice(), s = u - c) {
                        for ((o = s < 0) ? (s = -s, i = l) : (c = u, i = h), i.reverse(), e = s; e--; i.push(0));
                        i.reverse()
                    } else
                        for (n = (o = (s = l.length) < (e = h.length)) ? s : e, s = e = 0; e < n; e++)
                            if (l[e] != h[e]) {
                                o = l[e] < h[e];
                                break
                            } if (o && (i = l, l = h, h = i, t.s = -t.s), (e = (n = h.length) - (r = l.length)) > 0)
                        for (; e--; l[r++] = 0);
                    for (e = d - 1; n > s;) {
                        if (l[--n] < h[n]) {
                            for (r = n; r && !l[--r]; l[r] = e);
                            --l[r], l[n] += d
                        }
                        l[n] -= h[n]
                    }
                    for (; 0 == l[0]; l.splice(0, 1), --c);
                    return l[0] ? normalise(t, l, c) : (t.s = 3 == x ? -1 : 1, t.c = [t.e = 0], t)
                }, w.modulo = w.mod = function (t, r) {
                    var n, i, o = this;
                    return t = new BigNumber(t, r), !o.c || !t.s || t.c && !t.c[0] ? new BigNumber(NaN) : !t.c || o.c && !o.c[0] ? new BigNumber(o) : (9 == C ? (i = t.s, t.s = 1, n = e(o, t, 0, 3), t.s = i, n.s *= i) : n = e(o, t, 0, C), (t = o.minus(n.times(t))).c[0] || 1 != C || (t.s = o.s), t)
                }, w.multipliedBy = w.times = function (t, e) {
                    var r, n, i, o, a, s, u, c, l, h, p, m, y, b, g = this,
                        v = g.c,
                        w = (t = new BigNumber(t, e)).c;
                    if (!(v && w && v[0] && w[0])) return !g.s || !t.s || v && !v[0] && !w || w && !w[0] && !v ? t.c = t.e = t.s = null : (t.s *= g.s, v && w ? (t.c = [0], t.e = 0) : t.c = t.e = null), t;
                    for (n = bitFloor(g.e / 14) + bitFloor(t.e / 14), t.s *= g.s, (u = v.length) < (h = w.length) && (y = v, v = w, w = y, i = u, u = h, h = i), i = u + h, y = []; i--; y.push(0));
                    for (b = d, 1e7, i = h; --i >= 0;) {
                        for (r = 0, p = w[i] % 1e7, m = w[i] / 1e7 | 0, o = i + (a = u); o > i;) r = ((c = p * (c = v[--a] % 1e7) + (s = m * c + (l = v[a] / 1e7 | 0) * p) % 1e7 * 1e7 + y[o] + r) / b | 0) + (s / 1e7 | 0) + m * l, y[o--] = c % b;
                        y[o] = r
                    }
                    return r ? ++n : y.splice(0, 1), normalise(t, y, n)
                }, w.negated = function () {
                    var t = new BigNumber(this);
                    return t.s = -t.s || null, t
                }, w.plus = function (t, e) {
                    var r, n = this,
                        i = n.s;
                    if (e = (t = new BigNumber(t, e)).s, !i || !e) return new BigNumber(NaN);
                    if (i != e) return t.s = -e, n.minus(t);
                    var o = n.e / 14,
                        a = t.e / 14,
                        s = n.c,
                        u = t.c;
                    if (!o || !a) {
                        if (!s || !u) return new BigNumber(i / 0);
                        if (!s[0] || !u[0]) return u[0] ? t : new BigNumber(s[0] ? n : 0 * i)
                    }
                    if (o = bitFloor(o), a = bitFloor(a), s = s.slice(), i = o - a) {
                        for (i > 0 ? (a = o, r = u) : (i = -i, r = s), r.reverse(); i--; r.push(0));
                        r.reverse()
                    }
                    for ((i = s.length) - (e = u.length) < 0 && (r = u, u = s, s = r, e = i), i = 0; e;) i = (s[--e] = s[e] + u[e] + i) / d | 0, s[e] = d === s[e] ? 0 : s[e] % d;
                    return i && (s = [i].concat(s), ++a), normalise(t, s, a)
                }, w.precision = w.sd = function (t, e) {
                    var r, n, i, o = this;
                    if (null != t && t !== !!t) return intCheck(t, 1, m), null == e ? e = x : intCheck(e, 0, 8), round(new BigNumber(o), t, e);
                    if (!(r = o.c)) return null;
                    if (n = 14 * (i = r.length - 1) + 1, i = r[i]) {
                        for (; i % 10 == 0; i /= 10, n--);
                        for (i = r[0]; i >= 10; i /= 10, n++);
                    }
                    return t && o.e + 1 > n && (n = o.e + 1), n
                }, w.shiftedBy = function (t) {
                    return intCheck(t, -9007199254740991, 9007199254740991), this.times("1e" + t)
                }, w.squareRoot = w.sqrt = function () {
                    var t, r, n, i, o, a = this,
                        s = a.c,
                        u = a.s,
                        c = a.e,
                        l = A + 4,
                        h = new BigNumber("0.5");
                    if (1 !== u || !s || !s[0]) return new BigNumber(!u || u < 0 && (!s || s[0]) ? NaN : s ? a : 1 / 0);
                    if (0 == (u = Math.sqrt(+valueOf(a))) || u == 1 / 0 ? (((r = coeffToString(s)).length + c) % 2 == 0 && (r += "0"), u = Math.sqrt(+r), c = bitFloor((c + 1) / 2) - (c < 0 || c % 2), n = new BigNumber(r = u == 1 / 0 ? "1e" + c : (r = u.toExponential()).slice(0, r.indexOf("e") + 1) + c)) : n = new BigNumber(u + ""), n.c[0])
                        for ((u = (c = n.e) + l) < 3 && (u = 0);;)
                            if (o = n, n = h.times(o.plus(e(a, o, l, 1))), coeffToString(o.c).slice(0, u) === (r = coeffToString(n.c)).slice(0, u)) {
                                if (n.e < c && --u, "9999" != (r = r.slice(u - 3, u + 1)) && (i || "4999" != r)) {
                                    +r && (+r.slice(1) || "5" != r.charAt(0)) || (round(n, n.e + A + 2, 1), t = !n.times(n).eq(a));
                                    break
                                }
                                if (!i && (round(o, o.e + A + 2, 0), o.times(o).eq(a))) {
                                    n = o;
                                    break
                                }
                                l += 4, u += 4, i = 1
                            } return round(n, n.e + A + 1, x, t)
                }, w.toExponential = function (t, e) {
                    return null != t && (intCheck(t, 0, m), t++), format(this, t, e, 1)
                }, w.toFixed = function (t, e) {
                    return null != t && (intCheck(t, 0, m), t = t + this.e + 1), format(this, t, e)
                }, w.toFormat = function (t, e, r) {
                    var n, i = this;
                    if (null == r) null != t && e && "object" == typeof e ? (r = e, e = null) : t && "object" == typeof t ? (r = t, t = e = null) : r = I;
                    else if ("object" != typeof r) throw Error(l + "Argument not an object: " + r);
                    if (n = i.toFixed(t, e), i.c) {
                        var o, a = n.split("."),
                            s = +r.groupSize,
                            u = +r.secondaryGroupSize,
                            c = r.groupSeparator || "",
                            h = a[0],
                            d = a[1],
                            p = i.s < 0,
                            m = p ? h.slice(1) : h,
                            y = m.length;
                        if (u && (o = s, s = u, u = o, y -= o), s > 0 && y > 0) {
                            for (o = y % s || s, h = m.substr(0, o); o < y; o += s) h += c + m.substr(o, s);
                            u > 0 && (h += c + m.slice(o)), p && (h = "-" + h)
                        }
                        n = d ? h + (r.decimalSeparator || "") + ((u = +r.fractionGroupSize) ? d.replace(new RegExp("\\d{" + u + "}\\B", "g"), "$&" + (r.fractionGroupSeparator || "")) : d) : h
                    }
                    return (r.prefix || "") + n + (r.suffix || "")
                }, w.toFraction = function (t) {
                    var r, n, i, o, a, s, u, c, h, d, m, y, b = this,
                        g = b.c;
                    if (null != t && (!(u = new BigNumber(t)).isInteger() && (u.c || 1 !== u.s) || u.lt(M))) throw Error(l + "Argument " + (u.isInteger() ? "out of range: " : "not an integer: ") + valueOf(u));
                    if (!g) return new BigNumber(b);
                    for (r = new BigNumber(M), h = n = new BigNumber(M), i = c = new BigNumber(M), y = coeffToString(g), a = r.e = y.length - b.e - 1, r.c[0] = p[(s = a % 14) < 0 ? 14 + s : s], t = !t || u.comparedTo(r) > 0 ? a > 0 ? r : h : u, s = N, N = 1 / 0, u = new BigNumber(y), c.c[0] = 0; d = e(u, r, 0, 1), 1 != (o = n.plus(d.times(i))).comparedTo(t);) n = i, i = o, h = c.plus(d.times(o = h)), c = o, r = u.minus(d.times(o = r)), u = o;
                    return o = e(t.minus(n), i, 0, 1), c = c.plus(o.times(h)), n = n.plus(o.times(i)), c.s = h.s = b.s, m = e(h, i, a *= 2, x).minus(b).abs().comparedTo(e(c, n, a, x).minus(b).abs()) < 1 ? [h, i] : [c, n], N = s, m
                }, w.toNumber = function () {
                    return +valueOf(this)
                }, w.toPrecision = function (t, e) {
                    return null != t && intCheck(t, 1, m), format(this, t, e, 2)
                }, w.toString = function (t) {
                    var e, n = this,
                        i = n.s,
                        o = n.e;
                    return null === o ? i ? (e = "Infinity", i < 0 && (e = "-" + e)) : e = "NaN" : (null == t ? e = o <= B || o >= E ? toExponential(coeffToString(n.c), o) : toFixedPoint(coeffToString(n.c), o, "0") : 10 === t ? e = toFixedPoint(coeffToString((n = round(new BigNumber(n), A + o + 1, x)).c), n.e, "0") : (intCheck(t, 2, O.length, "Base"), e = r(toFixedPoint(coeffToString(n.c), o, "0"), 10, t, i, !0)), i < 0 && n.c[0] && (e = "-" + e)), e
                }, w.valueOf = w.toJSON = function () {
                    return valueOf(this)
                }, w._isBigNumber = !0, s && (w[Symbol.toStringTag] = "BigNumber", w[Symbol.for("nodejs.util.inspect.custom")] = w.valueOf), null != t && BigNumber.set(t), BigNumber
            }()).default = o.BigNumber = o, void 0 === (n = function () {
                return o
            }.call(e, r, e, t)) || (t.exports = n)
        }()
    }, function (t, e, r) {
        (function (t) {
            var n, i = this && this.__extends || (n = function (t, e) {
                    return (n = Object.setPrototypeOf || {
                            __proto__: []
                        }
                        instanceof Array && function (t, e) {
                            t.__proto__ = e
                        } || function (t, e) {
                            for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r])
                        })(t, e)
                }, function (t, e) {
                    function __() {
                        this.constructor = t
                    }
                    n(t, e), t.prototype = null === e ? Object.create(e) : (__.prototype = e.prototype, new __)
                }),
                o = this && this.__assign || function () {
                    return (o = Object.assign || function (t) {
                        for (var e, r = 1, n = arguments.length; r < n; r++)
                            for (var i in e = arguments[r]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                        return t
                    }).apply(this, arguments)
                },
                a = this && this.__values || function (t) {
                    var e = "function" == typeof Symbol && Symbol.iterator,
                        r = e && t[e],
                        n = 0;
                    if (r) return r.call(t);
                    if (t && "number" == typeof t.length) return {
                        next: function () {
                            return t && n >= t.length && (t = void 0), {
                                value: t && t[n++],
                                done: !t
                            }
                        }
                    };
                    throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.")
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.Hardfork = e.Chain = e.CustomChain = void 0;
            var s, u, c = r(119),
                l = r(610),
                h = r(611),
                d = r(656),
                p = r(663),
                m = r(676);
            ! function (t) {
                t.PolygonMainnet = "polygon-mainnet", t.PolygonMumbai = "polygon-mumbai", t.ArbitrumRinkebyTestnet = "arbitrum-rinkeby-testnet", t.xDaiChain = "x-dai-chain"
            }(s = e.CustomChain || (e.CustomChain = {})),
            function (t) {
                t[t.Mainnet = 1] = "Mainnet", t[t.Ropsten = 3] = "Ropsten", t[t.Rinkeby = 4] = "Rinkeby", t[t.Kovan = 42] = "Kovan", t[t.Goerli = 5] = "Goerli", t[t.Calaveras = 123] = "Calaveras"
            }(e.Chain || (e.Chain = {})),
            function (t) {
                t.Chainstart = "chainstart", t.Homestead = "homestead", t.Dao = "dao", t.TangerineWhistle = "tangerineWhistle", t.SpuriousDragon = "spuriousDragon", t.Byzantium = "byzantium", t.Constantinople = "constantinople", t.Petersburg = "petersburg", t.Istanbul = "istanbul", t.MuirGlacier = "muirGlacier", t.Berlin = "berlin", t.London = "london"
            }(u = e.Hardfork || (e.Hardfork = {}));
            var y = function (e) {
                function Common(t) {
                    var r, n, i = e.call(this) || this;
                    return i._supportedHardforks = [], i._eips = [], i._customChains = null !== (r = t.customChains) && void 0 !== r ? r : [], i._chainParams = i.setChain(t.chain), i.DEFAULT_HARDFORK = null !== (n = i._chainParams.defaultHardfork) && void 0 !== n ? n : u.Istanbul, i._hardfork = i.DEFAULT_HARDFORK, t.supportedHardforks && (i._supportedHardforks = t.supportedHardforks), t.hardfork && i.setHardfork(t.hardfork), t.eips && i.setEIPs(t.eips), i
                }
                return i(Common, e), Common.custom = function (t, e) {
                    var r;
                    void 0 === e && (e = {});
                    var n = null !== (r = e.baseChain) && void 0 !== r ? r : "mainnet",
                        i = o({}, Common._getChainParams(n));
                    if (i.name = "custom-chain", "string" != typeof t) return new Common(o({
                        chain: o(o({}, i), t)
                    }, e));
                    if (t === s.PolygonMainnet) return Common.custom({
                        name: s.PolygonMainnet,
                        chainId: 137,
                        networkId: 137
                    });
                    if (t === s.PolygonMumbai) return Common.custom({
                        name: s.PolygonMumbai,
                        chainId: 80001,
                        networkId: 80001
                    });
                    if (t === s.ArbitrumRinkebyTestnet) return Common.custom({
                        name: s.ArbitrumRinkebyTestnet,
                        chainId: 421611,
                        networkId: 421611
                    });
                    if (t === s.xDaiChain) return Common.custom({
                        name: s.xDaiChain,
                        chainId: 100,
                        networkId: 100
                    });
                    throw new Error("Custom chain " + t + " not supported")
                }, Common.forCustomChain = function (t, e, r, n) {
                    var i = Common._getChainParams(t);
                    return new Common({
                        chain: o(o({}, i), e),
                        hardfork: r,
                        supportedHardforks: n
                    })
                }, Common.isSupportedChainId = function (t) {
                    var e = d._getInitializedChains();
                    return Boolean(e.names[t.toString()])
                }, Common._getChainParams = function (t, e) {
                    var r = d._getInitializedChains(e);
                    if ("number" == typeof t || h.BN.isBN(t)) {
                        if (t = t.toString(), r.names[t]) return r[r.names[t]];
                        throw new Error("Chain with ID " + t + " not supported")
                    }
                    if (r[t]) return r[t];
                    throw new Error("Chain with name " + t + " not supported")
                }, Common.prototype.setChain = function (t) {
                    var e, r;
                    if ("number" == typeof t || "string" == typeof t || h.BN.isBN(t)) this._chainParams = Common._getChainParams(t, this._customChains);
                    else {
                        if ("object" != typeof t) throw new Error("Wrong input format");
                        if (this._customChains.length > 0) throw new Error("Chain must be a string, number, or BN when initialized with customChains passed in");
                        try {
                            for (var n = a(["networkId", "genesis", "hardforks", "bootstrapNodes"]), i = n.next(); !i.done; i = n.next()) {
                                var o = i.value;
                                if (void 0 === t[o]) throw new Error("Missing required chain parameter: " + o)
                            }
                        } catch (t) {
                            e = {
                                error: t
                            }
                        } finally {
                            try {
                                i && !i.done && (r = n.return) && r.call(n)
                            } finally {
                                if (e) throw e.error
                            }
                        }
                        this._chainParams = t
                    }
                    return this._chainParams
                }, Common.prototype.setHardfork = function (t) {
                    var e, r;
                    if (!this._isSupportedHardfork(t)) throw new Error("Hardfork " + t + " not set as supported in supportedHardforks");
                    var n = !1;
                    try {
                        for (var i = a(p.hardforks), o = i.next(); !o.done; o = i.next()) {
                            o.value[0] === t && (this._hardfork !== t && (this._hardfork = t, this.emit("hardforkChanged", t)), n = !0)
                        }
                    } catch (t) {
                        e = {
                            error: t
                        }
                    } finally {
                        try {
                            o && !o.done && (r = i.return) && r.call(i)
                        } finally {
                            if (e) throw e.error
                        }
                    }
                    if (!n) throw new Error("Hardfork with name " + t + " not supported")
                }, Common.prototype.getHardforkByBlockNumber = function (t) {
                    var e, r;
                    t = h.toType(t, h.TypeOutput.BN);
                    var n = u.Chainstart;
                    try {
                        for (var i = a(this.hardforks()), o = i.next(); !o.done; o = i.next()) {
                            var s = o.value;
                            null !== s.block && (t.gte(new h.BN(s.block)) && (n = s.name))
                        }
                    } catch (t) {
                        e = {
                            error: t
                        }
                    } finally {
                        try {
                            o && !o.done && (r = i.return) && r.call(i)
                        } finally {
                            if (e) throw e.error
                        }
                    }
                    return n
                }, Common.prototype.setHardforkByBlockNumber = function (t) {
                    t = h.toType(t, h.TypeOutput.BN);
                    var e = this.getHardforkByBlockNumber(t);
                    return this.setHardfork(e), e
                }, Common.prototype._chooseHardfork = function (t, e) {
                    if (void 0 === e && (e = !0), t) {
                        if (e && !this._isSupportedHardfork(t)) throw new Error("Hardfork " + t + " not set as supported in supportedHardforks")
                    } else t = this._hardfork;
                    return t
                }, Common.prototype._getHardfork = function (t) {
                    var e, r, n = this.hardforks();
                    try {
                        for (var i = a(n), o = i.next(); !o.done; o = i.next()) {
                            var s = o.value;
                            if (s.name === t) return s
                        }
                    } catch (t) {
                        e = {
                            error: t
                        }
                    } finally {
                        try {
                            o && !o.done && (r = i.return) && r.call(i)
                        } finally {
                            if (e) throw e.error
                        }
                    }
                    throw new Error("Hardfork " + t + " not defined for chain " + this.chainName())
                }, Common.prototype._isSupportedHardfork = function (t) {
                    var e, r;
                    if (!(this._supportedHardforks.length > 0)) return !0;
                    try {
                        for (var n = a(this._supportedHardforks), i = n.next(); !i.done; i = n.next()) {
                            if (t === i.value) return !0
                        }
                    } catch (t) {
                        e = {
                            error: t
                        }
                    } finally {
                        try {
                            i && !i.done && (r = n.return) && r.call(n)
                        } finally {
                            if (e) throw e.error
                        }
                    }
                    return !1
                }, Common.prototype.setEIPs = function (t) {
                    var e, r, n = this;
                    void 0 === t && (t = []);
                    var _loop_1 = function (e) {
                            if (!(e in m.EIPs)) throw new Error(e + " not supported");
                            var r = i.gteHardfork(m.EIPs[e].minimumHardfork);
                            if (!r) throw new Error(e + " cannot be activated on hardfork " + i.hardfork() + ", minimumHardfork: " + r);
                            m.EIPs[e].requiredEIPs && m.EIPs[e].requiredEIPs.forEach((function (r) {
                                if (!t.includes(r) && !n.isActivatedEIP(r)) throw new Error(e + " requires EIP " + r + ", but is not included in the EIP list")
                            }))
                        },
                        i = this;
                    try {
                        for (var o = a(t), s = o.next(); !s.done; s = o.next()) {
                            _loop_1(s.value)
                        }
                    } catch (t) {
                        e = {
                            error: t
                        }
                    } finally {
                        try {
                            s && !s.done && (r = o.return) && r.call(o)
                        } finally {
                            if (e) throw e.error
                        }
                    }
                    this._eips = t
                }, Common.prototype.param = function (t, e) {
                    var r, n, i = null;
                    try {
                        for (var o = a(this._eips), s = o.next(); !s.done; s = o.next()) {
                            var u = s.value;
                            if (null !== (i = this.paramByEIP(t, e, u))) return i
                        }
                    } catch (t) {
                        r = {
                            error: t
                        }
                    } finally {
                        try {
                            s && !s.done && (n = o.return) && n.call(o)
                        } finally {
                            if (r) throw r.error
                        }
                    }
                    return this.paramByHardfork(t, e, this._hardfork)
                }, Common.prototype.paramByHardfork = function (t, e, r) {
                    var n, i, o, s;
                    r = this._chooseHardfork(r);
                    var u = null;
                    try {
                        for (var c = a(p.hardforks), l = c.next(); !l.done; l = c.next()) {
                            var h = l.value;
                            if (h[1].hasOwnProperty("eips")) {
                                var d = h[1].eips;
                                try {
                                    for (var m = (o = void 0, a(d)), y = m.next(); !y.done; y = m.next()) {
                                        var b = y.value,
                                            g = this.paramByEIP(t, e, b);
                                        u = null !== g ? g : u
                                    }
                                } catch (t) {
                                    o = {
                                        error: t
                                    }
                                } finally {
                                    try {
                                        y && !y.done && (s = m.return) && s.call(m)
                                    } finally {
                                        if (o) throw o.error
                                    }
                                }
                            } else {
                                if (!h[1][t]) throw new Error("Topic " + t + " not defined");
                                void 0 !== h[1][t][e] && (u = h[1][t][e].v)
                            }
                            if (h[0] === r) break
                        }
                    } catch (t) {
                        n = {
                            error: t
                        }
                    } finally {
                        try {
                            l && !l.done && (i = c.return) && i.call(c)
                        } finally {
                            if (n) throw n.error
                        }
                    }
                    return u
                }, Common.prototype.paramByEIP = function (t, e, r) {
                    if (!(r in m.EIPs)) throw new Error(r + " not supported");
                    var n = m.EIPs[r];
                    if (!(t in n)) throw new Error("Topic " + t + " not defined");
                    return void 0 === n[t][e] ? null : n[t][e].v
                }, Common.prototype.paramByBlock = function (t, e, r) {
                    var n = this.activeHardforks(r),
                        i = n[n.length - 1].name;
                    return this.paramByHardfork(t, e, i)
                }, Common.prototype.isActivatedEIP = function (t) {
                    var e, r;
                    if (this.eips().includes(t)) return !0;
                    try {
                        for (var n = a(p.hardforks), i = n.next(); !i.done; i = n.next()) {
                            var o = i.value[1];
                            if (this.gteHardfork(o.name) && "eips" in o && o.eips.includes(t)) return !0
                        }
                    } catch (t) {
                        e = {
                            error: t
                        }
                    } finally {
                        try {
                            i && !i.done && (r = n.return) && r.call(n)
                        } finally {
                            if (e) throw e.error
                        }
                    }
                    return !1
                }, Common.prototype.hardforkIsActiveOnBlock = function (t, e, r) {
                    var n;
                    void 0 === r && (r = {}), e = h.toType(e, h.TypeOutput.BN);
                    var i = null !== (n = r.onlySupported) && void 0 !== n && n;
                    t = this._chooseHardfork(t, i);
                    var o = this.hardforkBlockBN(t);
                    return !(!o || !e.gte(o))
                }, Common.prototype.activeOnBlock = function (t, e) {
                    return this.hardforkIsActiveOnBlock(null, t, e)
                }, Common.prototype.hardforkGteHardfork = function (t, e, r) {
                    var n, i;
                    void 0 === r && (r = {});
                    var o, s = void 0 !== r.onlyActive && r.onlyActive;
                    t = this._chooseHardfork(t, r.onlySupported), o = s ? this.activeHardforks(null, r) : this.hardforks();
                    var u = -1,
                        c = -1,
                        l = 0;
                    try {
                        for (var h = a(o), d = h.next(); !d.done; d = h.next()) {
                            var p = d.value;
                            p.name === t && (u = l), p.name === e && (c = l), l += 1
                        }
                    } catch (t) {
                        n = {
                            error: t
                        }
                    } finally {
                        try {
                            d && !d.done && (i = h.return) && i.call(h)
                        } finally {
                            if (n) throw n.error
                        }
                    }
                    return u >= c && -1 !== c
                }, Common.prototype.gteHardfork = function (t, e) {
                    return this.hardforkGteHardfork(null, t, e)
                }, Common.prototype.hardforkIsActiveOnChain = function (t, e) {
                    var r, n, i;
                    void 0 === e && (e = {});
                    var o = null !== (i = e.onlySupported) && void 0 !== i && i;
                    t = this._chooseHardfork(t, o);
                    try {
                        for (var s = a(this.hardforks()), u = s.next(); !u.done; u = s.next()) {
                            var c = u.value;
                            if (c.name === t && null !== c.block) return !0
                        }
                    } catch (t) {
                        r = {
                            error: t
                        }
                    } finally {
                        try {
                            u && !u.done && (n = s.return) && n.call(s)
                        } finally {
                            if (r) throw r.error
                        }
                    }
                    return !1
                }, Common.prototype.activeHardforks = function (t, e) {
                    var r, n;
                    void 0 === e && (e = {});
                    var i = [],
                        o = this.hardforks();
                    try {
                        for (var s = a(o), u = s.next(); !u.done; u = s.next()) {
                            var c = u.value;
                            if (null !== c.block) {
                                if (null != t && t < c.block) break;
                                e.onlySupported && !this._isSupportedHardfork(c.name) || i.push(c)
                            }
                        }
                    } catch (t) {
                        r = {
                            error: t
                        }
                    } finally {
                        try {
                            u && !u.done && (n = s.return) && n.call(s)
                        } finally {
                            if (r) throw r.error
                        }
                    }
                    return i
                }, Common.prototype.activeHardfork = function (t, e) {
                    void 0 === e && (e = {});
                    var r = this.activeHardforks(t, e);
                    if (r.length > 0) return r[r.length - 1].name;
                    throw new Error("No (supported) active hardfork found")
                }, Common.prototype.hardforkBlock = function (t) {
                    return h.toType(this.hardforkBlockBN(t), h.TypeOutput.Number)
                }, Common.prototype.hardforkBlockBN = function (t) {
                    return t = this._chooseHardfork(t, !1), new h.BN(this._getHardfork(t).block)
                }, Common.prototype.isHardforkBlock = function (t, e) {
                    return t = h.toType(t, h.TypeOutput.BN), e = this._chooseHardfork(e, !1), this.hardforkBlockBN(e).eq(t)
                }, Common.prototype.nextHardforkBlock = function (t) {
                    var e = this.nextHardforkBlockBN(t);
                    return null === e ? null : h.toType(e, h.TypeOutput.Number)
                }, Common.prototype.nextHardforkBlockBN = function (t) {
                    t = this._chooseHardfork(t, !1);
                    var e = this.hardforkBlockBN(t);
                    return this.hardforks().reduce((function (t, r) {
                        var n = new h.BN(r.block);
                        return n.gt(e) && null === t ? n : t
                    }), null)
                }, Common.prototype.isNextHardforkBlock = function (t, e) {
                    t = h.toType(t, h.TypeOutput.BN), e = this._chooseHardfork(e, !1);
                    var r = this.nextHardforkBlockBN(e);
                    return null !== r && r.eq(t)
                }, Common.prototype._calcForkHash = function (e) {
                    var r, n, i = t.from(this.genesis().hash.substr(2), "hex"),
                        o = t.alloc(0),
                        s = 0;
                    try {
                        for (var u = a(this.hardforks()), c = u.next(); !c.done; c = u.next()) {
                            var d = c.value,
                                p = d.block;
                            if (0 !== p && null !== p && p !== s) {
                                var m = t.from(p.toString(16).padStart(16, "0"), "hex");
                                o = t.concat([o, m])
                            }
                            if (d.name === e) break;
                            s = p
                        }
                    } catch (t) {
                        r = {
                            error: t
                        }
                    } finally {
                        try {
                            c && !c.done && (n = u.return) && n.call(u)
                        } finally {
                            if (r) throw r.error
                        }
                    }
                    var y = t.concat([i, o]);
                    return "0x" + h.intToBuffer(l.buf(y) >>> 0).toString("hex")
                }, Common.prototype.forkHash = function (t) {
                    t = this._chooseHardfork(t, !1);
                    var e = this._getHardfork(t);
                    if (null === e.block) {
                        throw new Error("No fork hash calculation possible for non-applied or future hardfork")
                    }
                    return void 0 !== e.forkHash ? e.forkHash : this._calcForkHash(t)
                }, Common.prototype.hardforkForForkHash = function (t) {
                    var e = this.hardforks().filter((function (e) {
                        return e.forkHash === t
                    }));
                    return e.length >= 1 ? e[e.length - 1] : null
                }, Common.prototype.genesis = function () {
                    return this._chainParams.genesis
                }, Common.prototype.hardforks = function () {
                    return this._chainParams.hardforks
                }, Common.prototype.bootstrapNodes = function () {
                    return this._chainParams.bootstrapNodes
                }, Common.prototype.dnsNetworks = function () {
                    return this._chainParams.dnsNetworks
                }, Common.prototype.hardfork = function () {
                    return this._hardfork
                }, Common.prototype.chainId = function () {
                    return h.toType(this.chainIdBN(), h.TypeOutput.Number)
                }, Common.prototype.chainIdBN = function () {
                    return new h.BN(this._chainParams.chainId)
                }, Common.prototype.chainName = function () {
                    return this._chainParams.name
                }, Common.prototype.networkId = function () {
                    return h.toType(this.networkIdBN(), h.TypeOutput.Number)
                }, Common.prototype.networkIdBN = function () {
                    return new h.BN(this._chainParams.networkId)
                }, Common.prototype.eips = function () {
                    return this._eips
                }, Common.prototype.consensusType = function () {
                    return this._chainParams.consensus.type
                }, Common.prototype.consensusAlgorithm = function () {
                    return this._chainParams.consensus.algorithm
                }, Common.prototype.consensusConfig = function () {
                    return this._chainParams.consensus[this.consensusAlgorithm()]
                }, Common.prototype.copy = function () {
                    return Object.assign(Object.create(Object.getPrototypeOf(this)), this)
                }, Common
            }(c.EventEmitter);
            e.default = y
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = r(3).Buffer,
            i = r(91).Transform,
            o = r(178).StringDecoder;

        function CipherBase(t) {
            i.call(this), this.hashMode = "string" == typeof t, this.hashMode ? this[t] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null
        }
        r(1)(CipherBase, i), CipherBase.prototype.update = function (t, e, r) {
            "string" == typeof t && (t = n.from(t, e));
            var i = this._update(t);
            return this.hashMode ? this : (r && (i = this._toString(i, r)), i)
        }, CipherBase.prototype.setAutoPadding = function () {}, CipherBase.prototype.getAuthTag = function () {
            throw new Error("trying to get auth tag in unsupported state")
        }, CipherBase.prototype.setAuthTag = function () {
            throw new Error("trying to set auth tag in unsupported state")
        }, CipherBase.prototype.setAAD = function () {
            throw new Error("trying to set aad in unsupported state")
        }, CipherBase.prototype._transform = function (t, e, r) {
            var n;
            try {
                this.hashMode ? this._update(t) : this.push(this._update(t))
            } catch (t) {
                n = t
            } finally {
                r(n)
            }
        }, CipherBase.prototype._flush = function (t) {
            var e;
            try {
                this.push(this.__final())
            } catch (t) {
                e = t
            }
            t(e)
        }, CipherBase.prototype._finalOrDigest = function (t) {
            var e = this.__final() || n.alloc(0);
            return t && (e = this._toString(e, t, !0)), e
        }, CipherBase.prototype._toString = function (t, e, r) {
            if (this._decoder || (this._decoder = new o(e), this._encoding = e), this._encoding !== e) throw new Error("can't switch encodings");
            var n = this._decoder.write(t);
            return r && (n += this._decoder.end()), n
        }, t.exports = CipherBase
    }, function (t, e, r) {
        var n = r(65),
            i = r(291),
            o = r(719),
            a = r(15),
            s = r(127),
            _flattenTypes = function (t, e) {
                var r = [];
                return e.forEach((function (e) {
                    if ("object" == typeof e.components) {
                        if ("tuple" !== e.type.substring(0, 5)) throw new Error("components found but type is not tuple; report on GitHub");
                        var n = "",
                            i = e.type.indexOf("[");
                        i >= 0 && (n = e.type.substring(i));
                        var o = _flattenTypes(t, e.components);
                        Array.isArray(o) && t ? r.push("tuple(" + o.join(",") + ")" + n) : t ? r.push("(" + o + ")") : r.push("(" + o.join(",") + ")" + n)
                    } else r.push(e.type)
                })), r
            },
            hexToAscii = function (t) {
                if (!i.isHexStrict(t)) throw new Error("The parameter must be a valid HEX string.");
                var e = "",
                    r = 0,
                    n = t.length;
                for ("0x" === t.substring(0, 2) && (r = 2); r < n; r += 2) {
                    var o = parseInt(t.substr(r, 2), 16);
                    e += String.fromCharCode(o)
                }
                return e
            },
            asciiToHex = function (t) {
                if (!t) return "0x00";
                for (var e = "", r = 0; r < t.length; r++) {
                    var n = t.charCodeAt(r).toString(16);
                    e += n.length < 2 ? "0" + n : n
                }
                return "0x" + e
            },
            getUnitValue = function (t) {
                if (t = t ? t.toLowerCase() : "ether", !n.unitMap[t]) throw new Error('This unit "' + t + "\" doesn't exist, please use the one of the following units" + JSON.stringify(n.unitMap, null, 2));
                return t
            };
        t.exports = {
            _fireError: function (t, e, r, n, i) {
                return !t || "object" != typeof t || t instanceof Error || !t.data || ((t.data && "object" == typeof t.data || Array.isArray(t.data)) && (t.data = JSON.stringify(t.data, null, 2)), t = t.message + "\n" + t.data), "string" == typeof t && (t = new Error(t)), "function" == typeof n && n(t, i), "function" == typeof r && ((e && "function" == typeof e.listeners && e.listeners("error").length || "function" == typeof n) && e.catch((function () {})), setTimeout((function () {
                    r(t)
                }), 1)), e && "function" == typeof e.emit && setTimeout((function () {
                    e.emit("error", t, i), e.removeAllListeners()
                }), 1), e
            },
            _jsonInterfaceMethodToString: function (t) {
                return t && "object" == typeof t && t.name && -1 !== t.name.indexOf("(") ? t.name : t.name + "(" + _flattenTypes(!1, t.inputs).join(",") + ")"
            },
            _flattenTypes: _flattenTypes,
            randomHex: function (t) {
                return "0x" + a(t).toString("hex")
            },
            BN: i.BN,
            isBN: i.isBN,
            isBigNumber: i.isBigNumber,
            isHex: i.isHex,
            isHexStrict: i.isHexStrict,
            sha3: i.sha3,
            sha3Raw: i.sha3Raw,
            keccak256: i.sha3,
            soliditySha3: o.soliditySha3,
            soliditySha3Raw: o.soliditySha3Raw,
            encodePacked: o.encodePacked,
            isAddress: i.isAddress,
            checkAddressChecksum: i.checkAddressChecksum,
            toChecksumAddress: function (t) {
                if (void 0 === t) return "";
                if (!/^(0x)?[0-9a-f]{40}$/i.test(t)) throw new Error('Given address "' + t + '" is not a valid Ethereum address.');
                t = t.toLowerCase().replace(/^0x/i, "");
                for (var e = i.sha3(t).replace(/^0x/i, ""), r = "0x", n = 0; n < t.length; n++) parseInt(e[n], 16) > 7 ? r += t[n].toUpperCase() : r += t[n];
                return r
            },
            toHex: i.toHex,
            toBN: i.toBN,
            bytesToHex: i.bytesToHex,
            hexToBytes: i.hexToBytes,
            hexToNumberString: i.hexToNumberString,
            hexToNumber: i.hexToNumber,
            toDecimal: i.hexToNumber,
            numberToHex: i.numberToHex,
            fromDecimal: i.numberToHex,
            hexToUtf8: i.hexToUtf8,
            hexToString: i.hexToUtf8,
            toUtf8: i.hexToUtf8,
            stripHexPrefix: i.stripHexPrefix,
            utf8ToHex: i.utf8ToHex,
            stringToHex: i.utf8ToHex,
            fromUtf8: i.utf8ToHex,
            hexToAscii: hexToAscii,
            toAscii: hexToAscii,
            asciiToHex: asciiToHex,
            fromAscii: asciiToHex,
            unitMap: n.unitMap,
            toWei: function (t, e) {
                if (e = getUnitValue(e), !i.isBN(t) && "string" != typeof t) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                return i.isBN(t) ? n.toWei(t, e) : n.toWei(t, e).toString(10)
            },
            fromWei: function (t, e) {
                if (e = getUnitValue(e), !i.isBN(t) && "string" != typeof t) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                return i.isBN(t) ? n.fromWei(t, e) : n.fromWei(t, e).toString(10)
            },
            padLeft: i.leftPad,
            leftPad: i.leftPad,
            padRight: i.rightPad,
            rightPad: i.rightPad,
            toTwosComplement: i.toTwosComplement,
            isBloom: i.isBloom,
            isUserEthereumAddressInBloom: i.isUserEthereumAddressInBloom,
            isContractAddressInBloom: i.isContractAddressInBloom,
            isTopic: i.isTopic,
            isTopicInBloom: i.isTopicInBloom,
            isInBloom: i.isInBloom,
            compareBlockNumbers: function (t, e) {
                if (t == e) return 0;
                if ("genesis" != t && "earliest" != t && 0 != t || "genesis" != e && "earliest" != e && 0 != e) {
                    if ("genesis" == t || "earliest" == t) return -1;
                    if ("genesis" == e || "earliest" == e) return 1;
                    if ("latest" == t) return "pending" == e ? -1 : 1;
                    if ("latest" === e) return "pending" == t ? 1 : -1;
                    if ("pending" == t) return 1;
                    if ("pending" == e) return -1; {
                        let r = new s(t),
                            n = new s(e);
                        return r.lt(n) ? -1 : r.eq(n) ? 0 : 1
                    }
                }
                return 0
            },
            toNumber: i.toNumber
        }
    }, function (t, e, r) {
        var n = r(360),
            i = r(365);
        t.exports = function getNative(t, e) {
            var r = i(t, e);
            return n(r) ? r : void 0
        }
    }, function (t, e, r) {
        var n = r(61);
        t.exports = function (t) {
            if (!n(t)) throw TypeError(t + " is not an object!");
            return t
        }
    }, function (t, e) {
        var r = {}.hasOwnProperty;
        t.exports = function (t, e) {
            return r.call(t, e)
        }
    }, function (t, e) {
        function _typeof(e) {
            return "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? t.exports = _typeof = function _typeof(t) {
                return typeof t
            } : t.exports = _typeof = function _typeof(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }, _typeof(e)
        }
        t.exports = _typeof
    }, function (t, e, r) {
        var n = r(65),
            i = r(261),
            o = r(575),
            a = r(15),
            s = r(117),
            _flattenTypes = function (t, e) {
                var r = [];
                return e.forEach((function (e) {
                    if ("object" == typeof e.components) {
                        if ("tuple" !== e.type.substring(0, 5)) throw new Error("components found but type is not tuple; report on GitHub");
                        var n = "",
                            i = e.type.indexOf("[");
                        i >= 0 && (n = e.type.substring(i));
                        var o = _flattenTypes(t, e.components);
                        Array.isArray(o) && t ? r.push("tuple(" + o.join(",") + ")" + n) : t ? r.push("(" + o + ")") : r.push("(" + o.join(",") + ")" + n)
                    } else r.push(e.type)
                })), r
            },
            hexToAscii = function (t) {
                if (!i.isHexStrict(t)) throw new Error("The parameter must be a valid HEX string.");
                var e = "",
                    r = 0,
                    n = t.length;
                for ("0x" === t.substring(0, 2) && (r = 2); r < n; r += 2) {
                    var o = parseInt(t.substr(r, 2), 16);
                    e += String.fromCharCode(o)
                }
                return e
            },
            asciiToHex = function (t) {
                if (!t) return "0x00";
                for (var e = "", r = 0; r < t.length; r++) {
                    var n = t.charCodeAt(r).toString(16);
                    e += n.length < 2 ? "0" + n : n
                }
                return "0x" + e
            },
            getUnitValue = function (t) {
                if (t = t ? t.toLowerCase() : "ether", !n.unitMap[t]) throw new Error('This unit "' + t + "\" doesn't exist, please use the one of the following units" + JSON.stringify(n.unitMap, null, 2));
                return t
            };
        t.exports = {
            _fireError: function (t, e, r, n, i) {
                return !t || "object" != typeof t || t instanceof Error || !t.data || ((t.data && "object" == typeof t.data || Array.isArray(t.data)) && (t.data = JSON.stringify(t.data, null, 2)), t = t.message + "\n" + t.data), "string" == typeof t && (t = new Error(t)), "function" == typeof n && n(t, i), "function" == typeof r && ((e && "function" == typeof e.listeners && e.listeners("error").length || "function" == typeof n) && e.catch((function () {})), setTimeout((function () {
                    r(t)
                }), 1)), e && "function" == typeof e.emit && setTimeout((function () {
                    e.emit("error", t, i), e.removeAllListeners()
                }), 1), e
            },
            _jsonInterfaceMethodToString: function (t) {
                return t && "object" == typeof t && t.name && -1 !== t.name.indexOf("(") ? t.name : t.name + "(" + _flattenTypes(!1, t.inputs).join(",") + ")"
            },
            _flattenTypes: _flattenTypes,
            randomHex: function (t) {
                return "0x" + a(t).toString("hex")
            },
            BN: i.BN,
            isBN: i.isBN,
            isBigNumber: i.isBigNumber,
            isHex: i.isHex,
            isHexStrict: i.isHexStrict,
            sha3: i.sha3,
            sha3Raw: i.sha3Raw,
            keccak256: i.sha3,
            soliditySha3: o.soliditySha3,
            soliditySha3Raw: o.soliditySha3Raw,
            encodePacked: o.encodePacked,
            isAddress: i.isAddress,
            checkAddressChecksum: i.checkAddressChecksum,
            toChecksumAddress: function (t) {
                if (void 0 === t) return "";
                if (!/^(0x)?[0-9a-f]{40}$/i.test(t)) throw new Error('Given address "' + t + '" is not a valid Ethereum address.');
                t = t.toLowerCase().replace(/^0x/i, "");
                for (var e = i.sha3(t).replace(/^0x/i, ""), r = "0x", n = 0; n < t.length; n++) parseInt(e[n], 16) > 7 ? r += t[n].toUpperCase() : r += t[n];
                return r
            },
            toHex: i.toHex,
            toBN: i.toBN,
            bytesToHex: i.bytesToHex,
            hexToBytes: i.hexToBytes,
            hexToNumberString: i.hexToNumberString,
            hexToNumber: i.hexToNumber,
            toDecimal: i.hexToNumber,
            numberToHex: i.numberToHex,
            fromDecimal: i.numberToHex,
            hexToUtf8: i.hexToUtf8,
            hexToString: i.hexToUtf8,
            toUtf8: i.hexToUtf8,
            stripHexPrefix: i.stripHexPrefix,
            utf8ToHex: i.utf8ToHex,
            stringToHex: i.utf8ToHex,
            fromUtf8: i.utf8ToHex,
            hexToAscii: hexToAscii,
            toAscii: hexToAscii,
            asciiToHex: asciiToHex,
            fromAscii: asciiToHex,
            unitMap: n.unitMap,
            toWei: function (t, e) {
                if (e = getUnitValue(e), !i.isBN(t) && "string" != typeof t) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                return i.isBN(t) ? n.toWei(t, e) : n.toWei(t, e).toString(10)
            },
            fromWei: function (t, e) {
                if (e = getUnitValue(e), !i.isBN(t) && "string" != typeof t) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                return i.isBN(t) ? n.fromWei(t, e) : n.fromWei(t, e).toString(10)
            },
            padLeft: i.leftPad,
            leftPad: i.leftPad,
            padRight: i.rightPad,
            rightPad: i.rightPad,
            toTwosComplement: i.toTwosComplement,
            isBloom: i.isBloom,
            isUserEthereumAddressInBloom: i.isUserEthereumAddressInBloom,
            isContractAddressInBloom: i.isContractAddressInBloom,
            isTopic: i.isTopic,
            isTopicInBloom: i.isTopicInBloom,
            isInBloom: i.isInBloom,
            compareBlockNumbers: function (t, e) {
                if (t == e) return 0;
                if ("genesis" != t && "earliest" != t && 0 != t || "genesis" != e && "earliest" != e && 0 != e) {
                    if ("genesis" == t || "earliest" == t) return -1;
                    if ("genesis" == e || "earliest" == e) return 1;
                    if ("latest" == t) return "pending" == e ? -1 : 1;
                    if ("latest" === e) return "pending" == t ? 1 : -1;
                    if ("pending" == t) return 1;
                    if ("pending" == e) return -1; {
                        let r = new s(t),
                            n = new s(e);
                        return r.lt(n) ? -1 : r.eq(n) ? 0 : 1
                    }
                }
                return 0
            },
            toNumber: i.toNumber
        }
    }, function (t, e, r) {
        var n = r(570),
            i = r(259);
        t.exports = function numberToBN(t) {
            if ("string" == typeof t || "number" == typeof t) {
                var e = new n(1),
                    r = String(t).toLowerCase().trim(),
                    o = "0x" === r.substr(0, 2) || "-0x" === r.substr(0, 3),
                    a = i(r);
                if ("-" === a.substr(0, 1) && (a = i(a.slice(1)), e = new n(-1, 10)), !(a = "" === a ? "0" : a).match(/^-?[0-9]+$/) && a.match(/^[0-9A-Fa-f]+$/) || a.match(/^[a-fA-F]+$/) || !0 === o && a.match(/^[0-9A-Fa-f]+$/)) return new n(a, 16).mul(e);
                if ((a.match(/^-?[0-9]+$/) || "" === a) && !1 === o) return new n(a, 10).mul(e)
            } else if ("object" == typeof t && t.toString && !t.pop && !t.push && t.toString(10).match(/^-?[0-9]+$/) && (t.mul || t.dividedToIntegerBy)) return new n(t.toString(10), 10);
            throw new Error("[number-to-bn] while converting number " + JSON.stringify(t) + " to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.")
        }
    }, function (t, e) {
        const r = "0123456789abcdef".split(""),
            n = [1, 256, 65536, 16777216],
            i = [0, 8, 16, 24],
            o = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648],
            f = t => {
                var e, r, n, i, a, s, u, c, l, h, d, p, m, y, b, g, v, w, M, A, x, B, E, k, N, T, C, P, I, O, D, j, L, U, H, q, z, G, V, J, W, Z, X, Y, $, Q, tt, et, rt, nt, it, ot, st, ut, ct, ht, dt, pt, mt, yt, bt, vt, wt;
                for (n = 0; n < 48; n += 2) i = t[0] ^ t[10] ^ t[20] ^ t[30] ^ t[40], a = t[1] ^ t[11] ^ t[21] ^ t[31] ^ t[41], s = t[2] ^ t[12] ^ t[22] ^ t[32] ^ t[42], u = t[3] ^ t[13] ^ t[23] ^ t[33] ^ t[43], c = t[4] ^ t[14] ^ t[24] ^ t[34] ^ t[44], l = t[5] ^ t[15] ^ t[25] ^ t[35] ^ t[45], h = t[6] ^ t[16] ^ t[26] ^ t[36] ^ t[46], d = t[7] ^ t[17] ^ t[27] ^ t[37] ^ t[47], e = (p = t[8] ^ t[18] ^ t[28] ^ t[38] ^ t[48]) ^ (s << 1 | u >>> 31), r = (m = t[9] ^ t[19] ^ t[29] ^ t[39] ^ t[49]) ^ (u << 1 | s >>> 31), t[0] ^= e, t[1] ^= r, t[10] ^= e, t[11] ^= r, t[20] ^= e, t[21] ^= r, t[30] ^= e, t[31] ^= r, t[40] ^= e, t[41] ^= r, e = i ^ (c << 1 | l >>> 31), r = a ^ (l << 1 | c >>> 31), t[2] ^= e, t[3] ^= r, t[12] ^= e, t[13] ^= r, t[22] ^= e, t[23] ^= r, t[32] ^= e, t[33] ^= r, t[42] ^= e, t[43] ^= r, e = s ^ (h << 1 | d >>> 31), r = u ^ (d << 1 | h >>> 31), t[4] ^= e, t[5] ^= r, t[14] ^= e, t[15] ^= r, t[24] ^= e, t[25] ^= r, t[34] ^= e, t[35] ^= r, t[44] ^= e, t[45] ^= r, e = c ^ (p << 1 | m >>> 31), r = l ^ (m << 1 | p >>> 31), t[6] ^= e, t[7] ^= r, t[16] ^= e, t[17] ^= r, t[26] ^= e, t[27] ^= r, t[36] ^= e, t[37] ^= r, t[46] ^= e, t[47] ^= r, e = h ^ (i << 1 | a >>> 31), r = d ^ (a << 1 | i >>> 31), t[8] ^= e, t[9] ^= r, t[18] ^= e, t[19] ^= r, t[28] ^= e, t[29] ^= r, t[38] ^= e, t[39] ^= r, t[48] ^= e, t[49] ^= r, y = t[0], b = t[1], Q = t[11] << 4 | t[10] >>> 28, tt = t[10] << 4 | t[11] >>> 28, P = t[20] << 3 | t[21] >>> 29, I = t[21] << 3 | t[20] >>> 29, yt = t[31] << 9 | t[30] >>> 23, bt = t[30] << 9 | t[31] >>> 23, Z = t[40] << 18 | t[41] >>> 14, X = t[41] << 18 | t[40] >>> 14, U = t[2] << 1 | t[3] >>> 31, H = t[3] << 1 | t[2] >>> 31, g = t[13] << 12 | t[12] >>> 20, v = t[12] << 12 | t[13] >>> 20, et = t[22] << 10 | t[23] >>> 22, rt = t[23] << 10 | t[22] >>> 22, O = t[33] << 13 | t[32] >>> 19, D = t[32] << 13 | t[33] >>> 19, vt = t[42] << 2 | t[43] >>> 30, wt = t[43] << 2 | t[42] >>> 30, ut = t[5] << 30 | t[4] >>> 2, ct = t[4] << 30 | t[5] >>> 2, q = t[14] << 6 | t[15] >>> 26, z = t[15] << 6 | t[14] >>> 26, w = t[25] << 11 | t[24] >>> 21, M = t[24] << 11 | t[25] >>> 21, nt = t[34] << 15 | t[35] >>> 17, it = t[35] << 15 | t[34] >>> 17, j = t[45] << 29 | t[44] >>> 3, L = t[44] << 29 | t[45] >>> 3, k = t[6] << 28 | t[7] >>> 4, N = t[7] << 28 | t[6] >>> 4, ht = t[17] << 23 | t[16] >>> 9, dt = t[16] << 23 | t[17] >>> 9, G = t[26] << 25 | t[27] >>> 7, V = t[27] << 25 | t[26] >>> 7, A = t[36] << 21 | t[37] >>> 11, x = t[37] << 21 | t[36] >>> 11, ot = t[47] << 24 | t[46] >>> 8, st = t[46] << 24 | t[47] >>> 8, Y = t[8] << 27 | t[9] >>> 5, $ = t[9] << 27 | t[8] >>> 5, T = t[18] << 20 | t[19] >>> 12, C = t[19] << 20 | t[18] >>> 12, pt = t[29] << 7 | t[28] >>> 25, mt = t[28] << 7 | t[29] >>> 25, J = t[38] << 8 | t[39] >>> 24, W = t[39] << 8 | t[38] >>> 24, B = t[48] << 14 | t[49] >>> 18, E = t[49] << 14 | t[48] >>> 18, t[0] = y ^ ~g & w, t[1] = b ^ ~v & M, t[10] = k ^ ~T & P, t[11] = N ^ ~C & I, t[20] = U ^ ~q & G, t[21] = H ^ ~z & V, t[30] = Y ^ ~Q & et, t[31] = $ ^ ~tt & rt, t[40] = ut ^ ~ht & pt, t[41] = ct ^ ~dt & mt, t[2] = g ^ ~w & A, t[3] = v ^ ~M & x, t[12] = T ^ ~P & O, t[13] = C ^ ~I & D, t[22] = q ^ ~G & J, t[23] = z ^ ~V & W, t[32] = Q ^ ~et & nt, t[33] = tt ^ ~rt & it, t[42] = ht ^ ~pt & yt, t[43] = dt ^ ~mt & bt, t[4] = w ^ ~A & B, t[5] = M ^ ~x & E, t[14] = P ^ ~O & j, t[15] = I ^ ~D & L, t[24] = G ^ ~J & Z, t[25] = V ^ ~W & X, t[34] = et ^ ~nt & ot, t[35] = rt ^ ~it & st, t[44] = pt ^ ~yt & vt, t[45] = mt ^ ~bt & wt, t[6] = A ^ ~B & y, t[7] = x ^ ~E & b, t[16] = O ^ ~j & k, t[17] = D ^ ~L & N, t[26] = J ^ ~Z & U, t[27] = W ^ ~X & H, t[36] = nt ^ ~ot & Y, t[37] = it ^ ~st & $, t[46] = yt ^ ~vt & ut, t[47] = bt ^ ~wt & ct, t[8] = B ^ ~y & g, t[9] = E ^ ~b & v, t[18] = j ^ ~k & T, t[19] = L ^ ~N & C, t[28] = Z ^ ~U & q, t[29] = X ^ ~H & z, t[38] = ot ^ ~Y & Q, t[39] = st ^ ~$ & tt, t[48] = vt ^ ~ut & ht, t[49] = wt ^ ~ct & dt, t[0] ^= o[n], t[1] ^= o[n + 1]
            },
            keccak = t => e => {
                var o;
                if ("0x" === e.slice(0, 2)) {
                    o = [];
                    for (var a = 2, s = e.length; a < s; a += 2) o.push(parseInt(e.slice(a, a + 2), 16))
                } else o = e;
                return ((t, e) => {
                    for (var o, a = e.length, s = t.blocks, u = t.blockCount << 2, c = t.blockCount, l = t.outputBlocks, h = t.s, d = 0; d < a;) {
                        if (t.reset)
                            for (t.reset = !1, s[0] = t.block, y = 1; y < c + 1; ++y) s[y] = 0;
                        if ("string" != typeof e)
                            for (y = t.start; d < a && y < u; ++d) s[y >> 2] |= e[d] << i[3 & y++];
                        else
                            for (y = t.start; d < a && y < u; ++d)(o = e.charCodeAt(d)) < 128 ? s[y >> 2] |= o << i[3 & y++] : o < 2048 ? (s[y >> 2] |= (192 | o >> 6) << i[3 & y++], s[y >> 2] |= (128 | 63 & o) << i[3 & y++]) : o < 55296 || o >= 57344 ? (s[y >> 2] |= (224 | o >> 12) << i[3 & y++], s[y >> 2] |= (128 | o >> 6 & 63) << i[3 & y++], s[y >> 2] |= (128 | 63 & o) << i[3 & y++]) : (o = 65536 + ((1023 & o) << 10 | 1023 & e.charCodeAt(++d)), s[y >> 2] |= (240 | o >> 18) << i[3 & y++], s[y >> 2] |= (128 | o >> 12 & 63) << i[3 & y++], s[y >> 2] |= (128 | o >> 6 & 63) << i[3 & y++], s[y >> 2] |= (128 | 63 & o) << i[3 & y++]);
                        if (t.lastByteIndex = y, y >= u) {
                            for (t.start = y - u, t.block = s[c], y = 0; y < c; ++y) h[y] ^= s[y];
                            f(h), t.reset = !0
                        } else t.start = y
                    }
                    if (s[(y = t.lastByteIndex) >> 2] |= n[3 & y], t.lastByteIndex === u)
                        for (s[0] = s[c], y = 1; y < c + 1; ++y) s[y] = 0;
                    for (s[c - 1] |= 2147483648, y = 0; y < c; ++y) h[y] ^= s[y];
                    f(h);
                    for (var p, m = "", y = 0, b = 0; b < l;) {
                        for (y = 0; y < c && b < l; ++y, ++b) p = h[y], m += r[p >> 4 & 15] + r[15 & p] + r[p >> 12 & 15] + r[p >> 8 & 15] + r[p >> 20 & 15] + r[p >> 16 & 15] + r[p >> 28 & 15] + r[p >> 24 & 15];
                        b % c == 0 && (f(h), y = 0)
                    }
                    return "0x" + m
                })((t => {
                    return {
                        blocks: [],
                        reset: !0,
                        block: 0,
                        start: 0,
                        blockCount: 1600 - (t << 1) >> 5,
                        outputBlocks: t >> 5,
                        s: (e = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [].concat(e, e, e, e, e))
                    };
                    var e
                })(t), o)
            };
        t.exports = {
            keccak256: keccak(256),
            keccak512: keccak(512),
            keccak256s: keccak(256),
            keccak512s: keccak(512)
        }
    }, function (t, e, r) {
        (function (t) {
            var n = r(590),
                i = r(265),
                o = r(271),
                a = r(598),
                s = r(16),
                u = e;
            u.request = function (e, r) {
                e = "string" == typeof e ? s.parse(e) : o(e);
                var i = -1 === t.location.protocol.search(/^https?:$/) ? "http:" : "",
                    a = e.protocol || i,
                    u = e.hostname || e.host,
                    c = e.port,
                    l = e.path || "/";
                u && -1 !== u.indexOf(":") && (u = "[" + u + "]"), e.url = (u ? a + "//" + u : "") + (c ? ":" + c : "") + l, e.method = (e.method || "GET").toUpperCase(), e.headers = e.headers || {};
                var h = new n(e);
                return r && h.on("response", r), h
            }, u.get = function get(t, e) {
                var r = u.request(t, e);
                return r.end(), r
            }, u.ClientRequest = n, u.IncomingMessage = i.IncomingMessage, u.Agent = function () {}, u.Agent.defaultMaxSockets = 4, u.globalAgent = new u.Agent, u.STATUS_CODES = a, u.METHODS = ["CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LOCK", "M-SEARCH", "MERGE", "MKACTIVITY", "MKCOL", "MOVE", "NOTIFY", "OPTIONS", "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "REPORT", "SEARCH", "SUBSCRIBE", "TRACE", "UNLOCK", "UNSUBSCRIBE"]
        }).call(this, r(6))
    }, function (t, e, r) {
        var n = r(118),
            i = Object.keys || function (t) {
                var e = [];
                for (var r in t) e.push(r);
                return e
            };
        t.exports = Duplex;
        var o = Object.create(r(86));
        o.inherits = r(1);
        var a = r(266),
            s = r(177);
        o.inherits(Duplex, a);
        for (var u = i(s.prototype), c = 0; c < u.length; c++) {
            var l = u[c];
            Duplex.prototype[l] || (Duplex.prototype[l] = s.prototype[l])
        }

        function Duplex(t) {
            if (!(this instanceof Duplex)) return new Duplex(t);
            a.call(this, t), s.call(this, t), t && !1 === t.readable && (this.readable = !1), t && !1 === t.writable && (this.writable = !1), this.allowHalfOpen = !0, t && !1 === t.allowHalfOpen && (this.allowHalfOpen = !1), this.once("end", onend)
        }

        function onend() {
            this.allowHalfOpen || this._writableState.ended || n.nextTick(onEndNT, this)
        }

        function onEndNT(t) {
            t.end()
        }
        Object.defineProperty(Duplex.prototype, "writableHighWaterMark", {
            enumerable: !1,
            get: function () {
                return this._writableState.highWaterMark
            }
        }), Object.defineProperty(Duplex.prototype, "destroyed", {
            get: function () {
                return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed)
            },
            set: function (t) {
                void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = t, this._writableState.destroyed = t)
            }
        }), Duplex.prototype._destroy = function (t, e) {
            this.push(null), this.end(), n.nextTick(e, t)
        }
    }, function (t, e, r) {
        (function (t) {
            ! function (t, e) {
                function assert(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }

                function inherits(t, e) {
                    t.super_ = e;
                    var TempCtor = function () {};
                    TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
                }

                function BN(t, e, r) {
                    if (BN.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                var n;
                "object" == typeof t ? t.exports = BN : e.BN = BN, BN.BN = BN, BN.wordSize = 26;
                try {
                    n = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(612).Buffer
                } catch (t) {}

                function parseHex4Bits(t, e) {
                    var r = t.charCodeAt(e);
                    return r >= 48 && r <= 57 ? r - 48 : r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : void assert(!1, "Invalid character in " + t)
                }

                function parseHexByte(t, e, r) {
                    var n = parseHex4Bits(t, r);
                    return r - 1 >= e && (n |= parseHex4Bits(t, r - 1) << 4), n
                }

                function parseBase(t, e, r, n) {
                    for (var i = 0, o = 0, a = Math.min(t.length, r), s = e; s < a; s++) {
                        var u = t.charCodeAt(s) - 48;
                        i *= n, o = u >= 49 ? u - 49 + 10 : u >= 17 ? u - 17 + 10 : u, assert(u >= 0 && o < n, "Invalid character"), i += o
                    }
                    return i
                }

                function move(t, e) {
                    t.words = e.words, t.length = e.length, t.negative = e.negative, t.red = e.red
                }
                if (BN.isBN = function isBN(t) {
                        return t instanceof BN || null !== t && "object" == typeof t && t.constructor.wordSize === BN.wordSize && Array.isArray(t.words)
                    }, BN.max = function max(t, e) {
                        return t.cmp(e) > 0 ? t : e
                    }, BN.min = function min(t, e) {
                        return t.cmp(e) < 0 ? t : e
                    }, BN.prototype._init = function init(t, e, r) {
                        if ("number" == typeof t) return this._initNumber(t, e, r);
                        if ("object" == typeof t) return this._initArray(t, e, r);
                        "hex" === e && (e = 16), assert(e === (0 | e) && e >= 2 && e <= 36);
                        var n = 0;
                        "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (n++, this.negative = 1), n < t.length && (16 === e ? this._parseHex(t, n, r) : (this._parseBase(t, e, n), "le" === r && this._initArray(this.toArray(), e, r)))
                    }, BN.prototype._initNumber = function _initNumber(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (assert(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                    }, BN.prototype._initArray = function _initArray(t, e, r) {
                        if (assert("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for (var n = 0; n < this.length; n++) this.words[n] = 0;
                        var i, o, a = 0;
                        if ("be" === r)
                            for (n = t.length - 1, i = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                        else if ("le" === r)
                            for (n = 0, i = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                        return this._strip()
                    }, BN.prototype._parseHex = function _parseHex(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for (var n = 0; n < this.length; n++) this.words[n] = 0;
                        var i, o = 0,
                            a = 0;
                        if ("be" === r)
                            for (n = t.length - 1; n >= e; n -= 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                        else
                            for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                        this._strip()
                    }, BN.prototype._parseBase = function _parseBase(t, e, r) {
                        this.words = [0], this.length = 1;
                        for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                        n--, i = i / e | 0;
                        for (var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n) u = parseBase(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== a) {
                            var l = 1;
                            for (u = parseBase(t, c, t.length, e), c = 0; c < a; c++) l *= e;
                            this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                        }
                        this._strip()
                    }, BN.prototype.copy = function copy(t) {
                        t.words = new Array(this.length);
                        for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red
                    }, BN.prototype._move = function _move(t) {
                        move(t, this)
                    }, BN.prototype.clone = function clone() {
                        var t = new BN(null);
                        return this.copy(t), t
                    }, BN.prototype._expand = function _expand(t) {
                        for (; this.length < t;) this.words[this.length++] = 0;
                        return this
                    }, BN.prototype._strip = function strip() {
                        for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                        return this._normSign()
                    }, BN.prototype._normSign = function _normSign() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                    }, "undefined" != typeof Symbol && "function" == typeof Symbol.for) try {
                    BN.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect
                } catch (t) {
                    BN.prototype.inspect = inspect
                } else BN.prototype.inspect = inspect;

                function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                }
                var i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    o = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    a = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
                BN.prototype.toString = function toString(t, e) {
                    var r;
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var n = 0, s = 0, u = 0; u < this.length; u++) {
                            var c = this.words[u],
                                l = (16777215 & (c << n | s)).toString(16);
                            r = 0 !== (s = c >>> 24 - n & 16777215) || u !== this.length - 1 ? i[6 - l.length] + l + r : l + r, (n += 2) >= 26 && (n -= 26, u--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var h = o[t],
                            d = a[t];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero();) {
                            var m = p.modrn(d).toString(t);
                            r = (p = p.idivn(d)).isZero() ? m + r : i[h - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    assert(!1, "Base should be between 2 and 36")
                }, BN.prototype.toNumber = function toNumber() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, BN.prototype.toJSON = function toJSON() {
                    return this.toString(16, 2)
                }, n && (BN.prototype.toBuffer = function toBuffer(t, e) {
                    return this.toArrayLike(n, t, e)
                }), BN.prototype.toArray = function toArray(t, e) {
                    return this.toArrayLike(Array, t, e)
                };

                function smallMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, d = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= d; p++) {
                            var m = c - p | 0;
                            l += (a = (i = 0 | t.words[m]) * (o = 0 | e.words[p]) + h) / 67108864 | 0, h = 67108863 & a
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r._strip()
                }
                BN.prototype.toArrayLike = function toArrayLike(t, e, r) {
                    this._strip();
                    var n = this.byteLength(),
                        i = r || Math.max(1, n);
                    assert(n <= i, "byte array longer than desired length"), assert(i > 0, "Requested array length <= 0");
                    var o = function allocate(t, e) {
                        return t.allocUnsafe ? t.allocUnsafe(e) : new t(e)
                    }(t, i);
                    return this["_toArrayLike" + ("le" === e ? "LE" : "BE")](o, n), o
                }, BN.prototype._toArrayLikeLE = function _toArrayLikeLE(t, e) {
                    for (var r = 0, n = 0, i = 0, o = 0; i < this.length; i++) {
                        var a = this.words[i] << o | n;
                        t[r++] = 255 & a, r < t.length && (t[r++] = a >> 8 & 255), r < t.length && (t[r++] = a >> 16 & 255), 6 === o ? (r < t.length && (t[r++] = a >> 24 & 255), n = 0, o = 0) : (n = a >>> 24, o += 2)
                    }
                    if (r < t.length)
                        for (t[r++] = n; r < t.length;) t[r++] = 0
                }, BN.prototype._toArrayLikeBE = function _toArrayLikeBE(t, e) {
                    for (var r = t.length - 1, n = 0, i = 0, o = 0; i < this.length; i++) {
                        var a = this.words[i] << o | n;
                        t[r--] = 255 & a, r >= 0 && (t[r--] = a >> 8 & 255), r >= 0 && (t[r--] = a >> 16 & 255), 6 === o ? (r >= 0 && (t[r--] = a >> 24 & 255), n = 0, o = 0) : (n = a >>> 24, o += 2)
                    }
                    if (r >= 0)
                        for (t[r--] = n; r >= 0;) t[r--] = 0
                }, Math.clz32 ? BN.prototype._countBits = function _countBits(t) {
                    return 32 - Math.clz32(t)
                } : BN.prototype._countBits = function _countBits(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, BN.prototype._zeroBits = function _zeroBits(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r
                }, BN.prototype.bitLength = function bitLength() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return 26 * (this.length - 1) + e
                }, BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8)
                }, BN.prototype.toTwos = function toTwos(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, BN.prototype.fromTwos = function fromTwos(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, BN.prototype.isNeg = function isNeg() {
                    return 0 !== this.negative
                }, BN.prototype.neg = function neg() {
                    return this.clone().ineg()
                }, BN.prototype.ineg = function ineg() {
                    return this.isZero() || (this.negative ^= 1), this
                }, BN.prototype.iuor = function iuor(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this._strip()
                }, BN.prototype.ior = function ior(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuor(t)
                }, BN.prototype.or = function or(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, BN.prototype.uor = function uor(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, BN.prototype.iuand = function iuand(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this._strip()
                }, BN.prototype.iand = function iand(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuand(t)
                }, BN.prototype.and = function and(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, BN.prototype.uand = function uand(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, BN.prototype.iuxor = function iuxor(t) {
                    var e, r;
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this._strip()
                }, BN.prototype.ixor = function ixor(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuxor(t)
                }, BN.prototype.xor = function xor(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, BN.prototype.uxor = function uxor(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, BN.prototype.inotn = function inotn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this._strip()
                }, BN.prototype.notn = function notn(t) {
                    return this.clone().inotn(t)
                }, BN.prototype.setn = function setn(t, e) {
                    assert("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        n = t % 26;
                    return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this._strip()
                }, BN.prototype.iadd = function iadd(t) {
                    var e, r, n;
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, BN.prototype.add = function add(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, BN.prototype.isub = function isub(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e = this.iadd(t);
                        return t.negative = 1, e._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var r, n, i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (r = this, n = t) : (r = t, n = this);
                    for (var o = 0, a = 0; a < n.length; a++) o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    for (; 0 !== o && a < r.length; a++) o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    if (0 === o && a < r.length && r !== this)
                        for (; a < r.length; a++) this.words[a] = r.words[a];
                    return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this._strip()
                }, BN.prototype.sub = function sub(t) {
                    return this.clone().isub(t)
                };
                var s = function comb10MulTo(t, e, r) {
                    var n, i, o, a = t.words,
                        s = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        h = 8191 & l,
                        d = l >>> 13,
                        p = 0 | a[1],
                        m = 8191 & p,
                        y = p >>> 13,
                        b = 0 | a[2],
                        g = 8191 & b,
                        v = b >>> 13,
                        w = 0 | a[3],
                        M = 8191 & w,
                        A = w >>> 13,
                        x = 0 | a[4],
                        B = 8191 & x,
                        E = x >>> 13,
                        k = 0 | a[5],
                        N = 8191 & k,
                        T = k >>> 13,
                        C = 0 | a[6],
                        P = 8191 & C,
                        I = C >>> 13,
                        O = 0 | a[7],
                        D = 8191 & O,
                        j = O >>> 13,
                        L = 0 | a[8],
                        U = 8191 & L,
                        H = L >>> 13,
                        q = 0 | a[9],
                        z = 8191 & q,
                        G = q >>> 13,
                        V = 0 | s[0],
                        J = 8191 & V,
                        W = V >>> 13,
                        Z = 0 | s[1],
                        X = 8191 & Z,
                        Y = Z >>> 13,
                        $ = 0 | s[2],
                        Q = 8191 & $,
                        tt = $ >>> 13,
                        et = 0 | s[3],
                        rt = 8191 & et,
                        nt = et >>> 13,
                        it = 0 | s[4],
                        ot = 8191 & it,
                        st = it >>> 13,
                        ut = 0 | s[5],
                        ct = 8191 & ut,
                        ht = ut >>> 13,
                        dt = 0 | s[6],
                        pt = 8191 & dt,
                        mt = dt >>> 13,
                        yt = 0 | s[7],
                        bt = 8191 & yt,
                        vt = yt >>> 13,
                        wt = 0 | s[8],
                        Mt = 8191 & wt,
                        _t = wt >>> 13,
                        At = 0 | s[9],
                        xt = 8191 & At,
                        Bt = At >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var Et = (c + (n = Math.imul(h, J)) | 0) + ((8191 & (i = (i = Math.imul(h, W)) + Math.imul(d, J) | 0)) << 13) | 0;
                    c = ((o = Math.imul(d, W)) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(m, J), i = (i = Math.imul(m, W)) + Math.imul(y, J) | 0, o = Math.imul(y, W);
                    var kt = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(d, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Y) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(g, J), i = (i = Math.imul(g, W)) + Math.imul(v, J) | 0, o = Math.imul(v, W), n = n + Math.imul(m, X) | 0, i = (i = i + Math.imul(m, Y) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, Y) | 0;
                    var Nt = (c + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, tt) | 0) + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(M, J), i = (i = Math.imul(M, W)) + Math.imul(A, J) | 0, o = Math.imul(A, W), n = n + Math.imul(g, X) | 0, i = (i = i + Math.imul(g, Y) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, Y) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0;
                    var St = (c + (n = n + Math.imul(h, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, nt) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, nt) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(B, J), i = (i = Math.imul(B, W)) + Math.imul(E, J) | 0, o = Math.imul(E, W), n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(g, Q) | 0, i = (i = i + Math.imul(g, tt) | 0) + Math.imul(v, Q) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                    var Tt = (c + (n = n + Math.imul(h, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, st) | 0) + Math.imul(d, ot) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, st) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(N, J), i = (i = Math.imul(N, W)) + Math.imul(T, J) | 0, o = Math.imul(T, W), n = n + Math.imul(B, X) | 0, i = (i = i + Math.imul(B, Y) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(g, rt) | 0, i = (i = i + Math.imul(g, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                    var Ct = (c + (n = n + Math.imul(h, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ht) | 0) + Math.imul(d, ct) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, ht) | 0) + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(P, J), i = (i = Math.imul(P, W)) + Math.imul(I, J) | 0, o = Math.imul(I, W), n = n + Math.imul(N, X) | 0, i = (i = i + Math.imul(N, Y) | 0) + Math.imul(T, X) | 0, o = o + Math.imul(T, Y) | 0, n = n + Math.imul(B, Q) | 0, i = (i = i + Math.imul(B, tt) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(M, rt) | 0, i = (i = i + Math.imul(M, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(g, ot) | 0, i = (i = i + Math.imul(g, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(m, ct) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, ht) | 0;
                    var Pt = (c + (n = n + Math.imul(h, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, mt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, mt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(D, J), i = (i = Math.imul(D, W)) + Math.imul(j, J) | 0, o = Math.imul(j, W), n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(N, Q) | 0, i = (i = i + Math.imul(N, tt) | 0) + Math.imul(T, Q) | 0, o = o + Math.imul(T, tt) | 0, n = n + Math.imul(B, rt) | 0, i = (i = i + Math.imul(B, nt) | 0) + Math.imul(E, rt) | 0, o = o + Math.imul(E, nt) | 0, n = n + Math.imul(M, ot) | 0, i = (i = i + Math.imul(M, st) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(g, ct) | 0, i = (i = i + Math.imul(g, ht) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(m, pt) | 0, i = (i = i + Math.imul(m, mt) | 0) + Math.imul(y, pt) | 0, o = o + Math.imul(y, mt) | 0;
                    var It = (c + (n = n + Math.imul(h, bt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, vt) | 0) + Math.imul(d, bt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, vt) | 0) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(U, J), i = (i = Math.imul(U, W)) + Math.imul(H, J) | 0, o = Math.imul(H, W), n = n + Math.imul(D, X) | 0, i = (i = i + Math.imul(D, Y) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, tt) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = (i = i + Math.imul(N, nt) | 0) + Math.imul(T, rt) | 0, o = o + Math.imul(T, nt) | 0, n = n + Math.imul(B, ot) | 0, i = (i = i + Math.imul(B, st) | 0) + Math.imul(E, ot) | 0, o = o + Math.imul(E, st) | 0, n = n + Math.imul(M, ct) | 0, i = (i = i + Math.imul(M, ht) | 0) + Math.imul(A, ct) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(g, pt) | 0, i = (i = i + Math.imul(g, mt) | 0) + Math.imul(v, pt) | 0, o = o + Math.imul(v, mt) | 0, n = n + Math.imul(m, bt) | 0, i = (i = i + Math.imul(m, vt) | 0) + Math.imul(y, bt) | 0, o = o + Math.imul(y, vt) | 0;
                    var Ot = (c + (n = n + Math.imul(h, Mt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, _t) | 0) + Math.imul(d, Mt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, _t) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(z, J), i = (i = Math.imul(z, W)) + Math.imul(G, J) | 0, o = Math.imul(G, W), n = n + Math.imul(U, X) | 0, i = (i = i + Math.imul(U, Y) | 0) + Math.imul(H, X) | 0, o = o + Math.imul(H, Y) | 0, n = n + Math.imul(D, Q) | 0, i = (i = i + Math.imul(D, tt) | 0) + Math.imul(j, Q) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(P, rt) | 0, i = (i = i + Math.imul(P, nt) | 0) + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = (i = i + Math.imul(N, st) | 0) + Math.imul(T, ot) | 0, o = o + Math.imul(T, st) | 0, n = n + Math.imul(B, ct) | 0, i = (i = i + Math.imul(B, ht) | 0) + Math.imul(E, ct) | 0, o = o + Math.imul(E, ht) | 0, n = n + Math.imul(M, pt) | 0, i = (i = i + Math.imul(M, mt) | 0) + Math.imul(A, pt) | 0, o = o + Math.imul(A, mt) | 0, n = n + Math.imul(g, bt) | 0, i = (i = i + Math.imul(g, vt) | 0) + Math.imul(v, bt) | 0, o = o + Math.imul(v, vt) | 0, n = n + Math.imul(m, Mt) | 0, i = (i = i + Math.imul(m, _t) | 0) + Math.imul(y, Mt) | 0, o = o + Math.imul(y, _t) | 0;
                    var Rt = (c + (n = n + Math.imul(h, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Bt) | 0) + Math.imul(d, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Bt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(z, X), i = (i = Math.imul(z, Y)) + Math.imul(G, X) | 0, o = Math.imul(G, Y), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, tt) | 0) + Math.imul(H, Q) | 0, o = o + Math.imul(H, tt) | 0, n = n + Math.imul(D, rt) | 0, i = (i = i + Math.imul(D, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(P, ot) | 0, i = (i = i + Math.imul(P, st) | 0) + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ct) | 0, i = (i = i + Math.imul(N, ht) | 0) + Math.imul(T, ct) | 0, o = o + Math.imul(T, ht) | 0, n = n + Math.imul(B, pt) | 0, i = (i = i + Math.imul(B, mt) | 0) + Math.imul(E, pt) | 0, o = o + Math.imul(E, mt) | 0, n = n + Math.imul(M, bt) | 0, i = (i = i + Math.imul(M, vt) | 0) + Math.imul(A, bt) | 0, o = o + Math.imul(A, vt) | 0, n = n + Math.imul(g, Mt) | 0, i = (i = i + Math.imul(g, _t) | 0) + Math.imul(v, Mt) | 0, o = o + Math.imul(v, _t) | 0;
                    var Ft = (c + (n = n + Math.imul(m, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, Bt) | 0) + Math.imul(y, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, Bt) | 0) + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(z, Q), i = (i = Math.imul(z, tt)) + Math.imul(G, Q) | 0, o = Math.imul(G, tt), n = n + Math.imul(U, rt) | 0, i = (i = i + Math.imul(U, nt) | 0) + Math.imul(H, rt) | 0, o = o + Math.imul(H, nt) | 0, n = n + Math.imul(D, ot) | 0, i = (i = i + Math.imul(D, st) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, st) | 0, n = n + Math.imul(P, ct) | 0, i = (i = i + Math.imul(P, ht) | 0) + Math.imul(I, ct) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, pt) | 0, i = (i = i + Math.imul(N, mt) | 0) + Math.imul(T, pt) | 0, o = o + Math.imul(T, mt) | 0, n = n + Math.imul(B, bt) | 0, i = (i = i + Math.imul(B, vt) | 0) + Math.imul(E, bt) | 0, o = o + Math.imul(E, vt) | 0, n = n + Math.imul(M, Mt) | 0, i = (i = i + Math.imul(M, _t) | 0) + Math.imul(A, Mt) | 0, o = o + Math.imul(A, _t) | 0;
                    var Dt = (c + (n = n + Math.imul(g, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(g, Bt) | 0) + Math.imul(v, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(v, Bt) | 0) + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(z, rt), i = (i = Math.imul(z, nt)) + Math.imul(G, rt) | 0, o = Math.imul(G, nt), n = n + Math.imul(U, ot) | 0, i = (i = i + Math.imul(U, st) | 0) + Math.imul(H, ot) | 0, o = o + Math.imul(H, st) | 0, n = n + Math.imul(D, ct) | 0, i = (i = i + Math.imul(D, ht) | 0) + Math.imul(j, ct) | 0, o = o + Math.imul(j, ht) | 0, n = n + Math.imul(P, pt) | 0, i = (i = i + Math.imul(P, mt) | 0) + Math.imul(I, pt) | 0, o = o + Math.imul(I, mt) | 0, n = n + Math.imul(N, bt) | 0, i = (i = i + Math.imul(N, vt) | 0) + Math.imul(T, bt) | 0, o = o + Math.imul(T, vt) | 0, n = n + Math.imul(B, Mt) | 0, i = (i = i + Math.imul(B, _t) | 0) + Math.imul(E, Mt) | 0, o = o + Math.imul(E, _t) | 0;
                    var jt = (c + (n = n + Math.imul(M, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, Bt) | 0) + Math.imul(A, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, Bt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(z, ot), i = (i = Math.imul(z, st)) + Math.imul(G, ot) | 0, o = Math.imul(G, st), n = n + Math.imul(U, ct) | 0, i = (i = i + Math.imul(U, ht) | 0) + Math.imul(H, ct) | 0, o = o + Math.imul(H, ht) | 0, n = n + Math.imul(D, pt) | 0, i = (i = i + Math.imul(D, mt) | 0) + Math.imul(j, pt) | 0, o = o + Math.imul(j, mt) | 0, n = n + Math.imul(P, bt) | 0, i = (i = i + Math.imul(P, vt) | 0) + Math.imul(I, bt) | 0, o = o + Math.imul(I, vt) | 0, n = n + Math.imul(N, Mt) | 0, i = (i = i + Math.imul(N, _t) | 0) + Math.imul(T, Mt) | 0, o = o + Math.imul(T, _t) | 0;
                    var Lt = (c + (n = n + Math.imul(B, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, Bt) | 0) + Math.imul(E, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, Bt) | 0) + (i >>> 13) | 0) + (Lt >>> 26) | 0, Lt &= 67108863, n = Math.imul(z, ct), i = (i = Math.imul(z, ht)) + Math.imul(G, ct) | 0, o = Math.imul(G, ht), n = n + Math.imul(U, pt) | 0, i = (i = i + Math.imul(U, mt) | 0) + Math.imul(H, pt) | 0, o = o + Math.imul(H, mt) | 0, n = n + Math.imul(D, bt) | 0, i = (i = i + Math.imul(D, vt) | 0) + Math.imul(j, bt) | 0, o = o + Math.imul(j, vt) | 0, n = n + Math.imul(P, Mt) | 0, i = (i = i + Math.imul(P, _t) | 0) + Math.imul(I, Mt) | 0, o = o + Math.imul(I, _t) | 0;
                    var Ut = (c + (n = n + Math.imul(N, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(N, Bt) | 0) + Math.imul(T, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(T, Bt) | 0) + (i >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, n = Math.imul(z, pt), i = (i = Math.imul(z, mt)) + Math.imul(G, pt) | 0, o = Math.imul(G, mt), n = n + Math.imul(U, bt) | 0, i = (i = i + Math.imul(U, vt) | 0) + Math.imul(H, bt) | 0, o = o + Math.imul(H, vt) | 0, n = n + Math.imul(D, Mt) | 0, i = (i = i + Math.imul(D, _t) | 0) + Math.imul(j, Mt) | 0, o = o + Math.imul(j, _t) | 0;
                    var Ht = (c + (n = n + Math.imul(P, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, Bt) | 0) + Math.imul(I, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, Bt) | 0) + (i >>> 13) | 0) + (Ht >>> 26) | 0, Ht &= 67108863, n = Math.imul(z, bt), i = (i = Math.imul(z, vt)) + Math.imul(G, bt) | 0, o = Math.imul(G, vt), n = n + Math.imul(U, Mt) | 0, i = (i = i + Math.imul(U, _t) | 0) + Math.imul(H, Mt) | 0, o = o + Math.imul(H, _t) | 0;
                    var qt = (c + (n = n + Math.imul(D, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(D, Bt) | 0) + Math.imul(j, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, Bt) | 0) + (i >>> 13) | 0) + (qt >>> 26) | 0, qt &= 67108863, n = Math.imul(z, Mt), i = (i = Math.imul(z, _t)) + Math.imul(G, Mt) | 0, o = Math.imul(G, _t);
                    var zt = (c + (n = n + Math.imul(U, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, Bt) | 0) + Math.imul(H, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(H, Bt) | 0) + (i >>> 13) | 0) + (zt >>> 26) | 0, zt &= 67108863;
                    var Gt = (c + (n = Math.imul(z, xt)) | 0) + ((8191 & (i = (i = Math.imul(z, Bt)) + Math.imul(G, xt) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(G, Bt)) + (i >>> 13) | 0) + (Gt >>> 26) | 0, Gt &= 67108863, u[0] = Et, u[1] = kt, u[2] = Nt, u[3] = St, u[4] = Tt, u[5] = Ct, u[6] = Pt, u[7] = It, u[8] = Ot, u[9] = Rt, u[10] = Ft, u[11] = Dt, u[12] = jt, u[13] = Lt, u[14] = Ut, u[15] = Ht, u[16] = qt, u[17] = zt, u[18] = Gt, 0 !== c && (u[19] = c, r.length++), r
                };

                function bigMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                    for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                        var a = i;
                        i = 0;
                        for (var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                            var l = o - c,
                                h = (0 | t.words[l]) * (0 | e.words[c]),
                                d = 67108863 & h;
                            s = 67108863 & (d = d + s | 0), i += (a = (a = a + (h / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863
                        }
                        r.words[o] = s, n = a, a = i
                    }
                    return 0 !== n ? r.words[o] = n : r.length--, r._strip()
                }

                function jumboMulTo(t, e, r) {
                    return bigMulTo(t, e, r)
                }

                function FFTM(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (s = smallMulTo), BN.prototype.mulTo = function mulTo(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? s(this, t, e) : r < 63 ? smallMulTo(this, t, e) : r < 1024 ? bigMulTo(this, t, e) : jumboMulTo(this, t, e)
                }, FFTM.prototype.makeRBT = function makeRBT(t) {
                    for (var e = new Array(t), r = BN.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, FFTM.prototype.revBin = function revBin(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, FFTM.prototype.permute = function permute(t, e, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = e[t[a]], i[a] = r[t[a]]
                }, FFTM.prototype.transform = function transform(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var h = u, d = c, p = 0; p < a; p++) {
                                var m = r[l + p],
                                    y = n[l + p],
                                    b = r[l + p + a],
                                    g = n[l + p + a],
                                    v = h * b - d * g;
                                g = h * g + d * b, b = v, r[l + p] = m + b, n[l + p] = y + g, r[l + p + a] = m - b, n[l + p + a] = y - g, p !== s && (v = u * h - c * d, d = u * d + c * h, h = v)
                            }
                }, FFTM.prototype.guessLen13b = function guessLen13b(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, FFTM.prototype.conjugate = function conjugate(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, FFTM.prototype.normalize13b = function normalize13b(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, FFTM.prototype.convert13b = function convert13b(t, e, r, n) {
                    for (var i = 0, o = 0; o < e; o++) i += 0 | t[o], r[2 * o] = 8191 & i, i >>>= 13, r[2 * o + 1] = 8191 & i, i >>>= 13;
                    for (o = 2 * e; o < n; ++o) r[o] = 0;
                    assert(0 === i), assert(0 == (-8192 & i))
                }, FFTM.prototype.stub = function stub(t) {
                    for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, FFTM.prototype.mulp = function mulp(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = new Array(n),
                        s = new Array(n),
                        u = new Array(n),
                        c = new Array(n),
                        l = new Array(n),
                        h = new Array(n),
                        d = r.words;
                    d.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var p = 0; p < n; p++) {
                        var m = s[p] * l[p] - u[p] * h[p];
                        u[p] = s[p] * h[p] + u[p] * l[p], s[p] = m
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, d, o, n, i), this.conjugate(d, o, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r._strip()
                }, BN.prototype.mul = function mul(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                }, BN.prototype.mulf = function mulf(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), jumboMulTo(this, t, e)
                }, BN.prototype.imul = function imul(t) {
                    return this.clone().mulTo(t, this)
                }, BN.prototype.imuln = function imuln(t) {
                    var e = t < 0;
                    e && (t = -t), assert("number" == typeof t), assert(t < 67108864);
                    for (var r = 0, n = 0; n < this.length; n++) {
                        var i = (0 | this.words[n]) * t,
                            o = (67108863 & i) + (67108863 & r);
                        r >>= 26, r += i / 67108864 | 0, r += o >>> 26, this.words[n] = 67108863 & o
                    }
                    return 0 !== r && (this.words[n] = r, this.length++), e ? this.ineg() : this
                }, BN.prototype.muln = function muln(t) {
                    return this.clone().imuln(t)
                }, BN.prototype.sqr = function sqr() {
                    return this.mul(this)
                }, BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone())
                }, BN.prototype.pow = function pow(t) {
                    var e = function toBitArray(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = t.words[n] >>> i & 1
                        }
                        return e
                    }(t);
                    if (0 === e.length) return new BN(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, BN.prototype.iushln = function iushln(t) {
                    assert("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        n = (t - r) / 26,
                        i = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & i,
                                s = (0 | this.words[e]) - a << r;
                            this.words[e] = s | o, o = a >>> 26 - r
                        }
                        o && (this.words[e] = o, this.length++)
                    }
                    if (0 !== n) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                        for (e = 0; e < n; e++) this.words[e] = 0;
                        this.length += n
                    }
                    return this._strip()
                }, BN.prototype.ishln = function ishln(t) {
                    return assert(0 === this.negative), this.iushln(t)
                }, BN.prototype.iushrn = function iushrn(t, e, r) {
                    var n;
                    assert("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                    var i = t % 26,
                        o = Math.min((t - i) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> i << i,
                        s = r;
                    if (n -= o, n = Math.max(0, n), s) {
                        for (var u = 0; u < o; u++) s.words[u] = this.words[u];
                        s.length = o
                    }
                    if (0 === o);
                    else if (this.length > o)
                        for (this.length -= o, u = 0; u < this.length; u++) this.words[u] = this.words[u + o];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= n); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - i | l >>> i, c = l & a
                    }
                    return s && 0 !== c && (s.words[s.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip()
                }, BN.prototype.ishrn = function ishrn(t, e, r) {
                    return assert(0 === this.negative), this.iushrn(t, e, r)
                }, BN.prototype.shln = function shln(t) {
                    return this.clone().ishln(t)
                }, BN.prototype.ushln = function ushln(t) {
                    return this.clone().iushln(t)
                }, BN.prototype.shrn = function shrn(t) {
                    return this.clone().ishrn(t)
                }, BN.prototype.ushrn = function ushrn(t) {
                    return this.clone().iushrn(t)
                }, BN.prototype.testn = function testn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }, BN.prototype.imaskn = function imaskn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var n = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= n
                    }
                    return this._strip()
                }, BN.prototype.maskn = function maskn(t) {
                    return this.clone().imaskn(t)
                }, BN.prototype.iaddn = function iaddn(t) {
                    return assert("number" == typeof t), assert(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                }, BN.prototype._iaddn = function _iaddn(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, BN.prototype.isubn = function isubn(t) {
                    if (assert("number" == typeof t), assert(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this._strip()
                }, BN.prototype.addn = function addn(t) {
                    return this.clone().iaddn(t)
                }, BN.prototype.subn = function subn(t) {
                    return this.clone().isubn(t)
                }, BN.prototype.iabs = function iabs() {
                    return this.negative = 0, this
                }, BN.prototype.abs = function abs() {
                    return this.clone().iabs()
                }, BN.prototype._ishlnsubmul = function _ishlnsubmul(t, e, r) {
                    var n, i, o = t.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < t.length; n++) {
                        i = (0 | this.words[n + r]) + a;
                        var s = (0 | t.words[n]) * e;
                        a = ((i -= 67108863 & s) >> 26) - (s / 67108864 | 0), this.words[n + r] = 67108863 & i
                    }
                    for (; n < this.length - r; n++) a = (i = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & i;
                    if (0 === a) return this._strip();
                    for (assert(-1 === a), a = 0, n = 0; n < this.length; n++) a = (i = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & i;
                    return this.negative = 1, this._strip()
                }, BN.prototype._wordDiv = function _wordDiv(t, e) {
                    var r = (this.length, t.length),
                        n = this.clone(),
                        i = t,
                        o = 0 | i.words[i.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                    var a, s = n.length - i.length;
                    if ("mod" !== e) {
                        (a = new BN(null)).length = s + 1, a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++) a.words[u] = 0
                    }
                    var c = n.clone()._ishlnsubmul(i, 1, s);
                    0 === c.negative && (n = c, a && (a.words[s] = 1));
                    for (var l = s - 1; l >= 0; l--) {
                        var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                        for (h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;) h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                        a && (a.words[l] = h)
                    }
                    return a && a._strip(), n._strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                        div: a || null,
                        mod: n
                    }
                }, BN.prototype.divmod = function divmod(t, e, r) {
                    return assert(!t.isZero()), this.isZero() ? {
                        div: new BN(0),
                        mod: new BN(0)
                    } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), "mod" !== e && (n = o.div.neg()), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(t)), {
                        div: n,
                        mod: i
                    }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), "mod" !== e && (n = o.div.neg()), {
                        div: n,
                        mod: o.mod
                    }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(t)), {
                        div: o.div,
                        mod: i
                    }) : t.length > this.length || this.cmp(t) < 0 ? {
                        div: new BN(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new BN(this.modrn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new BN(this.modrn(t.words[0]))
                    } : this._wordDiv(t, e);
                    var n, i, o
                }, BN.prototype.div = function div(t) {
                    return this.divmod(t, "div", !1).div
                }, BN.prototype.mod = function mod(t) {
                    return this.divmod(t, "mod", !1).mod
                }, BN.prototype.umod = function umod(t) {
                    return this.divmod(t, "mod", !0).mod
                }, BN.prototype.divRound = function divRound(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, BN.prototype.modrn = function modrn(t) {
                    var e = t < 0;
                    e && (t = -t), assert(t <= 67108863);
                    for (var r = (1 << 26) % t, n = 0, i = this.length - 1; i >= 0; i--) n = (r * n + (0 | this.words[i])) % t;
                    return e ? -n : n
                }, BN.prototype.modn = function modn(t) {
                    return this.modrn(t)
                }, BN.prototype.idivn = function idivn(t) {
                    var e = t < 0;
                    e && (t = -t), assert(t <= 67108863);
                    for (var r = 0, n = this.length - 1; n >= 0; n--) {
                        var i = (0 | this.words[n]) + 67108864 * r;
                        this.words[n] = i / t | 0, r = i % t
                    }
                    return this._strip(), e ? this.ineg() : this
                }, BN.prototype.divn = function divn(t) {
                    return this.clone().idivn(t)
                }, BN.prototype.egcd = function egcd(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n = new BN(1), i = new BN(0), o = new BN(0), a = new BN(1), s = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++s;
                    for (var u = r.clone(), c = e.clone(); !e.isZero();) {
                        for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                        if (l > 0)
                            for (e.iushrn(l); l-- > 0;)(n.isOdd() || i.isOdd()) && (n.iadd(u), i.isub(c)), n.iushrn(1), i.iushrn(1);
                        for (var d = 0, p = 1; 0 == (r.words[0] & p) && d < 26; ++d, p <<= 1);
                        if (d > 0)
                            for (r.iushrn(d); d-- > 0;)(o.isOdd() || a.isOdd()) && (o.iadd(u), a.isub(c)), o.iushrn(1), a.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), n.isub(o), i.isub(a)) : (r.isub(e), o.isub(n), a.isub(i))
                    }
                    return {
                        a: o,
                        b: a,
                        gcd: r.iushln(s)
                    }
                }, BN.prototype._invmp = function _invmp(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n, i = new BN(1), o = new BN(0), a = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var s = 0, u = 1; 0 == (e.words[0] & u) && s < 26; ++s, u <<= 1);
                        if (s > 0)
                            for (e.iushrn(s); s-- > 0;) i.isOdd() && i.iadd(a), i.iushrn(1);
                        for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(a), o.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(o)) : (r.isub(e), o.isub(i))
                    }
                    return (n = 0 === e.cmpn(1) ? i : o).cmpn(0) < 0 && n.iadd(t), n
                }, BN.prototype.gcd = function gcd(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, BN.prototype.invm = function invm(t) {
                    return this.egcd(t).a.umod(t)
                }, BN.prototype.isEven = function isEven() {
                    return 0 == (1 & this.words[0])
                }, BN.prototype.isOdd = function isOdd() {
                    return 1 == (1 & this.words[0])
                }, BN.prototype.andln = function andln(t) {
                    return this.words[0] & t
                }, BN.prototype.bincn = function bincn(t) {
                    assert("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                    for (var i = n, o = r; 0 !== i && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        i = (a += i) >>> 26, a &= 67108863, this.words[o] = a
                    }
                    return 0 !== i && (this.words[o] = i, this.length++), this
                }, BN.prototype.isZero = function isZero() {
                    return 1 === this.length && 0 === this.words[0]
                }, BN.prototype.cmpn = function cmpn(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this._strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), assert(t <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        e = n === t ? 0 : n < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.cmp = function cmp(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.ucmp = function ucmp(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, BN.prototype.gtn = function gtn(t) {
                    return 1 === this.cmpn(t)
                }, BN.prototype.gt = function gt(t) {
                    return 1 === this.cmp(t)
                }, BN.prototype.gten = function gten(t) {
                    return this.cmpn(t) >= 0
                }, BN.prototype.gte = function gte(t) {
                    return this.cmp(t) >= 0
                }, BN.prototype.ltn = function ltn(t) {
                    return -1 === this.cmpn(t)
                }, BN.prototype.lt = function lt(t) {
                    return -1 === this.cmp(t)
                }, BN.prototype.lten = function lten(t) {
                    return this.cmpn(t) <= 0
                }, BN.prototype.lte = function lte(t) {
                    return this.cmp(t) <= 0
                }, BN.prototype.eqn = function eqn(t) {
                    return 0 === this.cmpn(t)
                }, BN.prototype.eq = function eq(t) {
                    return 0 === this.cmp(t)
                }, BN.red = function red(t) {
                    return new Red(t)
                }, BN.prototype.toRed = function toRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, BN.prototype.fromRed = function fromRed() {
                    return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, BN.prototype._forceRed = function _forceRed(t) {
                    return this.red = t, this
                }, BN.prototype.forceRed = function forceRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, BN.prototype.redAdd = function redAdd(t) {
                    return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, BN.prototype.redIAdd = function redIAdd(t) {
                    return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, BN.prototype.redSub = function redSub(t) {
                    return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, BN.prototype.redISub = function redISub(t) {
                    return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, BN.prototype.redShl = function redShl(t) {
                    return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, BN.prototype.redMul = function redMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, BN.prototype.redIMul = function redIMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, BN.prototype.redSqr = function redSqr() {
                    return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, BN.prototype.redISqr = function redISqr() {
                    return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, BN.prototype.redSqrt = function redSqrt() {
                    return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, BN.prototype.redInvm = function redInvm() {
                    return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, BN.prototype.redNeg = function redNeg() {
                    return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, BN.prototype.redPow = function redPow(t) {
                    return assert(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var u = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function MPrime(t, e) {
                    this.name = t, this.p = new BN(e, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function Red(t) {
                    if ("string" == typeof t) {
                        var e = BN._prime(t);
                        this.m = e.p, this.prime = e
                    } else assert(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function Mont(t) {
                    Red.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                MPrime.prototype._tmp = function _tmp() {
                    var t = new BN(null);
                    return t.words = new Array(Math.ceil(this.n / 13)), t
                }, MPrime.prototype.ireduce = function ireduce(t) {
                    var e, r = t;
                    do {
                        this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                }, MPrime.prototype.split = function split(t, e) {
                    t.iushrn(this.n, 0, e)
                }, MPrime.prototype.imulK = function imulK(t) {
                    return t.imul(this.k)
                }, inherits(K256, MPrime), K256.prototype.split = function split(t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++) e.words[n] = t.words[n];
                    if (e.length = r, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                    var i = t.words[9];
                    for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, K256.prototype.imulK = function imulK(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function imulK(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 19 * (0 | t.words[r]) + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, BN._prime = function prime(t) {
                    if (u[t]) return u[t];
                    var prime;
                    if ("k256" === t) prime = new K256;
                    else if ("p224" === t) prime = new P224;
                    else if ("p192" === t) prime = new P192;
                    else {
                        if ("p25519" !== t) throw new Error("Unknown prime " + t);
                        prime = new P25519
                    }
                    return u[t] = prime, prime
                }, Red.prototype._verify1 = function _verify1(t) {
                    assert(0 === t.negative, "red works only with positives"), assert(t.red, "red works only with red numbers")
                }, Red.prototype._verify2 = function _verify2(t, e) {
                    assert(0 == (t.negative | e.negative), "red works only with positives"), assert(t.red && t.red === e.red, "red works only with red numbers")
                }, Red.prototype.imod = function imod(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : (move(t, t.umod(this.m)._forceRed(this)), t)
                }, Red.prototype.neg = function neg(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, Red.prototype.add = function add(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, Red.prototype.iadd = function iadd(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, Red.prototype.sub = function sub(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                }, Red.prototype.isub = function isub(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r
                }, Red.prototype.shl = function shl(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, Red.prototype.imul = function imul(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, Red.prototype.mul = function mul(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, Red.prototype.isqr = function isqr(t) {
                    return this.imul(t, t.clone())
                }, Red.prototype.sqr = function sqr(t) {
                    return this.mul(t, t)
                }, Red.prototype.sqrt = function sqrt(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (assert(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var n = this.m.subn(1), i = 0; !n.isZero() && 0 === n.andln(1);) i++, n.iushrn(1);
                    assert(!n.isZero());
                    var o = new BN(1).toRed(this),
                        a = o.redNeg(),
                        s = this.m.subn(1).iushrn(1),
                        u = this.m.bitLength();
                    for (u = new BN(2 * u * u).toRed(this); 0 !== this.pow(u, s).cmp(a);) u.redIAdd(a);
                    for (var c = this.pow(u, n), l = this.pow(t, n.addn(1).iushrn(1)), h = this.pow(t, n), d = i; 0 !== h.cmp(o);) {
                        for (var p = h, m = 0; 0 !== p.cmp(o); m++) p = p.redSqr();
                        assert(m < d);
                        var y = this.pow(c, new BN(1).iushln(d - m - 1));
                        l = l.redMul(y), c = y.redSqr(), h = h.redMul(c), d = m
                    }
                    return l
                }, Red.prototype.invm = function invm(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, Red.prototype.pow = function pow(t, e) {
                    if (e.isZero()) return new BN(1).toRed(this);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = new Array(16);
                    r[0] = new BN(1).toRed(this), r[1] = t;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], t);
                    var i = r[0],
                        o = 0,
                        a = 0,
                        s = e.bitLength() % 26;
                    for (0 === s && (s = 26), n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = s - 1; c >= 0; c--) {
                            var l = u >> c & 1;
                            i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 === ++a || 0 === n && 0 === c) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0
                        }
                        s = 26
                    }
                    return i
                }, Red.prototype.convertTo = function convertTo(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, Red.prototype.convertFrom = function convertFrom(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, BN.mont = function mont(t) {
                    return new Mont(t)
                }, inherits(Mont, Red), Mont.prototype.convertTo = function convertTo(t) {
                    return this.imod(t.ushln(this.shift))
                }, Mont.prototype.convertFrom = function convertFrom(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, Mont.prototype.imul = function imul(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.mul = function mul(t, e) {
                    if (t.isZero() || e.isZero()) return new BN(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.invm = function invm(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t, this)
        }).call(this, r(8)(t))
    }, function (t, e, r) {
        (function (t) {
            var n = this && this.__importDefault || function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.baToJSON = e.addHexPrefix = e.toUnsigned = e.fromSigned = e.bufferToHex = e.bufferToInt = e.toBuffer = e.unpadHexString = e.unpadArray = e.unpadBuffer = e.setLengthRight = e.setLengthLeft = e.zeros = void 0;
            var i = n(r(53)),
                o = r(20),
                a = r(123);
            e.zeros = function (e) {
                return t.allocUnsafe(e).fill(0)
            };
            var setLength = function (t, r, n) {
                var i = e.zeros(r);
                return n ? t.length < r ? (t.copy(i), i) : t.slice(0, r) : t.length < r ? (t.copy(i, r - t.length), i) : t.slice(-r)
            };
            e.setLengthLeft = function (t, e) {
                return a.assertIsBuffer(t), setLength(t, e, !1)
            }, e.setLengthRight = function (t, e) {
                return a.assertIsBuffer(t), setLength(t, e, !0)
            };
            var stripZeros = function (t) {
                for (var e = t[0]; t.length > 0 && "0" === e.toString();) e = (t = t.slice(1))[0];
                return t
            };
            e.unpadBuffer = function (t) {
                return a.assertIsBuffer(t), stripZeros(t)
            }, e.unpadArray = function (t) {
                return a.assertIsArray(t), stripZeros(t)
            }, e.unpadHexString = function (t) {
                return a.assertIsHexString(t), t = o.stripHexPrefix(t), stripZeros(t)
            }, e.toBuffer = function (e) {
                if (null == e) return t.allocUnsafe(0);
                if (t.isBuffer(e)) return t.from(e);
                if (Array.isArray(e) || e instanceof Uint8Array) return t.from(e);
                if ("string" == typeof e) {
                    if (!o.isHexString(e)) throw new Error("Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: " + e);
                    return t.from(o.padToEven(o.stripHexPrefix(e)), "hex")
                }
                if ("number" == typeof e) return o.intToBuffer(e);
                if (i.default.isBN(e)) return e.toArrayLike(t);
                if (e.toArray) return t.from(e.toArray());
                if (e.toBuffer) return t.from(e.toBuffer());
                throw new Error("invalid type")
            }, e.bufferToInt = function (t) {
                return new i.default(e.toBuffer(t)).toNumber()
            }, e.bufferToHex = function (t) {
                return "0x" + (t = e.toBuffer(t)).toString("hex")
            }, e.fromSigned = function (t) {
                return new i.default(t).fromTwos(256)
            }, e.toUnsigned = function (e) {
                return t.from(e.toTwos(256).toArray())
            }, e.addHexPrefix = function (t) {
                return "string" != typeof t || o.isHexPrefixed(t) ? t : "0x" + t
            }, e.baToJSON = function (r) {
                if (t.isBuffer(r)) return "0x" + r.toString("hex");
                if (r instanceof Array) {
                    for (var n = [], i = 0; i < r.length; i++) n.push(e.baToJSON(r[i]));
                    return n
                }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = r(1),
            i = r(184),
            o = r(185),
            a = r(186),
            s = r(42);

        function Hash(t) {
            s.call(this, "digest"), this._hash = t
        }
        n(Hash, s), Hash.prototype._update = function (t) {
            this._hash.update(t)
        }, Hash.prototype._final = function () {
            return this._hash.digest()
        }, t.exports = function createHash(t) {
            return "md5" === (t = t.toLowerCase()) ? new i : "rmd160" === t || "ripemd160" === t ? new o : new Hash(a(t))
        }
    }, function (t, e, r) {
        var n = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
                void 0 === n && (n = r), Object.defineProperty(t, n, {
                    enumerable: !0,
                    get: function () {
                        return e[r]
                    }
                })
            } : function (t, e, r, n) {
                void 0 === n && (n = r), t[n] = e[r]
            }),
            i = this && this.__exportStar || function (t, e) {
                for (var r in t) "default" === r || e.hasOwnProperty(r) || n(e, t, r)
            };
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), i(r(332), e), i(r(333), e), i(r(848), e), i(r(198), e), i(r(849), e), i(r(58), e), i(r(850), e), i(r(851), e), i(r(199), e), i(r(20), e)
    }, function (t, e, r) {
        (function (t) {
            ! function (t, e) {
                function assert(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }

                function inherits(t, e) {
                    t.super_ = e;
                    var TempCtor = function () {};
                    TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
                }

                function BN(t, e, r) {
                    if (BN.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                var n;
                "object" == typeof t ? t.exports = BN : e.BN = BN, BN.BN = BN, BN.wordSize = 26;
                try {
                    n = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(845).Buffer
                } catch (t) {}

                function parseHex4Bits(t, e) {
                    var r = t.charCodeAt(e);
                    return r >= 48 && r <= 57 ? r - 48 : r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : void assert(!1, "Invalid character in " + t)
                }

                function parseHexByte(t, e, r) {
                    var n = parseHex4Bits(t, r);
                    return r - 1 >= e && (n |= parseHex4Bits(t, r - 1) << 4), n
                }

                function parseBase(t, e, r, n) {
                    for (var i = 0, o = 0, a = Math.min(t.length, r), s = e; s < a; s++) {
                        var u = t.charCodeAt(s) - 48;
                        i *= n, o = u >= 49 ? u - 49 + 10 : u >= 17 ? u - 17 + 10 : u, assert(u >= 0 && o < n, "Invalid character"), i += o
                    }
                    return i
                }

                function move(t, e) {
                    t.words = e.words, t.length = e.length, t.negative = e.negative, t.red = e.red
                }
                if (BN.isBN = function isBN(t) {
                        return t instanceof BN || null !== t && "object" == typeof t && t.constructor.wordSize === BN.wordSize && Array.isArray(t.words)
                    }, BN.max = function max(t, e) {
                        return t.cmp(e) > 0 ? t : e
                    }, BN.min = function min(t, e) {
                        return t.cmp(e) < 0 ? t : e
                    }, BN.prototype._init = function init(t, e, r) {
                        if ("number" == typeof t) return this._initNumber(t, e, r);
                        if ("object" == typeof t) return this._initArray(t, e, r);
                        "hex" === e && (e = 16), assert(e === (0 | e) && e >= 2 && e <= 36);
                        var n = 0;
                        "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (n++, this.negative = 1), n < t.length && (16 === e ? this._parseHex(t, n, r) : (this._parseBase(t, e, n), "le" === r && this._initArray(this.toArray(), e, r)))
                    }, BN.prototype._initNumber = function _initNumber(t, e, r) {
                        t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (assert(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                    }, BN.prototype._initArray = function _initArray(t, e, r) {
                        if (assert("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                        this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                        for (var n = 0; n < this.length; n++) this.words[n] = 0;
                        var i, o, a = 0;
                        if ("be" === r)
                            for (n = t.length - 1, i = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                        else if ("le" === r)
                            for (n = 0, i = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                        return this._strip()
                    }, BN.prototype._parseHex = function _parseHex(t, e, r) {
                        this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                        for (var n = 0; n < this.length; n++) this.words[n] = 0;
                        var i, o = 0,
                            a = 0;
                        if ("be" === r)
                            for (n = t.length - 1; n >= e; n -= 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                        else
                            for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                        this._strip()
                    }, BN.prototype._parseBase = function _parseBase(t, e, r) {
                        this.words = [0], this.length = 1;
                        for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                        n--, i = i / e | 0;
                        for (var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n) u = parseBase(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== a) {
                            var l = 1;
                            for (u = parseBase(t, c, t.length, e), c = 0; c < a; c++) l *= e;
                            this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                        }
                        this._strip()
                    }, BN.prototype.copy = function copy(t) {
                        t.words = new Array(this.length);
                        for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                        t.length = this.length, t.negative = this.negative, t.red = this.red
                    }, BN.prototype._move = function _move(t) {
                        move(t, this)
                    }, BN.prototype.clone = function clone() {
                        var t = new BN(null);
                        return this.copy(t), t
                    }, BN.prototype._expand = function _expand(t) {
                        for (; this.length < t;) this.words[this.length++] = 0;
                        return this
                    }, BN.prototype._strip = function strip() {
                        for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                        return this._normSign()
                    }, BN.prototype._normSign = function _normSign() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                    }, "undefined" != typeof Symbol && "function" == typeof Symbol.for) try {
                    BN.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect
                } catch (t) {
                    BN.prototype.inspect = inspect
                } else BN.prototype.inspect = inspect;

                function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                }
                var i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    o = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    a = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
                BN.prototype.toString = function toString(t, e) {
                    var r;
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var n = 0, s = 0, u = 0; u < this.length; u++) {
                            var c = this.words[u],
                                l = (16777215 & (c << n | s)).toString(16);
                            r = 0 !== (s = c >>> 24 - n & 16777215) || u !== this.length - 1 ? i[6 - l.length] + l + r : l + r, (n += 2) >= 26 && (n -= 26, u--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var h = o[t],
                            d = a[t];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero();) {
                            var m = p.modrn(d).toString(t);
                            r = (p = p.idivn(d)).isZero() ? m + r : i[h - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    assert(!1, "Base should be between 2 and 36")
                }, BN.prototype.toNumber = function toNumber() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, BN.prototype.toJSON = function toJSON() {
                    return this.toString(16, 2)
                }, n && (BN.prototype.toBuffer = function toBuffer(t, e) {
                    return this.toArrayLike(n, t, e)
                }), BN.prototype.toArray = function toArray(t, e) {
                    return this.toArrayLike(Array, t, e)
                };

                function smallMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, d = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= d; p++) {
                            var m = c - p | 0;
                            l += (a = (i = 0 | t.words[m]) * (o = 0 | e.words[p]) + h) / 67108864 | 0, h = 67108863 & a
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r._strip()
                }
                BN.prototype.toArrayLike = function toArrayLike(t, e, r) {
                    this._strip();
                    var n = this.byteLength(),
                        i = r || Math.max(1, n);
                    assert(n <= i, "byte array longer than desired length"), assert(i > 0, "Requested array length <= 0");
                    var o = function allocate(t, e) {
                        return t.allocUnsafe ? t.allocUnsafe(e) : new t(e)
                    }(t, i);
                    return this["_toArrayLike" + ("le" === e ? "LE" : "BE")](o, n), o
                }, BN.prototype._toArrayLikeLE = function _toArrayLikeLE(t, e) {
                    for (var r = 0, n = 0, i = 0, o = 0; i < this.length; i++) {
                        var a = this.words[i] << o | n;
                        t[r++] = 255 & a, r < t.length && (t[r++] = a >> 8 & 255), r < t.length && (t[r++] = a >> 16 & 255), 6 === o ? (r < t.length && (t[r++] = a >> 24 & 255), n = 0, o = 0) : (n = a >>> 24, o += 2)
                    }
                    if (r < t.length)
                        for (t[r++] = n; r < t.length;) t[r++] = 0
                }, BN.prototype._toArrayLikeBE = function _toArrayLikeBE(t, e) {
                    for (var r = t.length - 1, n = 0, i = 0, o = 0; i < this.length; i++) {
                        var a = this.words[i] << o | n;
                        t[r--] = 255 & a, r >= 0 && (t[r--] = a >> 8 & 255), r >= 0 && (t[r--] = a >> 16 & 255), 6 === o ? (r >= 0 && (t[r--] = a >> 24 & 255), n = 0, o = 0) : (n = a >>> 24, o += 2)
                    }
                    if (r >= 0)
                        for (t[r--] = n; r >= 0;) t[r--] = 0
                }, Math.clz32 ? BN.prototype._countBits = function _countBits(t) {
                    return 32 - Math.clz32(t)
                } : BN.prototype._countBits = function _countBits(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, BN.prototype._zeroBits = function _zeroBits(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r
                }, BN.prototype.bitLength = function bitLength() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return 26 * (this.length - 1) + e
                }, BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8)
                }, BN.prototype.toTwos = function toTwos(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, BN.prototype.fromTwos = function fromTwos(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, BN.prototype.isNeg = function isNeg() {
                    return 0 !== this.negative
                }, BN.prototype.neg = function neg() {
                    return this.clone().ineg()
                }, BN.prototype.ineg = function ineg() {
                    return this.isZero() || (this.negative ^= 1), this
                }, BN.prototype.iuor = function iuor(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this._strip()
                }, BN.prototype.ior = function ior(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuor(t)
                }, BN.prototype.or = function or(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, BN.prototype.uor = function uor(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, BN.prototype.iuand = function iuand(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this._strip()
                }, BN.prototype.iand = function iand(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuand(t)
                }, BN.prototype.and = function and(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, BN.prototype.uand = function uand(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, BN.prototype.iuxor = function iuxor(t) {
                    var e, r;
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this._strip()
                }, BN.prototype.ixor = function ixor(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuxor(t)
                }, BN.prototype.xor = function xor(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, BN.prototype.uxor = function uxor(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, BN.prototype.inotn = function inotn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this._strip()
                }, BN.prototype.notn = function notn(t) {
                    return this.clone().inotn(t)
                }, BN.prototype.setn = function setn(t, e) {
                    assert("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        n = t % 26;
                    return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this._strip()
                }, BN.prototype.iadd = function iadd(t) {
                    var e, r, n;
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, BN.prototype.add = function add(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, BN.prototype.isub = function isub(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e = this.iadd(t);
                        return t.negative = 1, e._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var r, n, i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (r = this, n = t) : (r = t, n = this);
                    for (var o = 0, a = 0; a < n.length; a++) o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    for (; 0 !== o && a < r.length; a++) o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    if (0 === o && a < r.length && r !== this)
                        for (; a < r.length; a++) this.words[a] = r.words[a];
                    return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this._strip()
                }, BN.prototype.sub = function sub(t) {
                    return this.clone().isub(t)
                };
                var s = function comb10MulTo(t, e, r) {
                    var n, i, o, a = t.words,
                        s = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        h = 8191 & l,
                        d = l >>> 13,
                        p = 0 | a[1],
                        m = 8191 & p,
                        y = p >>> 13,
                        b = 0 | a[2],
                        g = 8191 & b,
                        v = b >>> 13,
                        w = 0 | a[3],
                        M = 8191 & w,
                        A = w >>> 13,
                        x = 0 | a[4],
                        B = 8191 & x,
                        E = x >>> 13,
                        k = 0 | a[5],
                        N = 8191 & k,
                        T = k >>> 13,
                        C = 0 | a[6],
                        P = 8191 & C,
                        I = C >>> 13,
                        O = 0 | a[7],
                        D = 8191 & O,
                        j = O >>> 13,
                        L = 0 | a[8],
                        U = 8191 & L,
                        H = L >>> 13,
                        q = 0 | a[9],
                        z = 8191 & q,
                        G = q >>> 13,
                        V = 0 | s[0],
                        J = 8191 & V,
                        W = V >>> 13,
                        Z = 0 | s[1],
                        X = 8191 & Z,
                        Y = Z >>> 13,
                        $ = 0 | s[2],
                        Q = 8191 & $,
                        tt = $ >>> 13,
                        et = 0 | s[3],
                        rt = 8191 & et,
                        nt = et >>> 13,
                        it = 0 | s[4],
                        ot = 8191 & it,
                        st = it >>> 13,
                        ut = 0 | s[5],
                        ct = 8191 & ut,
                        ht = ut >>> 13,
                        dt = 0 | s[6],
                        pt = 8191 & dt,
                        mt = dt >>> 13,
                        yt = 0 | s[7],
                        bt = 8191 & yt,
                        vt = yt >>> 13,
                        wt = 0 | s[8],
                        Mt = 8191 & wt,
                        _t = wt >>> 13,
                        At = 0 | s[9],
                        xt = 8191 & At,
                        Bt = At >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var Et = (c + (n = Math.imul(h, J)) | 0) + ((8191 & (i = (i = Math.imul(h, W)) + Math.imul(d, J) | 0)) << 13) | 0;
                    c = ((o = Math.imul(d, W)) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(m, J), i = (i = Math.imul(m, W)) + Math.imul(y, J) | 0, o = Math.imul(y, W);
                    var kt = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(d, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Y) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(g, J), i = (i = Math.imul(g, W)) + Math.imul(v, J) | 0, o = Math.imul(v, W), n = n + Math.imul(m, X) | 0, i = (i = i + Math.imul(m, Y) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, Y) | 0;
                    var Nt = (c + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, tt) | 0) + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(M, J), i = (i = Math.imul(M, W)) + Math.imul(A, J) | 0, o = Math.imul(A, W), n = n + Math.imul(g, X) | 0, i = (i = i + Math.imul(g, Y) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, Y) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0;
                    var St = (c + (n = n + Math.imul(h, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, nt) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, nt) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(B, J), i = (i = Math.imul(B, W)) + Math.imul(E, J) | 0, o = Math.imul(E, W), n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(g, Q) | 0, i = (i = i + Math.imul(g, tt) | 0) + Math.imul(v, Q) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                    var Tt = (c + (n = n + Math.imul(h, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, st) | 0) + Math.imul(d, ot) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, st) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(N, J), i = (i = Math.imul(N, W)) + Math.imul(T, J) | 0, o = Math.imul(T, W), n = n + Math.imul(B, X) | 0, i = (i = i + Math.imul(B, Y) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(g, rt) | 0, i = (i = i + Math.imul(g, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                    var Ct = (c + (n = n + Math.imul(h, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ht) | 0) + Math.imul(d, ct) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, ht) | 0) + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(P, J), i = (i = Math.imul(P, W)) + Math.imul(I, J) | 0, o = Math.imul(I, W), n = n + Math.imul(N, X) | 0, i = (i = i + Math.imul(N, Y) | 0) + Math.imul(T, X) | 0, o = o + Math.imul(T, Y) | 0, n = n + Math.imul(B, Q) | 0, i = (i = i + Math.imul(B, tt) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(M, rt) | 0, i = (i = i + Math.imul(M, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(g, ot) | 0, i = (i = i + Math.imul(g, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(m, ct) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, ht) | 0;
                    var Pt = (c + (n = n + Math.imul(h, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, mt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, mt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(D, J), i = (i = Math.imul(D, W)) + Math.imul(j, J) | 0, o = Math.imul(j, W), n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(N, Q) | 0, i = (i = i + Math.imul(N, tt) | 0) + Math.imul(T, Q) | 0, o = o + Math.imul(T, tt) | 0, n = n + Math.imul(B, rt) | 0, i = (i = i + Math.imul(B, nt) | 0) + Math.imul(E, rt) | 0, o = o + Math.imul(E, nt) | 0, n = n + Math.imul(M, ot) | 0, i = (i = i + Math.imul(M, st) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(g, ct) | 0, i = (i = i + Math.imul(g, ht) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(m, pt) | 0, i = (i = i + Math.imul(m, mt) | 0) + Math.imul(y, pt) | 0, o = o + Math.imul(y, mt) | 0;
                    var It = (c + (n = n + Math.imul(h, bt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, vt) | 0) + Math.imul(d, bt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, vt) | 0) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(U, J), i = (i = Math.imul(U, W)) + Math.imul(H, J) | 0, o = Math.imul(H, W), n = n + Math.imul(D, X) | 0, i = (i = i + Math.imul(D, Y) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, tt) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = (i = i + Math.imul(N, nt) | 0) + Math.imul(T, rt) | 0, o = o + Math.imul(T, nt) | 0, n = n + Math.imul(B, ot) | 0, i = (i = i + Math.imul(B, st) | 0) + Math.imul(E, ot) | 0, o = o + Math.imul(E, st) | 0, n = n + Math.imul(M, ct) | 0, i = (i = i + Math.imul(M, ht) | 0) + Math.imul(A, ct) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(g, pt) | 0, i = (i = i + Math.imul(g, mt) | 0) + Math.imul(v, pt) | 0, o = o + Math.imul(v, mt) | 0, n = n + Math.imul(m, bt) | 0, i = (i = i + Math.imul(m, vt) | 0) + Math.imul(y, bt) | 0, o = o + Math.imul(y, vt) | 0;
                    var Ot = (c + (n = n + Math.imul(h, Mt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, _t) | 0) + Math.imul(d, Mt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, _t) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(z, J), i = (i = Math.imul(z, W)) + Math.imul(G, J) | 0, o = Math.imul(G, W), n = n + Math.imul(U, X) | 0, i = (i = i + Math.imul(U, Y) | 0) + Math.imul(H, X) | 0, o = o + Math.imul(H, Y) | 0, n = n + Math.imul(D, Q) | 0, i = (i = i + Math.imul(D, tt) | 0) + Math.imul(j, Q) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(P, rt) | 0, i = (i = i + Math.imul(P, nt) | 0) + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = (i = i + Math.imul(N, st) | 0) + Math.imul(T, ot) | 0, o = o + Math.imul(T, st) | 0, n = n + Math.imul(B, ct) | 0, i = (i = i + Math.imul(B, ht) | 0) + Math.imul(E, ct) | 0, o = o + Math.imul(E, ht) | 0, n = n + Math.imul(M, pt) | 0, i = (i = i + Math.imul(M, mt) | 0) + Math.imul(A, pt) | 0, o = o + Math.imul(A, mt) | 0, n = n + Math.imul(g, bt) | 0, i = (i = i + Math.imul(g, vt) | 0) + Math.imul(v, bt) | 0, o = o + Math.imul(v, vt) | 0, n = n + Math.imul(m, Mt) | 0, i = (i = i + Math.imul(m, _t) | 0) + Math.imul(y, Mt) | 0, o = o + Math.imul(y, _t) | 0;
                    var Rt = (c + (n = n + Math.imul(h, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Bt) | 0) + Math.imul(d, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Bt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(z, X), i = (i = Math.imul(z, Y)) + Math.imul(G, X) | 0, o = Math.imul(G, Y), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, tt) | 0) + Math.imul(H, Q) | 0, o = o + Math.imul(H, tt) | 0, n = n + Math.imul(D, rt) | 0, i = (i = i + Math.imul(D, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(P, ot) | 0, i = (i = i + Math.imul(P, st) | 0) + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ct) | 0, i = (i = i + Math.imul(N, ht) | 0) + Math.imul(T, ct) | 0, o = o + Math.imul(T, ht) | 0, n = n + Math.imul(B, pt) | 0, i = (i = i + Math.imul(B, mt) | 0) + Math.imul(E, pt) | 0, o = o + Math.imul(E, mt) | 0, n = n + Math.imul(M, bt) | 0, i = (i = i + Math.imul(M, vt) | 0) + Math.imul(A, bt) | 0, o = o + Math.imul(A, vt) | 0, n = n + Math.imul(g, Mt) | 0, i = (i = i + Math.imul(g, _t) | 0) + Math.imul(v, Mt) | 0, o = o + Math.imul(v, _t) | 0;
                    var Ft = (c + (n = n + Math.imul(m, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, Bt) | 0) + Math.imul(y, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, Bt) | 0) + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(z, Q), i = (i = Math.imul(z, tt)) + Math.imul(G, Q) | 0, o = Math.imul(G, tt), n = n + Math.imul(U, rt) | 0, i = (i = i + Math.imul(U, nt) | 0) + Math.imul(H, rt) | 0, o = o + Math.imul(H, nt) | 0, n = n + Math.imul(D, ot) | 0, i = (i = i + Math.imul(D, st) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, st) | 0, n = n + Math.imul(P, ct) | 0, i = (i = i + Math.imul(P, ht) | 0) + Math.imul(I, ct) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, pt) | 0, i = (i = i + Math.imul(N, mt) | 0) + Math.imul(T, pt) | 0, o = o + Math.imul(T, mt) | 0, n = n + Math.imul(B, bt) | 0, i = (i = i + Math.imul(B, vt) | 0) + Math.imul(E, bt) | 0, o = o + Math.imul(E, vt) | 0, n = n + Math.imul(M, Mt) | 0, i = (i = i + Math.imul(M, _t) | 0) + Math.imul(A, Mt) | 0, o = o + Math.imul(A, _t) | 0;
                    var Dt = (c + (n = n + Math.imul(g, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(g, Bt) | 0) + Math.imul(v, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(v, Bt) | 0) + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(z, rt), i = (i = Math.imul(z, nt)) + Math.imul(G, rt) | 0, o = Math.imul(G, nt), n = n + Math.imul(U, ot) | 0, i = (i = i + Math.imul(U, st) | 0) + Math.imul(H, ot) | 0, o = o + Math.imul(H, st) | 0, n = n + Math.imul(D, ct) | 0, i = (i = i + Math.imul(D, ht) | 0) + Math.imul(j, ct) | 0, o = o + Math.imul(j, ht) | 0, n = n + Math.imul(P, pt) | 0, i = (i = i + Math.imul(P, mt) | 0) + Math.imul(I, pt) | 0, o = o + Math.imul(I, mt) | 0, n = n + Math.imul(N, bt) | 0, i = (i = i + Math.imul(N, vt) | 0) + Math.imul(T, bt) | 0, o = o + Math.imul(T, vt) | 0, n = n + Math.imul(B, Mt) | 0, i = (i = i + Math.imul(B, _t) | 0) + Math.imul(E, Mt) | 0, o = o + Math.imul(E, _t) | 0;
                    var jt = (c + (n = n + Math.imul(M, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, Bt) | 0) + Math.imul(A, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, Bt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(z, ot), i = (i = Math.imul(z, st)) + Math.imul(G, ot) | 0, o = Math.imul(G, st), n = n + Math.imul(U, ct) | 0, i = (i = i + Math.imul(U, ht) | 0) + Math.imul(H, ct) | 0, o = o + Math.imul(H, ht) | 0, n = n + Math.imul(D, pt) | 0, i = (i = i + Math.imul(D, mt) | 0) + Math.imul(j, pt) | 0, o = o + Math.imul(j, mt) | 0, n = n + Math.imul(P, bt) | 0, i = (i = i + Math.imul(P, vt) | 0) + Math.imul(I, bt) | 0, o = o + Math.imul(I, vt) | 0, n = n + Math.imul(N, Mt) | 0, i = (i = i + Math.imul(N, _t) | 0) + Math.imul(T, Mt) | 0, o = o + Math.imul(T, _t) | 0;
                    var Lt = (c + (n = n + Math.imul(B, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, Bt) | 0) + Math.imul(E, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, Bt) | 0) + (i >>> 13) | 0) + (Lt >>> 26) | 0, Lt &= 67108863, n = Math.imul(z, ct), i = (i = Math.imul(z, ht)) + Math.imul(G, ct) | 0, o = Math.imul(G, ht), n = n + Math.imul(U, pt) | 0, i = (i = i + Math.imul(U, mt) | 0) + Math.imul(H, pt) | 0, o = o + Math.imul(H, mt) | 0, n = n + Math.imul(D, bt) | 0, i = (i = i + Math.imul(D, vt) | 0) + Math.imul(j, bt) | 0, o = o + Math.imul(j, vt) | 0, n = n + Math.imul(P, Mt) | 0, i = (i = i + Math.imul(P, _t) | 0) + Math.imul(I, Mt) | 0, o = o + Math.imul(I, _t) | 0;
                    var Ut = (c + (n = n + Math.imul(N, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(N, Bt) | 0) + Math.imul(T, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(T, Bt) | 0) + (i >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, n = Math.imul(z, pt), i = (i = Math.imul(z, mt)) + Math.imul(G, pt) | 0, o = Math.imul(G, mt), n = n + Math.imul(U, bt) | 0, i = (i = i + Math.imul(U, vt) | 0) + Math.imul(H, bt) | 0, o = o + Math.imul(H, vt) | 0, n = n + Math.imul(D, Mt) | 0, i = (i = i + Math.imul(D, _t) | 0) + Math.imul(j, Mt) | 0, o = o + Math.imul(j, _t) | 0;
                    var Ht = (c + (n = n + Math.imul(P, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, Bt) | 0) + Math.imul(I, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, Bt) | 0) + (i >>> 13) | 0) + (Ht >>> 26) | 0, Ht &= 67108863, n = Math.imul(z, bt), i = (i = Math.imul(z, vt)) + Math.imul(G, bt) | 0, o = Math.imul(G, vt), n = n + Math.imul(U, Mt) | 0, i = (i = i + Math.imul(U, _t) | 0) + Math.imul(H, Mt) | 0, o = o + Math.imul(H, _t) | 0;
                    var qt = (c + (n = n + Math.imul(D, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(D, Bt) | 0) + Math.imul(j, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, Bt) | 0) + (i >>> 13) | 0) + (qt >>> 26) | 0, qt &= 67108863, n = Math.imul(z, Mt), i = (i = Math.imul(z, _t)) + Math.imul(G, Mt) | 0, o = Math.imul(G, _t);
                    var zt = (c + (n = n + Math.imul(U, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, Bt) | 0) + Math.imul(H, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(H, Bt) | 0) + (i >>> 13) | 0) + (zt >>> 26) | 0, zt &= 67108863;
                    var Gt = (c + (n = Math.imul(z, xt)) | 0) + ((8191 & (i = (i = Math.imul(z, Bt)) + Math.imul(G, xt) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(G, Bt)) + (i >>> 13) | 0) + (Gt >>> 26) | 0, Gt &= 67108863, u[0] = Et, u[1] = kt, u[2] = Nt, u[3] = St, u[4] = Tt, u[5] = Ct, u[6] = Pt, u[7] = It, u[8] = Ot, u[9] = Rt, u[10] = Ft, u[11] = Dt, u[12] = jt, u[13] = Lt, u[14] = Ut, u[15] = Ht, u[16] = qt, u[17] = zt, u[18] = Gt, 0 !== c && (u[19] = c, r.length++), r
                };

                function bigMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                    for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                        var a = i;
                        i = 0;
                        for (var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                            var l = o - c,
                                h = (0 | t.words[l]) * (0 | e.words[c]),
                                d = 67108863 & h;
                            s = 67108863 & (d = d + s | 0), i += (a = (a = a + (h / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863
                        }
                        r.words[o] = s, n = a, a = i
                    }
                    return 0 !== n ? r.words[o] = n : r.length--, r._strip()
                }

                function jumboMulTo(t, e, r) {
                    return bigMulTo(t, e, r)
                }

                function FFTM(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (s = smallMulTo), BN.prototype.mulTo = function mulTo(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? s(this, t, e) : r < 63 ? smallMulTo(this, t, e) : r < 1024 ? bigMulTo(this, t, e) : jumboMulTo(this, t, e)
                }, FFTM.prototype.makeRBT = function makeRBT(t) {
                    for (var e = new Array(t), r = BN.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, FFTM.prototype.revBin = function revBin(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, FFTM.prototype.permute = function permute(t, e, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = e[t[a]], i[a] = r[t[a]]
                }, FFTM.prototype.transform = function transform(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var h = u, d = c, p = 0; p < a; p++) {
                                var m = r[l + p],
                                    y = n[l + p],
                                    b = r[l + p + a],
                                    g = n[l + p + a],
                                    v = h * b - d * g;
                                g = h * g + d * b, b = v, r[l + p] = m + b, n[l + p] = y + g, r[l + p + a] = m - b, n[l + p + a] = y - g, p !== s && (v = u * h - c * d, d = u * d + c * h, h = v)
                            }
                }, FFTM.prototype.guessLen13b = function guessLen13b(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, FFTM.prototype.conjugate = function conjugate(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, FFTM.prototype.normalize13b = function normalize13b(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, FFTM.prototype.convert13b = function convert13b(t, e, r, n) {
                    for (var i = 0, o = 0; o < e; o++) i += 0 | t[o], r[2 * o] = 8191 & i, i >>>= 13, r[2 * o + 1] = 8191 & i, i >>>= 13;
                    for (o = 2 * e; o < n; ++o) r[o] = 0;
                    assert(0 === i), assert(0 == (-8192 & i))
                }, FFTM.prototype.stub = function stub(t) {
                    for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, FFTM.prototype.mulp = function mulp(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = new Array(n),
                        s = new Array(n),
                        u = new Array(n),
                        c = new Array(n),
                        l = new Array(n),
                        h = new Array(n),
                        d = r.words;
                    d.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var p = 0; p < n; p++) {
                        var m = s[p] * l[p] - u[p] * h[p];
                        u[p] = s[p] * h[p] + u[p] * l[p], s[p] = m
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, d, o, n, i), this.conjugate(d, o, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r._strip()
                }, BN.prototype.mul = function mul(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                }, BN.prototype.mulf = function mulf(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), jumboMulTo(this, t, e)
                }, BN.prototype.imul = function imul(t) {
                    return this.clone().mulTo(t, this)
                }, BN.prototype.imuln = function imuln(t) {
                    var e = t < 0;
                    e && (t = -t), assert("number" == typeof t), assert(t < 67108864);
                    for (var r = 0, n = 0; n < this.length; n++) {
                        var i = (0 | this.words[n]) * t,
                            o = (67108863 & i) + (67108863 & r);
                        r >>= 26, r += i / 67108864 | 0, r += o >>> 26, this.words[n] = 67108863 & o
                    }
                    return 0 !== r && (this.words[n] = r, this.length++), e ? this.ineg() : this
                }, BN.prototype.muln = function muln(t) {
                    return this.clone().imuln(t)
                }, BN.prototype.sqr = function sqr() {
                    return this.mul(this)
                }, BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone())
                }, BN.prototype.pow = function pow(t) {
                    var e = function toBitArray(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = t.words[n] >>> i & 1
                        }
                        return e
                    }(t);
                    if (0 === e.length) return new BN(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, BN.prototype.iushln = function iushln(t) {
                    assert("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        n = (t - r) / 26,
                        i = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & i,
                                s = (0 | this.words[e]) - a << r;
                            this.words[e] = s | o, o = a >>> 26 - r
                        }
                        o && (this.words[e] = o, this.length++)
                    }
                    if (0 !== n) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                        for (e = 0; e < n; e++) this.words[e] = 0;
                        this.length += n
                    }
                    return this._strip()
                }, BN.prototype.ishln = function ishln(t) {
                    return assert(0 === this.negative), this.iushln(t)
                }, BN.prototype.iushrn = function iushrn(t, e, r) {
                    var n;
                    assert("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                    var i = t % 26,
                        o = Math.min((t - i) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> i << i,
                        s = r;
                    if (n -= o, n = Math.max(0, n), s) {
                        for (var u = 0; u < o; u++) s.words[u] = this.words[u];
                        s.length = o
                    }
                    if (0 === o);
                    else if (this.length > o)
                        for (this.length -= o, u = 0; u < this.length; u++) this.words[u] = this.words[u + o];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= n); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - i | l >>> i, c = l & a
                    }
                    return s && 0 !== c && (s.words[s.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip()
                }, BN.prototype.ishrn = function ishrn(t, e, r) {
                    return assert(0 === this.negative), this.iushrn(t, e, r)
                }, BN.prototype.shln = function shln(t) {
                    return this.clone().ishln(t)
                }, BN.prototype.ushln = function ushln(t) {
                    return this.clone().iushln(t)
                }, BN.prototype.shrn = function shrn(t) {
                    return this.clone().ishrn(t)
                }, BN.prototype.ushrn = function ushrn(t) {
                    return this.clone().iushrn(t)
                }, BN.prototype.testn = function testn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }, BN.prototype.imaskn = function imaskn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var n = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= n
                    }
                    return this._strip()
                }, BN.prototype.maskn = function maskn(t) {
                    return this.clone().imaskn(t)
                }, BN.prototype.iaddn = function iaddn(t) {
                    return assert("number" == typeof t), assert(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                }, BN.prototype._iaddn = function _iaddn(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, BN.prototype.isubn = function isubn(t) {
                    if (assert("number" == typeof t), assert(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this._strip()
                }, BN.prototype.addn = function addn(t) {
                    return this.clone().iaddn(t)
                }, BN.prototype.subn = function subn(t) {
                    return this.clone().isubn(t)
                }, BN.prototype.iabs = function iabs() {
                    return this.negative = 0, this
                }, BN.prototype.abs = function abs() {
                    return this.clone().iabs()
                }, BN.prototype._ishlnsubmul = function _ishlnsubmul(t, e, r) {
                    var n, i, o = t.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < t.length; n++) {
                        i = (0 | this.words[n + r]) + a;
                        var s = (0 | t.words[n]) * e;
                        a = ((i -= 67108863 & s) >> 26) - (s / 67108864 | 0), this.words[n + r] = 67108863 & i
                    }
                    for (; n < this.length - r; n++) a = (i = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & i;
                    if (0 === a) return this._strip();
                    for (assert(-1 === a), a = 0, n = 0; n < this.length; n++) a = (i = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & i;
                    return this.negative = 1, this._strip()
                }, BN.prototype._wordDiv = function _wordDiv(t, e) {
                    var r = (this.length, t.length),
                        n = this.clone(),
                        i = t,
                        o = 0 | i.words[i.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                    var a, s = n.length - i.length;
                    if ("mod" !== e) {
                        (a = new BN(null)).length = s + 1, a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++) a.words[u] = 0
                    }
                    var c = n.clone()._ishlnsubmul(i, 1, s);
                    0 === c.negative && (n = c, a && (a.words[s] = 1));
                    for (var l = s - 1; l >= 0; l--) {
                        var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                        for (h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;) h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                        a && (a.words[l] = h)
                    }
                    return a && a._strip(), n._strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                        div: a || null,
                        mod: n
                    }
                }, BN.prototype.divmod = function divmod(t, e, r) {
                    return assert(!t.isZero()), this.isZero() ? {
                        div: new BN(0),
                        mod: new BN(0)
                    } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), "mod" !== e && (n = o.div.neg()), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(t)), {
                        div: n,
                        mod: i
                    }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), "mod" !== e && (n = o.div.neg()), {
                        div: n,
                        mod: o.mod
                    }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(t)), {
                        div: o.div,
                        mod: i
                    }) : t.length > this.length || this.cmp(t) < 0 ? {
                        div: new BN(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new BN(this.modrn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new BN(this.modrn(t.words[0]))
                    } : this._wordDiv(t, e);
                    var n, i, o
                }, BN.prototype.div = function div(t) {
                    return this.divmod(t, "div", !1).div
                }, BN.prototype.mod = function mod(t) {
                    return this.divmod(t, "mod", !1).mod
                }, BN.prototype.umod = function umod(t) {
                    return this.divmod(t, "mod", !0).mod
                }, BN.prototype.divRound = function divRound(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, BN.prototype.modrn = function modrn(t) {
                    var e = t < 0;
                    e && (t = -t), assert(t <= 67108863);
                    for (var r = (1 << 26) % t, n = 0, i = this.length - 1; i >= 0; i--) n = (r * n + (0 | this.words[i])) % t;
                    return e ? -n : n
                }, BN.prototype.modn = function modn(t) {
                    return this.modrn(t)
                }, BN.prototype.idivn = function idivn(t) {
                    var e = t < 0;
                    e && (t = -t), assert(t <= 67108863);
                    for (var r = 0, n = this.length - 1; n >= 0; n--) {
                        var i = (0 | this.words[n]) + 67108864 * r;
                        this.words[n] = i / t | 0, r = i % t
                    }
                    return this._strip(), e ? this.ineg() : this
                }, BN.prototype.divn = function divn(t) {
                    return this.clone().idivn(t)
                }, BN.prototype.egcd = function egcd(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n = new BN(1), i = new BN(0), o = new BN(0), a = new BN(1), s = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++s;
                    for (var u = r.clone(), c = e.clone(); !e.isZero();) {
                        for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                        if (l > 0)
                            for (e.iushrn(l); l-- > 0;)(n.isOdd() || i.isOdd()) && (n.iadd(u), i.isub(c)), n.iushrn(1), i.iushrn(1);
                        for (var d = 0, p = 1; 0 == (r.words[0] & p) && d < 26; ++d, p <<= 1);
                        if (d > 0)
                            for (r.iushrn(d); d-- > 0;)(o.isOdd() || a.isOdd()) && (o.iadd(u), a.isub(c)), o.iushrn(1), a.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), n.isub(o), i.isub(a)) : (r.isub(e), o.isub(n), a.isub(i))
                    }
                    return {
                        a: o,
                        b: a,
                        gcd: r.iushln(s)
                    }
                }, BN.prototype._invmp = function _invmp(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n, i = new BN(1), o = new BN(0), a = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var s = 0, u = 1; 0 == (e.words[0] & u) && s < 26; ++s, u <<= 1);
                        if (s > 0)
                            for (e.iushrn(s); s-- > 0;) i.isOdd() && i.iadd(a), i.iushrn(1);
                        for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(a), o.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(o)) : (r.isub(e), o.isub(i))
                    }
                    return (n = 0 === e.cmpn(1) ? i : o).cmpn(0) < 0 && n.iadd(t), n
                }, BN.prototype.gcd = function gcd(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, BN.prototype.invm = function invm(t) {
                    return this.egcd(t).a.umod(t)
                }, BN.prototype.isEven = function isEven() {
                    return 0 == (1 & this.words[0])
                }, BN.prototype.isOdd = function isOdd() {
                    return 1 == (1 & this.words[0])
                }, BN.prototype.andln = function andln(t) {
                    return this.words[0] & t
                }, BN.prototype.bincn = function bincn(t) {
                    assert("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                    for (var i = n, o = r; 0 !== i && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        i = (a += i) >>> 26, a &= 67108863, this.words[o] = a
                    }
                    return 0 !== i && (this.words[o] = i, this.length++), this
                }, BN.prototype.isZero = function isZero() {
                    return 1 === this.length && 0 === this.words[0]
                }, BN.prototype.cmpn = function cmpn(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this._strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), assert(t <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        e = n === t ? 0 : n < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.cmp = function cmp(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.ucmp = function ucmp(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, BN.prototype.gtn = function gtn(t) {
                    return 1 === this.cmpn(t)
                }, BN.prototype.gt = function gt(t) {
                    return 1 === this.cmp(t)
                }, BN.prototype.gten = function gten(t) {
                    return this.cmpn(t) >= 0
                }, BN.prototype.gte = function gte(t) {
                    return this.cmp(t) >= 0
                }, BN.prototype.ltn = function ltn(t) {
                    return -1 === this.cmpn(t)
                }, BN.prototype.lt = function lt(t) {
                    return -1 === this.cmp(t)
                }, BN.prototype.lten = function lten(t) {
                    return this.cmpn(t) <= 0
                }, BN.prototype.lte = function lte(t) {
                    return this.cmp(t) <= 0
                }, BN.prototype.eqn = function eqn(t) {
                    return 0 === this.cmpn(t)
                }, BN.prototype.eq = function eq(t) {
                    return 0 === this.cmp(t)
                }, BN.red = function red(t) {
                    return new Red(t)
                }, BN.prototype.toRed = function toRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, BN.prototype.fromRed = function fromRed() {
                    return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, BN.prototype._forceRed = function _forceRed(t) {
                    return this.red = t, this
                }, BN.prototype.forceRed = function forceRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, BN.prototype.redAdd = function redAdd(t) {
                    return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, BN.prototype.redIAdd = function redIAdd(t) {
                    return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, BN.prototype.redSub = function redSub(t) {
                    return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, BN.prototype.redISub = function redISub(t) {
                    return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, BN.prototype.redShl = function redShl(t) {
                    return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, BN.prototype.redMul = function redMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, BN.prototype.redIMul = function redIMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, BN.prototype.redSqr = function redSqr() {
                    return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, BN.prototype.redISqr = function redISqr() {
                    return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, BN.prototype.redSqrt = function redSqrt() {
                    return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, BN.prototype.redInvm = function redInvm() {
                    return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, BN.prototype.redNeg = function redNeg() {
                    return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, BN.prototype.redPow = function redPow(t) {
                    return assert(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var u = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function MPrime(t, e) {
                    this.name = t, this.p = new BN(e, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function Red(t) {
                    if ("string" == typeof t) {
                        var e = BN._prime(t);
                        this.m = e.p, this.prime = e
                    } else assert(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function Mont(t) {
                    Red.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                MPrime.prototype._tmp = function _tmp() {
                    var t = new BN(null);
                    return t.words = new Array(Math.ceil(this.n / 13)), t
                }, MPrime.prototype.ireduce = function ireduce(t) {
                    var e, r = t;
                    do {
                        this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                }, MPrime.prototype.split = function split(t, e) {
                    t.iushrn(this.n, 0, e)
                }, MPrime.prototype.imulK = function imulK(t) {
                    return t.imul(this.k)
                }, inherits(K256, MPrime), K256.prototype.split = function split(t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++) e.words[n] = t.words[n];
                    if (e.length = r, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                    var i = t.words[9];
                    for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, K256.prototype.imulK = function imulK(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function imulK(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 19 * (0 | t.words[r]) + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, BN._prime = function prime(t) {
                    if (u[t]) return u[t];
                    var prime;
                    if ("k256" === t) prime = new K256;
                    else if ("p224" === t) prime = new P224;
                    else if ("p192" === t) prime = new P192;
                    else {
                        if ("p25519" !== t) throw new Error("Unknown prime " + t);
                        prime = new P25519
                    }
                    return u[t] = prime, prime
                }, Red.prototype._verify1 = function _verify1(t) {
                    assert(0 === t.negative, "red works only with positives"), assert(t.red, "red works only with red numbers")
                }, Red.prototype._verify2 = function _verify2(t, e) {
                    assert(0 == (t.negative | e.negative), "red works only with positives"), assert(t.red && t.red === e.red, "red works only with red numbers")
                }, Red.prototype.imod = function imod(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : (move(t, t.umod(this.m)._forceRed(this)), t)
                }, Red.prototype.neg = function neg(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, Red.prototype.add = function add(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, Red.prototype.iadd = function iadd(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, Red.prototype.sub = function sub(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                }, Red.prototype.isub = function isub(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r
                }, Red.prototype.shl = function shl(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, Red.prototype.imul = function imul(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, Red.prototype.mul = function mul(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, Red.prototype.isqr = function isqr(t) {
                    return this.imul(t, t.clone())
                }, Red.prototype.sqr = function sqr(t) {
                    return this.mul(t, t)
                }, Red.prototype.sqrt = function sqrt(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (assert(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var n = this.m.subn(1), i = 0; !n.isZero() && 0 === n.andln(1);) i++, n.iushrn(1);
                    assert(!n.isZero());
                    var o = new BN(1).toRed(this),
                        a = o.redNeg(),
                        s = this.m.subn(1).iushrn(1),
                        u = this.m.bitLength();
                    for (u = new BN(2 * u * u).toRed(this); 0 !== this.pow(u, s).cmp(a);) u.redIAdd(a);
                    for (var c = this.pow(u, n), l = this.pow(t, n.addn(1).iushrn(1)), h = this.pow(t, n), d = i; 0 !== h.cmp(o);) {
                        for (var p = h, m = 0; 0 !== p.cmp(o); m++) p = p.redSqr();
                        assert(m < d);
                        var y = this.pow(c, new BN(1).iushln(d - m - 1));
                        l = l.redMul(y), c = y.redSqr(), h = h.redMul(c), d = m
                    }
                    return l
                }, Red.prototype.invm = function invm(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, Red.prototype.pow = function pow(t, e) {
                    if (e.isZero()) return new BN(1).toRed(this);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = new Array(16);
                    r[0] = new BN(1).toRed(this), r[1] = t;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], t);
                    var i = r[0],
                        o = 0,
                        a = 0,
                        s = e.bitLength() % 26;
                    for (0 === s && (s = 26), n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = s - 1; c >= 0; c--) {
                            var l = u >> c & 1;
                            i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 === ++a || 0 === n && 0 === c) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0
                        }
                        s = 26
                    }
                    return i
                }, Red.prototype.convertTo = function convertTo(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, Red.prototype.convertFrom = function convertFrom(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, BN.mont = function mont(t) {
                    return new Mont(t)
                }, inherits(Mont, Red), Mont.prototype.convertTo = function convertTo(t) {
                    return this.imod(t.ushln(this.shift))
                }, Mont.prototype.convertFrom = function convertFrom(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, Mont.prototype.imul = function imul(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.mul = function mul(t, e) {
                    if (t.isZero() || e.isZero()) return new BN(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.invm = function invm(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t, this)
        }).call(this, r(8)(t))
    }, function (t, e, r) {
        (function (t) {
            var n = this && this.__importDefault || function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.baToJSON = e.addHexPrefix = e.toUnsigned = e.fromSigned = e.bufferToHex = e.bufferToInt = e.toBuffer = e.unpadHexString = e.unpadArray = e.unpadBuffer = e.setLengthRight = e.setLengthLeft = e.zeros = void 0;
            var i = n(r(57)),
                o = r(20),
                a = r(136);
            e.zeros = function (e) {
                return t.allocUnsafe(e).fill(0)
            };
            var setLength = function (t, r, n) {
                var i = e.zeros(r);
                return n ? t.length < r ? (t.copy(i), i) : t.slice(0, r) : t.length < r ? (t.copy(i, r - t.length), i) : t.slice(-r)
            };
            e.setLengthLeft = function (t, e) {
                return a.assertIsBuffer(t), setLength(t, e, !1)
            }, e.setLengthRight = function (t, e) {
                return a.assertIsBuffer(t), setLength(t, e, !0)
            };
            var stripZeros = function (t) {
                for (var e = t[0]; t.length > 0 && "0" === e.toString();) e = (t = t.slice(1))[0];
                return t
            };
            e.unpadBuffer = function (t) {
                return a.assertIsBuffer(t), stripZeros(t)
            }, e.unpadArray = function (t) {
                return a.assertIsArray(t), stripZeros(t)
            }, e.unpadHexString = function (t) {
                return a.assertIsHexString(t), t = o.stripHexPrefix(t), stripZeros(t)
            }, e.toBuffer = function (e) {
                if (null == e) return t.allocUnsafe(0);
                if (t.isBuffer(e)) return t.from(e);
                if (Array.isArray(e) || e instanceof Uint8Array) return t.from(e);
                if ("string" == typeof e) {
                    if (!o.isHexString(e)) throw new Error("Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: " + e);
                    return t.from(o.padToEven(o.stripHexPrefix(e)), "hex")
                }
                if ("number" == typeof e) return o.intToBuffer(e);
                if (i.default.isBN(e)) return e.toArrayLike(t);
                if (e.toArray) return t.from(e.toArray());
                if (e.toBuffer) return t.from(e.toBuffer());
                throw new Error("invalid type")
            }, e.bufferToInt = function (t) {
                return new i.default(e.toBuffer(t)).toNumber()
            }, e.bufferToHex = function (t) {
                return "0x" + (t = e.toBuffer(t)).toString("hex")
            }, e.fromSigned = function (t) {
                return new i.default(t).fromTwos(256)
            }, e.toUnsigned = function (e) {
                return t.from(e.toTwos(256).toArray())
            }, e.addHexPrefix = function (t) {
                return "string" != typeof t || o.isHexPrefixed(t) ? t : "0x" + t
            }, e.baToJSON = function (r) {
                if (t.isBuffer(r)) return "0x" + r.toString("hex");
                if (r instanceof Array) {
                    for (var n = [], i = 0; i < r.length; i++) n.push(e.baToJSON(r[i]));
                    return n
                }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (t) {
            var n = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(t) {
                    for (var e = Object.keys(t), r = {}, n = 0; n < e.length; n++) r[e[n]] = Object.getOwnPropertyDescriptor(t, e[n]);
                    return r
                },
                i = /%[sdj%]/g;
            e.format = function (t) {
                if (!isString(t)) {
                    for (var e = [], r = 0; r < arguments.length; r++) e.push(inspect(arguments[r]));
                    return e.join(" ")
                }
                r = 1;
                for (var n = arguments, o = n.length, a = String(t).replace(i, (function (t) {
                        if ("%%" === t) return "%";
                        if (r >= o) return t;
                        switch (t) {
                            case "%s":
                                return String(n[r++]);
                            case "%d":
                                return Number(n[r++]);
                            case "%j":
                                try {
                                    return JSON.stringify(n[r++])
                                } catch (t) {
                                    return "[Circular]"
                                }
                                default:
                                    return t
                        }
                    })), s = n[r]; r < o; s = n[++r]) isNull(s) || !isObject(s) ? a += " " + s : a += " " + inspect(s);
                return a
            }, e.deprecate = function (r, n) {
                if (void 0 !== t && !0 === t.noDeprecation) return r;
                if (void 0 === t) return function () {
                    return e.deprecate(r, n).apply(this, arguments)
                };
                var i = !1;
                return function deprecated() {
                    if (!i) {
                        if (t.throwDeprecation) throw new Error(n);
                        t.traceDeprecation ? console.trace(n) : console.error(n), i = !0
                    }
                    return r.apply(this, arguments)
                }
            };
            var o, a = {};

            function inspect(t, r) {
                var n = {
                    seen: [],
                    stylize: stylizeNoColor
                };
                return arguments.length >= 3 && (n.depth = arguments[2]), arguments.length >= 4 && (n.colors = arguments[3]), isBoolean(r) ? n.showHidden = r : r && e._extend(n, r), isUndefined(n.showHidden) && (n.showHidden = !1), isUndefined(n.depth) && (n.depth = 2), isUndefined(n.colors) && (n.colors = !1), isUndefined(n.customInspect) && (n.customInspect = !0), n.colors && (n.stylize = stylizeWithColor), formatValue(n, t, n.depth)
            }

            function stylizeWithColor(t, e) {
                var r = inspect.styles[e];
                return r ? "[" + inspect.colors[r][0] + "m" + t + "[" + inspect.colors[r][1] + "m" : t
            }

            function stylizeNoColor(t, e) {
                return t
            }

            function formatValue(t, r, n) {
                if (t.customInspect && r && isFunction(r.inspect) && r.inspect !== e.inspect && (!r.constructor || r.constructor.prototype !== r)) {
                    var i = r.inspect(n, t);
                    return isString(i) || (i = formatValue(t, i, n)), i
                }
                var o = function formatPrimitive(t, e) {
                    if (isUndefined(e)) return t.stylize("undefined", "undefined");
                    if (isString(e)) {
                        var r = "'" + JSON.stringify(e).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                        return t.stylize(r, "string")
                    }
                    if (isNumber(e)) return t.stylize("" + e, "number");
                    if (isBoolean(e)) return t.stylize("" + e, "boolean");
                    if (isNull(e)) return t.stylize("null", "null")
                }(t, r);
                if (o) return o;
                var a = Object.keys(r),
                    s = function arrayToHash(t) {
                        var e = {};
                        return t.forEach((function (t, r) {
                            e[t] = !0
                        })), e
                    }(a);
                if (t.showHidden && (a = Object.getOwnPropertyNames(r)), isError(r) && (a.indexOf("message") >= 0 || a.indexOf("description") >= 0)) return formatError(r);
                if (0 === a.length) {
                    if (isFunction(r)) {
                        var u = r.name ? ": " + r.name : "";
                        return t.stylize("[Function" + u + "]", "special")
                    }
                    if (isRegExp(r)) return t.stylize(RegExp.prototype.toString.call(r), "regexp");
                    if (isDate(r)) return t.stylize(Date.prototype.toString.call(r), "date");
                    if (isError(r)) return formatError(r)
                }
                var c, l = "",
                    h = !1,
                    d = ["{", "}"];
                (isArray(r) && (h = !0, d = ["[", "]"]), isFunction(r)) && (l = " [Function" + (r.name ? ": " + r.name : "") + "]");
                return isRegExp(r) && (l = " " + RegExp.prototype.toString.call(r)), isDate(r) && (l = " " + Date.prototype.toUTCString.call(r)), isError(r) && (l = " " + formatError(r)), 0 !== a.length || h && 0 != r.length ? n < 0 ? isRegExp(r) ? t.stylize(RegExp.prototype.toString.call(r), "regexp") : t.stylize("[Object]", "special") : (t.seen.push(r), c = h ? function formatArray(t, e, r, n, i) {
                    for (var o = [], a = 0, s = e.length; a < s; ++a) hasOwnProperty(e, String(a)) ? o.push(formatProperty(t, e, r, n, String(a), !0)) : o.push("");
                    return i.forEach((function (i) {
                        i.match(/^\d+$/) || o.push(formatProperty(t, e, r, n, i, !0))
                    })), o
                }(t, r, n, s, a) : a.map((function (e) {
                    return formatProperty(t, r, n, s, e, h)
                })), t.seen.pop(), function reduceToSingleString(t, e, r) {
                    if (t.reduce((function (t, e) {
                            return e.indexOf("\n") >= 0 && 0, t + e.replace(/\u001b\[\d\d?m/g, "").length + 1
                        }), 0) > 60) return r[0] + ("" === e ? "" : e + "\n ") + " " + t.join(",\n  ") + " " + r[1];
                    return r[0] + e + " " + t.join(", ") + " " + r[1]
                }(c, l, d)) : d[0] + l + d[1]
            }

            function formatError(t) {
                return "[" + Error.prototype.toString.call(t) + "]"
            }

            function formatProperty(t, e, r, n, i, o) {
                var a, s, u;
                if ((u = Object.getOwnPropertyDescriptor(e, i) || {
                        value: e[i]
                    }).get ? s = u.set ? t.stylize("[Getter/Setter]", "special") : t.stylize("[Getter]", "special") : u.set && (s = t.stylize("[Setter]", "special")), hasOwnProperty(n, i) || (a = "[" + i + "]"), s || (t.seen.indexOf(u.value) < 0 ? (s = isNull(r) ? formatValue(t, u.value, null) : formatValue(t, u.value, r - 1)).indexOf("\n") > -1 && (s = o ? s.split("\n").map((function (t) {
                        return "  " + t
                    })).join("\n").substr(2) : "\n" + s.split("\n").map((function (t) {
                        return "   " + t
                    })).join("\n")) : s = t.stylize("[Circular]", "special")), isUndefined(a)) {
                    if (o && i.match(/^\d+$/)) return s;
                    (a = JSON.stringify("" + i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (a = a.substr(1, a.length - 2), a = t.stylize(a, "name")) : (a = a.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), a = t.stylize(a, "string"))
                }
                return a + ": " + s
            }

            function isArray(t) {
                return Array.isArray(t)
            }

            function isBoolean(t) {
                return "boolean" == typeof t
            }

            function isNull(t) {
                return null === t
            }

            function isNumber(t) {
                return "number" == typeof t
            }

            function isString(t) {
                return "string" == typeof t
            }

            function isUndefined(t) {
                return void 0 === t
            }

            function isRegExp(t) {
                return isObject(t) && "[object RegExp]" === objectToString(t)
            }

            function isObject(t) {
                return "object" == typeof t && null !== t
            }

            function isDate(t) {
                return isObject(t) && "[object Date]" === objectToString(t)
            }

            function isError(t) {
                return isObject(t) && ("[object Error]" === objectToString(t) || t instanceof Error)
            }

            function isFunction(t) {
                return "function" == typeof t
            }

            function objectToString(t) {
                return Object.prototype.toString.call(t)
            }

            function pad(t) {
                return t < 10 ? "0" + t.toString(10) : t.toString(10)
            }
            e.debuglog = function (r) {
                if (isUndefined(o) && (o = t.env.NODE_DEBUG || ""), r = r.toUpperCase(), !a[r])
                    if (new RegExp("\\b" + r + "\\b", "i").test(o)) {
                        var n = t.pid;
                        a[r] = function () {
                            var t = e.format.apply(e, arguments);
                            console.error("%s %d: %s", r, n, t)
                        }
                    } else a[r] = function () {};
                return a[r]
            }, e.inspect = inspect, inspect.colors = {
                bold: [1, 22],
                italic: [3, 23],
                underline: [4, 24],
                inverse: [7, 27],
                white: [37, 39],
                grey: [90, 39],
                black: [30, 39],
                blue: [34, 39],
                cyan: [36, 39],
                green: [32, 39],
                magenta: [35, 39],
                red: [31, 39],
                yellow: [33, 39]
            }, inspect.styles = {
                special: "cyan",
                number: "yellow",
                boolean: "yellow",
                undefined: "grey",
                null: "bold",
                string: "green",
                date: "magenta",
                regexp: "red"
            }, e.isArray = isArray, e.isBoolean = isBoolean, e.isNull = isNull, e.isNullOrUndefined = function isNullOrUndefined(t) {
                return null == t
            }, e.isNumber = isNumber, e.isString = isString, e.isSymbol = function isSymbol(t) {
                return "symbol" == typeof t
            }, e.isUndefined = isUndefined, e.isRegExp = isRegExp, e.isObject = isObject, e.isDate = isDate, e.isError = isError, e.isFunction = isFunction, e.isPrimitive = function isPrimitive(t) {
                return null === t || "boolean" == typeof t || "number" == typeof t || "string" == typeof t || "symbol" == typeof t || void 0 === t
            }, e.isBuffer = r(355);
            var s = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

            function timestamp() {
                var t = new Date,
                    e = [pad(t.getHours()), pad(t.getMinutes()), pad(t.getSeconds())].join(":");
                return [t.getDate(), s[t.getMonth()], e].join(" ")
            }

            function hasOwnProperty(t, e) {
                return Object.prototype.hasOwnProperty.call(t, e)
            }
            e.log = function () {
                console.log("%s - %s", timestamp(), e.format.apply(e, arguments))
            }, e.inherits = r(356), e._extend = function (t, e) {
                if (!e || !isObject(e)) return t;
                for (var r = Object.keys(e), n = r.length; n--;) t[r[n]] = e[r[n]];
                return t
            };
            var u = "undefined" != typeof Symbol ? Symbol("util.promisify.custom") : void 0;

            function callbackifyOnRejected(t, e) {
                if (!t) {
                    var r = new Error("Promise was rejected with a falsy value");
                    r.reason = t, t = r
                }
                return e(t)
            }
            e.promisify = function promisify(t) {
                if ("function" != typeof t) throw new TypeError('The "original" argument must be of type Function');
                if (u && t[u]) {
                    var e;
                    if ("function" != typeof (e = t[u])) throw new TypeError('The "util.promisify.custom" argument must be of type Function');
                    return Object.defineProperty(e, u, {
                        value: e,
                        enumerable: !1,
                        writable: !1,
                        configurable: !0
                    }), e
                }

                function e() {
                    for (var e, r, n = new Promise((function (t, n) {
                            e = t, r = n
                        })), i = [], o = 0; o < arguments.length; o++) i.push(arguments[o]);
                    i.push((function (t, n) {
                        t ? r(t) : e(n)
                    }));
                    try {
                        t.apply(this, i)
                    } catch (t) {
                        r(t)
                    }
                    return n
                }
                return Object.setPrototypeOf(e, Object.getPrototypeOf(t)), u && Object.defineProperty(e, u, {
                    value: e,
                    enumerable: !1,
                    writable: !1,
                    configurable: !0
                }), Object.defineProperties(e, n(t))
            }, e.promisify.custom = u, e.callbackify = function callbackify(e) {
                if ("function" != typeof e) throw new TypeError('The "original" argument must be of type Function');

                function callbackified() {
                    for (var r = [], n = 0; n < arguments.length; n++) r.push(arguments[n]);
                    var i = r.pop();
                    if ("function" != typeof i) throw new TypeError("The last argument must be of type Function");
                    var o = this,
                        cb = function () {
                            return i.apply(o, arguments)
                        };
                    e.apply(this, r).then((function (e) {
                        t.nextTick(cb, null, e)
                    }), (function (e) {
                        t.nextTick(callbackifyOnRejected, e, cb)
                    }))
                }
                return Object.setPrototypeOf(callbackified, Object.getPrototypeOf(e)), Object.defineProperties(callbackified, n(e)), callbackified
            }
        }).call(this, r(7))
    }, function (t, e, r) {
        var n = r(38),
            i = r(78);
        t.exports = r(39) ? function (t, e, r) {
            return n.f(t, e, i(1, r))
        } : function (t, e, r) {
            return t[e] = r, t
        }
    }, function (t, e) {
        t.exports = function (t) {
            return "object" == typeof t ? null !== t : "function" == typeof t
        }
    }, function (t, e) {
        t.exports = function (t) {
            try {
                return !!t()
            } catch (t) {
                return !0
            }
        }
    }, function (t, e, r) {
        var n = r(238),
            i = r(155);
        t.exports = function (t) {
            return n(i(t))
        }
    }, function (t, e, r) {
        var n = r(47);

        function _getRequireWildcardCache() {
            if ("function" != typeof WeakMap) return null;
            var t = new WeakMap;
            return _getRequireWildcardCache = function _getRequireWildcardCache() {
                return t
            }, t
        }
        t.exports = function _interopRequireWildcard(t) {
            if (t && t.__esModule) return t;
            if (null === t || "object" !== n(t) && "function" != typeof t) return {
                default: t
            };
            var e = _getRequireWildcardCache();
            if (e && e.has(t)) return e.get(t);
            var r = {},
                i = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (var o in t)
                if (Object.prototype.hasOwnProperty.call(t, o)) {
                    var a = i ? Object.getOwnPropertyDescriptor(t, o) : null;
                    a && (a.get || a.set) ? Object.defineProperty(r, o, a) : r[o] = t[o]
                } return r.default = t, e && e.set(t, r), r
        }
    }, function (t, e, r) {
        var n = r(569),
            i = r(49),
            o = new n(0),
            a = new n(-1),
            s = {
                noether: "0",
                wei: "1",
                kwei: "1000",
                Kwei: "1000",
                babbage: "1000",
                femtoether: "1000",
                mwei: "1000000",
                Mwei: "1000000",
                lovelace: "1000000",
                picoether: "1000000",
                gwei: "1000000000",
                Gwei: "1000000000",
                shannon: "1000000000",
                nanoether: "1000000000",
                nano: "1000000000",
                szabo: "1000000000000",
                microether: "1000000000000",
                micro: "1000000000000",
                finney: "1000000000000000",
                milliether: "1000000000000000",
                milli: "1000000000000000",
                ether: "1000000000000000000",
                kether: "1000000000000000000000",
                grand: "1000000000000000000000",
                mether: "1000000000000000000000000",
                gether: "1000000000000000000000000000",
                tether: "1000000000000000000000000000000"
            };

        function getValueOfUnit(t) {
            var e = t ? t.toLowerCase() : "ether",
                r = s[e];
            if ("string" != typeof r) throw new Error("[ethjs-unit] the unit provided " + t + " doesn't exists, please use the one of the following units " + JSON.stringify(s, null, 2));
            return new n(r, 10)
        }

        function numberToString(t) {
            if ("string" == typeof t) {
                if (!t.match(/^-?[0-9.]+$/)) throw new Error("while converting number to string, invalid number value '" + t + "', should be a number matching (^-?[0-9.]+).");
                return t
            }
            if ("number" == typeof t) return String(t);
            if ("object" == typeof t && t.toString && (t.toTwos || t.dividedToIntegerBy)) return t.toPrecision ? String(t.toPrecision()) : t.toString(10);
            throw new Error("while converting number to string, invalid number value '" + t + "' type " + typeof t + ".")
        }
        t.exports = {
            unitMap: s,
            numberToString: numberToString,
            getValueOfUnit: getValueOfUnit,
            fromWei: function fromWei(t, e, r) {
                var n = i(t),
                    u = n.lt(o),
                    c = getValueOfUnit(e),
                    l = s[e].length - 1 || 1,
                    h = r || {};
                u && (n = n.mul(a));
                for (var d = n.mod(c).toString(10); d.length < l;) d = "0" + d;
                h.pad || (d = d.match(/^([0-9]*[1-9]|0)(0*)/)[1]);
                var p = n.div(c).toString(10);
                h.commify && (p = p.replace(/\B(?=(\d{3})+(?!\d))/g, ","));
                var m = p + ("0" == d ? "" : "." + d);
                return u && (m = "-" + m), m
            },
            toWei: function toWei(t, e) {
                var r = numberToString(t),
                    i = getValueOfUnit(e),
                    o = s[e].length - 1 || 1,
                    u = "-" === r.substring(0, 1);
                if (u && (r = r.substring(1)), "." === r) throw new Error("[ethjs-unit] while converting number " + t + " to wei, invalid value");
                var c = r.split(".");
                if (c.length > 2) throw new Error("[ethjs-unit] while converting number " + t + " to wei,  too many decimal points");
                var l = c[0],
                    h = c[1];
                if (l || (l = "0"), h || (h = "0"), h.length > o) throw new Error("[ethjs-unit] while converting number " + t + " to wei, too many decimal places");
                for (; h.length < o;) h += "0";
                l = new n(l), h = new n(h);
                var d = l.mul(i).add(h);
                return u && (d = d.mul(a)), new n(d.toString(10), 10)
            }
        }
    }, function (t, e, r) {
        ! function (t) {
            var e, r, n, i = String.fromCharCode;

            function ucs2decode(t) {
                for (var e, r, n = [], i = 0, o = t.length; i < o;)(e = t.charCodeAt(i++)) >= 55296 && e <= 56319 && i < o ? 56320 == (64512 & (r = t.charCodeAt(i++))) ? n.push(((1023 & e) << 10) + (1023 & r) + 65536) : (n.push(e), i--) : n.push(e);
                return n
            }

            function checkScalarValue(t) {
                if (t >= 55296 && t <= 57343) throw Error("Lone surrogate U+" + t.toString(16).toUpperCase() + " is not a scalar value")
            }

            function createByte(t, e) {
                return i(t >> e & 63 | 128)
            }

            function encodeCodePoint(t) {
                if (0 == (4294967168 & t)) return i(t);
                var e = "";
                return 0 == (4294965248 & t) ? e = i(t >> 6 & 31 | 192) : 0 == (4294901760 & t) ? (checkScalarValue(t), e = i(t >> 12 & 15 | 224), e += createByte(t, 6)) : 0 == (4292870144 & t) && (e = i(t >> 18 & 7 | 240), e += createByte(t, 12), e += createByte(t, 6)), e += i(63 & t | 128)
            }

            function readContinuationByte() {
                if (n >= r) throw Error("Invalid byte index");
                var t = 255 & e[n];
                if (n++, 128 == (192 & t)) return 63 & t;
                throw Error("Invalid continuation byte")
            }

            function decodeSymbol() {
                var t, i;
                if (n > r) throw Error("Invalid byte index");
                if (n == r) return !1;
                if (t = 255 & e[n], n++, 0 == (128 & t)) return t;
                if (192 == (224 & t)) {
                    if ((i = (31 & t) << 6 | readContinuationByte()) >= 128) return i;
                    throw Error("Invalid continuation byte")
                }
                if (224 == (240 & t)) {
                    if ((i = (15 & t) << 12 | readContinuationByte() << 6 | readContinuationByte()) >= 2048) return checkScalarValue(i), i;
                    throw Error("Invalid continuation byte")
                }
                if (240 == (248 & t) && (i = (7 & t) << 18 | readContinuationByte() << 12 | readContinuationByte() << 6 | readContinuationByte()) >= 65536 && i <= 1114111) return i;
                throw Error("Invalid UTF-8 detected")
            }
            t.version = "3.0.0", t.encode = function utf8encode(t) {
                for (var e = ucs2decode(t), r = e.length, n = -1, i = ""; ++n < r;) i += encodeCodePoint(e[n]);
                return i
            }, t.decode = function utf8decode(t) {
                e = ucs2decode(t), r = e.length, n = 0;
                for (var o, a = []; !1 !== (o = decodeSymbol());) a.push(o);
                return function ucs2encode(t) {
                    for (var e, r = t.length, n = -1, o = ""; ++n < r;)(e = t[n]) > 65535 && (o += i((e -= 65536) >>> 10 & 1023 | 55296), e = 56320 | 1023 & e), o += i(e);
                    return o
                }(a)
            }
        }(e)
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        const n = r(572);

        function isBloom(t) {
            return "string" == typeof t && (!!/^(0x)?[0-9a-f]{512}$/i.test(t) && !(!/^(0x)?[0-9a-f]{512}$/.test(t) && !/^(0x)?[0-9A-F]{512}$/.test(t)))
        }

        function isInBloom(t, e) {
            "object" == typeof e && e.constructor === Uint8Array && (e = n.bytesToHex(e));
            const r = n.keccak256(e).replace("0x", "");
            for (let e = 0; e < 12; e += 4) {
                const n = (parseInt(r.substr(e, 2), 16) << 8) + parseInt(r.substr(e + 2, 2), 16) & 2047,
                    i = 1 << n % 4;
                if ((codePointToInt(t.charCodeAt(t.length - 1 - Math.floor(n / 4))) & i) !== i) return !1
            }
            return !0
        }

        function codePointToInt(t) {
            if (t >= 48 && t <= 57) return t - 48;
            if (t >= 65 && t <= 70) return t - 55;
            if (t >= 97 && t <= 102) return t - 87;
            throw new Error("invalid bloom")
        }

        function isTopic(t) {
            return "string" == typeof t && (!!/^(0x)?[0-9a-f]{64}$/i.test(t) && !(!/^(0x)?[0-9a-f]{64}$/.test(t) && !/^(0x)?[0-9A-F]{64}$/.test(t)))
        }

        function isAddress(t) {
            return "string" == typeof t && (!!t.match(/^(0x)?[0-9a-fA-F]{40}$/) || !!t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/))
        }
        e.isBloom = isBloom, e.isInBloom = isInBloom, e.isUserEthereumAddressInBloom = function isUserEthereumAddressInBloom(t, e) {
            if (!isBloom(t)) throw new Error("Invalid bloom given");
            if (!isAddress(e)) throw new Error(`Invalid ethereum address given: "${e}"`);
            return isInBloom(t, n.padLeft(e, 64))
        }, e.isContractAddressInBloom = function isContractAddressInBloom(t, e) {
            if (!isBloom(t)) throw new Error("Invalid bloom given");
            if (!isAddress(e)) throw new Error(`Invalid contract address given: "${e}"`);
            return isInBloom(t, e)
        }, e.isTopicInBloom = function isTopicInBloom(t, e) {
            if (!isBloom(t)) throw new Error("Invalid bloom given");
            if (!isTopic(e)) throw new Error("Invalid topic");
            return isInBloom(t, e)
        }, e.isTopic = isTopic, e.isAddress = isAddress
    }, function (t, e, r) {
        var n = r(51),
            i = r(16),
            o = t.exports;
        for (var a in n) n.hasOwnProperty(a) && (o[a] = n[a]);

        function validateParams(t) {
            if ("string" == typeof t && (t = i.parse(t)), t.protocol || (t.protocol = "https:"), "https:" !== t.protocol) throw new Error('Protocol "' + t.protocol + '" not supported. Expected "https:"');
            return t
        }
        o.request = function (t, e) {
            return t = validateParams(t), n.request.call(this, t, e)
        }, o.get = function (t, e) {
            return t = validateParams(t), n.get.call(this, t, e)
        }
    }, function (t, e, r) {
        var n = r(3).Buffer;

        function Hash(t, e) {
            this._block = n.alloc(t), this._finalSize = e, this._blockSize = t, this._len = 0
        }
        Hash.prototype.update = function (t, e) {
            "string" == typeof t && (e = e || "utf8", t = n.from(t, e));
            for (var r = this._block, i = this._blockSize, o = t.length, a = this._len, s = 0; s < o;) {
                for (var u = a % i, c = Math.min(o - s, i - u), l = 0; l < c; l++) r[u + l] = t[s + l];
                s += c, (a += c) % i == 0 && this._update(r)
            }
            return this._len += o, this
        }, Hash.prototype.digest = function (t) {
            var e = this._len % this._blockSize;
            this._block[e] = 128, this._block.fill(0, e + 1), e >= this._finalSize && (this._update(this._block), this._block.fill(0));
            var r = 8 * this._len;
            if (r <= 4294967295) this._block.writeUInt32BE(r, this._blockSize - 4);
            else {
                var n = (4294967295 & r) >>> 0,
                    i = (r - n) / 4294967296;
                this._block.writeUInt32BE(i, this._blockSize - 8), this._block.writeUInt32BE(n, this._blockSize - 4)
            }
            this._update(this._block);
            var o = this._hash();
            return t ? o.toString(t) : o
        }, Hash.prototype._update = function () {
            throw new Error("_update must be implemented by subclass")
        }, t.exports = Hash
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.N_DIV_2 = e.isAccessList = e.isAccessListBuffer = e.Capability = void 0;
        var n = r(56);

        function isAccessListBuffer(t) {
            if (0 === t.length) return !0;
            var e = t[0];
            return !!Array.isArray(e)
        }! function (t) {
            t[t.EIP155ReplayProtection = 155] = "EIP155ReplayProtection", t[t.EIP1559FeeMarket = 1559] = "EIP1559FeeMarket", t[t.EIP2718TypedTransaction = 2718] = "EIP2718TypedTransaction", t[t.EIP2930AccessLists = 2930] = "EIP2930AccessLists"
        }(e.Capability || (e.Capability = {})), e.isAccessListBuffer = isAccessListBuffer, e.isAccessList = function isAccessList(t) {
            return !isAccessListBuffer(t)
        }, e.N_DIV_2 = new n.BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0", 16)
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = r(345),
            i = r(139);

        function isBigNumber(t) {
            return t instanceof n.BigNumber
        }

        function addSlice(t) {
            return t.slice || (t.slice = function () {
                var e = Array.prototype.slice.call(arguments);
                return new Uint8Array(Array.prototype.slice.apply(t, e))
            }), t
        }

        function isArrayish(t) {
            if (!t || parseInt(String(t.length)) != t.length || "string" == typeof t) return !1;
            for (var e = 0; e < t.length; e++) {
                var r = t[e];
                if (r < 0 || r >= 256 || parseInt(String(r)) != r) return !1
            }
            return !0
        }

        function arrayify(t) {
            if (null == t && i.throwError("cannot convert null value to array", i.INVALID_ARGUMENT, {
                    arg: "value",
                    value: t
                }), isBigNumber(t) && (t = t.toHexString()), "string" == typeof t) {
                var e = t.match(/^(0x)?[0-9a-fA-F]*$/);
                e || i.throwError("invalid hexidecimal string", i.INVALID_ARGUMENT, {
                    arg: "value",
                    value: t
                }), "0x" !== e[1] && i.throwError("hex string must have 0x prefix", i.INVALID_ARGUMENT, {
                    arg: "value",
                    value: t
                }), (t = t.substring(2)).length % 2 && (t = "0" + t);
                for (var r = [], n = 0; n < t.length; n += 2) r.push(parseInt(t.substr(n, 2), 16));
                return addSlice(new Uint8Array(r))
            }
            return isArrayish(t) ? addSlice(new Uint8Array(t)) : (i.throwError("invalid arrayify value", null, {
                arg: "value",
                value: t,
                type: typeof t
            }), null)
        }

        function concat(t) {
            for (var e = [], r = 0, n = 0; n < t.length; n++) {
                var i = arrayify(t[n]);
                e.push(i), r += i.length
            }
            var o = new Uint8Array(r),
                a = 0;
            for (n = 0; n < e.length; n++) o.set(e[n], a), a += e[n].length;
            return addSlice(o)
        }

        function isHexString(t, e) {
            return !("string" != typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
        }
        e.AddressZero = "0x0000000000000000000000000000000000000000", e.HashZero = "0x0000000000000000000000000000000000000000000000000000000000000000", e.isArrayish = isArrayish, e.arrayify = arrayify, e.concat = concat, e.stripZeros = function stripZeros(t) {
            var e = arrayify(t);
            if (0 === e.length) return e;
            for (var r = 0; 0 === e[r];) r++;
            return r && (e = e.slice(r)), e
        }, e.padZeros = function padZeros(t, e) {
            if (e < (t = arrayify(t)).length) throw new Error("cannot pad");
            var r = new Uint8Array(e);
            return r.set(t, e - t.length), addSlice(r)
        }, e.isHexString = isHexString;

        function hexlify(t) {
            if (isBigNumber(t)) return t.toHexString();
            if ("number" == typeof t) {
                t < 0 && i.throwError("cannot hexlify negative value", i.INVALID_ARGUMENT, {
                    arg: "value",
                    value: t
                });
                for (var e = ""; t;) e = "0123456789abcdef" [15 & t] + e, t = Math.floor(t / 16);
                return e.length ? (e.length % 2 && (e = "0" + e), "0x" + e) : "0x00"
            }
            if ("string" == typeof t) {
                var r = t.match(/^(0x)?[0-9a-fA-F]*$/);
                return r || i.throwError("invalid hexidecimal string", i.INVALID_ARGUMENT, {
                    arg: "value",
                    value: t
                }), "0x" !== r[1] && i.throwError("hex string must have 0x prefix", i.INVALID_ARGUMENT, {
                    arg: "value",
                    value: t
                }), t.length % 2 && (t = "0x0" + t.substring(2)), t
            }
            if (isArrayish(t)) {
                for (var n = [], o = 0; o < t.length; o++) {
                    var a = t[o];
                    n.push("0123456789abcdef" [(240 & a) >> 4] + "0123456789abcdef" [15 & a])
                }
                return "0x" + n.join("")
            }
            return i.throwError("invalid hexlify value", null, {
                arg: "value",
                value: t
            }), "never"
        }

        function hexZeroPad(t, e) {
            for (isHexString(t) || i.throwError("invalid hex string", i.INVALID_ARGUMENT, {
                    arg: "value",
                    value: t
                }); t.length < 2 * e + 2;) t = "0x0" + t.substring(2);
            return t
        }

        function splitSignature(t) {
            var e = 0,
                r = "0x",
                n = "0x";
            if (function isSignature(t) {
                    return t && null != t.r && null != t.s
                }(t)) {
                null == t.v && null == t.recoveryParam && i.throwError("at least on of recoveryParam or v must be specified", i.INVALID_ARGUMENT, {
                    argument: "signature",
                    value: t
                }), r = hexZeroPad(t.r, 32), n = hexZeroPad(t.s, 32), "string" == typeof (e = t.v) && (e = parseInt(e, 16));
                var o = t.recoveryParam;
                null == o && null != t.v && (o = 1 - e % 2), e = 27 + o
            } else {
                var a = arrayify(t);
                if (65 !== a.length) throw new Error("invalid signature");
                r = hexlify(a.slice(0, 32)), n = hexlify(a.slice(32, 64)), 27 !== (e = a[64]) && 28 !== e && (e = 27 + e % 2)
            }
            return {
                r: r,
                s: n,
                recoveryParam: e - 27,
                v: e
            }
        }
        e.hexlify = hexlify, e.hexDataLength = function hexDataLength(t) {
            return isHexString(t) && t.length % 2 == 0 ? (t.length - 2) / 2 : null
        }, e.hexDataSlice = function hexDataSlice(t, e, r) {
            return isHexString(t) || i.throwError("invalid hex data", i.INVALID_ARGUMENT, {
                arg: "value",
                value: t
            }), t.length % 2 != 0 && i.throwError("hex data length must be even", i.INVALID_ARGUMENT, {
                arg: "value",
                value: t
            }), e = 2 + 2 * e, null != r ? "0x" + t.substring(e, e + 2 * r) : "0x" + t.substring(e)
        }, e.hexStripZeros = function hexStripZeros(t) {
            for (isHexString(t) || i.throwError("invalid hex string", i.INVALID_ARGUMENT, {
                    arg: "value",
                    value: t
                }); t.length > 3 && "0x0" === t.substring(0, 3);) t = "0x" + t.substring(3);
            return t
        }, e.hexZeroPad = hexZeroPad, e.splitSignature = splitSignature, e.joinSignature = function joinSignature(t) {
            return hexlify(concat([(t = splitSignature(t)).r, t.s, t.recoveryParam ? "0x1c" : "0x1b"]))
        }
    }, function (t, e, r) {
        (function (e, r) {
            ! function () {
                var n = "object" == typeof window ? window : {};
                !n.JS_SHA3_NO_NODE_JS && "object" == typeof e && e.versions && e.versions.node && (n = r);
                for (var i = !n.JS_SHA3_NO_COMMON_JS && "object" == typeof t && t.exports, o = "0123456789abcdef".split(""), a = [0, 8, 16, 24], s = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648], u = [224, 256, 384, 512], c = ["hex", "buffer", "arrayBuffer", "array"], createOutputMethod = function (t, e, r) {
                        return function (n) {
                            return new Keccak(t, e, t).update(n)[r]()
                        }
                    }, createShakeOutputMethod = function (t, e, r) {
                        return function (n, i) {
                            return new Keccak(t, e, i).update(n)[r]()
                        }
                    }, createMethod = function (t, e) {
                        var r = createOutputMethod(t, e, "hex");
                        r.create = function () {
                            return new Keccak(t, e, t)
                        }, r.update = function (t) {
                            return r.create().update(t)
                        };
                        for (var n = 0; n < c.length; ++n) {
                            var i = c[n];
                            r[i] = createOutputMethod(t, e, i)
                        }
                        return r
                    }, l = [{
                        name: "keccak",
                        padding: [1, 256, 65536, 16777216],
                        bits: u,
                        createMethod: createMethod
                    }, {
                        name: "sha3",
                        padding: [6, 1536, 393216, 100663296],
                        bits: u,
                        createMethod: createMethod
                    }, {
                        name: "shake",
                        padding: [31, 7936, 2031616, 520093696],
                        bits: [128, 256],
                        createMethod: function (t, e) {
                            var r = createShakeOutputMethod(t, e, "hex");
                            r.create = function (r) {
                                return new Keccak(t, e, r)
                            }, r.update = function (t, e) {
                                return r.create(e).update(t)
                            };
                            for (var n = 0; n < c.length; ++n) {
                                var i = c[n];
                                r[i] = createShakeOutputMethod(t, e, i)
                            }
                            return r
                        }
                    }], h = {}, d = [], p = 0; p < l.length; ++p)
                    for (var m = l[p], y = m.bits, b = 0; b < y.length; ++b) {
                        var g = m.name + "_" + y[b];
                        d.push(g), h[g] = m.createMethod(y[b], m.padding)
                    }

                function Keccak(t, e, r) {
                    this.blocks = [], this.s = [], this.padding = e, this.outputBits = r, this.reset = !0, this.block = 0, this.start = 0, this.blockCount = 1600 - (t << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = r >> 5, this.extraBytes = (31 & r) >> 3;
                    for (var n = 0; n < 50; ++n) this.s[n] = 0
                }
                Keccak.prototype.update = function (t) {
                    var e = "string" != typeof t;
                    e && t.constructor === ArrayBuffer && (t = new Uint8Array(t));
                    for (var r, n, i = t.length, o = this.blocks, s = this.byteCount, u = this.blockCount, c = 0, l = this.s; c < i;) {
                        if (this.reset)
                            for (this.reset = !1, o[0] = this.block, r = 1; r < u + 1; ++r) o[r] = 0;
                        if (e)
                            for (r = this.start; c < i && r < s; ++c) o[r >> 2] |= t[c] << a[3 & r++];
                        else
                            for (r = this.start; c < i && r < s; ++c)(n = t.charCodeAt(c)) < 128 ? o[r >> 2] |= n << a[3 & r++] : n < 2048 ? (o[r >> 2] |= (192 | n >> 6) << a[3 & r++], o[r >> 2] |= (128 | 63 & n) << a[3 & r++]) : n < 55296 || n >= 57344 ? (o[r >> 2] |= (224 | n >> 12) << a[3 & r++], o[r >> 2] |= (128 | n >> 6 & 63) << a[3 & r++], o[r >> 2] |= (128 | 63 & n) << a[3 & r++]) : (n = 65536 + ((1023 & n) << 10 | 1023 & t.charCodeAt(++c)), o[r >> 2] |= (240 | n >> 18) << a[3 & r++], o[r >> 2] |= (128 | n >> 12 & 63) << a[3 & r++], o[r >> 2] |= (128 | n >> 6 & 63) << a[3 & r++], o[r >> 2] |= (128 | 63 & n) << a[3 & r++]);
                        if (this.lastByteIndex = r, r >= s) {
                            for (this.start = r - s, this.block = o[u], r = 0; r < u; ++r) l[r] ^= o[r];
                            f(l), this.reset = !0
                        } else this.start = r
                    }
                    return this
                }, Keccak.prototype.finalize = function () {
                    var t = this.blocks,
                        e = this.lastByteIndex,
                        r = this.blockCount,
                        n = this.s;
                    if (t[e >> 2] |= this.padding[3 & e], this.lastByteIndex === this.byteCount)
                        for (t[0] = t[r], e = 1; e < r + 1; ++e) t[e] = 0;
                    for (t[r - 1] |= 2147483648, e = 0; e < r; ++e) n[e] ^= t[e];
                    f(n)
                }, Keccak.prototype.toString = Keccak.prototype.hex = function () {
                    this.finalize();
                    for (var t, e = this.blockCount, r = this.s, n = this.outputBlocks, i = this.extraBytes, a = 0, s = 0, u = ""; s < n;) {
                        for (a = 0; a < e && s < n; ++a, ++s) t = r[a], u += o[t >> 4 & 15] + o[15 & t] + o[t >> 12 & 15] + o[t >> 8 & 15] + o[t >> 20 & 15] + o[t >> 16 & 15] + o[t >> 28 & 15] + o[t >> 24 & 15];
                        s % e == 0 && (f(r), a = 0)
                    }
                    return i && (t = r[a], i > 0 && (u += o[t >> 4 & 15] + o[15 & t]), i > 1 && (u += o[t >> 12 & 15] + o[t >> 8 & 15]), i > 2 && (u += o[t >> 20 & 15] + o[t >> 16 & 15])), u
                }, Keccak.prototype.arrayBuffer = function () {
                    this.finalize();
                    var t, e = this.blockCount,
                        r = this.s,
                        n = this.outputBlocks,
                        i = this.extraBytes,
                        o = 0,
                        a = 0,
                        s = this.outputBits >> 3;
                    t = i ? new ArrayBuffer(n + 1 << 2) : new ArrayBuffer(s);
                    for (var u = new Uint32Array(t); a < n;) {
                        for (o = 0; o < e && a < n; ++o, ++a) u[a] = r[o];
                        a % e == 0 && f(r)
                    }
                    return i && (u[o] = r[o], t = t.slice(0, s)), t
                }, Keccak.prototype.buffer = Keccak.prototype.arrayBuffer, Keccak.prototype.digest = Keccak.prototype.array = function () {
                    this.finalize();
                    for (var t, e, r = this.blockCount, n = this.s, i = this.outputBlocks, o = this.extraBytes, a = 0, s = 0, u = []; s < i;) {
                        for (a = 0; a < r && s < i; ++a, ++s) t = s << 2, e = n[a], u[t] = 255 & e, u[t + 1] = e >> 8 & 255, u[t + 2] = e >> 16 & 255, u[t + 3] = e >> 24 & 255;
                        s % r == 0 && f(n)
                    }
                    return o && (t = s << 2, e = n[a], o > 0 && (u[t] = 255 & e), o > 1 && (u[t + 1] = e >> 8 & 255), o > 2 && (u[t + 2] = e >> 16 & 255)), u
                };
                var f = function (t) {
                    var e, r, n, i, o, a, u, c, l, h, d, p, m, y, b, g, v, w, M, A, x, B, E, k, N, T, C, P, I, O, D, j, L, U, H, q, z, G, V, J, W, Z, X, Y, $, Q, tt, et, rt, nt, it, ot, st, ut, ct, ht, dt, pt, mt, yt, bt, vt, wt;
                    for (n = 0; n < 48; n += 2) i = t[0] ^ t[10] ^ t[20] ^ t[30] ^ t[40], o = t[1] ^ t[11] ^ t[21] ^ t[31] ^ t[41], a = t[2] ^ t[12] ^ t[22] ^ t[32] ^ t[42], u = t[3] ^ t[13] ^ t[23] ^ t[33] ^ t[43], c = t[4] ^ t[14] ^ t[24] ^ t[34] ^ t[44], l = t[5] ^ t[15] ^ t[25] ^ t[35] ^ t[45], h = t[6] ^ t[16] ^ t[26] ^ t[36] ^ t[46], d = t[7] ^ t[17] ^ t[27] ^ t[37] ^ t[47], e = (p = t[8] ^ t[18] ^ t[28] ^ t[38] ^ t[48]) ^ (a << 1 | u >>> 31), r = (m = t[9] ^ t[19] ^ t[29] ^ t[39] ^ t[49]) ^ (u << 1 | a >>> 31), t[0] ^= e, t[1] ^= r, t[10] ^= e, t[11] ^= r, t[20] ^= e, t[21] ^= r, t[30] ^= e, t[31] ^= r, t[40] ^= e, t[41] ^= r, e = i ^ (c << 1 | l >>> 31), r = o ^ (l << 1 | c >>> 31), t[2] ^= e, t[3] ^= r, t[12] ^= e, t[13] ^= r, t[22] ^= e, t[23] ^= r, t[32] ^= e, t[33] ^= r, t[42] ^= e, t[43] ^= r, e = a ^ (h << 1 | d >>> 31), r = u ^ (d << 1 | h >>> 31), t[4] ^= e, t[5] ^= r, t[14] ^= e, t[15] ^= r, t[24] ^= e, t[25] ^= r, t[34] ^= e, t[35] ^= r, t[44] ^= e, t[45] ^= r, e = c ^ (p << 1 | m >>> 31), r = l ^ (m << 1 | p >>> 31), t[6] ^= e, t[7] ^= r, t[16] ^= e, t[17] ^= r, t[26] ^= e, t[27] ^= r, t[36] ^= e, t[37] ^= r, t[46] ^= e, t[47] ^= r, e = h ^ (i << 1 | o >>> 31), r = d ^ (o << 1 | i >>> 31), t[8] ^= e, t[9] ^= r, t[18] ^= e, t[19] ^= r, t[28] ^= e, t[29] ^= r, t[38] ^= e, t[39] ^= r, t[48] ^= e, t[49] ^= r, y = t[0], b = t[1], Q = t[11] << 4 | t[10] >>> 28, tt = t[10] << 4 | t[11] >>> 28, P = t[20] << 3 | t[21] >>> 29, I = t[21] << 3 | t[20] >>> 29, yt = t[31] << 9 | t[30] >>> 23, bt = t[30] << 9 | t[31] >>> 23, Z = t[40] << 18 | t[41] >>> 14, X = t[41] << 18 | t[40] >>> 14, U = t[2] << 1 | t[3] >>> 31, H = t[3] << 1 | t[2] >>> 31, g = t[13] << 12 | t[12] >>> 20, v = t[12] << 12 | t[13] >>> 20, et = t[22] << 10 | t[23] >>> 22, rt = t[23] << 10 | t[22] >>> 22, O = t[33] << 13 | t[32] >>> 19, D = t[32] << 13 | t[33] >>> 19, vt = t[42] << 2 | t[43] >>> 30, wt = t[43] << 2 | t[42] >>> 30, ut = t[5] << 30 | t[4] >>> 2, ct = t[4] << 30 | t[5] >>> 2, q = t[14] << 6 | t[15] >>> 26, z = t[15] << 6 | t[14] >>> 26, w = t[25] << 11 | t[24] >>> 21, M = t[24] << 11 | t[25] >>> 21, nt = t[34] << 15 | t[35] >>> 17, it = t[35] << 15 | t[34] >>> 17, j = t[45] << 29 | t[44] >>> 3, L = t[44] << 29 | t[45] >>> 3, k = t[6] << 28 | t[7] >>> 4, N = t[7] << 28 | t[6] >>> 4, ht = t[17] << 23 | t[16] >>> 9, dt = t[16] << 23 | t[17] >>> 9, G = t[26] << 25 | t[27] >>> 7, V = t[27] << 25 | t[26] >>> 7, A = t[36] << 21 | t[37] >>> 11, x = t[37] << 21 | t[36] >>> 11, ot = t[47] << 24 | t[46] >>> 8, st = t[46] << 24 | t[47] >>> 8, Y = t[8] << 27 | t[9] >>> 5, $ = t[9] << 27 | t[8] >>> 5, T = t[18] << 20 | t[19] >>> 12, C = t[19] << 20 | t[18] >>> 12, pt = t[29] << 7 | t[28] >>> 25, mt = t[28] << 7 | t[29] >>> 25, J = t[38] << 8 | t[39] >>> 24, W = t[39] << 8 | t[38] >>> 24, B = t[48] << 14 | t[49] >>> 18, E = t[49] << 14 | t[48] >>> 18, t[0] = y ^ ~g & w, t[1] = b ^ ~v & M, t[10] = k ^ ~T & P, t[11] = N ^ ~C & I, t[20] = U ^ ~q & G, t[21] = H ^ ~z & V, t[30] = Y ^ ~Q & et, t[31] = $ ^ ~tt & rt, t[40] = ut ^ ~ht & pt, t[41] = ct ^ ~dt & mt, t[2] = g ^ ~w & A, t[3] = v ^ ~M & x, t[12] = T ^ ~P & O, t[13] = C ^ ~I & D, t[22] = q ^ ~G & J, t[23] = z ^ ~V & W, t[32] = Q ^ ~et & nt, t[33] = tt ^ ~rt & it, t[42] = ht ^ ~pt & yt, t[43] = dt ^ ~mt & bt, t[4] = w ^ ~A & B, t[5] = M ^ ~x & E, t[14] = P ^ ~O & j, t[15] = I ^ ~D & L, t[24] = G ^ ~J & Z, t[25] = V ^ ~W & X, t[34] = et ^ ~nt & ot, t[35] = rt ^ ~it & st, t[44] = pt ^ ~yt & vt, t[45] = mt ^ ~bt & wt, t[6] = A ^ ~B & y, t[7] = x ^ ~E & b, t[16] = O ^ ~j & k, t[17] = D ^ ~L & N, t[26] = J ^ ~Z & U, t[27] = W ^ ~X & H, t[36] = nt ^ ~ot & Y, t[37] = it ^ ~st & $, t[46] = yt ^ ~vt & ut, t[47] = bt ^ ~wt & ct, t[8] = B ^ ~y & g, t[9] = E ^ ~b & v, t[18] = j ^ ~k & T, t[19] = L ^ ~N & C, t[28] = Z ^ ~U & q, t[29] = X ^ ~H & z, t[38] = ot ^ ~Y & Q, t[39] = st ^ ~$ & tt, t[48] = vt ^ ~ut & ht, t[49] = wt ^ ~ct & dt, t[0] ^= s[n], t[1] ^= s[n + 1]
                };
                if (i) t.exports = h;
                else
                    for (p = 0; p < d.length; ++p) n[d[p]] = h[d[p]]
            }()
        }).call(this, r(7), r(6))
    }, , function (t, e, r) {
        var n = r(75),
            i = r(361),
            o = r(362),
            a = n ? n.toStringTag : void 0;
        t.exports = function baseGetTag(t) {
            return null == t ? void 0 === t ? "[object Undefined]" : "[object Null]" : a && a in Object(t) ? i(t) : o(t)
        }
    }, function (t, e, r) {
        var n = r(34).Symbol;
        t.exports = n
    }, function (t, e) {
        t.exports = function isObjectLike(t) {
            return null != t && "object" == typeof t
        }
    }, function (t, e, r) {
        var n = r(74),
            i = r(76);
        t.exports = function isSymbol(t) {
            return "symbol" == typeof t || i(t) && "[object Symbol]" == n(t)
        }
    }, function (t, e) {
        t.exports = function (t, e) {
            return {
                enumerable: !(1 & t),
                configurable: !(2 & t),
                writable: !(4 & t),
                value: e
            }
        }
    }, function (t, e, r) {
        var n = r(155);
        t.exports = function (t) {
            return Object(n(t))
        }
    }, function (t, e) {
        t.exports = {}
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), Object.defineProperty(e, "standardizeConfig", {
            enumerable: !0,
            get: function get() {
                return i.default
            }
        }), Object.defineProperty(e, "ServiceProvider", {
            enumerable: !0,
            get: function get() {
                return o.default
            }
        }), Object.defineProperty(e, "Container", {
            enumerable: !0,
            get: function get() {
                return a.default
            }
        }), Object.defineProperty(e, "LocalService", {
            enumerable: !0,
            get: function get() {
                return s.default
            }
        }), Object.defineProperty(e, "PublicService", {
            enumerable: !0,
            get: function get() {
                return u.default
            }
        }), Object.defineProperty(e, "PrivateService", {
            enumerable: !0,
            get: function get() {
                return c.default
            }
        }), Object.defineProperty(e, "ServiceManager", {
            enumerable: !0,
            get: function get() {
                return l.default
            }
        }), Object.defineProperty(e, "StateMachine", {
            enumerable: !0,
            get: function get() {
                return h.default
            }
        });
        var i = n(r(254)),
            o = n(r(541)),
            a = n(r(256)),
            s = n(r(554)),
            u = n(r(555)),
            c = n(r(556)),
            l = n(r(169)),
            h = n(r(257))
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.serviceTypeTransitions = e.default = void 0;
        var i = n(r(170));
        e.default = {
            LOCAL: "LOCAL",
            PUBLIC: "PUBLIC",
            PRIVATE: "PRIVATE"
        };
        var o = {
            LOCAL: {
                CREATED: [i.default.INITIALIZING],
                INITIALIZING: [i.default.CREATED, i.default.READY],
                READY: [i.default.ERROR],
                ERROR: []
            },
            PUBLIC: {
                CREATED: [i.default.INITIALIZING],
                INITIALIZING: [i.default.CREATED, i.default.OFFLINE],
                OFFLINE: [i.default.CONNECTING],
                CONNECTING: [i.default.OFFLINE, i.default.READY],
                READY: [i.default.OFFLINE, i.default.ERROR],
                ERROR: []
            },
            PRIVATE: {
                CREATED: [i.default.INITIALIZING],
                INITIALIZING: [i.default.CREATED, i.default.OFFLINE],
                OFFLINE: [i.default.CONNECTING],
                CONNECTING: [i.default.OFFLINE, i.default.ONLINE],
                ONLINE: [i.default.OFFLINE, i.default.AUTHENTICATING],
                AUTHENTICATING: [i.default.ONLINE, i.default.READY],
                READY: [i.default.OFFLINE, i.default.ONLINE, i.default.ERROR],
                ERROR: []
            }
        };
        e.serviceTypeTransitions = o
    }, function (t, e, r) {
        var n;
        if ("object" == typeof globalThis) n = globalThis;
        else try {
            n = r(585)
        } catch (t) {} finally {
            if (n || "undefined" == typeof window || (n = window), !n) throw new Error("Could not determine global this")
        }
        var i = n.WebSocket || n.MozWebSocket,
            o = r(586);

        function W3CWebSocket(t, e) {
            return e ? new i(t, e) : new i(t)
        }
        i && ["CONNECTING", "OPEN", "CLOSING", "CLOSED"].forEach((function (t) {
            Object.defineProperty(W3CWebSocket, t, {
                get: function () {
                    return i[t]
                }
            })
        })), t.exports = {
            w3cwebsocket: i ? W3CWebSocket : null,
            version: o
        }
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
                value: !0
            }),
            function __export(t) {
                for (var r in t) e.hasOwnProperty(r) || (e[r] = t[r])
            }(r(589));
        var n = r(179);
        e.XMLHttpRequestEventTarget = n.XMLHttpRequestEventTarget
    }, function (t, e, r) {
        (e = t.exports = r(266)).Stream = e, e.Readable = e, e.Writable = r(177), e.Duplex = r(52), e.Transform = r(270), e.PassThrough = r(596)
    }, function (t, e, r) {
        (function (t) {
            function objectToString(t) {
                return Object.prototype.toString.call(t)
            }
            e.isArray = function isArray(t) {
                return Array.isArray ? Array.isArray(t) : "[object Array]" === objectToString(t)
            }, e.isBoolean = function isBoolean(t) {
                return "boolean" == typeof t
            }, e.isNull = function isNull(t) {
                return null === t
            }, e.isNullOrUndefined = function isNullOrUndefined(t) {
                return null == t
            }, e.isNumber = function isNumber(t) {
                return "number" == typeof t
            }, e.isString = function isString(t) {
                return "string" == typeof t
            }, e.isSymbol = function isSymbol(t) {
                return "symbol" == typeof t
            }, e.isUndefined = function isUndefined(t) {
                return void 0 === t
            }, e.isRegExp = function isRegExp(t) {
                return "[object RegExp]" === objectToString(t)
            }, e.isObject = function isObject(t) {
                return "object" == typeof t && null !== t
            }, e.isDate = function isDate(t) {
                return "[object Date]" === objectToString(t)
            }, e.isError = function isError(t) {
                return "[object Error]" === objectToString(t) || t instanceof Error
            }, e.isFunction = function isFunction(t) {
                return "function" == typeof t
            }, e.isPrimitive = function isPrimitive(t) {
                return null === t || "boolean" == typeof t || "number" == typeof t || "string" == typeof t || "symbol" == typeof t || void 0 === t
            }, e.isBuffer = t.isBuffer
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = e;
        n.version = r(617).version, n.utils = r(19), n.rand = r(88), n.curve = r(275), n.curves = r(182), n.ec = r(630), n.eddsa = r(633)
    }, function (t, e, r) {
        var n;

        function Rand(t) {
            this.rand = t
        }
        if (t.exports = function rand(t) {
                return n || (n = new Rand(null)), n.generate(t)
            }, t.exports.Rand = Rand, Rand.prototype.generate = function generate(t) {
                return this._rand(t)
            }, Rand.prototype._rand = function _rand(t) {
                if (this.rand.getBytes) return this.rand.getBytes(t);
                for (var e = new Uint8Array(t), r = 0; r < e.length; r++) e[r] = this.rand.getByte();
                return e
            }, "object" == typeof self) self.crypto && self.crypto.getRandomValues ? Rand.prototype._rand = function _rand(t) {
            var e = new Uint8Array(t);
            return self.crypto.getRandomValues(e), e
        } : self.msCrypto && self.msCrypto.getRandomValues ? Rand.prototype._rand = function _rand(t) {
            var e = new Uint8Array(t);
            return self.msCrypto.getRandomValues(e), e
        } : "object" == typeof window && (Rand.prototype._rand = function () {
            throw new Error("Not implemented yet")
        });
        else try {
            var i = r(619);
            if ("function" != typeof i.randomBytes) throw new Error("Not supported");
            Rand.prototype._rand = function _rand(t) {
                return i.randomBytes(t)
            }
        } catch (t) {}
    }, function (t, e, r) {
        var n = e;
        n.utils = r(31), n.common = r(90), n.sha = r(623), n.ripemd = r(627), n.hmac = r(628), n.sha1 = n.sha.sha1, n.sha256 = n.sha.sha256, n.sha224 = n.sha.sha224, n.sha384 = n.sha.sha384, n.sha512 = n.sha.sha512, n.ripemd160 = n.ripemd.ripemd160
    }, function (t, e, r) {
        var n = r(31),
            i = r(17);

        function BlockHash() {
            this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32
        }
        e.BlockHash = BlockHash, BlockHash.prototype.update = function update(t, e) {
            if (t = n.toArray(t, e), this.pending ? this.pending = this.pending.concat(t) : this.pending = t, this.pendingTotal += t.length, this.pending.length >= this._delta8) {
                var r = (t = this.pending).length % this._delta8;
                this.pending = t.slice(t.length - r, t.length), 0 === this.pending.length && (this.pending = null), t = n.join32(t, 0, t.length - r, this.endian);
                for (var i = 0; i < t.length; i += this._delta32) this._update(t, i, i + this._delta32)
            }
            return this
        }, BlockHash.prototype.digest = function digest(t) {
            return this.update(this._pad()), i(null === this.pending), this._digest(t)
        }, BlockHash.prototype._pad = function pad() {
            var t = this.pendingTotal,
                e = this._delta8,
                r = e - (t + this.padLength) % e,
                n = new Array(r + this.padLength);
            n[0] = 128;
            for (var i = 1; i < r; i++) n[i] = 0;
            if (t <<= 3, "big" === this.endian) {
                for (var o = 8; o < this.padLength; o++) n[i++] = 0;
                n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = t >>> 24 & 255, n[i++] = t >>> 16 & 255, n[i++] = t >>> 8 & 255, n[i++] = 255 & t
            } else
                for (n[i++] = 255 & t, n[i++] = t >>> 8 & 255, n[i++] = t >>> 16 & 255, n[i++] = t >>> 24 & 255, n[i++] = 0, n[i++] = 0, n[i++] = 0, n[i++] = 0, o = 8; o < this.padLength; o++) n[i++] = 0;
            return n
        }
    }, function (t, e, r) {
        t.exports = Stream;
        var n = r(119).EventEmitter;

        function Stream() {
            n.call(this)
        }
        r(1)(Stream, n), Stream.Readable = r(85), Stream.Writable = r(641), Stream.Duplex = r(642), Stream.Transform = r(643), Stream.PassThrough = r(644), Stream.Stream = Stream, Stream.prototype.pipe = function (t, e) {
            var r = this;

            function ondata(e) {
                t.writable && !1 === t.write(e) && r.pause && r.pause()
            }

            function ondrain() {
                r.readable && r.resume && r.resume()
            }
            r.on("data", ondata), t.on("drain", ondrain), t._isStdio || e && !1 === e.end || (r.on("end", onend), r.on("close", onclose));
            var i = !1;

            function onend() {
                i || (i = !0, t.end())
            }

            function onclose() {
                i || (i = !0, "function" == typeof t.destroy && t.destroy())
            }

            function onerror(t) {
                if (cleanup(), 0 === n.listenerCount(this, "error")) throw t
            }

            function cleanup() {
                r.removeListener("data", ondata), t.removeListener("drain", ondrain), r.removeListener("end", onend), r.removeListener("close", onclose), r.removeListener("error", onerror), t.removeListener("error", onerror), r.removeListener("end", cleanup), r.removeListener("close", cleanup), t.removeListener("close", cleanup)
            }
            return r.on("error", onerror), t.on("error", onerror), r.on("end", cleanup), r.on("close", cleanup), t.on("close", cleanup), t.emit("pipe", r), t
        }
    }, function (t, e, r) {
        var n = r(12).errors,
            i = r(12).formatters,
            o = r(35),
            a = r(288),
            s = r(190).subscriptions,
            u = r(41).Hardfork,
            c = r(100),
            l = function Method(t) {
                if (!t.call || !t.name) throw new Error('When creating a method you need to provide at least the "name" and "call" property.');
                this.name = t.name, this.call = t.call, this.params = t.params || 0, this.inputFormatter = t.inputFormatter, this.outputFormatter = t.outputFormatter, this.transformPayload = t.transformPayload, this.extraFormatters = t.extraFormatters, this.abiCoder = t.abiCoder, this.requestManager = t.requestManager, this.accounts = t.accounts, this.defaultBlock = t.defaultBlock || "latest", this.defaultAccount = t.defaultAccount || null, this.transactionBlockTimeout = t.transactionBlockTimeout || 50, this.transactionConfirmationBlocks = t.transactionConfirmationBlocks || 24, this.transactionPollingTimeout = t.transactionPollingTimeout || 750, this.defaultCommon = t.defaultCommon, this.defaultChain = t.defaultChain, this.defaultHardfork = t.defaultHardfork, this.handleRevert = t.handleRevert
            };
        l.prototype.setRequestManager = function (t, e) {
            this.requestManager = t, e && (this.accounts = e)
        }, l.prototype.createFunction = function (t, e) {
            var r = this.buildCall();
            return r.call = this.call, this.setRequestManager(t || this.requestManager, e || this.accounts), r
        }, l.prototype.attachToObject = function (t) {
            var e = this.buildCall();
            e.call = this.call;
            var r = this.name.split(".");
            r.length > 1 ? (t[r[0]] = t[r[0]] || {}, t[r[0]][r[1]] = e) : t[r[0]] = e
        }, l.prototype.getCall = function (t) {
            return "function" == typeof this.call ? this.call(t) : this.call
        }, l.prototype.extractCallback = function (t) {
            if ("function" == typeof t[t.length - 1]) return t.pop()
        }, l.prototype.validateArgs = function (t) {
            if (t.length !== this.params) throw n.InvalidNumberOfParams(t.length, this.params, this.name)
        }, l.prototype.formatInput = function (t) {
            var e = this;
            return this.inputFormatter ? this.inputFormatter.map((function (r, n) {
                return r ? r.call(e, t[n]) : t[n]
            })) : t
        }, l.prototype.formatOutput = function (t) {
            var e = this;
            return Array.isArray(t) ? t.map((function (t) {
                return e.outputFormatter && t ? e.outputFormatter(t) : t
            })) : this.outputFormatter && t ? this.outputFormatter(t) : t
        }, l.prototype.toPayload = function (t) {
            var e = this.getCall(t),
                r = this.extractCallback(t),
                n = this.formatInput(t);
            this.validateArgs(n);
            var i = {
                method: e,
                params: n,
                callback: r
            };
            return this.transformPayload && (i = this.transformPayload(i)), i
        }, l.prototype._confirmTransaction = function (t, e, r) {
            var u = this,
                h = !1,
                d = !0,
                p = 0,
                m = 0,
                y = null,
                b = null,
                g = r.params[0] && "object" == typeof r.params[0] && r.params[0].gas ? r.params[0].gas : null,
                v = !!r.params[0] && "object" == typeof r.params[0] && r.params[0].data && r.params[0].from && !r.params[0].to,
                w = v && r.params[0].data.length > 2,
                M = [new l({
                    name: "getBlockByNumber",
                    call: "eth_getBlockByNumber",
                    params: 2,
                    inputFormatter: [i.inputBlockNumberFormatter, function (t) {
                        return !!t
                    }],
                    outputFormatter: i.outputBlockFormatter
                }), new l({
                    name: "getTransactionReceipt",
                    call: "eth_getTransactionReceipt",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: i.outputTransactionReceiptFormatter
                }), new l({
                    name: "getCode",
                    call: "eth_getCode",
                    params: 2,
                    inputFormatter: [i.inputAddressFormatter, i.inputDefaultBlockNumberFormatter]
                }), new l({
                    name: "getTransactionByHash",
                    call: "eth_getTransactionByHash",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: i.outputTransactionFormatter
                }), new s({
                    name: "subscribe",
                    type: "eth",
                    subscriptions: {
                        newBlockHeaders: {
                            subscriptionName: "newHeads",
                            params: 0,
                            outputFormatter: i.outputBlockFormatter
                        }
                    }
                })],
                A = {};
            M.forEach(t => {
                t.attachToObject(A), t.requestManager = u.requestManager
            });
            var checkConfirmation = function (s, l, M, x, B) {
                    if (!M) return B || (B = {
                        unsubscribe: function () {
                            clearInterval(y)
                        }
                    }), (s ? a.resolve(s) : A.getTransactionReceipt(e)).catch((function (e) {
                        B.unsubscribe(), h = !0, o._fireError({
                            message: "Failed to check for transaction receipt:",
                            data: e
                        }, t.eventEmitter, t.reject)
                    })).then((async function (e) {
                        if (!e || !e.blockHash) throw new Error("Receipt missing or blockHash null");
                        if (u.extraFormatters && u.extraFormatters.receiptFormatter && (e = u.extraFormatters.receiptFormatter(e)), t.eventEmitter.listeners("confirmation").length > 0) {
                            var r;
                            if (void 0 === s || 0 !== m) {
                                var n = await A.getBlockByNumber("latest"),
                                    i = n ? n.hash : null;
                                l ? b ? (r = await A.getBlockByNumber(b.number + 1)) && (b = r, t.eventEmitter.emit("confirmation", m, e, i)) : (r = await A.getBlockByNumber(e.blockNumber), b = r, t.eventEmitter.emit("confirmation", m, e, i)) : t.eventEmitter.emit("confirmation", m, e, i)
                            }(l && r || !l) && m++, d = !1, m === u.transactionConfirmationBlocks + 1 && (B.unsubscribe(), t.eventEmitter.removeAllListeners())
                        }
                        return e
                    })).then((async function (e) {
                        if (v && !h) {
                            if (!e.contractAddress) return d && (B.unsubscribe(), h = !0), void o._fireError(n.NoContractAddressFoundError(e), t.eventEmitter, t.reject, null, e);
                            var r;
                            try {
                                r = await A.getCode(e.contractAddress)
                            } catch (t) {}
                            if (!r) return;
                            !0 === e.status && w || r.length > 2 ? (t.eventEmitter.emit("receipt", e), u.extraFormatters && u.extraFormatters.contractDeployFormatter ? t.resolve(u.extraFormatters.contractDeployFormatter(e)) : t.resolve(e), d && t.eventEmitter.removeAllListeners()) : o._fireError(n.ContractCodeNotStoredError(e), t.eventEmitter, t.reject, null, e), d && B.unsubscribe(), h = !0
                        }
                        return e
                    })).then((async function (e) {
                        if (!v && !h) {
                            if (e.outOfGas || g && g === e.gasUsed || !0 !== e.status && "0x1" !== e.status && void 0 !== e.status)
                                if (JSON.stringify(e, null, 2), !1 === e.status || "0x0" === e.status) try {
                                    var a = null;
                                    if (!u.handleRevert || "eth_sendTransaction" !== u.call && "eth_sendRawTransaction" !== u.call) throw !1;
                                    var s = r.params[0];
                                    if ("eth_sendRawTransaction" === u.call) {
                                        var l = r.params[0],
                                            p = c.parse(l);
                                        s = i.inputTransactionFormatter({
                                            data: p.data,
                                            to: p.to,
                                            from: p.from,
                                            gas: p.gasLimit.toHexString(),
                                            gasPrice: p.gasPrice.toHexString(),
                                            value: p.value.toHexString()
                                        })
                                    }
                                    if (!(a = await u.getRevertReason(s, e.blockNumber))) throw !1;
                                    o._fireError(n.TransactionRevertInstructionError(a.reason, a.signature, e), t.eventEmitter, t.reject, null, e)
                                } catch (r) {
                                    o._fireError(n.TransactionRevertedWithoutReasonError(e), t.eventEmitter, t.reject, null, e)
                                } else o._fireError(n.TransactionOutOfGasError(e), t.eventEmitter, t.reject, null, e);
                                else t.eventEmitter.emit("receipt", e), t.resolve(e), d && t.eventEmitter.removeAllListeners();
                            d && B.unsubscribe(), h = !0
                        }
                    })).catch((function () {
                        p++, l ? p - 1 >= u.transactionPollingTimeout && (B.unsubscribe(), h = !0, o._fireError(n.TransactionError("Transaction was not mined within " + u.transactionPollingTimeout + " seconds, please make sure your transaction was properly sent. Be aware that it might still be mined!"), t.eventEmitter, t.reject)) : p - 1 >= u.transactionBlockTimeout && (B.unsubscribe(), h = !0, o._fireError(n.TransactionError("Transaction was not mined within " + u.transactionBlockTimeout + " blocks, please make sure your transaction was properly sent. Be aware that it might still be mined!"), t.eventEmitter, t.reject))
                    }));
                    B.unsubscribe(), h = !0, o._fireError({
                        message: "Failed to subscribe to new newBlockHeaders to confirm the transaction receipts.",
                        data: M
                    }, t.eventEmitter, t.reject)
                },
                x = function (t) {
                    const startInterval = () => {
                        y = setInterval(checkConfirmation.bind(null, t, !0), 1e3)
                    };
                    this.requestManager.provider.on ? A.subscribe("newBlockHeaders", (function (e, r, n) {
                        e || !r ? startInterval() : checkConfirmation(t, !1, e, 0, n)
                    })) : startInterval()
                }.bind(this);
            A.getTransactionReceipt(e).then((function (e) {
                e && e.blockHash ? (t.eventEmitter.listeners("confirmation").length > 0 && x(e), checkConfirmation(e, !1)) : h || x()
            })).catch((function () {
                h || x()
            }))
        };
        var getWallet = function (t, e) {
            return "number" == typeof t ? e.wallet[t] : t && "object" == typeof t && t.address && t.privateKey ? t : e.wallet[t.toLowerCase()]
        };

        function _handleTxType(t) {
            const e = void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas;
            let r;
            if (r = void 0 !== t.type ? o.toHex(t.type) : void 0 === t.type && e ? "0x2" : "0x0", void 0 !== t.gasPrice && ("0x2" === r || e)) throw Error("eip-1559 transactions don't support gasPrice");
            if (("0x1" === r || "0x0" === r) && e) throw Error("pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas");
            return e || t.common && t.common.hardfork && t.common.hardfork.toLowerCase() === u.London || t.hardfork && t.hardfork.toLowerCase() === u.London ? r = "0x2" : (t.accessList || t.common && t.common.hardfork && t.common.hardfork.toLowerCase() === u.Berlin || t.hardfork && t.hardfork.toLowerCase() === u.Berlin) && (r = "0x1"), r
        }

        function _handleTxPricing(t, e) {
            return new Promise((r, n) => {
                try {
                    var i = new l({
                            name: "getBlockByNumber",
                            call: "eth_getBlockByNumber",
                            params: 2,
                            inputFormatter: [function (t) {
                                return t ? o.toHex(t) : "latest"
                            }, function () {
                                return !1
                            }]
                        }).createFunction(t.requestManager),
                        a = new l({
                            name: "getGasPrice",
                            call: "eth_gasPrice",
                            params: 0
                        }).createFunction(t.requestManager);
                    e.type < "0x2" && void 0 !== e.gasPrice ? r({
                        gasPrice: e.gasPrice
                    }) : Promise.all([i(), a()]).then(t => {
                        const [n, i] = t;
                        if ("0x2" === e.type && n && n.baseFeePerGas) {
                            let t, i;
                            e.gasPrice ? (t = e.gasPrice, i = e.gasPrice, delete e.gasPrice) : (t = e.maxPriorityFeePerGas || "0x3B9ACA00", i = e.maxFeePerGas || o.toHex(o.toBN(n.baseFeePerGas).mul(o.toBN(2)).add(o.toBN(t)))), r({
                                maxFeePerGas: i,
                                maxPriorityFeePerGas: t
                            })
                        } else {
                            if (e.maxPriorityFeePerGas || e.maxFeePerGas) throw Error("Network doesn't support eip-1559");
                            r({
                                gasPrice: i
                            })
                        }
                    })
                } catch (t) {
                    n(t)
                }
            })
        }
        l.prototype.buildCall = function () {
            var t = this,
                e = "eth_sendTransaction" === t.call || "eth_sendRawTransaction" === t.call,
                r = "eth_call" === t.call,
                send = function () {
                    var i = a(!e),
                        s = t.toPayload(Array.prototype.slice.call(arguments)),
                        sendTxCallback = function (a, u) {
                            var c;
                            if (t.handleRevert && r && t.abiCoder && (!a && t.isRevertReasonString(u) ? c = u.substring(10) : a && a.data && (c = a.data.substring(10)), c)) {
                                var l = t.abiCoder.decodeParameter("string", "0x" + c);
                                return void o._fireError(n.RevertInstructionError(l, "Error(String)"), i.eventEmitter, i.reject, s.callback, {
                                    reason: l,
                                    signature: "Error(String)"
                                })
                            }
                            try {
                                u = t.formatOutput(u)
                            } catch (t) {
                                a = t
                            }
                            if (u instanceof Error && (a = u), a) return a.error && (a = a.error), o._fireError(a, i.eventEmitter, i.reject, s.callback);
                            s.callback && s.callback(null, u), e ? (i.eventEmitter.emit("transactionHash", u), t._confirmTransaction(i, u, s)) : a || i.resolve(u)
                        },
                        sendSignedTx = function (e) {
                            var r = {
                                ...s,
                                method: "eth_sendRawTransaction",
                                params: [e.rawTransaction]
                            };
                            t.requestManager.send(r, sendTxCallback)
                        },
                        sendRequest = function (t, e) {
                            var r;
                            if (e && e.accounts && e.accounts.wallet && e.accounts.wallet.length)
                                if ("eth_sendTransaction" === t.method) {
                                    var n = t.params[0];
                                    if ((r = getWallet(n && "object" == typeof n ? n.from : null, e.accounts)) && r.privateKey) return delete(n = JSON.parse(JSON.stringify(n))).from, e.defaultChain && !n.chain && (n.chain = e.defaultChain), e.defaultHardfork && !n.hardfork && (n.hardfork = e.defaultHardfork), e.defaultCommon && !n.common && (n.common = e.defaultCommon), void e.accounts.signTransaction(n, r.privateKey).then(sendSignedTx).catch((function (t) {
                                        if ("function" == typeof i.eventEmitter.listeners && i.eventEmitter.listeners("error").length) {
                                            try {
                                                i.eventEmitter.emit("error", t)
                                            } catch (t) {}
                                            i.eventEmitter.removeAllListeners(), i.eventEmitter.catch((function () {}))
                                        }
                                        i.reject(t)
                                    }))
                                } else if ("eth_sign" === t.method) {
                                var o = t.params[1];
                                if ((r = getWallet(t.params[0], e.accounts)) && r.privateKey) {
                                    var a = e.accounts.sign(o, r.privateKey);
                                    return t.callback && t.callback(null, a.signature), void i.resolve(a.signature)
                                }
                            }
                            return e.requestManager.send(t, sendTxCallback)
                        };
                    return e && s.params[0] && "object" == typeof s.params[0] && void 0 === s.params[0].gasPrice && (void 0 === s.params[0].maxPriorityFeePerGas || void 0 === s.params[0].maxFeePerGas) ? (void 0 === s.params[0].type && (s.params[0].type = _handleTxType(s.params[0])), _handleTxPricing(t, s.params[0]).then(r => {
                        void 0 !== r.gasPrice ? s.params[0].gasPrice = r.gasPrice : void 0 !== r.maxPriorityFeePerGas && void 0 !== r.maxFeePerGas && (s.params[0].maxPriorityFeePerGas = r.maxPriorityFeePerGas, s.params[0].maxFeePerGas = r.maxFeePerGas), e && setTimeout(() => {
                            i.eventEmitter.emit("sending", s)
                        }, 0), sendRequest(s, t)
                    })) : (e && setTimeout(() => {
                        i.eventEmitter.emit("sending", s)
                    }, 0), sendRequest(s, t)), e && setTimeout(() => {
                        i.eventEmitter.emit("sent", s)
                    }, 0), i.eventEmitter
                };
            return send.method = t, send.request = this.request.bind(this), send
        }, l.prototype.getRevertReason = function (t, e) {
            var r = this;
            return new Promise((function (n, i) {
                new l({
                    name: "call",
                    call: "eth_call",
                    params: 2,
                    abiCoder: r.abiCoder,
                    handleRevert: !0
                }).createFunction(r.requestManager)(t, o.numberToHex(e)).then((function () {
                    n(!1)
                })).catch((function (t) {
                    t.reason ? n({
                        reason: t.reason,
                        signature: t.signature
                    }) : i(t)
                }))
            }))
        }, l.prototype.isRevertReasonString = function (t) {
            return "string" == typeof t && (t.length - 2) / 2 % 32 == 4 && "0x08c379a0" === t.substring(0, 10)
        }, l.prototype.request = function () {
            var t = this.toPayload(Array.prototype.slice.call(arguments));
            return t.format = this.formatOutput.bind(this), t
        }, t.exports = l
    }, function (t, e, r) {
        t.exports = {
            encode: r(744),
            decode: r(745),
            encodingLength: r(746)
        }
    }, function (t) {
        t.exports = JSON.parse('{"identity":0,"ip4":4,"tcp":6,"sha1":17,"sha2-256":18,"sha2-512":19,"sha3-512":20,"sha3-384":21,"sha3-256":22,"sha3-224":23,"shake-128":24,"shake-256":25,"keccak-224":26,"keccak-256":27,"keccak-384":28,"keccak-512":29,"dccp":33,"murmur3-128":34,"murmur3-32":35,"ip6":41,"ip6zone":42,"path":47,"multicodec":48,"multihash":49,"multiaddr":50,"multibase":51,"dns":53,"dns4":54,"dns6":55,"dnsaddr":56,"protobuf":80,"cbor":81,"raw":85,"dbl-sha2-256":86,"rlp":96,"bencode":99,"dag-pb":112,"dag-cbor":113,"libp2p-key":114,"git-raw":120,"torrent-info":123,"torrent-file":124,"leofcoin-block":129,"leofcoin-tx":130,"leofcoin-pr":131,"sctp":132,"dag-jose":133,"dag-cose":134,"eth-block":144,"eth-block-list":145,"eth-tx-trie":146,"eth-tx":147,"eth-tx-receipt-trie":148,"eth-tx-receipt":149,"eth-state-trie":150,"eth-account-snapshot":151,"eth-storage-trie":152,"bitcoin-block":176,"bitcoin-tx":177,"zcash-block":192,"zcash-tx":193,"stellar-block":208,"stellar-tx":209,"md4":212,"md5":213,"bmt":214,"decred-block":224,"decred-tx":225,"ipld-ns":226,"ipfs-ns":227,"swarm-ns":228,"ipns-ns":229,"zeronet":230,"ed25519-pub":237,"dash-block":240,"dash-tx":241,"swarm-manifest":250,"swarm-feed":251,"udp":273,"p2p-webrtc-star":275,"p2p-webrtc-direct":276,"p2p-stardust":277,"p2p-circuit":290,"dag-json":297,"udt":301,"utp":302,"unix":400,"p2p":421,"ipfs":421,"https":443,"onion":444,"onion3":445,"garlic64":446,"garlic32":447,"tls":448,"quic":460,"ws":477,"wss":478,"p2p-websocket-star":479,"http":480,"json":512,"messagepack":513,"libp2p-peer-record":769,"x11":4352,"blake2b-8":45569,"blake2b-16":45570,"blake2b-24":45571,"blake2b-32":45572,"blake2b-40":45573,"blake2b-48":45574,"blake2b-56":45575,"blake2b-64":45576,"blake2b-72":45577,"blake2b-80":45578,"blake2b-88":45579,"blake2b-96":45580,"blake2b-104":45581,"blake2b-112":45582,"blake2b-120":45583,"blake2b-128":45584,"blake2b-136":45585,"blake2b-144":45586,"blake2b-152":45587,"blake2b-160":45588,"blake2b-168":45589,"blake2b-176":45590,"blake2b-184":45591,"blake2b-192":45592,"blake2b-200":45593,"blake2b-208":45594,"blake2b-216":45595,"blake2b-224":45596,"blake2b-232":45597,"blake2b-240":45598,"blake2b-248":45599,"blake2b-256":45600,"blake2b-264":45601,"blake2b-272":45602,"blake2b-280":45603,"blake2b-288":45604,"blake2b-296":45605,"blake2b-304":45606,"blake2b-312":45607,"blake2b-320":45608,"blake2b-328":45609,"blake2b-336":45610,"blake2b-344":45611,"blake2b-352":45612,"blake2b-360":45613,"blake2b-368":45614,"blake2b-376":45615,"blake2b-384":45616,"blake2b-392":45617,"blake2b-400":45618,"blake2b-408":45619,"blake2b-416":45620,"blake2b-424":45621,"blake2b-432":45622,"blake2b-440":45623,"blake2b-448":45624,"blake2b-456":45625,"blake2b-464":45626,"blake2b-472":45627,"blake2b-480":45628,"blake2b-488":45629,"blake2b-496":45630,"blake2b-504":45631,"blake2b-512":45632,"blake2s-8":45633,"blake2s-16":45634,"blake2s-24":45635,"blake2s-32":45636,"blake2s-40":45637,"blake2s-48":45638,"blake2s-56":45639,"blake2s-64":45640,"blake2s-72":45641,"blake2s-80":45642,"blake2s-88":45643,"blake2s-96":45644,"blake2s-104":45645,"blake2s-112":45646,"blake2s-120":45647,"blake2s-128":45648,"blake2s-136":45649,"blake2s-144":45650,"blake2s-152":45651,"blake2s-160":45652,"blake2s-168":45653,"blake2s-176":45654,"blake2s-184":45655,"blake2s-192":45656,"blake2s-200":45657,"blake2s-208":45658,"blake2s-216":45659,"blake2s-224":45660,"blake2s-232":45661,"blake2s-240":45662,"blake2s-248":45663,"blake2s-256":45664,"skein256-8":45825,"skein256-16":45826,"skein256-24":45827,"skein256-32":45828,"skein256-40":45829,"skein256-48":45830,"skein256-56":45831,"skein256-64":45832,"skein256-72":45833,"skein256-80":45834,"skein256-88":45835,"skein256-96":45836,"skein256-104":45837,"skein256-112":45838,"skein256-120":45839,"skein256-128":45840,"skein256-136":45841,"skein256-144":45842,"skein256-152":45843,"skein256-160":45844,"skein256-168":45845,"skein256-176":45846,"skein256-184":45847,"skein256-192":45848,"skein256-200":45849,"skein256-208":45850,"skein256-216":45851,"skein256-224":45852,"skein256-232":45853,"skein256-240":45854,"skein256-248":45855,"skein256-256":45856,"skein512-8":45857,"skein512-16":45858,"skein512-24":45859,"skein512-32":45860,"skein512-40":45861,"skein512-48":45862,"skein512-56":45863,"skein512-64":45864,"skein512-72":45865,"skein512-80":45866,"skein512-88":45867,"skein512-96":45868,"skein512-104":45869,"skein512-112":45870,"skein512-120":45871,"skein512-128":45872,"skein512-136":45873,"skein512-144":45874,"skein512-152":45875,"skein512-160":45876,"skein512-168":45877,"skein512-176":45878,"skein512-184":45879,"skein512-192":45880,"skein512-200":45881,"skein512-208":45882,"skein512-216":45883,"skein512-224":45884,"skein512-232":45885,"skein512-240":45886,"skein512-248":45887,"skein512-256":45888,"skein512-264":45889,"skein512-272":45890,"skein512-280":45891,"skein512-288":45892,"skein512-296":45893,"skein512-304":45894,"skein512-312":45895,"skein512-320":45896,"skein512-328":45897,"skein512-336":45898,"skein512-344":45899,"skein512-352":45900,"skein512-360":45901,"skein512-368":45902,"skein512-376":45903,"skein512-384":45904,"skein512-392":45905,"skein512-400":45906,"skein512-408":45907,"skein512-416":45908,"skein512-424":45909,"skein512-432":45910,"skein512-440":45911,"skein512-448":45912,"skein512-456":45913,"skein512-464":45914,"skein512-472":45915,"skein512-480":45916,"skein512-488":45917,"skein512-496":45918,"skein512-504":45919,"skein512-512":45920,"skein1024-8":45921,"skein1024-16":45922,"skein1024-24":45923,"skein1024-32":45924,"skein1024-40":45925,"skein1024-48":45926,"skein1024-56":45927,"skein1024-64":45928,"skein1024-72":45929,"skein1024-80":45930,"skein1024-88":45931,"skein1024-96":45932,"skein1024-104":45933,"skein1024-112":45934,"skein1024-120":45935,"skein1024-128":45936,"skein1024-136":45937,"skein1024-144":45938,"skein1024-152":45939,"skein1024-160":45940,"skein1024-168":45941,"skein1024-176":45942,"skein1024-184":45943,"skein1024-192":45944,"skein1024-200":45945,"skein1024-208":45946,"skein1024-216":45947,"skein1024-224":45948,"skein1024-232":45949,"skein1024-240":45950,"skein1024-248":45951,"skein1024-256":45952,"skein1024-264":45953,"skein1024-272":45954,"skein1024-280":45955,"skein1024-288":45956,"skein1024-296":45957,"skein1024-304":45958,"skein1024-312":45959,"skein1024-320":45960,"skein1024-328":45961,"skein1024-336":45962,"skein1024-344":45963,"skein1024-352":45964,"skein1024-360":45965,"skein1024-368":45966,"skein1024-376":45967,"skein1024-384":45968,"skein1024-392":45969,"skein1024-400":45970,"skein1024-408":45971,"skein1024-416":45972,"skein1024-424":45973,"skein1024-432":45974,"skein1024-440":45975,"skein1024-448":45976,"skein1024-456":45977,"skein1024-464":45978,"skein1024-472":45979,"skein1024-480":45980,"skein1024-488":45981,"skein1024-496":45982,"skein1024-504":45983,"skein1024-512":45984,"skein1024-520":45985,"skein1024-528":45986,"skein1024-536":45987,"skein1024-544":45988,"skein1024-552":45989,"skein1024-560":45990,"skein1024-568":45991,"skein1024-576":45992,"skein1024-584":45993,"skein1024-592":45994,"skein1024-600":45995,"skein1024-608":45996,"skein1024-616":45997,"skein1024-624":45998,"skein1024-632":45999,"skein1024-640":46000,"skein1024-648":46001,"skein1024-656":46002,"skein1024-664":46003,"skein1024-672":46004,"skein1024-680":46005,"skein1024-688":46006,"skein1024-696":46007,"skein1024-704":46008,"skein1024-712":46009,"skein1024-720":46010,"skein1024-728":46011,"skein1024-736":46012,"skein1024-744":46013,"skein1024-752":46014,"skein1024-760":46015,"skein1024-768":46016,"skein1024-776":46017,"skein1024-784":46018,"skein1024-792":46019,"skein1024-800":46020,"skein1024-808":46021,"skein1024-816":46022,"skein1024-824":46023,"skein1024-832":46024,"skein1024-840":46025,"skein1024-848":46026,"skein1024-856":46027,"skein1024-864":46028,"skein1024-872":46029,"skein1024-880":46030,"skein1024-888":46031,"skein1024-896":46032,"skein1024-904":46033,"skein1024-912":46034,"skein1024-920":46035,"skein1024-928":46036,"skein1024-936":46037,"skein1024-944":46038,"skein1024-952":46039,"skein1024-960":46040,"skein1024-968":46041,"skein1024-976":46042,"skein1024-984":46043,"skein1024-992":46044,"skein1024-1000":46045,"skein1024-1008":46046,"skein1024-1016":46047,"skein1024-1024":46048,"holochain-adr-v0":8417572,"holochain-adr-v1":8483108,"holochain-key-v0":9728292,"holochain-key-v1":9793828,"holochain-sig-v0":10645796,"holochain-sig-v1":10711332}')
    }, function (t, e, r) {
        var n = r(65),
            i = r(301),
            o = r(781),
            a = r(15),
            s = r(130),
            _flattenTypes = function (t, e) {
                var r = [];
                return e.forEach((function (e) {
                    if ("object" == typeof e.components) {
                        if ("tuple" !== e.type.substring(0, 5)) throw new Error("components found but type is not tuple; report on GitHub");
                        var n = "",
                            i = e.type.indexOf("[");
                        i >= 0 && (n = e.type.substring(i));
                        var o = _flattenTypes(t, e.components);
                        Array.isArray(o) && t ? r.push("tuple(" + o.join(",") + ")" + n) : t ? r.push("(" + o + ")") : r.push("(" + o.join(",") + ")" + n)
                    } else r.push(e.type)
                })), r
            },
            hexToAscii = function (t) {
                if (!i.isHexStrict(t)) throw new Error("The parameter must be a valid HEX string.");
                var e = "",
                    r = 0,
                    n = t.length;
                for ("0x" === t.substring(0, 2) && (r = 2); r < n; r += 2) {
                    var o = parseInt(t.substr(r, 2), 16);
                    e += String.fromCharCode(o)
                }
                return e
            },
            asciiToHex = function (t) {
                if (!t) return "0x00";
                for (var e = "", r = 0; r < t.length; r++) {
                    var n = t.charCodeAt(r).toString(16);
                    e += n.length < 2 ? "0" + n : n
                }
                return "0x" + e
            },
            getUnitValue = function (t) {
                if (t = t ? t.toLowerCase() : "ether", !n.unitMap[t]) throw new Error('This unit "' + t + "\" doesn't exist, please use the one of the following units" + JSON.stringify(n.unitMap, null, 2));
                return t
            };
        t.exports = {
            _fireError: function (t, e, r, n, i) {
                return !t || "object" != typeof t || t instanceof Error || !t.data || ((t.data && "object" == typeof t.data || Array.isArray(t.data)) && (t.data = JSON.stringify(t.data, null, 2)), t = t.message + "\n" + t.data), "string" == typeof t && (t = new Error(t)), "function" == typeof n && n(t, i), "function" == typeof r && ((e && "function" == typeof e.listeners && e.listeners("error").length || "function" == typeof n) && e.catch((function () {})), setTimeout((function () {
                    r(t)
                }), 1)), e && "function" == typeof e.emit && setTimeout((function () {
                    e.emit("error", t, i), e.removeAllListeners()
                }), 1), e
            },
            _jsonInterfaceMethodToString: function (t) {
                return t && "object" == typeof t && t.name && -1 !== t.name.indexOf("(") ? t.name : t.name + "(" + _flattenTypes(!1, t.inputs).join(",") + ")"
            },
            _flattenTypes: _flattenTypes,
            randomHex: function (t) {
                return "0x" + a(t).toString("hex")
            },
            BN: i.BN,
            isBN: i.isBN,
            isBigNumber: i.isBigNumber,
            isHex: i.isHex,
            isHexStrict: i.isHexStrict,
            sha3: i.sha3,
            sha3Raw: i.sha3Raw,
            keccak256: i.sha3,
            soliditySha3: o.soliditySha3,
            soliditySha3Raw: o.soliditySha3Raw,
            encodePacked: o.encodePacked,
            isAddress: i.isAddress,
            checkAddressChecksum: i.checkAddressChecksum,
            toChecksumAddress: function (t) {
                if (void 0 === t) return "";
                if (!/^(0x)?[0-9a-f]{40}$/i.test(t)) throw new Error('Given address "' + t + '" is not a valid Ethereum address.');
                t = t.toLowerCase().replace(/^0x/i, "");
                for (var e = i.sha3(t).replace(/^0x/i, ""), r = "0x", n = 0; n < t.length; n++) parseInt(e[n], 16) > 7 ? r += t[n].toUpperCase() : r += t[n];
                return r
            },
            toHex: i.toHex,
            toBN: i.toBN,
            bytesToHex: i.bytesToHex,
            hexToBytes: i.hexToBytes,
            hexToNumberString: i.hexToNumberString,
            hexToNumber: i.hexToNumber,
            toDecimal: i.hexToNumber,
            numberToHex: i.numberToHex,
            fromDecimal: i.numberToHex,
            hexToUtf8: i.hexToUtf8,
            hexToString: i.hexToUtf8,
            toUtf8: i.hexToUtf8,
            stripHexPrefix: i.stripHexPrefix,
            utf8ToHex: i.utf8ToHex,
            stringToHex: i.utf8ToHex,
            fromUtf8: i.utf8ToHex,
            hexToAscii: hexToAscii,
            toAscii: hexToAscii,
            asciiToHex: asciiToHex,
            fromAscii: asciiToHex,
            unitMap: n.unitMap,
            toWei: function (t, e) {
                if (e = getUnitValue(e), !i.isBN(t) && "string" != typeof t) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                return i.isBN(t) ? n.toWei(t, e) : n.toWei(t, e).toString(10)
            },
            fromWei: function (t, e) {
                if (e = getUnitValue(e), !i.isBN(t) && "string" != typeof t) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                return i.isBN(t) ? n.fromWei(t, e) : n.fromWei(t, e).toString(10)
            },
            padLeft: i.leftPad,
            leftPad: i.leftPad,
            padRight: i.rightPad,
            rightPad: i.rightPad,
            toTwosComplement: i.toTwosComplement,
            isBloom: i.isBloom,
            isUserEthereumAddressInBloom: i.isUserEthereumAddressInBloom,
            isContractAddressInBloom: i.isContractAddressInBloom,
            isTopic: i.isTopic,
            isTopicInBloom: i.isTopicInBloom,
            isInBloom: i.isInBloom,
            compareBlockNumbers: function (t, e) {
                if (t == e) return 0;
                if ("genesis" != t && "earliest" != t && 0 != t || "genesis" != e && "earliest" != e && 0 != e) {
                    if ("genesis" == t || "earliest" == t) return -1;
                    if ("genesis" == e || "earliest" == e) return 1;
                    if ("latest" == t) return "pending" == e ? -1 : 1;
                    if ("latest" === e) return "pending" == t ? 1 : -1;
                    if ("pending" == t) return 1;
                    if ("pending" == e) return -1; {
                        let r = new s(t),
                            n = new s(e);
                        return r.lt(n) ? -1 : r.eq(n) ? 0 : 1
                    }
                }
                return 0
            },
            toNumber: i.toNumber
        }
    }, function (t, e, r) {
        (function (e) {
            t.exports = function xor(t, r) {
                for (var n = Math.min(t.length, r.length), i = new e(n), o = 0; o < n; ++o) i[o] = t[o] ^ r[o];
                return i
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = e;
        n.bignum = r(2), n.define = r(820).define, n.base = r(98), n.constants = r(322), n.decoders = r(825), n.encoders = r(827)
    }, function (t, e, r) {
        var n = e;
        n.Reporter = r(822).Reporter, n.DecoderBuffer = r(321).DecoderBuffer, n.EncoderBuffer = r(321).EncoderBuffer, n.Node = r(823)
    }, function (t, e, r) {
        var n = r(65),
            i = r(337),
            o = r(862),
            a = r(15),
            s = r(137),
            _flattenTypes = function (t, e) {
                var r = [];
                return e.forEach((function (e) {
                    if ("object" == typeof e.components) {
                        if ("tuple" !== e.type.substring(0, 5)) throw new Error("components found but type is not tuple; report on GitHub");
                        var n = "",
                            i = e.type.indexOf("[");
                        i >= 0 && (n = e.type.substring(i));
                        var o = _flattenTypes(t, e.components);
                        Array.isArray(o) && t ? r.push("tuple(" + o.join(",") + ")" + n) : t ? r.push("(" + o + ")") : r.push("(" + o.join(",") + ")" + n)
                    } else r.push(e.type)
                })), r
            },
            hexToAscii = function (t) {
                if (!i.isHexStrict(t)) throw new Error("The parameter must be a valid HEX string.");
                var e = "",
                    r = 0,
                    n = t.length;
                for ("0x" === t.substring(0, 2) && (r = 2); r < n; r += 2) {
                    var o = parseInt(t.substr(r, 2), 16);
                    e += String.fromCharCode(o)
                }
                return e
            },
            asciiToHex = function (t) {
                if (!t) return "0x00";
                for (var e = "", r = 0; r < t.length; r++) {
                    var n = t.charCodeAt(r).toString(16);
                    e += n.length < 2 ? "0" + n : n
                }
                return "0x" + e
            },
            getUnitValue = function (t) {
                if (t = t ? t.toLowerCase() : "ether", !n.unitMap[t]) throw new Error('This unit "' + t + "\" doesn't exist, please use the one of the following units" + JSON.stringify(n.unitMap, null, 2));
                return t
            };
        t.exports = {
            _fireError: function (t, e, r, n, i) {
                return !t || "object" != typeof t || t instanceof Error || !t.data || ((t.data && "object" == typeof t.data || Array.isArray(t.data)) && (t.data = JSON.stringify(t.data, null, 2)), t = t.message + "\n" + t.data), "string" == typeof t && (t = new Error(t)), "function" == typeof n && n(t, i), "function" == typeof r && ((e && "function" == typeof e.listeners && e.listeners("error").length || "function" == typeof n) && e.catch((function () {})), setTimeout((function () {
                    r(t)
                }), 1)), e && "function" == typeof e.emit && setTimeout((function () {
                    e.emit("error", t, i), e.removeAllListeners()
                }), 1), e
            },
            _jsonInterfaceMethodToString: function (t) {
                return t && "object" == typeof t && t.name && -1 !== t.name.indexOf("(") ? t.name : t.name + "(" + _flattenTypes(!1, t.inputs).join(",") + ")"
            },
            _flattenTypes: _flattenTypes,
            randomHex: function (t) {
                return "0x" + a(t).toString("hex")
            },
            BN: i.BN,
            isBN: i.isBN,
            isBigNumber: i.isBigNumber,
            isHex: i.isHex,
            isHexStrict: i.isHexStrict,
            sha3: i.sha3,
            sha3Raw: i.sha3Raw,
            keccak256: i.sha3,
            soliditySha3: o.soliditySha3,
            soliditySha3Raw: o.soliditySha3Raw,
            encodePacked: o.encodePacked,
            isAddress: i.isAddress,
            checkAddressChecksum: i.checkAddressChecksum,
            toChecksumAddress: function (t) {
                if (void 0 === t) return "";
                if (!/^(0x)?[0-9a-f]{40}$/i.test(t)) throw new Error('Given address "' + t + '" is not a valid Ethereum address.');
                t = t.toLowerCase().replace(/^0x/i, "");
                for (var e = i.sha3(t).replace(/^0x/i, ""), r = "0x", n = 0; n < t.length; n++) parseInt(e[n], 16) > 7 ? r += t[n].toUpperCase() : r += t[n];
                return r
            },
            toHex: i.toHex,
            toBN: i.toBN,
            bytesToHex: i.bytesToHex,
            hexToBytes: i.hexToBytes,
            hexToNumberString: i.hexToNumberString,
            hexToNumber: i.hexToNumber,
            toDecimal: i.hexToNumber,
            numberToHex: i.numberToHex,
            fromDecimal: i.numberToHex,
            hexToUtf8: i.hexToUtf8,
            hexToString: i.hexToUtf8,
            toUtf8: i.hexToUtf8,
            stripHexPrefix: i.stripHexPrefix,
            utf8ToHex: i.utf8ToHex,
            stringToHex: i.utf8ToHex,
            fromUtf8: i.utf8ToHex,
            hexToAscii: hexToAscii,
            toAscii: hexToAscii,
            asciiToHex: asciiToHex,
            fromAscii: asciiToHex,
            unitMap: n.unitMap,
            toWei: function (t, e) {
                if (e = getUnitValue(e), !i.isBN(t) && "string" != typeof t) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                return i.isBN(t) ? n.toWei(t, e) : n.toWei(t, e).toString(10)
            },
            fromWei: function (t, e) {
                if (e = getUnitValue(e), !i.isBN(t) && "string" != typeof t) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                return i.isBN(t) ? n.fromWei(t, e) : n.fromWei(t, e).toString(10)
            },
            padLeft: i.leftPad,
            leftPad: i.leftPad,
            padRight: i.rightPad,
            rightPad: i.rightPad,
            toTwosComplement: i.toTwosComplement,
            isBloom: i.isBloom,
            isUserEthereumAddressInBloom: i.isUserEthereumAddressInBloom,
            isContractAddressInBloom: i.isContractAddressInBloom,
            isTopic: i.isTopic,
            isTopicInBloom: i.isTopicInBloom,
            isInBloom: i.isInBloom,
            compareBlockNumbers: function (t, e) {
                if (t == e) return 0;
                if ("genesis" != t && "earliest" != t && 0 != t || "genesis" != e && "earliest" != e && 0 != e) {
                    if ("genesis" == t || "earliest" == t) return -1;
                    if ("genesis" == e || "earliest" == e) return 1;
                    if ("latest" == t) return "pending" == e ? -1 : 1;
                    if ("latest" === e) return "pending" == t ? 1 : -1;
                    if ("pending" == t) return 1;
                    if ("pending" == e) return -1; {
                        let r = new s(t),
                            n = new s(e);
                        return r.lt(n) ? -1 : r.eq(n) ? 0 : 1
                    }
                }
                return 0
            },
            toNumber: i.toNumber
        }
    }, function (t, e, r) {
        r.r(e), r.d(e, "computeAddress", (function () {
            return computeAddress
        })), r.d(e, "recoverAddress", (function () {
            return recoverAddress
        })), r.d(e, "serialize", (function () {
            return serialize
        })), r.d(e, "parse", (function () {
            return parse
        }));
        var n = r(2);
        let i = !1,
            o = !1;
        const a = {
            debug: 1,
            default: 2,
            info: 2,
            warning: 3,
            error: 4,
            off: 5
        };
        let s = a.default,
            u = null;
        const c = function _checkNormalize() {
            try {
                const t = [];
                if (["NFD", "NFC", "NFKD", "NFKC"].forEach(e => {
                        try {
                            if ("test" !== "test".normalize(e)) throw new Error("bad normalize")
                        } catch (r) {
                            t.push(e)
                        }
                    }), t.length) throw new Error("missing " + t.join(", "));
                if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
            } catch (t) {
                return t.message
            }
            return null
        }();
        var l, h;
        ! function (t) {
            t.DEBUG = "DEBUG", t.INFO = "INFO", t.WARNING = "WARNING", t.ERROR = "ERROR", t.OFF = "OFF"
        }(l || (l = {})),
        function (t) {
            t.UNKNOWN_ERROR = "UNKNOWN_ERROR", t.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", t.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", t.NETWORK_ERROR = "NETWORK_ERROR", t.SERVER_ERROR = "SERVER_ERROR", t.TIMEOUT = "TIMEOUT", t.BUFFER_OVERRUN = "BUFFER_OVERRUN", t.NUMERIC_FAULT = "NUMERIC_FAULT", t.MISSING_NEW = "MISSING_NEW", t.INVALID_ARGUMENT = "INVALID_ARGUMENT", t.MISSING_ARGUMENT = "MISSING_ARGUMENT", t.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", t.CALL_EXCEPTION = "CALL_EXCEPTION", t.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", t.NONCE_EXPIRED = "NONCE_EXPIRED", t.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", t.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT"
        }(h || (h = {}));
        class lib_esm_Logger {
            constructor(t) {
                Object.defineProperty(this, "version", {
                    enumerable: !0,
                    value: t,
                    writable: !1
                })
            }
            _log(t, e) {
                const r = t.toLowerCase();
                null == a[r] && this.throwArgumentError("invalid log level name", "logLevel", t), s > a[r] || console.log.apply(console, e)
            }
            debug(...t) {
                this._log(lib_esm_Logger.levels.DEBUG, t)
            }
            info(...t) {
                this._log(lib_esm_Logger.levels.INFO, t)
            }
            warn(...t) {
                this._log(lib_esm_Logger.levels.WARNING, t)
            }
            makeError(t, e, r) {
                if (o) return this.makeError("censored error", e, {});
                e || (e = lib_esm_Logger.errors.UNKNOWN_ERROR), r || (r = {});
                const n = [];
                Object.keys(r).forEach(t => {
                    try {
                        n.push(t + "=" + JSON.stringify(r[t]))
                    } catch (e) {
                        n.push(t + "=" + JSON.stringify(r[t].toString()))
                    }
                }), n.push("code=" + e), n.push("version=" + this.version);
                const i = t;
                n.length && (t += " (" + n.join(", ") + ")");
                const a = new Error(t);
                return a.reason = i, a.code = e, Object.keys(r).forEach((function (t) {
                    a[t] = r[t]
                })), a
            }
            throwError(t, e, r) {
                throw this.makeError(t, e, r)
            }
            throwArgumentError(t, e, r) {
                return this.throwError(t, lib_esm_Logger.errors.INVALID_ARGUMENT, {
                    argument: e,
                    value: r
                })
            }
            checkNormalize(t) {
                null == t && (t = "platform missing String.prototype.normalize"), c && this.throwError("platform missing String.prototype.normalize", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "String.prototype.normalize",
                    form: c
                })
            }
            checkSafeUint53(t, e) {
                "number" == typeof t && (null == e && (e = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(e, lib_esm_Logger.errors.NUMERIC_FAULT, {
                    operation: "checkSafeInteger",
                    fault: "out-of-safe-range",
                    value: t
                }), t % 1 && this.throwError(e, lib_esm_Logger.errors.NUMERIC_FAULT, {
                    operation: "checkSafeInteger",
                    fault: "non-integer",
                    value: t
                }))
            }
            checkArgumentCount(t, e, r) {
                r = r ? ": " + r : "", t < e && this.throwError("missing argument" + r, lib_esm_Logger.errors.MISSING_ARGUMENT, {
                    count: t,
                    expectedCount: e
                }), t > e && this.throwError("too many arguments" + r, lib_esm_Logger.errors.UNEXPECTED_ARGUMENT, {
                    count: t,
                    expectedCount: e
                })
            }
            checkNew(t, e) {
                t !== Object && null != t || this.throwError("missing new", lib_esm_Logger.errors.MISSING_NEW, {
                    name: e.name
                })
            }
            checkAbstract(t, e) {
                t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    name: t.name,
                    operation: "new"
                }) : t !== Object && null != t || this.throwError("missing new", lib_esm_Logger.errors.MISSING_NEW, {
                    name: e.name
                })
            }
            static globalLogger() {
                return u || (u = new lib_esm_Logger("logger/5.0.2")), u
            }
            static setCensorship(t, e) {
                if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "setCensorship"
                    }), i) {
                    if (!t) return;
                    this.globalLogger().throwError("error censorship permanent", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "setCensorship"
                    })
                }
                o = !!t, i = !!e
            }
            static setLogLevel(t) {
                const e = a[t];
                null != e ? s = e : lib_esm_Logger.globalLogger().warn("invalid log level - " + t)
            }
        }
        lib_esm_Logger.errors = h, lib_esm_Logger.levels = l;
        const d = new lib_esm_Logger("bytes/5.0.2");

        function isHexable(t) {
            return !!t.toHexString
        }

        function addSlice(t) {
            return t.slice || (t.slice = function () {
                const e = Array.prototype.slice.call(arguments);
                return addSlice(new Uint8Array(Array.prototype.slice.apply(t, e)))
            }), t
        }

        function isBytesLike(t) {
            return isHexString(t) && !(t.length % 2) || isBytes(t)
        }

        function isBytes(t) {
            if (null == t) return !1;
            if (t.constructor === Uint8Array) return !0;
            if ("string" == typeof t) return !1;
            if (null == t.length) return !1;
            for (let e = 0; e < t.length; e++) {
                const r = t[e];
                if (r < 0 || r >= 256 || r % 1) return !1
            }
            return !0
        }

        function arrayify(t, e) {
            if (e || (e = {}), "number" == typeof t) {
                d.checkSafeUint53(t, "invalid arrayify value");
                const e = [];
                for (; t;) e.unshift(255 & t), t = parseInt(String(t / 256));
                return 0 === e.length && e.push(0), addSlice(new Uint8Array(e))
            }
            if (e.allowMissingPrefix && "string" == typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), isHexable(t) && (t = t.toHexString()), isHexString(t)) {
                let r = t.substring(2);
                r.length % 2 && ("left" === e.hexPad ? r = "0x0" + r.substring(2) : "right" === e.hexPad ? r += "0" : d.throwArgumentError("hex data is odd-length", "value", t));
                const n = [];
                for (let t = 0; t < r.length; t += 2) n.push(parseInt(r.substring(t, t + 2), 16));
                return addSlice(new Uint8Array(n))
            }
            return isBytes(t) ? addSlice(new Uint8Array(t)) : d.throwArgumentError("invalid arrayify value", "value", t)
        }

        function stripZeros(t) {
            let e = arrayify(t);
            if (0 === e.length) return e;
            let r = 0;
            for (; r < e.length && 0 === e[r];) r++;
            return r && (e = e.slice(r)), e
        }

        function isHexString(t, e) {
            return !("string" != typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
        }

        function hexlify(t, e) {
            if (e || (e = {}), "number" == typeof t) {
                d.checkSafeUint53(t, "invalid hexlify value");
                let e = "";
                for (; t;) e = "0123456789abcdef" [15 & t] + e, t = Math.floor(t / 16);
                return e.length ? (e.length % 2 && (e = "0" + e), "0x" + e) : "0x00"
            }
            if (e.allowMissingPrefix && "string" == typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), isHexable(t)) return t.toHexString();
            if (isHexString(t)) return t.length % 2 && ("left" === e.hexPad ? t = "0x0" + t.substring(2) : "right" === e.hexPad ? t += "0" : d.throwArgumentError("hex data is odd-length", "value", t)), t.toLowerCase();
            if (isBytes(t)) {
                let e = "0x";
                for (let r = 0; r < t.length; r++) {
                    let n = t[r];
                    e += "0123456789abcdef" [(240 & n) >> 4] + "0123456789abcdef" [15 & n]
                }
                return e
            }
            return d.throwArgumentError("invalid hexlify value", "value", t)
        }

        function hexDataSlice(t, e, r) {
            return "string" != typeof t ? t = hexlify(t) : (!isHexString(t) || t.length % 2) && d.throwArgumentError("invalid hexData", "value", t), e = 2 + 2 * e, null != r ? "0x" + t.substring(e, 2 + 2 * r) : "0x" + t.substring(e)
        }

        function hexZeroPad(t, e) {
            for ("string" != typeof t ? t = hexlify(t) : isHexString(t) || d.throwArgumentError("invalid hex string", "value", t), t.length > 2 * e + 2 && d.throwArgumentError("value out of range", "value", arguments[1]); t.length < 2 * e + 2;) t = "0x0" + t.substring(2);
            return t
        }

        function splitSignature(t) {
            const e = {
                r: "0x",
                s: "0x",
                _vs: "0x",
                recoveryParam: 0,
                v: 0
            };
            if (isBytesLike(t)) {
                const r = arrayify(t);
                65 !== r.length && d.throwArgumentError("invalid signature string; must be 65 bytes", "signature", t), e.r = hexlify(r.slice(0, 32)), e.s = hexlify(r.slice(32, 64)), e.v = r[64], e.v < 27 && (0 === e.v || 1 === e.v ? e.v += 27 : d.throwArgumentError("signature invalid v byte", "signature", t)), e.recoveryParam = 1 - e.v % 2, e.recoveryParam && (r[32] |= 128), e._vs = hexlify(r.slice(32, 64))
            } else {
                if (e.r = t.r, e.s = t.s, e.v = t.v, e.recoveryParam = t.recoveryParam, e._vs = t._vs, null != e._vs) {
                    const r = function zeroPad(t, e) {
                        (t = arrayify(t)).length > e && d.throwArgumentError("value out of range", "value", arguments[0]);
                        const r = new Uint8Array(e);
                        return r.set(t, e - t.length), addSlice(r)
                    }(arrayify(e._vs), 32);
                    e._vs = hexlify(r);
                    const n = r[0] >= 128 ? 1 : 0;
                    null == e.recoveryParam ? e.recoveryParam = n : e.recoveryParam !== n && d.throwArgumentError("signature recoveryParam mismatch _vs", "signature", t), r[0] &= 127;
                    const i = hexlify(r);
                    null == e.s ? e.s = i : e.s !== i && d.throwArgumentError("signature v mismatch _vs", "signature", t)
                }
                null == e.recoveryParam ? null == e.v ? d.throwArgumentError("signature missing v and recoveryParam", "signature", t) : e.recoveryParam = 1 - e.v % 2 : null == e.v ? e.v = 27 + e.recoveryParam : e.recoveryParam !== 1 - e.v % 2 && d.throwArgumentError("signature recoveryParam mismatch v", "signature", t), null != e.r && isHexString(e.r) ? e.r = hexZeroPad(e.r, 32) : d.throwArgumentError("signature missing or invalid r", "signature", t), null != e.s && isHexString(e.s) ? e.s = hexZeroPad(e.s, 32) : d.throwArgumentError("signature missing or invalid s", "signature", t);
                const r = arrayify(e.s);
                r[0] >= 128 && d.throwArgumentError("signature s out of range", "signature", t), e.recoveryParam && (r[0] |= 128);
                const n = hexlify(r);
                e._vs && (isHexString(e._vs) || d.throwArgumentError("signature invalid _vs", "signature", t), e._vs = hexZeroPad(e._vs, 32)), null == e._vs ? e._vs = n : e._vs !== n && d.throwArgumentError("signature _vs mismatch v and s", "signature", t)
            }
            return e
        }
        const p = new lib_esm_Logger("bignumber/5.0.4"),
            m = {};
        class bignumber_BigNumber {
            constructor(t, e) {
                p.checkNew(new.target, bignumber_BigNumber), t !== m && p.throwError("cannot call constructor directly; use BigNumber.from", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new (BigNumber)"
                }), this._hex = e, this._isBigNumber = !0, Object.freeze(this)
            }
            fromTwos(t) {
                return toBigNumber(toBN(this).fromTwos(t))
            }
            toTwos(t) {
                return toBigNumber(toBN(this).toTwos(t))
            }
            abs() {
                return "-" === this._hex[0] ? bignumber_BigNumber.from(this._hex.substring(1)) : this
            }
            add(t) {
                return toBigNumber(toBN(this).add(toBN(t)))
            }
            sub(t) {
                return toBigNumber(toBN(this).sub(toBN(t)))
            }
            div(t) {
                return bignumber_BigNumber.from(t).isZero() && throwFault("division by zero", "div"), toBigNumber(toBN(this).div(toBN(t)))
            }
            mul(t) {
                return toBigNumber(toBN(this).mul(toBN(t)))
            }
            mod(t) {
                const e = toBN(t);
                return e.isNeg() && throwFault("cannot modulo negative values", "mod"), toBigNumber(toBN(this).umod(e))
            }
            pow(t) {
                const e = toBN(t);
                return e.isNeg() && throwFault("cannot raise to negative values", "pow"), toBigNumber(toBN(this).pow(e))
            }
            and(t) {
                const e = toBN(t);
                return (this.isNegative() || e.isNeg()) && throwFault("cannot 'and' negative values", "and"), toBigNumber(toBN(this).and(e))
            }
            or(t) {
                const e = toBN(t);
                return (this.isNegative() || e.isNeg()) && throwFault("cannot 'or' negative values", "or"), toBigNumber(toBN(this).or(e))
            }
            xor(t) {
                const e = toBN(t);
                return (this.isNegative() || e.isNeg()) && throwFault("cannot 'xor' negative values", "xor"), toBigNumber(toBN(this).xor(e))
            }
            mask(t) {
                return (this.isNegative() || t < 0) && throwFault("cannot mask negative values", "mask"), toBigNumber(toBN(this).maskn(t))
            }
            shl(t) {
                return (this.isNegative() || t < 0) && throwFault("cannot shift negative values", "shl"), toBigNumber(toBN(this).shln(t))
            }
            shr(t) {
                return (this.isNegative() || t < 0) && throwFault("cannot shift negative values", "shr"), toBigNumber(toBN(this).shrn(t))
            }
            eq(t) {
                return toBN(this).eq(toBN(t))
            }
            lt(t) {
                return toBN(this).lt(toBN(t))
            }
            lte(t) {
                return toBN(this).lte(toBN(t))
            }
            gt(t) {
                return toBN(this).gt(toBN(t))
            }
            gte(t) {
                return toBN(this).gte(toBN(t))
            }
            isNegative() {
                return "-" === this._hex[0]
            }
            isZero() {
                return toBN(this).isZero()
            }
            toNumber() {
                try {
                    return toBN(this).toNumber()
                } catch (t) {
                    throwFault("overflow", "toNumber", this.toString())
                }
                return null
            }
            toString() {
                return 0 !== arguments.length && p.throwError("bigNumber.toString does not accept parameters", lib_esm_Logger.errors.UNEXPECTED_ARGUMENT, {}), toBN(this).toString(10)
            }
            toHexString() {
                return this._hex
            }
            static from(t) {
                return t instanceof bignumber_BigNumber ? t : "string" == typeof t ? t.match(/^-?0x[0-9a-f]+$/i) ? new bignumber_BigNumber(m, toHex(t)) : t.match(/^-?[0-9]+$/) ? new bignumber_BigNumber(m, toHex(new n.BN(t))) : p.throwArgumentError("invalid BigNumber string", "value", t) : "number" == typeof t ? (t % 1 && throwFault("underflow", "BigNumber.from", t), (t >= 9007199254740991 || t <= -9007199254740991) && throwFault("overflow", "BigNumber.from", t), bignumber_BigNumber.from(String(t))) : "bigint" == typeof t ? bignumber_BigNumber.from(t.toString()) : isBytes(t) ? bignumber_BigNumber.from(hexlify(t)) : t._hex && isHexString(t._hex) ? bignumber_BigNumber.from(t._hex) : t.toHexString && "string" == typeof (t = t.toHexString()) ? bignumber_BigNumber.from(t) : p.throwArgumentError("invalid BigNumber value", "value", t)
            }
            static isBigNumber(t) {
                return !(!t || !t._isBigNumber)
            }
        }

        function toHex(t) {
            if ("string" != typeof t) return toHex(t.toString(16));
            if ("-" === t[0]) return "-" === (t = t.substring(1))[0] && p.throwArgumentError("invalid hex", "value", t), "0x00" === (t = toHex(t)) ? t : "-" + t;
            if ("0x" !== t.substring(0, 2) && (t = "0x" + t), "0x" === t) return "0x00";
            for (t.length % 2 && (t = "0x0" + t.substring(2)); t.length > 4 && "0x00" === t.substring(0, 4);) t = "0x" + t.substring(4);
            return t
        }

        function toBigNumber(t) {
            return bignumber_BigNumber.from(toHex(t))
        }

        function toBN(t) {
            const e = bignumber_BigNumber.from(t).toHexString();
            return "-" === e[0] ? new n.BN("-" + e.substring(3), 16) : new n.BN(e.substring(2), 16)
        }

        function throwFault(t, e, r) {
            const n = {
                fault: t,
                operation: e
            };
            return null != r && (n.value = r), p.throwError(t, lib_esm_Logger.errors.NUMERIC_FAULT, n)
        }
        new lib_esm_Logger("bignumber/5.0.4"), bignumber_BigNumber.from(0), bignumber_BigNumber.from(-1);
        let y = "0";
        for (; y.length < 256;) y += y;
        var b = r(72),
            g = r.n(b);

        function keccak256(t) {
            return "0x" + g.a.keccak_256(arrayify(t))
        }
        let v = !1,
            w = !1;
        const M = {
            debug: 1,
            default: 2,
            info: 2,
            warning: 3,
            error: 4,
            off: 5
        };
        let A = M.default,
            x = null;
        const B = function lib_esm_checkNormalize() {
            try {
                const t = [];
                if (["NFD", "NFC", "NFKD", "NFKC"].forEach(e => {
                        try {
                            if ("test" !== "test".normalize(e)) throw new Error("bad normalize")
                        } catch (r) {
                            t.push(e)
                        }
                    }), t.length) throw new Error("missing " + t.join(", "));
                if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
            } catch (t) {
                return t.message
            }
            return null
        }();
        var E, k;
        ! function (t) {
            t.DEBUG = "DEBUG", t.INFO = "INFO", t.WARNING = "WARNING", t.ERROR = "ERROR", t.OFF = "OFF"
        }(E || (E = {})),
        function (t) {
            t.UNKNOWN_ERROR = "UNKNOWN_ERROR", t.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", t.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", t.NETWORK_ERROR = "NETWORK_ERROR", t.SERVER_ERROR = "SERVER_ERROR", t.TIMEOUT = "TIMEOUT", t.BUFFER_OVERRUN = "BUFFER_OVERRUN", t.NUMERIC_FAULT = "NUMERIC_FAULT", t.MISSING_NEW = "MISSING_NEW", t.INVALID_ARGUMENT = "INVALID_ARGUMENT", t.MISSING_ARGUMENT = "MISSING_ARGUMENT", t.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", t.CALL_EXCEPTION = "CALL_EXCEPTION", t.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", t.NONCE_EXPIRED = "NONCE_EXPIRED", t.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", t.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT"
        }(k || (k = {}));
        class logger_lib_esm_Logger {
            constructor(t) {
                Object.defineProperty(this, "version", {
                    enumerable: !0,
                    value: t,
                    writable: !1
                })
            }
            _log(t, e) {
                const r = t.toLowerCase();
                null == M[r] && this.throwArgumentError("invalid log level name", "logLevel", t), A > M[r] || console.log.apply(console, e)
            }
            debug(...t) {
                this._log(logger_lib_esm_Logger.levels.DEBUG, t)
            }
            info(...t) {
                this._log(logger_lib_esm_Logger.levels.INFO, t)
            }
            warn(...t) {
                this._log(logger_lib_esm_Logger.levels.WARNING, t)
            }
            makeError(t, e, r) {
                if (w) return this.makeError("censored error", e, {});
                e || (e = logger_lib_esm_Logger.errors.UNKNOWN_ERROR), r || (r = {});
                const n = [];
                Object.keys(r).forEach(t => {
                    try {
                        n.push(t + "=" + JSON.stringify(r[t]))
                    } catch (e) {
                        n.push(t + "=" + JSON.stringify(r[t].toString()))
                    }
                }), n.push("code=" + e), n.push("version=" + this.version);
                const i = t;
                n.length && (t += " (" + n.join(", ") + ")");
                const o = new Error(t);
                return o.reason = i, o.code = e, Object.keys(r).forEach((function (t) {
                    o[t] = r[t]
                })), o
            }
            throwError(t, e, r) {
                throw this.makeError(t, e, r)
            }
            throwArgumentError(t, e, r) {
                return this.throwError(t, logger_lib_esm_Logger.errors.INVALID_ARGUMENT, {
                    argument: e,
                    value: r
                })
            }
            checkNormalize(t) {
                null == t && (t = "platform missing String.prototype.normalize"), B && this.throwError("platform missing String.prototype.normalize", logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "String.prototype.normalize",
                    form: B
                })
            }
            checkSafeUint53(t, e) {
                "number" == typeof t && (null == e && (e = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(e, logger_lib_esm_Logger.errors.NUMERIC_FAULT, {
                    operation: "checkSafeInteger",
                    fault: "out-of-safe-range",
                    value: t
                }), t % 1 && this.throwError(e, logger_lib_esm_Logger.errors.NUMERIC_FAULT, {
                    operation: "checkSafeInteger",
                    fault: "non-integer",
                    value: t
                }))
            }
            checkArgumentCount(t, e, r) {
                r = r ? ": " + r : "", t < e && this.throwError("missing argument" + r, logger_lib_esm_Logger.errors.MISSING_ARGUMENT, {
                    count: t,
                    expectedCount: e
                }), t > e && this.throwError("too many arguments" + r, logger_lib_esm_Logger.errors.UNEXPECTED_ARGUMENT, {
                    count: t,
                    expectedCount: e
                })
            }
            checkNew(t, e) {
                t !== Object && null != t || this.throwError("missing new", logger_lib_esm_Logger.errors.MISSING_NEW, {
                    name: e.name
                })
            }
            checkAbstract(t, e) {
                t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    name: t.name,
                    operation: "new"
                }) : t !== Object && null != t || this.throwError("missing new", logger_lib_esm_Logger.errors.MISSING_NEW, {
                    name: e.name
                })
            }
            static globalLogger() {
                return x || (x = new logger_lib_esm_Logger("logger/5.0.2")), x
            }
            static setCensorship(t, e) {
                if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "setCensorship"
                    }), v) {
                    if (!t) return;
                    this.globalLogger().throwError("error censorship permanent", logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "setCensorship"
                    })
                }
                w = !!t, v = !!e
            }
            static setLogLevel(t) {
                const e = M[t];
                null != e ? A = e : logger_lib_esm_Logger.globalLogger().warn("invalid log level - " + t)
            }
        }
        logger_lib_esm_Logger.errors = k, logger_lib_esm_Logger.levels = E;
        const N = new logger_lib_esm_Logger("bytes/5.0.2");

        function lib_esm_isHexable(t) {
            return !!t.toHexString
        }

        function lib_esm_addSlice(t) {
            return t.slice || (t.slice = function () {
                const e = Array.prototype.slice.call(arguments);
                return lib_esm_addSlice(new Uint8Array(Array.prototype.slice.apply(t, e)))
            }), t
        }

        function lib_esm_isBytesLike(t) {
            return lib_esm_isHexString(t) && !(t.length % 2) || lib_esm_isBytes(t)
        }

        function lib_esm_isBytes(t) {
            if (null == t) return !1;
            if (t.constructor === Uint8Array) return !0;
            if ("string" == typeof t) return !1;
            if (null == t.length) return !1;
            for (let e = 0; e < t.length; e++) {
                const r = t[e];
                if (r < 0 || r >= 256 || r % 1) return !1
            }
            return !0
        }

        function lib_esm_arrayify(t, e) {
            if (e || (e = {}), "number" == typeof t) {
                N.checkSafeUint53(t, "invalid arrayify value");
                const e = [];
                for (; t;) e.unshift(255 & t), t = parseInt(String(t / 256));
                return 0 === e.length && e.push(0), lib_esm_addSlice(new Uint8Array(e))
            }
            if (e.allowMissingPrefix && "string" == typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), lib_esm_isHexable(t) && (t = t.toHexString()), lib_esm_isHexString(t)) {
                let r = t.substring(2);
                r.length % 2 && ("left" === e.hexPad ? r = "0x0" + r.substring(2) : "right" === e.hexPad ? r += "0" : N.throwArgumentError("hex data is odd-length", "value", t));
                const n = [];
                for (let t = 0; t < r.length; t += 2) n.push(parseInt(r.substring(t, t + 2), 16));
                return lib_esm_addSlice(new Uint8Array(n))
            }
            return lib_esm_isBytes(t) ? lib_esm_addSlice(new Uint8Array(t)) : N.throwArgumentError("invalid arrayify value", "value", t)
        }

        function lib_esm_isHexString(t, e) {
            return !("string" != typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
        }

        function lib_esm_hexlify(t, e) {
            if (e || (e = {}), "number" == typeof t) {
                N.checkSafeUint53(t, "invalid hexlify value");
                let e = "";
                for (; t;) e = "0123456789abcdef" [15 & t] + e, t = Math.floor(t / 16);
                return e.length ? (e.length % 2 && (e = "0" + e), "0x" + e) : "0x00"
            }
            if (e.allowMissingPrefix && "string" == typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), lib_esm_isHexable(t)) return t.toHexString();
            if (lib_esm_isHexString(t)) return t.length % 2 && ("left" === e.hexPad ? t = "0x0" + t.substring(2) : "right" === e.hexPad ? t += "0" : N.throwArgumentError("hex data is odd-length", "value", t)), t.toLowerCase();
            if (lib_esm_isBytes(t)) {
                let e = "0x";
                for (let r = 0; r < t.length; r++) {
                    let n = t[r];
                    e += "0123456789abcdef" [(240 & n) >> 4] + "0123456789abcdef" [15 & n]
                }
                return e
            }
            return N.throwArgumentError("invalid hexlify value", "value", t)
        }
        const T = new logger_lib_esm_Logger("rlp/5.0.1");

        function arrayifyInteger(t) {
            const e = [];
            for (; t;) e.unshift(255 & t), t >>= 8;
            return e
        }

        function unarrayifyInteger(t, e, r) {
            let n = 0;
            for (let i = 0; i < r; i++) n = 256 * n + t[e + i];
            return n
        }

        function encode(t) {
            return lib_esm_hexlify(function _encode(t) {
                if (Array.isArray(t)) {
                    let e = [];
                    if (t.forEach((function (t) {
                            e = e.concat(_encode(t))
                        })), e.length <= 55) return e.unshift(192 + e.length), e;
                    const r = arrayifyInteger(e.length);
                    return r.unshift(247 + r.length), r.concat(e)
                }
                lib_esm_isBytesLike(t) || T.throwArgumentError("RLP object must be BytesLike", "object", t);
                const e = Array.prototype.slice.call(lib_esm_arrayify(t));
                if (1 === e.length && e[0] <= 127) return e;
                if (e.length <= 55) return e.unshift(128 + e.length), e;
                const r = arrayifyInteger(e.length);
                return r.unshift(183 + r.length), r.concat(e)
            }(t))
        }

        function _decodeChildren(t, e, r, n) {
            const i = [];
            for (; r < e + 1 + n;) {
                const o = _decode(t, r);
                i.push(o.result), (r += o.consumed) > e + 1 + n && T.throwError("child data too short", logger_lib_esm_Logger.errors.BUFFER_OVERRUN, {})
            }
            return {
                consumed: 1 + n,
                result: i
            }
        }

        function _decode(t, e) {
            if (0 === t.length && T.throwError("data too short", logger_lib_esm_Logger.errors.BUFFER_OVERRUN, {}), t[e] >= 248) {
                const r = t[e] - 247;
                e + 1 + r > t.length && T.throwError("data short segment too short", logger_lib_esm_Logger.errors.BUFFER_OVERRUN, {});
                const n = unarrayifyInteger(t, e + 1, r);
                return e + 1 + r + n > t.length && T.throwError("data long segment too short", logger_lib_esm_Logger.errors.BUFFER_OVERRUN, {}), _decodeChildren(t, e, e + 1 + r, r + n)
            }
            if (t[e] >= 192) {
                const r = t[e] - 192;
                return e + 1 + r > t.length && T.throwError("data array too short", logger_lib_esm_Logger.errors.BUFFER_OVERRUN, {}), _decodeChildren(t, e, e + 1, r)
            }
            if (t[e] >= 184) {
                const r = t[e] - 183;
                e + 1 + r > t.length && T.throwError("data array too short", logger_lib_esm_Logger.errors.BUFFER_OVERRUN, {});
                const n = unarrayifyInteger(t, e + 1, r);
                return e + 1 + r + n > t.length && T.throwError("data array too short", logger_lib_esm_Logger.errors.BUFFER_OVERRUN, {}), {
                    consumed: 1 + r + n,
                    result: lib_esm_hexlify(t.slice(e + 1 + r, e + 1 + r + n))
                }
            }
            if (t[e] >= 128) {
                const r = t[e] - 128;
                return e + 1 + r > t.length && T.throwError("data too short", logger_lib_esm_Logger.errors.BUFFER_OVERRUN, {}), {
                    consumed: 1 + r,
                    result: lib_esm_hexlify(t.slice(e + 1, e + 1 + r))
                }
            }
            return {
                consumed: 1,
                result: lib_esm_hexlify(t[e])
            }
        }
        const C = new lib_esm_Logger("address/5.0.1");

        function getChecksumAddress(t) {
            isHexString(t, 20) || C.throwArgumentError("invalid address", "address", t);
            const e = (t = t.toLowerCase()).substring(2).split(""),
                r = new Uint8Array(40);
            for (let t = 0; t < 40; t++) r[t] = e[t].charCodeAt(0);
            const n = arrayify(keccak256(r));
            for (let t = 0; t < 40; t += 2) n[t >> 1] >> 4 >= 8 && (e[t] = e[t].toUpperCase()), (15 & n[t >> 1]) >= 8 && (e[t + 1] = e[t + 1].toUpperCase());
            return "0x" + e.join("")
        }
        const P = {};
        for (let t = 0; t < 10; t++) P[String(t)] = String(t);
        for (let t = 0; t < 26; t++) P[String.fromCharCode(65 + t)] = String(10 + t);
        const I = Math.floor(function log10(t) {
            return Math.log10 ? Math.log10(t) : Math.log(t) / Math.LN10
        }(9007199254740991));

        function ibanChecksum(t) {
            let e = (t = (t = t.toUpperCase()).substring(4) + t.substring(0, 2) + "00").split("").map(t => P[t]).join("");
            for (; e.length >= I;) {
                let t = e.substring(0, I);
                e = parseInt(t, 10) % 97 + e.substring(t.length)
            }
            let r = String(98 - parseInt(e, 10) % 97);
            for (; r.length < 2;) r = "0" + r;
            return r
        }

        function getAddress(t) {
            let e = null;
            if ("string" != typeof t && C.throwArgumentError("invalid address", "address", t), t.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== t.substring(0, 2) && (t = "0x" + t), e = getChecksumAddress(t), t.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && e !== t && C.throwArgumentError("bad address checksum", "address", t);
            else if (t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                for (t.substring(2, 4) !== ibanChecksum(t) && C.throwArgumentError("bad icap checksum", "address", t), e = new n.BN(t.substring(4), 36).toString(16); e.length < 40;) e = "0" + e;
                e = getChecksumAddress("0x" + e)
            } else C.throwArgumentError("invalid address", "address", t);
            return e
        }
        bignumber_BigNumber.from(-1);
        const O = bignumber_BigNumber.from(0);
        bignumber_BigNumber.from(1), bignumber_BigNumber.from(2), bignumber_BigNumber.from("1000000000000000000"), bignumber_BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
        const D = new lib_esm_Logger("properties/5.0.1");
        var j = r(347);
        let L = !1,
            U = !1;
        const H = {
            debug: 1,
            default: 2,
            info: 2,
            warning: 3,
            error: 4,
            off: 5
        };
        let q = H.default,
            z = null;
        const G = function logger_lib_esm_checkNormalize() {
            try {
                const t = [];
                if (["NFD", "NFC", "NFKD", "NFKC"].forEach(e => {
                        try {
                            if ("test" !== "test".normalize(e)) throw new Error("bad normalize")
                        } catch (r) {
                            t.push(e)
                        }
                    }), t.length) throw new Error("missing " + t.join(", "));
                if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
            } catch (t) {
                return t.message
            }
            return null
        }();
        var V, J;
        ! function (t) {
            t.DEBUG = "DEBUG", t.INFO = "INFO", t.WARNING = "WARNING", t.ERROR = "ERROR", t.OFF = "OFF"
        }(V || (V = {})),
        function (t) {
            t.UNKNOWN_ERROR = "UNKNOWN_ERROR", t.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", t.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", t.NETWORK_ERROR = "NETWORK_ERROR", t.SERVER_ERROR = "SERVER_ERROR", t.TIMEOUT = "TIMEOUT", t.BUFFER_OVERRUN = "BUFFER_OVERRUN", t.NUMERIC_FAULT = "NUMERIC_FAULT", t.MISSING_NEW = "MISSING_NEW", t.INVALID_ARGUMENT = "INVALID_ARGUMENT", t.MISSING_ARGUMENT = "MISSING_ARGUMENT", t.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", t.CALL_EXCEPTION = "CALL_EXCEPTION", t.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", t.NONCE_EXPIRED = "NONCE_EXPIRED", t.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", t.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT"
        }(J || (J = {}));
        class _ethersproject_logger_lib_esm_Logger {
            constructor(t) {
                Object.defineProperty(this, "version", {
                    enumerable: !0,
                    value: t,
                    writable: !1
                })
            }
            _log(t, e) {
                const r = t.toLowerCase();
                null == H[r] && this.throwArgumentError("invalid log level name", "logLevel", t), q > H[r] || console.log.apply(console, e)
            }
            debug(...t) {
                this._log(_ethersproject_logger_lib_esm_Logger.levels.DEBUG, t)
            }
            info(...t) {
                this._log(_ethersproject_logger_lib_esm_Logger.levels.INFO, t)
            }
            warn(...t) {
                this._log(_ethersproject_logger_lib_esm_Logger.levels.WARNING, t)
            }
            makeError(t, e, r) {
                if (U) return this.makeError("censored error", e, {});
                e || (e = _ethersproject_logger_lib_esm_Logger.errors.UNKNOWN_ERROR), r || (r = {});
                const n = [];
                Object.keys(r).forEach(t => {
                    try {
                        n.push(t + "=" + JSON.stringify(r[t]))
                    } catch (e) {
                        n.push(t + "=" + JSON.stringify(r[t].toString()))
                    }
                }), n.push("code=" + e), n.push("version=" + this.version);
                const i = t;
                n.length && (t += " (" + n.join(", ") + ")");
                const o = new Error(t);
                return o.reason = i, o.code = e, Object.keys(r).forEach((function (t) {
                    o[t] = r[t]
                })), o
            }
            throwError(t, e, r) {
                throw this.makeError(t, e, r)
            }
            throwArgumentError(t, e, r) {
                return this.throwError(t, _ethersproject_logger_lib_esm_Logger.errors.INVALID_ARGUMENT, {
                    argument: e,
                    value: r
                })
            }
            checkNormalize(t) {
                null == t && (t = "platform missing String.prototype.normalize"), G && this.throwError("platform missing String.prototype.normalize", _ethersproject_logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "String.prototype.normalize",
                    form: G
                })
            }
            checkSafeUint53(t, e) {
                "number" == typeof t && (null == e && (e = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(e, _ethersproject_logger_lib_esm_Logger.errors.NUMERIC_FAULT, {
                    operation: "checkSafeInteger",
                    fault: "out-of-safe-range",
                    value: t
                }), t % 1 && this.throwError(e, _ethersproject_logger_lib_esm_Logger.errors.NUMERIC_FAULT, {
                    operation: "checkSafeInteger",
                    fault: "non-integer",
                    value: t
                }))
            }
            checkArgumentCount(t, e, r) {
                r = r ? ": " + r : "", t < e && this.throwError("missing argument" + r, _ethersproject_logger_lib_esm_Logger.errors.MISSING_ARGUMENT, {
                    count: t,
                    expectedCount: e
                }), t > e && this.throwError("too many arguments" + r, _ethersproject_logger_lib_esm_Logger.errors.UNEXPECTED_ARGUMENT, {
                    count: t,
                    expectedCount: e
                })
            }
            checkNew(t, e) {
                t !== Object && null != t || this.throwError("missing new", _ethersproject_logger_lib_esm_Logger.errors.MISSING_NEW, {
                    name: e.name
                })
            }
            checkAbstract(t, e) {
                t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", _ethersproject_logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    name: t.name,
                    operation: "new"
                }) : t !== Object && null != t || this.throwError("missing new", _ethersproject_logger_lib_esm_Logger.errors.MISSING_NEW, {
                    name: e.name
                })
            }
            static globalLogger() {
                return z || (z = new _ethersproject_logger_lib_esm_Logger("logger/5.0.2")), z
            }
            static setCensorship(t, e) {
                if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", _ethersproject_logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "setCensorship"
                    }), L) {
                    if (!t) return;
                    this.globalLogger().throwError("error censorship permanent", _ethersproject_logger_lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "setCensorship"
                    })
                }
                U = !!t, L = !!e
            }
            static setLogLevel(t) {
                const e = H[t];
                null != e ? q = e : _ethersproject_logger_lib_esm_Logger.globalLogger().warn("invalid log level - " + t)
            }
        }
        _ethersproject_logger_lib_esm_Logger.errors = J, _ethersproject_logger_lib_esm_Logger.levels = V;
        const W = new _ethersproject_logger_lib_esm_Logger("bytes/5.0.2");

        function bytes_lib_esm_isHexable(t) {
            return !!t.toHexString
        }

        function bytes_lib_esm_addSlice(t) {
            return t.slice || (t.slice = function () {
                const e = Array.prototype.slice.call(arguments);
                return bytes_lib_esm_addSlice(new Uint8Array(Array.prototype.slice.apply(t, e)))
            }), t
        }

        function bytes_lib_esm_isBytes(t) {
            if (null == t) return !1;
            if (t.constructor === Uint8Array) return !0;
            if ("string" == typeof t) return !1;
            if (null == t.length) return !1;
            for (let e = 0; e < t.length; e++) {
                const r = t[e];
                if (r < 0 || r >= 256 || r % 1) return !1
            }
            return !0
        }

        function bytes_lib_esm_arrayify(t, e) {
            if (e || (e = {}), "number" == typeof t) {
                W.checkSafeUint53(t, "invalid arrayify value");
                const e = [];
                for (; t;) e.unshift(255 & t), t = parseInt(String(t / 256));
                return 0 === e.length && e.push(0), bytes_lib_esm_addSlice(new Uint8Array(e))
            }
            if (e.allowMissingPrefix && "string" == typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), bytes_lib_esm_isHexable(t) && (t = t.toHexString()), bytes_lib_esm_isHexString(t)) {
                let r = t.substring(2);
                r.length % 2 && ("left" === e.hexPad ? r = "0x0" + r.substring(2) : "right" === e.hexPad ? r += "0" : W.throwArgumentError("hex data is odd-length", "value", t));
                const n = [];
                for (let t = 0; t < r.length; t += 2) n.push(parseInt(r.substring(t, t + 2), 16));
                return bytes_lib_esm_addSlice(new Uint8Array(n))
            }
            return bytes_lib_esm_isBytes(t) ? bytes_lib_esm_addSlice(new Uint8Array(t)) : W.throwArgumentError("invalid arrayify value", "value", t)
        }

        function bytes_lib_esm_isHexString(t, e) {
            return !("string" != typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
        }

        function bytes_lib_esm_hexlify(t, e) {
            if (e || (e = {}), "number" == typeof t) {
                W.checkSafeUint53(t, "invalid hexlify value");
                let e = "";
                for (; t;) e = "0123456789abcdef" [15 & t] + e, t = Math.floor(t / 16);
                return e.length ? (e.length % 2 && (e = "0" + e), "0x" + e) : "0x00"
            }
            if (e.allowMissingPrefix && "string" == typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), bytes_lib_esm_isHexable(t)) return t.toHexString();
            if (bytes_lib_esm_isHexString(t)) return t.length % 2 && ("left" === e.hexPad ? t = "0x0" + t.substring(2) : "right" === e.hexPad ? t += "0" : W.throwArgumentError("hex data is odd-length", "value", t)), t.toLowerCase();
            if (bytes_lib_esm_isBytes(t)) {
                let e = "0x";
                for (let r = 0; r < t.length; r++) {
                    let n = t[r];
                    e += "0123456789abcdef" [(240 & n) >> 4] + "0123456789abcdef" [15 & n]
                }
                return e
            }
            return W.throwArgumentError("invalid hexlify value", "value", t)
        }

        function bytes_lib_esm_hexZeroPad(t, e) {
            for ("string" != typeof t ? t = bytes_lib_esm_hexlify(t) : bytes_lib_esm_isHexString(t) || W.throwArgumentError("invalid hex string", "value", t), t.length > 2 * e + 2 && W.throwArgumentError("value out of range", "value", arguments[1]); t.length < 2 * e + 2;) t = "0x0" + t.substring(2);
            return t
        }

        function bytes_lib_esm_splitSignature(t) {
            const e = {
                r: "0x",
                s: "0x",
                _vs: "0x",
                recoveryParam: 0,
                v: 0
            };
            if (function bytes_lib_esm_isBytesLike(t) {
                    return bytes_lib_esm_isHexString(t) && !(t.length % 2) || bytes_lib_esm_isBytes(t)
                }(t)) {
                const r = bytes_lib_esm_arrayify(t);
                65 !== r.length && W.throwArgumentError("invalid signature string; must be 65 bytes", "signature", t), e.r = bytes_lib_esm_hexlify(r.slice(0, 32)), e.s = bytes_lib_esm_hexlify(r.slice(32, 64)), e.v = r[64], e.v < 27 && (0 === e.v || 1 === e.v ? e.v += 27 : W.throwArgumentError("signature invalid v byte", "signature", t)), e.recoveryParam = 1 - e.v % 2, e.recoveryParam && (r[32] |= 128), e._vs = bytes_lib_esm_hexlify(r.slice(32, 64))
            } else {
                if (e.r = t.r, e.s = t.s, e.v = t.v, e.recoveryParam = t.recoveryParam, e._vs = t._vs, null != e._vs) {
                    const r = function bytes_lib_esm_zeroPad(t, e) {
                        (t = bytes_lib_esm_arrayify(t)).length > e && W.throwArgumentError("value out of range", "value", arguments[0]);
                        const r = new Uint8Array(e);
                        return r.set(t, e - t.length), bytes_lib_esm_addSlice(r)
                    }(bytes_lib_esm_arrayify(e._vs), 32);
                    e._vs = bytes_lib_esm_hexlify(r);
                    const n = r[0] >= 128 ? 1 : 0;
                    null == e.recoveryParam ? e.recoveryParam = n : e.recoveryParam !== n && W.throwArgumentError("signature recoveryParam mismatch _vs", "signature", t), r[0] &= 127;
                    const i = bytes_lib_esm_hexlify(r);
                    null == e.s ? e.s = i : e.s !== i && W.throwArgumentError("signature v mismatch _vs", "signature", t)
                }
                null == e.recoveryParam ? null == e.v ? W.throwArgumentError("signature missing v and recoveryParam", "signature", t) : e.recoveryParam = 1 - e.v % 2 : null == e.v ? e.v = 27 + e.recoveryParam : e.recoveryParam !== 1 - e.v % 2 && W.throwArgumentError("signature recoveryParam mismatch v", "signature", t), null != e.r && bytes_lib_esm_isHexString(e.r) ? e.r = bytes_lib_esm_hexZeroPad(e.r, 32) : W.throwArgumentError("signature missing or invalid r", "signature", t), null != e.s && bytes_lib_esm_isHexString(e.s) ? e.s = bytes_lib_esm_hexZeroPad(e.s, 32) : W.throwArgumentError("signature missing or invalid s", "signature", t);
                const r = bytes_lib_esm_arrayify(e.s);
                r[0] >= 128 && W.throwArgumentError("signature s out of range", "signature", t), e.recoveryParam && (r[0] |= 128);
                const n = bytes_lib_esm_hexlify(r);
                e._vs && (bytes_lib_esm_isHexString(e._vs) || W.throwArgumentError("signature invalid _vs", "signature", t), e._vs = bytes_lib_esm_hexZeroPad(e._vs, 32)), null == e._vs ? e._vs = n : e._vs !== n && W.throwArgumentError("signature _vs mismatch v and s", "signature", t)
            }
            return e
        }
        new _ethersproject_logger_lib_esm_Logger("properties/5.0.1");

        function lib_esm_defineReadOnly(t, e, r) {
            Object.defineProperty(t, e, {
                enumerable: !0,
                value: r,
                writable: !1
            })
        }
        const Z = new _ethersproject_logger_lib_esm_Logger("signing-key/5.0.2");
        let X = null;

        function getCurve() {
            return X || (X = new j.ec("secp256k1")), X
        }
        class lib_esm_SigningKey {
            constructor(t) {
                lib_esm_defineReadOnly(this, "curve", "secp256k1"), lib_esm_defineReadOnly(this, "privateKey", bytes_lib_esm_hexlify(t));
                const e = getCurve().keyFromPrivate(bytes_lib_esm_arrayify(this.privateKey));
                lib_esm_defineReadOnly(this, "publicKey", "0x" + e.getPublic(!1, "hex")), lib_esm_defineReadOnly(this, "compressedPublicKey", "0x" + e.getPublic(!0, "hex")), lib_esm_defineReadOnly(this, "_isSigningKey", !0)
            }
            _addPoint(t) {
                const e = getCurve().keyFromPublic(bytes_lib_esm_arrayify(this.publicKey)),
                    r = getCurve().keyFromPublic(bytes_lib_esm_arrayify(t));
                return "0x" + e.pub.add(r.pub).encodeCompressed("hex")
            }
            signDigest(t) {
                const e = getCurve().keyFromPrivate(bytes_lib_esm_arrayify(this.privateKey)).sign(bytes_lib_esm_arrayify(t), {
                    canonical: !0
                });
                return bytes_lib_esm_splitSignature({
                    recoveryParam: e.recoveryParam,
                    r: bytes_lib_esm_hexZeroPad("0x" + e.r.toString(16), 32),
                    s: bytes_lib_esm_hexZeroPad("0x" + e.s.toString(16), 32)
                })
            }
            computeSharedSecret(t) {
                const e = getCurve().keyFromPrivate(bytes_lib_esm_arrayify(this.privateKey)),
                    r = getCurve().keyFromPublic(bytes_lib_esm_arrayify(computePublicKey(t)));
                return bytes_lib_esm_hexZeroPad("0x" + e.derive(r.getPublic()).toString(16), 32)
            }
            static isSigningKey(t) {
                return !(!t || !t._isSigningKey)
            }
        }

        function computePublicKey(t, e) {
            const r = bytes_lib_esm_arrayify(t);
            if (32 === r.length) {
                const t = new lib_esm_SigningKey(r);
                return e ? "0x" + getCurve().keyFromPrivate(r).getPublic(!0, "hex") : t.publicKey
            }
            return 33 === r.length ? e ? bytes_lib_esm_hexlify(r) : "0x" + getCurve().keyFromPublic(r).getPublic(!1, "hex") : 65 === r.length ? e ? "0x" + getCurve().keyFromPublic(r).getPublic(!0, "hex") : bytes_lib_esm_hexlify(r) : Z.throwArgumentError("invalid public or private key", "key", "[REDACTED]")
        }
        const Y = new lib_esm_Logger("transactions/5.0.1");

        function handleNumber(t) {
            return "0x" === t ? O : bignumber_BigNumber.from(t)
        }
        const $ = [{
                name: "nonce",
                maxLength: 32,
                numeric: !0
            }, {
                name: "gasPrice",
                maxLength: 32,
                numeric: !0
            }, {
                name: "gasLimit",
                maxLength: 32,
                numeric: !0
            }, {
                name: "to",
                length: 20
            }, {
                name: "value",
                maxLength: 32,
                numeric: !0
            }, {
                name: "data"
            }],
            Q = {
                chainId: !0,
                data: !0,
                gasLimit: !0,
                gasPrice: !0,
                nonce: !0,
                to: !0,
                value: !0
            };

        function computeAddress(t) {
            return getAddress(hexDataSlice(keccak256(hexDataSlice(computePublicKey(t), 1)), 12))
        }

        function recoverAddress(t, e) {
            return computeAddress(function recoverPublicKey(t, e) {
                const r = bytes_lib_esm_splitSignature(e),
                    n = {
                        r: bytes_lib_esm_arrayify(r.r),
                        s: bytes_lib_esm_arrayify(r.s)
                    };
                return "0x" + getCurve().recoverPubKey(bytes_lib_esm_arrayify(t), n, r.recoveryParam).encode("hex", !1)
            }(arrayify(t), e))
        }

        function serialize(t, e) {
            ! function checkProperties(t, e) {
                t && "object" == typeof t || D.throwArgumentError("invalid object", "object", t), Object.keys(t).forEach(r => {
                    e[r] || D.throwArgumentError("invalid object key - " + r, "transaction:" + r, t)
                })
            }(t, Q);
            const r = [];
            $.forEach((function (e) {
                let n = t[e.name] || [];
                const i = {};
                e.numeric && (i.hexPad = "left"), n = arrayify(hexlify(n, i)), e.length && n.length !== e.length && n.length > 0 && Y.throwArgumentError("invalid length for " + e.name, "transaction:" + e.name, n), e.maxLength && (n = stripZeros(n), n.length > e.maxLength && Y.throwArgumentError("invalid length for " + e.name, "transaction:" + e.name, n)), r.push(hexlify(n))
            }));
            let n = 0;
            if (null != t.chainId ? (n = t.chainId, "number" != typeof n && Y.throwArgumentError("invalid transaction.chainId", "transaction", t)) : e && !isBytesLike(e) && e.v > 28 && (n = Math.floor((e.v - 35) / 2)), 0 !== n && (r.push(hexlify(n)), r.push("0x"), r.push("0x")), !e) return encode(r);
            const i = splitSignature(e);
            let o = 27 + i.recoveryParam;
            return 0 !== n ? (r.pop(), r.pop(), r.pop(), o += 2 * n + 8, i.v > 28 && i.v !== o && Y.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", e)) : i.v !== o && Y.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", e), r.push(hexlify(o)), r.push(stripZeros(arrayify(i.r))), r.push(stripZeros(arrayify(i.s))), encode(r)
        }

        function parse(t) {
            const e = function decode(t) {
                const e = lib_esm_arrayify(t),
                    r = _decode(e, 0);
                return r.consumed !== e.length && T.throwArgumentError("invalid rlp data", "data", t), r.result
            }(t);
            9 !== e.length && 6 !== e.length && Y.throwArgumentError("invalid raw transaction", "rawTransaction", t);
            const r = {
                nonce: handleNumber(e[0]).toNumber(),
                gasPrice: handleNumber(e[1]),
                gasLimit: handleNumber(e[2]),
                to: (n = e[3], "0x" === n ? null : getAddress(n)),
                value: handleNumber(e[4]),
                data: e[5],
                chainId: 0
            };
            var n;
            if (6 === e.length) return r;
            try {
                r.v = bignumber_BigNumber.from(e[6]).toNumber()
            } catch (t) {
                return console.log(t), r
            }
            if (r.r = hexZeroPad(e[7], 32), r.s = hexZeroPad(e[8], 32), bignumber_BigNumber.from(r.r).isZero() && bignumber_BigNumber.from(r.s).isZero()) r.chainId = r.v, r.v = 0;
            else {
                r.chainId = Math.floor((r.v - 35) / 2), r.chainId < 0 && (r.chainId = 0);
                let n = r.v - 27;
                const i = e.slice(0, 6);
                0 !== r.chainId && (i.push(hexlify(r.chainId)), i.push("0x"), i.push("0x"), n -= 2 * r.chainId + 8);
                const o = keccak256(encode(i));
                try {
                    r.from = recoverAddress(o, {
                        r: hexlify(r.r),
                        s: hexlify(r.s),
                        recoveryParam: n
                    })
                } catch (t) {
                    console.log(t)
                }
                r.hash = keccak256(t)
            }
            return r
        }
    }, function (t, e, r) {
        var n = r(352),
            i = r(353),
            o = r(207),
            a = r(354);
        t.exports = function _toConsumableArray(t) {
            return n(t) || i(t) || o(t) || a()
        }
    }, function (t, e) {
        t.exports = function isObject(t) {
            var e = typeof t;
            return null != t && ("object" == e || "function" == e)
        }
    }, function (t, e, r) {
        var n = r(368),
            i = r(373),
            o = r(144);
        t.exports = function keys(t) {
            return o(t) ? n(t) : i(t)
        }
    }, function (t, e, r) {
        var n = r(377),
            i = r(419),
            o = r(151),
            a = r(22),
            s = r(426);
        t.exports = function baseIteratee(t) {
            return "function" == typeof t ? t : null == t ? o : "object" == typeof t ? a(t) ? i(t[0], t[1]) : n(t) : s(t)
        }
    }, function (t, e, r) {
        var n = r(379),
            i = r(380),
            o = r(381),
            a = r(382),
            s = r(383);

        function ListCache(t) {
            var e = -1,
                r = null == t ? 0 : t.length;
            for (this.clear(); ++e < r;) {
                var n = t[e];
                this.set(n[0], n[1])
            }
        }
        ListCache.prototype.clear = n, ListCache.prototype.delete = i, ListCache.prototype.get = o, ListCache.prototype.has = a, ListCache.prototype.set = s, t.exports = ListCache
    }, function (t, e, r) {
        var n = r(218);
        t.exports = function assocIndexOf(t, e) {
            for (var r = t.length; r--;)
                if (n(t[r][0], e)) return r;
            return -1
        }
    }, function (t, e, r) {
        var n = r(44)(Object, "create");
        t.exports = n
    }, function (t, e, r) {
        var n = r(397);
        t.exports = function getMapData(t, e) {
            var r = t.__data__;
            return n(e) ? r["string" == typeof e ? "string" : "hash"] : r.map
        }
    }, function (t, e, r) {
        var n = r(77);
        t.exports = function toKey(t) {
            if ("string" == typeof t || n(t)) return t;
            var e = t + "";
            return "0" == e && 1 / t == -1 / 0 ? "-0" : e
        }
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.createGetCurrency = e.Currency = void 0;
        var n = _interopRequireDefault(r(234)),
            i = _interopRequireDefault(r(240)),
            o = _interopRequireDefault(r(242)),
            a = _interopRequireDefault(r(243)),
            s = _interopRequireDefault(r(250));
        e.createCurrency = function createCurrency(t) {
            var e = function creatorFn(t, e) {
                    return new r(t, e)
                },
                r = function (r) {
                    function CurrencyX(r, n) {
                        (0, o.default)(this, CurrencyX);
                        var s = (0, a.default)(this, (CurrencyX.__proto__ || (0, i.default)(CurrencyX)).call(this, r, n));
                        return s.symbol = t, s.type = e, s
                    }
                    return (0, s.default)(CurrencyX, r), CurrencyX
                }(c);
            return Object.defineProperty(r, "name", {
                value: t
            }), Object.defineProperty(r, "symbol", {
                value: t
            }), (0, n.default)(e, {
                wei: makeShiftedCreatorFn(e, t, "wei"),
                ray: makeShiftedCreatorFn(e, t, "ray"),
                rad: makeShiftedCreatorFn(e, t, "rad"),
                symbol: t,
                isInstance: function isInstance(t) {
                    return t instanceof r
                }
            }), (0, n.default)(r, {
                wei: e.wei,
                ray: e.ray
            }), e
        }, e.createCurrencyRatio = function createCurrencyRatio(t, e) {
            var r = t(0).constructor,
                i = e(0).constructor,
                o = function creatorFn(t, e) {
                    return new u.CurrencyRatio(t, r, i, e)
                },
                a = r.symbol + "/" + i.symbol;
            return (0, n.default)(o, {
                wei: makeShiftedCreatorFn(o, a, "wei"),
                ray: makeShiftedCreatorFn(o, a, "ray"),
                rad: makeShiftedCreatorFn(o, a, "rad"),
                symbol: a,
                isInstance: function isInstance(t) {
                    return t instanceof u.CurrencyRatio && t.symbol === a
                }
            }), o
        };
        var u = r(476);

        function _interopRequireDefault(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        var c = e.Currency = u.Currency;

        function makeShiftedCreatorFn(t, e, r) {
            var n = function fn(e) {
                return t(e, r)
            };
            return n.symbol = e, n.shift = r, n
        }
        e.createGetCurrency = function createGetCurrency(t) {
            return function (e, r) {
                if (e instanceof c) return e;
                if (!r) throw new Error("Amount is not a Currency");
                var n = "string" == typeof r ? r.toUpperCase() : r.symbol,
                    i = t[n];
                if (!i) throw new Error("Couldn't find currency for \"" + n + '"');
                return i(e, r.shift)
            }
        }
    }, function (t, e, r) {
        var n = r(237),
            i = r(159);
        t.exports = Object.keys || function keys(t) {
            return n(t, i)
        }
    }, function (t, e) {
        t.exports = !0
    }, function (t, e) {
        var r = 0,
            n = Math.random();
        t.exports = function (t) {
            return "Symbol(".concat(void 0 === t ? "" : t, ")_", (++r + n).toString(36))
        }
    }, function (t, e) {
        e.f = {}.propertyIsEnumerable
    }, function (t, e, r) {
        var n = r(537),
            i = r(538),
            o = r(207),
            a = r(539);
        t.exports = function _slicedToArray(t, e) {
            return n(t) || i(t, e) || o(t, e) || a()
        }
    }, function (t, e, r) {
        (function (t) {
            var n = r(4);
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.stringToBytes = function stringToBytes(e) {
                return (0, i.default)(!!e, "argument is falsy"), (0, i.default)("string" == typeof e, "argument is not a string"), "0x" + t.from(e).toString("hex")
            }, e.bytesToString = function bytesToString(e) {
                return t.from(e.replace(/^0x/, ""), "hex").toString().replace(/\x00/g, "")
            }, e.nullIfEmpty = function nullIfEmpty(t) {
                return "" === t ? null : t
            }, e.castAsCurrency = function castAsCurrency(t, e) {
                if (e.isInstance(t)) return t;
                if ("string" == typeof t || "number" == typeof t) return e(t);
                throw new Error("Can't cast ".concat(t, " as ").concat(e.symbol))
            }, e.parseWeiNumeric = function parseWeiNumeric(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "ether";
                return c.fromWei((0, o.default)(t).toString(16), e)
            }, e.numberFromNumeric = function numberFromNumeric(t) {
                return (0, o.default)(t).toNumber()
            }, e.padRight = padRight, e.toHex = function toHex(t) {
                for (var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = e.with0x, n = void 0 === r || r, i = e.rightPadding, o = void 0 === i ? 64 : i, a = "", s = 0; s < t.length; s++) a += t.charCodeAt(s).toString(16);
                o > 0 && (a = padRight(a, o));
                return n ? "0x" + a : a
            }, e.fromWei = function fromWei(t) {
                return (0, o.default)(t).shiftedBy(-18)
            }, e.fromRay = function fromRay(t) {
                return (0, o.default)(t).shiftedBy(-27)
            }, e.fromRad = function fromRad(t) {
                return (0, o.default)(t).shiftedBy(-45)
            }, e.isBigNumber = function isBigNumber(t) {
                return o.default.isBigNumber(t)
            }, e.isCurrency = function isCurrency(t) {
                return t instanceof s.Currency
            }, e.promiseWait = function promiseWait(t) {
                return new Promise((function (e) {
                    return setTimeout(e, t)
                }))
            }, e.getMcdToken = e.isValidAddressString = void 0;
            var i = n(r(18)),
                o = n(r(40)),
                a = n(r(564)),
                s = r(110),
                u = r(33),
                c = (new a.default).utils;

            function padRight(t, e, r) {
                return t + new Array(e - t.length + 1).join(r || "0")
            }
            e.isValidAddressString = function isValidAddressString(t) {
                return /^0x([A-Fa-f0-9]{40})$/.test(t)
            };
            e.getMcdToken = function getMcdToken(t) {
                return u.defaultTokens.find((function (e) {
                    return e.symbol === t
                }))
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (t) {
            ! function (t, e) {
                function assert(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }

                function inherits(t, e) {
                    t.super_ = e;
                    var TempCtor = function () {};
                    TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
                }

                function BN(t, e, r) {
                    if (BN.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                var n;
                "object" == typeof t ? t.exports = BN : e.BN = BN, BN.BN = BN, BN.wordSize = 26;
                try {
                    n = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(571).Buffer
                } catch (t) {}

                function parseHex4Bits(t, e) {
                    var r = t.charCodeAt(e);
                    return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15
                }

                function parseHexByte(t, e, r) {
                    var n = parseHex4Bits(t, r);
                    return r - 1 >= e && (n |= parseHex4Bits(t, r - 1) << 4), n
                }

                function parseBase(t, e, r, n) {
                    for (var i = 0, o = Math.min(t.length, r), a = e; a < o; a++) {
                        var s = t.charCodeAt(a) - 48;
                        i *= n, i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s
                    }
                    return i
                }
                BN.isBN = function isBN(t) {
                    return t instanceof BN || null !== t && "object" == typeof t && t.constructor.wordSize === BN.wordSize && Array.isArray(t.words)
                }, BN.max = function max(t, e) {
                    return t.cmp(e) > 0 ? t : e
                }, BN.min = function min(t, e) {
                    return t.cmp(e) < 0 ? t : e
                }, BN.prototype._init = function init(t, e, r) {
                    if ("number" == typeof t) return this._initNumber(t, e, r);
                    if ("object" == typeof t) return this._initArray(t, e, r);
                    "hex" === e && (e = 16), assert(e === (0 | e) && e >= 2 && e <= 36);
                    var n = 0;
                    "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (n++, this.negative = 1), n < t.length && (16 === e ? this._parseHex(t, n, r) : (this._parseBase(t, e, n), "le" === r && this._initArray(this.toArray(), e, r)))
                }, BN.prototype._initNumber = function _initNumber(t, e, r) {
                    t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (assert(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initArray = function _initArray(t, e, r) {
                    if (assert("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                    this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o, a = 0;
                    if ("be" === r)
                        for (n = t.length - 1, i = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    else if ("le" === r)
                        for (n = 0, i = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    return this.strip()
                }, BN.prototype._parseHex = function _parseHex(t, e, r) {
                    this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o = 0,
                        a = 0;
                    if ("be" === r)
                        for (n = t.length - 1; n >= e; n -= 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                    else
                        for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                    this.strip()
                }, BN.prototype._parseBase = function _parseBase(t, e, r) {
                    this.words = [0], this.length = 1;
                    for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                    n--, i = i / e | 0;
                    for (var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n) u = parseBase(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== a) {
                        var l = 1;
                        for (u = parseBase(t, c, t.length, e), c = 0; c < a; c++) l *= e;
                        this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                    this.strip()
                }, BN.prototype.copy = function copy(t) {
                    t.words = new Array(this.length);
                    for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                    t.length = this.length, t.negative = this.negative, t.red = this.red
                }, BN.prototype.clone = function clone() {
                    var t = new BN(null);
                    return this.copy(t), t
                }, BN.prototype._expand = function _expand(t) {
                    for (; this.length < t;) this.words[this.length++] = 0;
                    return this
                }, BN.prototype.strip = function strip() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                    return this._normSign()
                }, BN.prototype._normSign = function _normSign() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                }, BN.prototype.inspect = function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                };
                var i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    o = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    a = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function smallMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, d = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= d; p++) {
                            var m = c - p | 0;
                            l += (a = (i = 0 | t.words[m]) * (o = 0 | e.words[p]) + h) / 67108864 | 0, h = 67108863 & a
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r.strip()
                }
                BN.prototype.toString = function toString(t, e) {
                    var r;
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var n = 0, s = 0, u = 0; u < this.length; u++) {
                            var c = this.words[u],
                                l = (16777215 & (c << n | s)).toString(16);
                            r = 0 !== (s = c >>> 24 - n & 16777215) || u !== this.length - 1 ? i[6 - l.length] + l + r : l + r, (n += 2) >= 26 && (n -= 26, u--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var h = o[t],
                            d = a[t];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero();) {
                            var m = p.modn(d).toString(t);
                            r = (p = p.idivn(d)).isZero() ? m + r : i[h - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    assert(!1, "Base should be between 2 and 36")
                }, BN.prototype.toNumber = function toNumber() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, BN.prototype.toJSON = function toJSON() {
                    return this.toString(16)
                }, BN.prototype.toBuffer = function toBuffer(t, e) {
                    return assert(void 0 !== n), this.toArrayLike(n, t, e)
                }, BN.prototype.toArray = function toArray(t, e) {
                    return this.toArrayLike(Array, t, e)
                }, BN.prototype.toArrayLike = function toArrayLike(t, e, r) {
                    var n = this.byteLength(),
                        i = r || Math.max(1, n);
                    assert(n <= i, "byte array longer than desired length"), assert(i > 0, "Requested array length <= 0"), this.strip();
                    var o, a, s = "le" === e,
                        u = new t(i),
                        c = this.clone();
                    if (s) {
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[a] = o;
                        for (; a < i; a++) u[a] = 0
                    } else {
                        for (a = 0; a < i - n; a++) u[a] = 0;
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[i - a - 1] = o
                    }
                    return u
                }, Math.clz32 ? BN.prototype._countBits = function _countBits(t) {
                    return 32 - Math.clz32(t)
                } : BN.prototype._countBits = function _countBits(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, BN.prototype._zeroBits = function _zeroBits(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r
                }, BN.prototype.bitLength = function bitLength() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return 26 * (this.length - 1) + e
                }, BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8)
                }, BN.prototype.toTwos = function toTwos(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, BN.prototype.fromTwos = function fromTwos(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, BN.prototype.isNeg = function isNeg() {
                    return 0 !== this.negative
                }, BN.prototype.neg = function neg() {
                    return this.clone().ineg()
                }, BN.prototype.ineg = function ineg() {
                    return this.isZero() || (this.negative ^= 1), this
                }, BN.prototype.iuor = function iuor(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this.strip()
                }, BN.prototype.ior = function ior(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuor(t)
                }, BN.prototype.or = function or(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, BN.prototype.uor = function uor(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, BN.prototype.iuand = function iuand(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this.strip()
                }, BN.prototype.iand = function iand(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuand(t)
                }, BN.prototype.and = function and(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, BN.prototype.uand = function uand(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, BN.prototype.iuxor = function iuxor(t) {
                    var e, r;
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this.strip()
                }, BN.prototype.ixor = function ixor(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuxor(t)
                }, BN.prototype.xor = function xor(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, BN.prototype.uxor = function uxor(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, BN.prototype.inotn = function inotn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip()
                }, BN.prototype.notn = function notn(t) {
                    return this.clone().inotn(t)
                }, BN.prototype.setn = function setn(t, e) {
                    assert("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        n = t % 26;
                    return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip()
                }, BN.prototype.iadd = function iadd(t) {
                    var e, r, n;
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, BN.prototype.add = function add(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, BN.prototype.isub = function isub(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e = this.iadd(t);
                        return t.negative = 1, e._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var r, n, i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (r = this, n = t) : (r = t, n = this);
                    for (var o = 0, a = 0; a < n.length; a++) o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    for (; 0 !== o && a < r.length; a++) o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    if (0 === o && a < r.length && r !== this)
                        for (; a < r.length; a++) this.words[a] = r.words[a];
                    return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this.strip()
                }, BN.prototype.sub = function sub(t) {
                    return this.clone().isub(t)
                };
                var s = function comb10MulTo(t, e, r) {
                    var n, i, o, a = t.words,
                        s = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        h = 8191 & l,
                        d = l >>> 13,
                        p = 0 | a[1],
                        m = 8191 & p,
                        y = p >>> 13,
                        b = 0 | a[2],
                        g = 8191 & b,
                        v = b >>> 13,
                        w = 0 | a[3],
                        M = 8191 & w,
                        A = w >>> 13,
                        x = 0 | a[4],
                        B = 8191 & x,
                        E = x >>> 13,
                        k = 0 | a[5],
                        N = 8191 & k,
                        T = k >>> 13,
                        C = 0 | a[6],
                        P = 8191 & C,
                        I = C >>> 13,
                        O = 0 | a[7],
                        D = 8191 & O,
                        j = O >>> 13,
                        L = 0 | a[8],
                        U = 8191 & L,
                        H = L >>> 13,
                        q = 0 | a[9],
                        z = 8191 & q,
                        G = q >>> 13,
                        V = 0 | s[0],
                        J = 8191 & V,
                        W = V >>> 13,
                        Z = 0 | s[1],
                        X = 8191 & Z,
                        Y = Z >>> 13,
                        $ = 0 | s[2],
                        Q = 8191 & $,
                        tt = $ >>> 13,
                        et = 0 | s[3],
                        rt = 8191 & et,
                        nt = et >>> 13,
                        it = 0 | s[4],
                        ot = 8191 & it,
                        st = it >>> 13,
                        ut = 0 | s[5],
                        ct = 8191 & ut,
                        ht = ut >>> 13,
                        dt = 0 | s[6],
                        pt = 8191 & dt,
                        mt = dt >>> 13,
                        yt = 0 | s[7],
                        bt = 8191 & yt,
                        vt = yt >>> 13,
                        wt = 0 | s[8],
                        Mt = 8191 & wt,
                        _t = wt >>> 13,
                        At = 0 | s[9],
                        xt = 8191 & At,
                        Bt = At >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var Et = (c + (n = Math.imul(h, J)) | 0) + ((8191 & (i = (i = Math.imul(h, W)) + Math.imul(d, J) | 0)) << 13) | 0;
                    c = ((o = Math.imul(d, W)) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(m, J), i = (i = Math.imul(m, W)) + Math.imul(y, J) | 0, o = Math.imul(y, W);
                    var kt = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(d, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Y) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(g, J), i = (i = Math.imul(g, W)) + Math.imul(v, J) | 0, o = Math.imul(v, W), n = n + Math.imul(m, X) | 0, i = (i = i + Math.imul(m, Y) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, Y) | 0;
                    var Nt = (c + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, tt) | 0) + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(M, J), i = (i = Math.imul(M, W)) + Math.imul(A, J) | 0, o = Math.imul(A, W), n = n + Math.imul(g, X) | 0, i = (i = i + Math.imul(g, Y) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, Y) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0;
                    var St = (c + (n = n + Math.imul(h, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, nt) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, nt) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(B, J), i = (i = Math.imul(B, W)) + Math.imul(E, J) | 0, o = Math.imul(E, W), n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(g, Q) | 0, i = (i = i + Math.imul(g, tt) | 0) + Math.imul(v, Q) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                    var Tt = (c + (n = n + Math.imul(h, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, st) | 0) + Math.imul(d, ot) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, st) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(N, J), i = (i = Math.imul(N, W)) + Math.imul(T, J) | 0, o = Math.imul(T, W), n = n + Math.imul(B, X) | 0, i = (i = i + Math.imul(B, Y) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(g, rt) | 0, i = (i = i + Math.imul(g, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                    var Ct = (c + (n = n + Math.imul(h, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ht) | 0) + Math.imul(d, ct) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, ht) | 0) + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(P, J), i = (i = Math.imul(P, W)) + Math.imul(I, J) | 0, o = Math.imul(I, W), n = n + Math.imul(N, X) | 0, i = (i = i + Math.imul(N, Y) | 0) + Math.imul(T, X) | 0, o = o + Math.imul(T, Y) | 0, n = n + Math.imul(B, Q) | 0, i = (i = i + Math.imul(B, tt) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(M, rt) | 0, i = (i = i + Math.imul(M, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(g, ot) | 0, i = (i = i + Math.imul(g, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(m, ct) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, ht) | 0;
                    var Pt = (c + (n = n + Math.imul(h, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, mt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, mt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(D, J), i = (i = Math.imul(D, W)) + Math.imul(j, J) | 0, o = Math.imul(j, W), n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(N, Q) | 0, i = (i = i + Math.imul(N, tt) | 0) + Math.imul(T, Q) | 0, o = o + Math.imul(T, tt) | 0, n = n + Math.imul(B, rt) | 0, i = (i = i + Math.imul(B, nt) | 0) + Math.imul(E, rt) | 0, o = o + Math.imul(E, nt) | 0, n = n + Math.imul(M, ot) | 0, i = (i = i + Math.imul(M, st) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(g, ct) | 0, i = (i = i + Math.imul(g, ht) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(m, pt) | 0, i = (i = i + Math.imul(m, mt) | 0) + Math.imul(y, pt) | 0, o = o + Math.imul(y, mt) | 0;
                    var It = (c + (n = n + Math.imul(h, bt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, vt) | 0) + Math.imul(d, bt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, vt) | 0) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(U, J), i = (i = Math.imul(U, W)) + Math.imul(H, J) | 0, o = Math.imul(H, W), n = n + Math.imul(D, X) | 0, i = (i = i + Math.imul(D, Y) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, tt) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = (i = i + Math.imul(N, nt) | 0) + Math.imul(T, rt) | 0, o = o + Math.imul(T, nt) | 0, n = n + Math.imul(B, ot) | 0, i = (i = i + Math.imul(B, st) | 0) + Math.imul(E, ot) | 0, o = o + Math.imul(E, st) | 0, n = n + Math.imul(M, ct) | 0, i = (i = i + Math.imul(M, ht) | 0) + Math.imul(A, ct) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(g, pt) | 0, i = (i = i + Math.imul(g, mt) | 0) + Math.imul(v, pt) | 0, o = o + Math.imul(v, mt) | 0, n = n + Math.imul(m, bt) | 0, i = (i = i + Math.imul(m, vt) | 0) + Math.imul(y, bt) | 0, o = o + Math.imul(y, vt) | 0;
                    var Ot = (c + (n = n + Math.imul(h, Mt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, _t) | 0) + Math.imul(d, Mt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, _t) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(z, J), i = (i = Math.imul(z, W)) + Math.imul(G, J) | 0, o = Math.imul(G, W), n = n + Math.imul(U, X) | 0, i = (i = i + Math.imul(U, Y) | 0) + Math.imul(H, X) | 0, o = o + Math.imul(H, Y) | 0, n = n + Math.imul(D, Q) | 0, i = (i = i + Math.imul(D, tt) | 0) + Math.imul(j, Q) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(P, rt) | 0, i = (i = i + Math.imul(P, nt) | 0) + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = (i = i + Math.imul(N, st) | 0) + Math.imul(T, ot) | 0, o = o + Math.imul(T, st) | 0, n = n + Math.imul(B, ct) | 0, i = (i = i + Math.imul(B, ht) | 0) + Math.imul(E, ct) | 0, o = o + Math.imul(E, ht) | 0, n = n + Math.imul(M, pt) | 0, i = (i = i + Math.imul(M, mt) | 0) + Math.imul(A, pt) | 0, o = o + Math.imul(A, mt) | 0, n = n + Math.imul(g, bt) | 0, i = (i = i + Math.imul(g, vt) | 0) + Math.imul(v, bt) | 0, o = o + Math.imul(v, vt) | 0, n = n + Math.imul(m, Mt) | 0, i = (i = i + Math.imul(m, _t) | 0) + Math.imul(y, Mt) | 0, o = o + Math.imul(y, _t) | 0;
                    var Rt = (c + (n = n + Math.imul(h, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Bt) | 0) + Math.imul(d, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Bt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(z, X), i = (i = Math.imul(z, Y)) + Math.imul(G, X) | 0, o = Math.imul(G, Y), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, tt) | 0) + Math.imul(H, Q) | 0, o = o + Math.imul(H, tt) | 0, n = n + Math.imul(D, rt) | 0, i = (i = i + Math.imul(D, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(P, ot) | 0, i = (i = i + Math.imul(P, st) | 0) + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ct) | 0, i = (i = i + Math.imul(N, ht) | 0) + Math.imul(T, ct) | 0, o = o + Math.imul(T, ht) | 0, n = n + Math.imul(B, pt) | 0, i = (i = i + Math.imul(B, mt) | 0) + Math.imul(E, pt) | 0, o = o + Math.imul(E, mt) | 0, n = n + Math.imul(M, bt) | 0, i = (i = i + Math.imul(M, vt) | 0) + Math.imul(A, bt) | 0, o = o + Math.imul(A, vt) | 0, n = n + Math.imul(g, Mt) | 0, i = (i = i + Math.imul(g, _t) | 0) + Math.imul(v, Mt) | 0, o = o + Math.imul(v, _t) | 0;
                    var Ft = (c + (n = n + Math.imul(m, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, Bt) | 0) + Math.imul(y, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, Bt) | 0) + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(z, Q), i = (i = Math.imul(z, tt)) + Math.imul(G, Q) | 0, o = Math.imul(G, tt), n = n + Math.imul(U, rt) | 0, i = (i = i + Math.imul(U, nt) | 0) + Math.imul(H, rt) | 0, o = o + Math.imul(H, nt) | 0, n = n + Math.imul(D, ot) | 0, i = (i = i + Math.imul(D, st) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, st) | 0, n = n + Math.imul(P, ct) | 0, i = (i = i + Math.imul(P, ht) | 0) + Math.imul(I, ct) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, pt) | 0, i = (i = i + Math.imul(N, mt) | 0) + Math.imul(T, pt) | 0, o = o + Math.imul(T, mt) | 0, n = n + Math.imul(B, bt) | 0, i = (i = i + Math.imul(B, vt) | 0) + Math.imul(E, bt) | 0, o = o + Math.imul(E, vt) | 0, n = n + Math.imul(M, Mt) | 0, i = (i = i + Math.imul(M, _t) | 0) + Math.imul(A, Mt) | 0, o = o + Math.imul(A, _t) | 0;
                    var Dt = (c + (n = n + Math.imul(g, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(g, Bt) | 0) + Math.imul(v, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(v, Bt) | 0) + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(z, rt), i = (i = Math.imul(z, nt)) + Math.imul(G, rt) | 0, o = Math.imul(G, nt), n = n + Math.imul(U, ot) | 0, i = (i = i + Math.imul(U, st) | 0) + Math.imul(H, ot) | 0, o = o + Math.imul(H, st) | 0, n = n + Math.imul(D, ct) | 0, i = (i = i + Math.imul(D, ht) | 0) + Math.imul(j, ct) | 0, o = o + Math.imul(j, ht) | 0, n = n + Math.imul(P, pt) | 0, i = (i = i + Math.imul(P, mt) | 0) + Math.imul(I, pt) | 0, o = o + Math.imul(I, mt) | 0, n = n + Math.imul(N, bt) | 0, i = (i = i + Math.imul(N, vt) | 0) + Math.imul(T, bt) | 0, o = o + Math.imul(T, vt) | 0, n = n + Math.imul(B, Mt) | 0, i = (i = i + Math.imul(B, _t) | 0) + Math.imul(E, Mt) | 0, o = o + Math.imul(E, _t) | 0;
                    var jt = (c + (n = n + Math.imul(M, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, Bt) | 0) + Math.imul(A, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, Bt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(z, ot), i = (i = Math.imul(z, st)) + Math.imul(G, ot) | 0, o = Math.imul(G, st), n = n + Math.imul(U, ct) | 0, i = (i = i + Math.imul(U, ht) | 0) + Math.imul(H, ct) | 0, o = o + Math.imul(H, ht) | 0, n = n + Math.imul(D, pt) | 0, i = (i = i + Math.imul(D, mt) | 0) + Math.imul(j, pt) | 0, o = o + Math.imul(j, mt) | 0, n = n + Math.imul(P, bt) | 0, i = (i = i + Math.imul(P, vt) | 0) + Math.imul(I, bt) | 0, o = o + Math.imul(I, vt) | 0, n = n + Math.imul(N, Mt) | 0, i = (i = i + Math.imul(N, _t) | 0) + Math.imul(T, Mt) | 0, o = o + Math.imul(T, _t) | 0;
                    var Lt = (c + (n = n + Math.imul(B, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, Bt) | 0) + Math.imul(E, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, Bt) | 0) + (i >>> 13) | 0) + (Lt >>> 26) | 0, Lt &= 67108863, n = Math.imul(z, ct), i = (i = Math.imul(z, ht)) + Math.imul(G, ct) | 0, o = Math.imul(G, ht), n = n + Math.imul(U, pt) | 0, i = (i = i + Math.imul(U, mt) | 0) + Math.imul(H, pt) | 0, o = o + Math.imul(H, mt) | 0, n = n + Math.imul(D, bt) | 0, i = (i = i + Math.imul(D, vt) | 0) + Math.imul(j, bt) | 0, o = o + Math.imul(j, vt) | 0, n = n + Math.imul(P, Mt) | 0, i = (i = i + Math.imul(P, _t) | 0) + Math.imul(I, Mt) | 0, o = o + Math.imul(I, _t) | 0;
                    var Ut = (c + (n = n + Math.imul(N, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(N, Bt) | 0) + Math.imul(T, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(T, Bt) | 0) + (i >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, n = Math.imul(z, pt), i = (i = Math.imul(z, mt)) + Math.imul(G, pt) | 0, o = Math.imul(G, mt), n = n + Math.imul(U, bt) | 0, i = (i = i + Math.imul(U, vt) | 0) + Math.imul(H, bt) | 0, o = o + Math.imul(H, vt) | 0, n = n + Math.imul(D, Mt) | 0, i = (i = i + Math.imul(D, _t) | 0) + Math.imul(j, Mt) | 0, o = o + Math.imul(j, _t) | 0;
                    var Ht = (c + (n = n + Math.imul(P, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, Bt) | 0) + Math.imul(I, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, Bt) | 0) + (i >>> 13) | 0) + (Ht >>> 26) | 0, Ht &= 67108863, n = Math.imul(z, bt), i = (i = Math.imul(z, vt)) + Math.imul(G, bt) | 0, o = Math.imul(G, vt), n = n + Math.imul(U, Mt) | 0, i = (i = i + Math.imul(U, _t) | 0) + Math.imul(H, Mt) | 0, o = o + Math.imul(H, _t) | 0;
                    var qt = (c + (n = n + Math.imul(D, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(D, Bt) | 0) + Math.imul(j, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, Bt) | 0) + (i >>> 13) | 0) + (qt >>> 26) | 0, qt &= 67108863, n = Math.imul(z, Mt), i = (i = Math.imul(z, _t)) + Math.imul(G, Mt) | 0, o = Math.imul(G, _t);
                    var zt = (c + (n = n + Math.imul(U, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, Bt) | 0) + Math.imul(H, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(H, Bt) | 0) + (i >>> 13) | 0) + (zt >>> 26) | 0, zt &= 67108863;
                    var Gt = (c + (n = Math.imul(z, xt)) | 0) + ((8191 & (i = (i = Math.imul(z, Bt)) + Math.imul(G, xt) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(G, Bt)) + (i >>> 13) | 0) + (Gt >>> 26) | 0, Gt &= 67108863, u[0] = Et, u[1] = kt, u[2] = Nt, u[3] = St, u[4] = Tt, u[5] = Ct, u[6] = Pt, u[7] = It, u[8] = Ot, u[9] = Rt, u[10] = Ft, u[11] = Dt, u[12] = jt, u[13] = Lt, u[14] = Ut, u[15] = Ht, u[16] = qt, u[17] = zt, u[18] = Gt, 0 !== c && (u[19] = c, r.length++), r
                };

                function jumboMulTo(t, e, r) {
                    return (new FFTM).mulp(t, e, r)
                }

                function FFTM(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (s = smallMulTo), BN.prototype.mulTo = function mulTo(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? s(this, t, e) : r < 63 ? smallMulTo(this, t, e) : r < 1024 ? function bigMulTo(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var a = i;
                            i = 0;
                            for (var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                                var l = o - c,
                                    h = (0 | t.words[l]) * (0 | e.words[c]),
                                    d = 67108863 & h;
                                s = 67108863 & (d = d + s | 0), i += (a = (a = a + (h / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863
                            }
                            r.words[o] = s, n = a, a = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }(this, t, e) : jumboMulTo(this, t, e)
                }, FFTM.prototype.makeRBT = function makeRBT(t) {
                    for (var e = new Array(t), r = BN.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, FFTM.prototype.revBin = function revBin(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, FFTM.prototype.permute = function permute(t, e, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = e[t[a]], i[a] = r[t[a]]
                }, FFTM.prototype.transform = function transform(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var h = u, d = c, p = 0; p < a; p++) {
                                var m = r[l + p],
                                    y = n[l + p],
                                    b = r[l + p + a],
                                    g = n[l + p + a],
                                    v = h * b - d * g;
                                g = h * g + d * b, b = v, r[l + p] = m + b, n[l + p] = y + g, r[l + p + a] = m - b, n[l + p + a] = y - g, p !== s && (v = u * h - c * d, d = u * d + c * h, h = v)
                            }
                }, FFTM.prototype.guessLen13b = function guessLen13b(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, FFTM.prototype.conjugate = function conjugate(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, FFTM.prototype.normalize13b = function normalize13b(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, FFTM.prototype.convert13b = function convert13b(t, e, r, n) {
                    for (var i = 0, o = 0; o < e; o++) i += 0 | t[o], r[2 * o] = 8191 & i, i >>>= 13, r[2 * o + 1] = 8191 & i, i >>>= 13;
                    for (o = 2 * e; o < n; ++o) r[o] = 0;
                    assert(0 === i), assert(0 == (-8192 & i))
                }, FFTM.prototype.stub = function stub(t) {
                    for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, FFTM.prototype.mulp = function mulp(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = new Array(n),
                        s = new Array(n),
                        u = new Array(n),
                        c = new Array(n),
                        l = new Array(n),
                        h = new Array(n),
                        d = r.words;
                    d.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var p = 0; p < n; p++) {
                        var m = s[p] * l[p] - u[p] * h[p];
                        u[p] = s[p] * h[p] + u[p] * l[p], s[p] = m
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, d, o, n, i), this.conjugate(d, o, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                }, BN.prototype.mul = function mul(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                }, BN.prototype.mulf = function mulf(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), jumboMulTo(this, t, e)
                }, BN.prototype.imul = function imul(t) {
                    return this.clone().mulTo(t, this)
                }, BN.prototype.imuln = function imuln(t) {
                    assert("number" == typeof t), assert(t < 67108864);
                    for (var e = 0, r = 0; r < this.length; r++) {
                        var n = (0 | this.words[r]) * t,
                            i = (67108863 & n) + (67108863 & e);
                        e >>= 26, e += n / 67108864 | 0, e += i >>> 26, this.words[r] = 67108863 & i
                    }
                    return 0 !== e && (this.words[r] = e, this.length++), this
                }, BN.prototype.muln = function muln(t) {
                    return this.clone().imuln(t)
                }, BN.prototype.sqr = function sqr() {
                    return this.mul(this)
                }, BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone())
                }, BN.prototype.pow = function pow(t) {
                    var e = function toBitArray(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }(t);
                    if (0 === e.length) return new BN(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, BN.prototype.iushln = function iushln(t) {
                    assert("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        n = (t - r) / 26,
                        i = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & i,
                                s = (0 | this.words[e]) - a << r;
                            this.words[e] = s | o, o = a >>> 26 - r
                        }
                        o && (this.words[e] = o, this.length++)
                    }
                    if (0 !== n) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                        for (e = 0; e < n; e++) this.words[e] = 0;
                        this.length += n
                    }
                    return this.strip()
                }, BN.prototype.ishln = function ishln(t) {
                    return assert(0 === this.negative), this.iushln(t)
                }, BN.prototype.iushrn = function iushrn(t, e, r) {
                    var n;
                    assert("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                    var i = t % 26,
                        o = Math.min((t - i) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> i << i,
                        s = r;
                    if (n -= o, n = Math.max(0, n), s) {
                        for (var u = 0; u < o; u++) s.words[u] = this.words[u];
                        s.length = o
                    }
                    if (0 === o);
                    else if (this.length > o)
                        for (this.length -= o, u = 0; u < this.length; u++) this.words[u] = this.words[u + o];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= n); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - i | l >>> i, c = l & a
                    }
                    return s && 0 !== c && (s.words[s.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                }, BN.prototype.ishrn = function ishrn(t, e, r) {
                    return assert(0 === this.negative), this.iushrn(t, e, r)
                }, BN.prototype.shln = function shln(t) {
                    return this.clone().ishln(t)
                }, BN.prototype.ushln = function ushln(t) {
                    return this.clone().iushln(t)
                }, BN.prototype.shrn = function shrn(t) {
                    return this.clone().ishrn(t)
                }, BN.prototype.ushrn = function ushrn(t) {
                    return this.clone().iushrn(t)
                }, BN.prototype.testn = function testn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }, BN.prototype.imaskn = function imaskn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var n = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= n
                    }
                    return this.strip()
                }, BN.prototype.maskn = function maskn(t) {
                    return this.clone().imaskn(t)
                }, BN.prototype.iaddn = function iaddn(t) {
                    return assert("number" == typeof t), assert(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                }, BN.prototype._iaddn = function _iaddn(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, BN.prototype.isubn = function isubn(t) {
                    if (assert("number" == typeof t), assert(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this.strip()
                }, BN.prototype.addn = function addn(t) {
                    return this.clone().iaddn(t)
                }, BN.prototype.subn = function subn(t) {
                    return this.clone().isubn(t)
                }, BN.prototype.iabs = function iabs() {
                    return this.negative = 0, this
                }, BN.prototype.abs = function abs() {
                    return this.clone().iabs()
                }, BN.prototype._ishlnsubmul = function _ishlnsubmul(t, e, r) {
                    var n, i, o = t.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < t.length; n++) {
                        i = (0 | this.words[n + r]) + a;
                        var s = (0 | t.words[n]) * e;
                        a = ((i -= 67108863 & s) >> 26) - (s / 67108864 | 0), this.words[n + r] = 67108863 & i
                    }
                    for (; n < this.length - r; n++) a = (i = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & i;
                    if (0 === a) return this.strip();
                    for (assert(-1 === a), a = 0, n = 0; n < this.length; n++) a = (i = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & i;
                    return this.negative = 1, this.strip()
                }, BN.prototype._wordDiv = function _wordDiv(t, e) {
                    var r = (this.length, t.length),
                        n = this.clone(),
                        i = t,
                        o = 0 | i.words[i.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                    var a, s = n.length - i.length;
                    if ("mod" !== e) {
                        (a = new BN(null)).length = s + 1, a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++) a.words[u] = 0
                    }
                    var c = n.clone()._ishlnsubmul(i, 1, s);
                    0 === c.negative && (n = c, a && (a.words[s] = 1));
                    for (var l = s - 1; l >= 0; l--) {
                        var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                        for (h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;) h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                        a && (a.words[l] = h)
                    }
                    return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                        div: a || null,
                        mod: n
                    }
                }, BN.prototype.divmod = function divmod(t, e, r) {
                    return assert(!t.isZero()), this.isZero() ? {
                        div: new BN(0),
                        mod: new BN(0)
                    } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), "mod" !== e && (n = o.div.neg()), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(t)), {
                        div: n,
                        mod: i
                    }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), "mod" !== e && (n = o.div.neg()), {
                        div: n,
                        mod: o.mod
                    }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(t)), {
                        div: o.div,
                        mod: i
                    }) : t.length > this.length || this.cmp(t) < 0 ? {
                        div: new BN(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new BN(this.modn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new BN(this.modn(t.words[0]))
                    } : this._wordDiv(t, e);
                    var n, i, o
                }, BN.prototype.div = function div(t) {
                    return this.divmod(t, "div", !1).div
                }, BN.prototype.mod = function mod(t) {
                    return this.divmod(t, "mod", !1).mod
                }, BN.prototype.umod = function umod(t) {
                    return this.divmod(t, "mod", !0).mod
                }, BN.prototype.divRound = function divRound(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, BN.prototype.modn = function modn(t) {
                    assert(t <= 67108863);
                    for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) r = (e * r + (0 | this.words[n])) % t;
                    return r
                }, BN.prototype.idivn = function idivn(t) {
                    assert(t <= 67108863);
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = (0 | this.words[r]) + 67108864 * e;
                        this.words[r] = n / t | 0, e = n % t
                    }
                    return this.strip()
                }, BN.prototype.divn = function divn(t) {
                    return this.clone().idivn(t)
                }, BN.prototype.egcd = function egcd(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n = new BN(1), i = new BN(0), o = new BN(0), a = new BN(1), s = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++s;
                    for (var u = r.clone(), c = e.clone(); !e.isZero();) {
                        for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                        if (l > 0)
                            for (e.iushrn(l); l-- > 0;)(n.isOdd() || i.isOdd()) && (n.iadd(u), i.isub(c)), n.iushrn(1), i.iushrn(1);
                        for (var d = 0, p = 1; 0 == (r.words[0] & p) && d < 26; ++d, p <<= 1);
                        if (d > 0)
                            for (r.iushrn(d); d-- > 0;)(o.isOdd() || a.isOdd()) && (o.iadd(u), a.isub(c)), o.iushrn(1), a.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), n.isub(o), i.isub(a)) : (r.isub(e), o.isub(n), a.isub(i))
                    }
                    return {
                        a: o,
                        b: a,
                        gcd: r.iushln(s)
                    }
                }, BN.prototype._invmp = function _invmp(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n, i = new BN(1), o = new BN(0), a = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var s = 0, u = 1; 0 == (e.words[0] & u) && s < 26; ++s, u <<= 1);
                        if (s > 0)
                            for (e.iushrn(s); s-- > 0;) i.isOdd() && i.iadd(a), i.iushrn(1);
                        for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(a), o.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(o)) : (r.isub(e), o.isub(i))
                    }
                    return (n = 0 === e.cmpn(1) ? i : o).cmpn(0) < 0 && n.iadd(t), n
                }, BN.prototype.gcd = function gcd(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, BN.prototype.invm = function invm(t) {
                    return this.egcd(t).a.umod(t)
                }, BN.prototype.isEven = function isEven() {
                    return 0 == (1 & this.words[0])
                }, BN.prototype.isOdd = function isOdd() {
                    return 1 == (1 & this.words[0])
                }, BN.prototype.andln = function andln(t) {
                    return this.words[0] & t
                }, BN.prototype.bincn = function bincn(t) {
                    assert("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                    for (var i = n, o = r; 0 !== i && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        i = (a += i) >>> 26, a &= 67108863, this.words[o] = a
                    }
                    return 0 !== i && (this.words[o] = i, this.length++), this
                }, BN.prototype.isZero = function isZero() {
                    return 1 === this.length && 0 === this.words[0]
                }, BN.prototype.cmpn = function cmpn(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this.strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), assert(t <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        e = n === t ? 0 : n < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.cmp = function cmp(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.ucmp = function ucmp(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, BN.prototype.gtn = function gtn(t) {
                    return 1 === this.cmpn(t)
                }, BN.prototype.gt = function gt(t) {
                    return 1 === this.cmp(t)
                }, BN.prototype.gten = function gten(t) {
                    return this.cmpn(t) >= 0
                }, BN.prototype.gte = function gte(t) {
                    return this.cmp(t) >= 0
                }, BN.prototype.ltn = function ltn(t) {
                    return -1 === this.cmpn(t)
                }, BN.prototype.lt = function lt(t) {
                    return -1 === this.cmp(t)
                }, BN.prototype.lten = function lten(t) {
                    return this.cmpn(t) <= 0
                }, BN.prototype.lte = function lte(t) {
                    return this.cmp(t) <= 0
                }, BN.prototype.eqn = function eqn(t) {
                    return 0 === this.cmpn(t)
                }, BN.prototype.eq = function eq(t) {
                    return 0 === this.cmp(t)
                }, BN.red = function red(t) {
                    return new Red(t)
                }, BN.prototype.toRed = function toRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, BN.prototype.fromRed = function fromRed() {
                    return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, BN.prototype._forceRed = function _forceRed(t) {
                    return this.red = t, this
                }, BN.prototype.forceRed = function forceRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, BN.prototype.redAdd = function redAdd(t) {
                    return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, BN.prototype.redIAdd = function redIAdd(t) {
                    return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, BN.prototype.redSub = function redSub(t) {
                    return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, BN.prototype.redISub = function redISub(t) {
                    return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, BN.prototype.redShl = function redShl(t) {
                    return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, BN.prototype.redMul = function redMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, BN.prototype.redIMul = function redIMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, BN.prototype.redSqr = function redSqr() {
                    return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, BN.prototype.redISqr = function redISqr() {
                    return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, BN.prototype.redSqrt = function redSqrt() {
                    return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, BN.prototype.redInvm = function redInvm() {
                    return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, BN.prototype.redNeg = function redNeg() {
                    return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, BN.prototype.redPow = function redPow(t) {
                    return assert(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var u = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function MPrime(t, e) {
                    this.name = t, this.p = new BN(e, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function Red(t) {
                    if ("string" == typeof t) {
                        var e = BN._prime(t);
                        this.m = e.p, this.prime = e
                    } else assert(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function Mont(t) {
                    Red.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                MPrime.prototype._tmp = function _tmp() {
                    var t = new BN(null);
                    return t.words = new Array(Math.ceil(this.n / 13)), t
                }, MPrime.prototype.ireduce = function ireduce(t) {
                    var e, r = t;
                    do {
                        this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                }, MPrime.prototype.split = function split(t, e) {
                    t.iushrn(this.n, 0, e)
                }, MPrime.prototype.imulK = function imulK(t) {
                    return t.imul(this.k)
                }, inherits(K256, MPrime), K256.prototype.split = function split(t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++) e.words[n] = t.words[n];
                    if (e.length = r, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                    var i = t.words[9];
                    for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, K256.prototype.imulK = function imulK(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function imulK(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 19 * (0 | t.words[r]) + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, BN._prime = function prime(t) {
                    if (u[t]) return u[t];
                    var prime;
                    if ("k256" === t) prime = new K256;
                    else if ("p224" === t) prime = new P224;
                    else if ("p192" === t) prime = new P192;
                    else {
                        if ("p25519" !== t) throw new Error("Unknown prime " + t);
                        prime = new P25519
                    }
                    return u[t] = prime, prime
                }, Red.prototype._verify1 = function _verify1(t) {
                    assert(0 === t.negative, "red works only with positives"), assert(t.red, "red works only with red numbers")
                }, Red.prototype._verify2 = function _verify2(t, e) {
                    assert(0 == (t.negative | e.negative), "red works only with positives"), assert(t.red && t.red === e.red, "red works only with red numbers")
                }, Red.prototype.imod = function imod(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                }, Red.prototype.neg = function neg(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, Red.prototype.add = function add(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, Red.prototype.iadd = function iadd(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, Red.prototype.sub = function sub(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                }, Red.prototype.isub = function isub(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r
                }, Red.prototype.shl = function shl(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, Red.prototype.imul = function imul(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, Red.prototype.mul = function mul(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, Red.prototype.isqr = function isqr(t) {
                    return this.imul(t, t.clone())
                }, Red.prototype.sqr = function sqr(t) {
                    return this.mul(t, t)
                }, Red.prototype.sqrt = function sqrt(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (assert(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var n = this.m.subn(1), i = 0; !n.isZero() && 0 === n.andln(1);) i++, n.iushrn(1);
                    assert(!n.isZero());
                    var o = new BN(1).toRed(this),
                        a = o.redNeg(),
                        s = this.m.subn(1).iushrn(1),
                        u = this.m.bitLength();
                    for (u = new BN(2 * u * u).toRed(this); 0 !== this.pow(u, s).cmp(a);) u.redIAdd(a);
                    for (var c = this.pow(u, n), l = this.pow(t, n.addn(1).iushrn(1)), h = this.pow(t, n), d = i; 0 !== h.cmp(o);) {
                        for (var p = h, m = 0; 0 !== p.cmp(o); m++) p = p.redSqr();
                        assert(m < d);
                        var y = this.pow(c, new BN(1).iushln(d - m - 1));
                        l = l.redMul(y), c = y.redSqr(), h = h.redMul(c), d = m
                    }
                    return l
                }, Red.prototype.invm = function invm(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, Red.prototype.pow = function pow(t, e) {
                    if (e.isZero()) return new BN(1).toRed(this);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = new Array(16);
                    r[0] = new BN(1).toRed(this), r[1] = t;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], t);
                    var i = r[0],
                        o = 0,
                        a = 0,
                        s = e.bitLength() % 26;
                    for (0 === s && (s = 26), n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = s - 1; c >= 0; c--) {
                            var l = u >> c & 1;
                            i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 === ++a || 0 === n && 0 === c) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0
                        }
                        s = 26
                    }
                    return i
                }, Red.prototype.convertTo = function convertTo(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, Red.prototype.convertFrom = function convertFrom(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, BN.mont = function mont(t) {
                    return new Mont(t)
                }, inherits(Mont, Red), Mont.prototype.convertTo = function convertTo(t) {
                    return this.imod(t.ushln(this.shift))
                }, Mont.prototype.convertFrom = function convertFrom(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, Mont.prototype.imul = function imul(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.mul = function mul(t, e) {
                    if (t.isZero() || e.isZero()) return new BN(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.invm = function invm(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t, this)
        }).call(this, r(8)(t))
    }, function (t, e, r) {
        (function (e) {
            void 0 === e || !e.version || 0 === e.version.indexOf("v0.") || 0 === e.version.indexOf("v1.") && 0 !== e.version.indexOf("v1.8.") ? t.exports = {
                nextTick: function nextTick(t, r, n, i) {
                    if ("function" != typeof t) throw new TypeError('"callback" argument must be a function');
                    var o, a, s = arguments.length;
                    switch (s) {
                        case 0:
                        case 1:
                            return e.nextTick(t);
                        case 2:
                            return e.nextTick((function afterTickOne() {
                                t.call(null, r)
                            }));
                        case 3:
                            return e.nextTick((function afterTickTwo() {
                                t.call(null, r, n)
                            }));
                        case 4:
                            return e.nextTick((function afterTickThree() {
                                t.call(null, r, n, i)
                            }));
                        default:
                            for (o = new Array(s - 1), a = 0; a < o.length;) o[a++] = arguments[a];
                            return e.nextTick((function afterTick() {
                                t.apply(null, o)
                            }))
                    }
                }
            } : t.exports = e
        }).call(this, r(7))
    }, function (t, e, r) {
        var n, i = "object" == typeof Reflect ? Reflect : null,
            o = i && "function" == typeof i.apply ? i.apply : function ReflectApply(t, e, r) {
                return Function.prototype.apply.call(t, e, r)
            };
        n = i && "function" == typeof i.ownKeys ? i.ownKeys : Object.getOwnPropertySymbols ? function ReflectOwnKeys(t) {
            return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))
        } : function ReflectOwnKeys(t) {
            return Object.getOwnPropertyNames(t)
        };
        var a = Number.isNaN || function NumberIsNaN(t) {
            return t != t
        };

        function EventEmitter() {
            EventEmitter.init.call(this)
        }
        t.exports = EventEmitter, EventEmitter.EventEmitter = EventEmitter, EventEmitter.prototype._events = void 0, EventEmitter.prototype._eventsCount = 0, EventEmitter.prototype._maxListeners = void 0;
        var s = 10;

        function checkListener(t) {
            if ("function" != typeof t) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t)
        }

        function _getMaxListeners(t) {
            return void 0 === t._maxListeners ? EventEmitter.defaultMaxListeners : t._maxListeners
        }

        function _addListener(t, e, r, n) {
            var i, o, a;
            if (checkListener(r), void 0 === (o = t._events) ? (o = t._events = Object.create(null), t._eventsCount = 0) : (void 0 !== o.newListener && (t.emit("newListener", e, r.listener ? r.listener : r), o = t._events), a = o[e]), void 0 === a) a = o[e] = r, ++t._eventsCount;
            else if ("function" == typeof a ? a = o[e] = n ? [r, a] : [a, r] : n ? a.unshift(r) : a.push(r), (i = _getMaxListeners(t)) > 0 && a.length > i && !a.warned) {
                a.warned = !0;
                var s = new Error("Possible EventEmitter memory leak detected. " + a.length + " " + String(e) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                s.name = "MaxListenersExceededWarning", s.emitter = t, s.type = e, s.count = a.length,
                    function ProcessEmitWarning(t) {
                        console && console.warn && console.warn(t)
                    }(s)
            }
            return t
        }

        function onceWrapper() {
            if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
        }

        function _onceWrap(t, e, r) {
            var n = {
                    fired: !1,
                    wrapFn: void 0,
                    target: t,
                    type: e,
                    listener: r
                },
                i = onceWrapper.bind(n);
            return i.listener = r, n.wrapFn = i, i
        }

        function _listeners(t, e, r) {
            var n = t._events;
            if (void 0 === n) return [];
            var i = n[e];
            return void 0 === i ? [] : "function" == typeof i ? r ? [i.listener || i] : [i] : r ? function unwrapListeners(t) {
                for (var e = new Array(t.length), r = 0; r < e.length; ++r) e[r] = t[r].listener || t[r];
                return e
            }(i) : arrayClone(i, i.length)
        }

        function listenerCount(t) {
            var e = this._events;
            if (void 0 !== e) {
                var r = e[t];
                if ("function" == typeof r) return 1;
                if (void 0 !== r) return r.length
            }
            return 0
        }

        function arrayClone(t, e) {
            for (var r = new Array(e), n = 0; n < e; ++n) r[n] = t[n];
            return r
        }
        Object.defineProperty(EventEmitter, "defaultMaxListeners", {
            enumerable: !0,
            get: function () {
                return s
            },
            set: function (t) {
                if ("number" != typeof t || t < 0 || a(t)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t + ".");
                s = t
            }
        }), EventEmitter.init = function () {
            void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0
        }, EventEmitter.prototype.setMaxListeners = function setMaxListeners(t) {
            if ("number" != typeof t || t < 0 || a(t)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t + ".");
            return this._maxListeners = t, this
        }, EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
            return _getMaxListeners(this)
        }, EventEmitter.prototype.emit = function emit(t) {
            for (var e = [], r = 1; r < arguments.length; r++) e.push(arguments[r]);
            var n = "error" === t,
                i = this._events;
            if (void 0 !== i) n = n && void 0 === i.error;
            else if (!n) return !1;
            if (n) {
                var a;
                if (e.length > 0 && (a = e[0]), a instanceof Error) throw a;
                var s = new Error("Unhandled error." + (a ? " (" + a.message + ")" : ""));
                throw s.context = a, s
            }
            var u = i[t];
            if (void 0 === u) return !1;
            if ("function" == typeof u) o(u, this, e);
            else {
                var c = u.length,
                    l = arrayClone(u, c);
                for (r = 0; r < c; ++r) o(l[r], this, e)
            }
            return !0
        }, EventEmitter.prototype.addListener = function addListener(t, e) {
            return _addListener(this, t, e, !1)
        }, EventEmitter.prototype.on = EventEmitter.prototype.addListener, EventEmitter.prototype.prependListener = function prependListener(t, e) {
            return _addListener(this, t, e, !0)
        }, EventEmitter.prototype.once = function once(t, e) {
            return checkListener(e), this.on(t, _onceWrap(this, t, e)), this
        }, EventEmitter.prototype.prependOnceListener = function prependOnceListener(t, e) {
            return checkListener(e), this.prependListener(t, _onceWrap(this, t, e)), this
        }, EventEmitter.prototype.removeListener = function removeListener(t, e) {
            var r, n, i, o, a;
            if (checkListener(e), void 0 === (n = this._events)) return this;
            if (void 0 === (r = n[t])) return this;
            if (r === e || r.listener === e) 0 == --this._eventsCount ? this._events = Object.create(null) : (delete n[t], n.removeListener && this.emit("removeListener", t, r.listener || e));
            else if ("function" != typeof r) {
                for (i = -1, o = r.length - 1; o >= 0; o--)
                    if (r[o] === e || r[o].listener === e) {
                        a = r[o].listener, i = o;
                        break
                    } if (i < 0) return this;
                0 === i ? r.shift() : function spliceOne(t, e) {
                    for (; e + 1 < t.length; e++) t[e] = t[e + 1];
                    t.pop()
                }(r, i), 1 === r.length && (n[t] = r[0]), void 0 !== n.removeListener && this.emit("removeListener", t, a || e)
            }
            return this
        }, EventEmitter.prototype.off = EventEmitter.prototype.removeListener, EventEmitter.prototype.removeAllListeners = function removeAllListeners(t) {
            var e, r, n;
            if (void 0 === (r = this._events)) return this;
            if (void 0 === r.removeListener) return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== r[t] && (0 == --this._eventsCount ? this._events = Object.create(null) : delete r[t]), this;
            if (0 === arguments.length) {
                var i, o = Object.keys(r);
                for (n = 0; n < o.length; ++n) "removeListener" !== (i = o[n]) && this.removeAllListeners(i);
                return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this
            }
            if ("function" == typeof (e = r[t])) this.removeListener(t, e);
            else if (void 0 !== e)
                for (n = e.length - 1; n >= 0; n--) this.removeListener(t, e[n]);
            return this
        }, EventEmitter.prototype.listeners = function listeners(t) {
            return _listeners(this, t, !0)
        }, EventEmitter.prototype.rawListeners = function rawListeners(t) {
            return _listeners(this, t, !1)
        }, EventEmitter.listenerCount = function (t, e) {
            return "function" == typeof t.listenerCount ? t.listenerCount(e) : listenerCount.call(t, e)
        }, EventEmitter.prototype.listenerCount = listenerCount, EventEmitter.prototype.eventNames = function eventNames() {
            return this._eventsCount > 0 ? n(this._events) : []
        }
    }, function (t, e, r) {
        (function (t) {
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.getLength = e.decode = e.encode = void 0;
            var n = r(613);

            function safeParseInt(t, e) {
                if ("00" === t.slice(0, 2)) throw new Error("invalid RLP: extra zeros");
                return parseInt(t, e)
            }

            function encodeLength(e, r) {
                if (e < 56) return t.from([e + r]);
                var n = intToHex(e),
                    i = intToHex(r + 55 + n.length / 2);
                return t.from(i + n, "hex")
            }

            function isHexPrefixed(t) {
                return "0x" === t.slice(0, 2)
            }

            function intToHex(t) {
                if (t < 0) throw new Error("Invalid integer as argument, must be unsigned!");
                var e = t.toString(16);
                return e.length % 2 ? "0" + e : e
            }

            function toBuffer(e) {
                if (!t.isBuffer(e)) {
                    if ("string" == typeof e) return isHexPrefixed(e) ? t.from(function padToEven(t) {
                        return t.length % 2 ? "0" + t : t
                    }(function stripHexPrefix(t) {
                        return "string" != typeof t ? t : isHexPrefixed(t) ? t.slice(2) : t
                    }(e)), "hex") : t.from(e);
                    if ("number" == typeof e || "bigint" == typeof e) return e ? function intToBuffer(e) {
                        var r = intToHex(e);
                        return t.from(r, "hex")
                    }(e) : t.from([]);
                    if (null == e) return t.from([]);
                    if (e instanceof Uint8Array) return t.from(e);
                    if (n.isBN(e)) return t.from(e.toArray());
                    throw new Error("invalid type")
                }
                return e
            }
            e.encode = function encode(e) {
                if (Array.isArray(e)) {
                    for (var r = [], n = 0; n < e.length; n++) r.push(encode(e[n]));
                    var i = t.concat(r);
                    return t.concat([encodeLength(i.length, 192), i])
                }
                var o = toBuffer(e);
                return 1 === o.length && o[0] < 128 ? o : t.concat([encodeLength(o.length, 128), o])
            }, e.decode = function decode(e, r) {
                if (void 0 === r && (r = !1), !e || 0 === e.length) return t.from([]);
                var n = function _decode(e) {
                    var r, n, i, o, a, s = [],
                        u = e[0];
                    if (u <= 127) return {
                        data: e.slice(0, 1),
                        remainder: e.slice(1)
                    };
                    if (u <= 183) {
                        if (r = u - 127, i = 128 === u ? t.from([]) : e.slice(1, r), 2 === r && i[0] < 128) throw new Error("invalid rlp encoding: byte must be less 0x80");
                        return {
                            data: i,
                            remainder: e.slice(r)
                        }
                    }
                    if (u <= 191) {
                        if (n = u - 182, e.length - 1 < n) throw new Error("invalid RLP: not enough bytes for string length");
                        if ((r = safeParseInt(e.slice(1, n).toString("hex"), 16)) <= 55) throw new Error("invalid RLP: expected string length to be greater than 55");
                        if ((i = e.slice(n, r + n)).length < r) throw new Error("invalid RLP: not enough bytes for string");
                        return {
                            data: i,
                            remainder: e.slice(r + n)
                        }
                    }
                    if (u <= 247) {
                        for (r = u - 191, o = e.slice(1, r); o.length;) a = _decode(o), s.push(a.data), o = a.remainder;
                        return {
                            data: s,
                            remainder: e.slice(r)
                        }
                    }
                    n = u - 246, r = safeParseInt(e.slice(1, n).toString("hex"), 16);
                    var c = n + r;
                    if (c > e.length) throw new Error("invalid rlp: total length is larger than the data");
                    if (0 === (o = e.slice(n, c)).length) throw new Error("invalid rlp, List has a invalid length");
                    for (; o.length;) a = _decode(o), s.push(a.data), o = a.remainder;
                    return {
                        data: s,
                        remainder: e.slice(c)
                    }
                }(toBuffer(e));
                if (r) return n;
                if (0 !== n.remainder.length) throw new Error("invalid remainder");
                return n.data
            }, e.getLength = function getLength(e) {
                if (!e || 0 === e.length) return t.from([]);
                var r = toBuffer(e),
                    n = r[0];
                if (n <= 127) return r.length;
                if (n <= 183) return n - 127;
                if (n <= 191) return n - 182;
                if (n <= 247) return n - 191;
                var i = n - 246;
                return i + safeParseInt(r.slice(1, i).toString("hex"), 16)
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = this && this.__awaiter || function (t, e, r, n) {
                return new(r || (r = Promise))((function (i, o) {
                    function fulfilled(t) {
                        try {
                            step(n.next(t))
                        } catch (t) {
                            o(t)
                        }
                    }

                    function rejected(t) {
                        try {
                            step(n.throw(t))
                        } catch (t) {
                            o(t)
                        }
                    }

                    function step(t) {
                        t.done ? i(t.value) : function adopt(t) {
                            return t instanceof r ? t : new r((function (e) {
                                e(t)
                            }))
                        }(t.value).then(fulfilled, rejected)
                    }
                    step((n = n.apply(t, e || [])).next())
                }))
            },
            i = this && this.__generator || function (t, e) {
                var r, n, i, o, a = {
                    label: 0,
                    sent: function () {
                        if (1 & i[0]) throw i[1];
                        return i[1]
                    },
                    trys: [],
                    ops: []
                };
                return o = {
                    next: verb(0),
                    throw: verb(1),
                    return: verb(2)
                }, "function" == typeof Symbol && (o[Symbol.iterator] = function () {
                    return this
                }), o;

                function verb(o) {
                    return function (s) {
                        return function step(o) {
                            if (r) throw new TypeError("Generator is already executing.");
                            for (; a;) try {
                                if (r = 1, n && (i = 2 & o[0] ? n.return : o[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, o[1])).done) return i;
                                switch (n = 0, i && (o = [2 & o[0], i.value]), o[0]) {
                                    case 0:
                                    case 1:
                                        i = o;
                                        break;
                                    case 4:
                                        return a.label++, {
                                            value: o[1],
                                            done: !1
                                        };
                                    case 5:
                                        a.label++, n = o[1], o = [0];
                                        continue;
                                    case 7:
                                        o = a.ops.pop(), a.trys.pop();
                                        continue;
                                    default:
                                        if (!(i = a.trys, (i = i.length > 0 && i[i.length - 1]) || 6 !== o[0] && 2 !== o[0])) {
                                            a = 0;
                                            continue
                                        }
                                        if (3 === o[0] && (!i || o[1] > i[0] && o[1] < i[3])) {
                                            a.label = o[1];
                                            break
                                        }
                                        if (6 === o[0] && a.label < i[1]) {
                                            a.label = i[1], i = o;
                                            break
                                        }
                                        if (i && a.label < i[2]) {
                                            a.label = i[2], a.ops.push(o);
                                            break
                                        }
                                        i[2] && a.ops.pop(), a.trys.pop();
                                        continue
                                }
                                o = e.call(t, a)
                            } catch (t) {
                                o = [6, t], n = 0
                            } finally {
                                r = i = 0
                            }
                            if (5 & o[0]) throw o[1];
                            return {
                                value: o[0] ? o[1] : void 0,
                                done: !0
                            }
                        }([o, s])
                    }
                }
            };
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = r(274),
            a = r(636);
        e.createPrivateKey = function createPrivateKey() {
                return n(this, void 0, void 0, (function () {
                    var t;
                    return i(this, (function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, a.getRandomBytes(32)];
                            case 1:
                                return t = e.sent(), o.privateKeyVerify(t) ? [2, t] : [3, 0];
                            case 2:
                                return [2]
                        }
                    }))
                }))
            }, e.createPrivateKeySync = function createPrivateKeySync() {
                for (;;) {
                    var t = a.getRandomBytesSync(32);
                    if (o.privateKeyVerify(t)) return t
                }
            },
            function __export(t) {
                for (var r in t) e.hasOwnProperty(r) || (e[r] = t[r])
            }(r(274))
    }, function (t, e, r) {
        var n = r(2),
            i = r(19),
            o = i.getNAF,
            a = i.getJSF,
            s = i.assert;

        function BaseCurve(t, e) {
            this.type = t, this.p = new n(e.p, 16), this.red = e.prime ? n.red(e.prime) : n.mont(this.p), this.zero = new n(0).toRed(this.red), this.one = new n(1).toRed(this.red), this.two = new n(2).toRed(this.red), this.n = e.n && new n(e.n, 16), this.g = e.g && this.pointFromJSON(e.g, e.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
            var r = this.n && this.p.div(this.n);
            !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red))
        }

        function BasePoint(t, e) {
            this.curve = t, this.type = e, this.precomputed = null
        }
        t.exports = BaseCurve, BaseCurve.prototype.point = function point() {
            throw new Error("Not implemented")
        }, BaseCurve.prototype.validate = function validate() {
            throw new Error("Not implemented")
        }, BaseCurve.prototype._fixedNafMul = function _fixedNafMul(t, e) {
            s(t.precomputed);
            var r = t._getDoubles(),
                n = o(e, 1, this._bitLength),
                i = (1 << r.step + 1) - (r.step % 2 == 0 ? 2 : 1);
            i /= 3;
            for (var a = [], u = 0; u < n.length; u += r.step) {
                var c = 0;
                for (e = u + r.step - 1; e >= u; e--) c = (c << 1) + n[e];
                a.push(c)
            }
            for (var l = this.jpoint(null, null, null), h = this.jpoint(null, null, null), d = i; d > 0; d--) {
                for (u = 0; u < a.length; u++) {
                    (c = a[u]) === d ? h = h.mixedAdd(r.points[u]) : c === -d && (h = h.mixedAdd(r.points[u].neg()))
                }
                l = l.add(h)
            }
            return l.toP()
        }, BaseCurve.prototype._wnafMul = function _wnafMul(t, e) {
            var r = 4,
                n = t._getNAFPoints(r);
            r = n.wnd;
            for (var i = n.points, a = o(e, r, this._bitLength), u = this.jpoint(null, null, null), c = a.length - 1; c >= 0; c--) {
                for (e = 0; c >= 0 && 0 === a[c]; c--) e++;
                if (c >= 0 && e++, u = u.dblp(e), c < 0) break;
                var l = a[c];
                s(0 !== l), u = "affine" === t.type ? l > 0 ? u.mixedAdd(i[l - 1 >> 1]) : u.mixedAdd(i[-l - 1 >> 1].neg()) : l > 0 ? u.add(i[l - 1 >> 1]) : u.add(i[-l - 1 >> 1].neg())
            }
            return "affine" === t.type ? u.toP() : u
        }, BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(t, e, r, n, i) {
            for (var s = this._wnafT1, u = this._wnafT2, c = this._wnafT3, l = 0, h = 0; h < n; h++) {
                var d = (k = e[h])._getNAFPoints(t);
                s[h] = d.wnd, u[h] = d.points
            }
            for (h = n - 1; h >= 1; h -= 2) {
                var p = h - 1,
                    m = h;
                if (1 === s[p] && 1 === s[m]) {
                    var y = [e[p], null, null, e[m]];
                    0 === e[p].y.cmp(e[m].y) ? (y[1] = e[p].add(e[m]), y[2] = e[p].toJ().mixedAdd(e[m].neg())) : 0 === e[p].y.cmp(e[m].y.redNeg()) ? (y[1] = e[p].toJ().mixedAdd(e[m]), y[2] = e[p].add(e[m].neg())) : (y[1] = e[p].toJ().mixedAdd(e[m]), y[2] = e[p].toJ().mixedAdd(e[m].neg()));
                    var b = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                        g = a(r[p], r[m]);
                    l = Math.max(g[0].length, l), c[p] = new Array(l), c[m] = new Array(l);
                    for (var v = 0; v < l; v++) {
                        var w = 0 | g[0][v],
                            M = 0 | g[1][v];
                        c[p][v] = b[3 * (w + 1) + (M + 1)], c[m][v] = 0, u[p] = y
                    }
                } else c[p] = o(r[p], s[p], this._bitLength), c[m] = o(r[m], s[m], this._bitLength), l = Math.max(c[p].length, l), l = Math.max(c[m].length, l)
            }
            var A = this.jpoint(null, null, null),
                x = this._wnafT4;
            for (h = l; h >= 0; h--) {
                for (var B = 0; h >= 0;) {
                    var E = !0;
                    for (v = 0; v < n; v++) x[v] = 0 | c[v][h], 0 !== x[v] && (E = !1);
                    if (!E) break;
                    B++, h--
                }
                if (h >= 0 && B++, A = A.dblp(B), h < 0) break;
                for (v = 0; v < n; v++) {
                    var k, N = x[v];
                    0 !== N && (N > 0 ? k = u[v][N - 1 >> 1] : N < 0 && (k = u[v][-N - 1 >> 1].neg()), A = "affine" === k.type ? A.mixedAdd(k) : A.add(k))
                }
            }
            for (h = 0; h < n; h++) u[h] = null;
            return i ? A : A.toP()
        }, BaseCurve.BasePoint = BasePoint, BasePoint.prototype.eq = function eq() {
            throw new Error("Not implemented")
        }, BasePoint.prototype.validate = function validate() {
            return this.curve.validate(this)
        }, BaseCurve.prototype.decodePoint = function decodePoint(t, e) {
            t = i.toArray(t, e);
            var r = this.p.byteLength();
            if ((4 === t[0] || 6 === t[0] || 7 === t[0]) && t.length - 1 == 2 * r) return 6 === t[0] ? s(t[t.length - 1] % 2 == 0) : 7 === t[0] && s(t[t.length - 1] % 2 == 1), this.point(t.slice(1, 1 + r), t.slice(1 + r, 1 + 2 * r));
            if ((2 === t[0] || 3 === t[0]) && t.length - 1 === r) return this.pointFromX(t.slice(1, 1 + r), 3 === t[0]);
            throw new Error("Unknown point format")
        }, BasePoint.prototype.encodeCompressed = function encodeCompressed(t) {
            return this.encode(t, !0)
        }, BasePoint.prototype._encode = function _encode(t) {
            var e = this.curve.p.byteLength(),
                r = this.getX().toArray("be", e);
            return t ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", e))
        }, BasePoint.prototype.encode = function encode(t, e) {
            return i.encode(this._encode(e), t)
        }, BasePoint.prototype.precompute = function precompute(t) {
            if (this.precomputed) return this;
            var e = {
                doubles: null,
                naf: null,
                beta: null
            };
            return e.naf = this._getNAFPoints(8), e.doubles = this._getDoubles(4, t), e.beta = this._getBeta(), this.precomputed = e, this
        }, BasePoint.prototype._hasDoubles = function _hasDoubles(t) {
            if (!this.precomputed) return !1;
            var e = this.precomputed.doubles;
            return !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step)
        }, BasePoint.prototype._getDoubles = function _getDoubles(t, e) {
            if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
            for (var r = [this], n = this, i = 0; i < e; i += t) {
                for (var o = 0; o < t; o++) n = n.dbl();
                r.push(n)
            }
            return {
                step: t,
                points: r
            }
        }, BasePoint.prototype._getNAFPoints = function _getNAFPoints(t) {
            if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
            for (var e = [this], r = (1 << t) - 1, n = 1 === r ? null : this.dbl(), i = 1; i < r; i++) e[i] = e[i - 1].add(n);
            return {
                wnd: t,
                points: e
            }
        }, BasePoint.prototype._getBeta = function _getBeta() {
            return null
        }, BasePoint.prototype.dblp = function dblp(t) {
            for (var e = this, r = 0; r < t; r++) e = e.dbl();
            return e
        }
    }, function (t, e, r) {
        (function (t) {
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.assertIsString = e.assertIsArray = e.assertIsBuffer = e.assertIsHexString = void 0;
            var n = r(20);
            e.assertIsHexString = function (t) {
                if (!n.isHexString(t)) throw new Error("This method only supports 0x-prefixed hex strings but input was: " + t)
            }, e.assertIsBuffer = function (e) {
                if (!t.isBuffer(e)) throw new Error("This method only supports Buffer but input was: " + e)
            }, e.assertIsArray = function (t) {
                if (!Array.isArray(t)) throw new Error("This method only supports number arrays but input was: " + t)
            }, e.assertIsString = function (t) {
                if ("string" != typeof t) throw new Error("This method only supports strings but input was: " + t)
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = r(2),
            i = r(21),
            o = i.getNAF,
            a = i.getJSF,
            s = i.assert;

        function BaseCurve(t, e) {
            this.type = t, this.p = new n(e.p, 16), this.red = e.prime ? n.red(e.prime) : n.mont(this.p), this.zero = new n(0).toRed(this.red), this.one = new n(1).toRed(this.red), this.two = new n(2).toRed(this.red), this.n = e.n && new n(e.n, 16), this.g = e.g && this.pointFromJSON(e.g, e.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
            var r = this.n && this.p.div(this.n);
            !r || r.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red))
        }

        function BasePoint(t, e) {
            this.curve = t, this.type = e, this.precomputed = null
        }
        t.exports = BaseCurve, BaseCurve.prototype.point = function point() {
            throw new Error("Not implemented")
        }, BaseCurve.prototype.validate = function validate() {
            throw new Error("Not implemented")
        }, BaseCurve.prototype._fixedNafMul = function _fixedNafMul(t, e) {
            s(t.precomputed);
            var r = t._getDoubles(),
                n = o(e, 1, this._bitLength),
                i = (1 << r.step + 1) - (r.step % 2 == 0 ? 2 : 1);
            i /= 3;
            for (var a = [], u = 0; u < n.length; u += r.step) {
                var c = 0;
                for (e = u + r.step - 1; e >= u; e--) c = (c << 1) + n[e];
                a.push(c)
            }
            for (var l = this.jpoint(null, null, null), h = this.jpoint(null, null, null), d = i; d > 0; d--) {
                for (u = 0; u < a.length; u++) {
                    (c = a[u]) === d ? h = h.mixedAdd(r.points[u]) : c === -d && (h = h.mixedAdd(r.points[u].neg()))
                }
                l = l.add(h)
            }
            return l.toP()
        }, BaseCurve.prototype._wnafMul = function _wnafMul(t, e) {
            var r = 4,
                n = t._getNAFPoints(r);
            r = n.wnd;
            for (var i = n.points, a = o(e, r, this._bitLength), u = this.jpoint(null, null, null), c = a.length - 1; c >= 0; c--) {
                for (e = 0; c >= 0 && 0 === a[c]; c--) e++;
                if (c >= 0 && e++, u = u.dblp(e), c < 0) break;
                var l = a[c];
                s(0 !== l), u = "affine" === t.type ? l > 0 ? u.mixedAdd(i[l - 1 >> 1]) : u.mixedAdd(i[-l - 1 >> 1].neg()) : l > 0 ? u.add(i[l - 1 >> 1]) : u.add(i[-l - 1 >> 1].neg())
            }
            return "affine" === t.type ? u.toP() : u
        }, BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(t, e, r, n, i) {
            for (var s = this._wnafT1, u = this._wnafT2, c = this._wnafT3, l = 0, h = 0; h < n; h++) {
                var d = (k = e[h])._getNAFPoints(t);
                s[h] = d.wnd, u[h] = d.points
            }
            for (h = n - 1; h >= 1; h -= 2) {
                var p = h - 1,
                    m = h;
                if (1 === s[p] && 1 === s[m]) {
                    var y = [e[p], null, null, e[m]];
                    0 === e[p].y.cmp(e[m].y) ? (y[1] = e[p].add(e[m]), y[2] = e[p].toJ().mixedAdd(e[m].neg())) : 0 === e[p].y.cmp(e[m].y.redNeg()) ? (y[1] = e[p].toJ().mixedAdd(e[m]), y[2] = e[p].add(e[m].neg())) : (y[1] = e[p].toJ().mixedAdd(e[m]), y[2] = e[p].toJ().mixedAdd(e[m].neg()));
                    var b = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                        g = a(r[p], r[m]);
                    l = Math.max(g[0].length, l), c[p] = new Array(l), c[m] = new Array(l);
                    for (var v = 0; v < l; v++) {
                        var w = 0 | g[0][v],
                            M = 0 | g[1][v];
                        c[p][v] = b[3 * (w + 1) + (M + 1)], c[m][v] = 0, u[p] = y
                    }
                } else c[p] = o(r[p], s[p], this._bitLength), c[m] = o(r[m], s[m], this._bitLength), l = Math.max(c[p].length, l), l = Math.max(c[m].length, l)
            }
            var A = this.jpoint(null, null, null),
                x = this._wnafT4;
            for (h = l; h >= 0; h--) {
                for (var B = 0; h >= 0;) {
                    var E = !0;
                    for (v = 0; v < n; v++) x[v] = 0 | c[v][h], 0 !== x[v] && (E = !1);
                    if (!E) break;
                    B++, h--
                }
                if (h >= 0 && B++, A = A.dblp(B), h < 0) break;
                for (v = 0; v < n; v++) {
                    var k, N = x[v];
                    0 !== N && (N > 0 ? k = u[v][N - 1 >> 1] : N < 0 && (k = u[v][-N - 1 >> 1].neg()), A = "affine" === k.type ? A.mixedAdd(k) : A.add(k))
                }
            }
            for (h = 0; h < n; h++) u[h] = null;
            return i ? A : A.toP()
        }, BaseCurve.BasePoint = BasePoint, BasePoint.prototype.eq = function eq() {
            throw new Error("Not implemented")
        }, BasePoint.prototype.validate = function validate() {
            return this.curve.validate(this)
        }, BaseCurve.prototype.decodePoint = function decodePoint(t, e) {
            t = i.toArray(t, e);
            var r = this.p.byteLength();
            if ((4 === t[0] || 6 === t[0] || 7 === t[0]) && t.length - 1 == 2 * r) return 6 === t[0] ? s(t[t.length - 1] % 2 == 0) : 7 === t[0] && s(t[t.length - 1] % 2 == 1), this.point(t.slice(1, 1 + r), t.slice(1 + r, 1 + 2 * r));
            if ((2 === t[0] || 3 === t[0]) && t.length - 1 === r) return this.pointFromX(t.slice(1, 1 + r), 3 === t[0]);
            throw new Error("Unknown point format")
        }, BasePoint.prototype.encodeCompressed = function encodeCompressed(t) {
            return this.encode(t, !0)
        }, BasePoint.prototype._encode = function _encode(t) {
            var e = this.curve.p.byteLength(),
                r = this.getX().toArray("be", e);
            return t ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", e))
        }, BasePoint.prototype.encode = function encode(t, e) {
            return i.encode(this._encode(e), t)
        }, BasePoint.prototype.precompute = function precompute(t) {
            if (this.precomputed) return this;
            var e = {
                doubles: null,
                naf: null,
                beta: null
            };
            return e.naf = this._getNAFPoints(8), e.doubles = this._getDoubles(4, t), e.beta = this._getBeta(), this.precomputed = e, this
        }, BasePoint.prototype._hasDoubles = function _hasDoubles(t) {
            if (!this.precomputed) return !1;
            var e = this.precomputed.doubles;
            return !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step)
        }, BasePoint.prototype._getDoubles = function _getDoubles(t, e) {
            if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
            for (var r = [this], n = this, i = 0; i < e; i += t) {
                for (var o = 0; o < t; o++) n = n.dbl();
                r.push(n)
            }
            return {
                step: t,
                points: r
            }
        }, BasePoint.prototype._getNAFPoints = function _getNAFPoints(t) {
            if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
            for (var e = [this], r = (1 << t) - 1, n = 1 === r ? null : this.dbl(), i = 1; i < r; i++) e[i] = e[i - 1].add(n);
            return {
                wnd: t,
                points: e
            }
        }, BasePoint.prototype._getBeta = function _getBeta() {
            return null
        }, BasePoint.prototype.dblp = function dblp(t) {
            for (var e = this, r = 0; r < t; r++) e = e.dbl();
            return e
        }
    }, function (t, e, r) {
        const n = r(700),
            i = r(712);
        t.exports = {
            packageInit: (t, e) => {
                if (e = Array.prototype.slice.call(e), !t) throw new Error('You need to instantiate using the "new" keyword.');
                Object.defineProperty(t, "currentProvider", {
                    get: () => t._provider,
                    set: e => t.setProvider(e),
                    enumerable: !0,
                    configurable: !0
                }), e[0] && e[0]._requestManager ? t._requestManager = e[0]._requestManager : t._requestManager = new n.Manager(e[0], e[1]), t.givenProvider = n.Manager.givenProvider, t.providers = n.Manager.providers, t._provider = t._requestManager.provider, t.setProvider || (t.setProvider = (e, r) => (t._requestManager.setProvider(e, r), t._provider = t._requestManager.provider, !0)), t.setRequestManager = e => {
                    t._requestManager = e, t._provider = e.provider
                }, t.BatchRequest = n.BatchManager.bind(null, t._requestManager), t.extend = i(t)
            },
            addProviders: t => {
                t.givenProvider = n.Manager.givenProvider, t.providers = n.Manager.providers
            }
        }
    }, function (t, e, r) {
        (function (t) {
            ! function (t, e) {
                function assert(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }

                function inherits(t, e) {
                    t.super_ = e;
                    var TempCtor = function () {};
                    TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
                }

                function BN(t, e, r) {
                    if (BN.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                var n;
                "object" == typeof t ? t.exports = BN : e.BN = BN, BN.BN = BN, BN.wordSize = 26;
                try {
                    n = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(703).Buffer
                } catch (t) {}

                function parseHex4Bits(t, e) {
                    var r = t.charCodeAt(e);
                    return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15
                }

                function parseHexByte(t, e, r) {
                    var n = parseHex4Bits(t, r);
                    return r - 1 >= e && (n |= parseHex4Bits(t, r - 1) << 4), n
                }

                function parseBase(t, e, r, n) {
                    for (var i = 0, o = Math.min(t.length, r), a = e; a < o; a++) {
                        var s = t.charCodeAt(a) - 48;
                        i *= n, i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s
                    }
                    return i
                }
                BN.isBN = function isBN(t) {
                    return t instanceof BN || null !== t && "object" == typeof t && t.constructor.wordSize === BN.wordSize && Array.isArray(t.words)
                }, BN.max = function max(t, e) {
                    return t.cmp(e) > 0 ? t : e
                }, BN.min = function min(t, e) {
                    return t.cmp(e) < 0 ? t : e
                }, BN.prototype._init = function init(t, e, r) {
                    if ("number" == typeof t) return this._initNumber(t, e, r);
                    if ("object" == typeof t) return this._initArray(t, e, r);
                    "hex" === e && (e = 16), assert(e === (0 | e) && e >= 2 && e <= 36);
                    var n = 0;
                    "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (n++, this.negative = 1), n < t.length && (16 === e ? this._parseHex(t, n, r) : (this._parseBase(t, e, n), "le" === r && this._initArray(this.toArray(), e, r)))
                }, BN.prototype._initNumber = function _initNumber(t, e, r) {
                    t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (assert(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initArray = function _initArray(t, e, r) {
                    if (assert("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                    this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o, a = 0;
                    if ("be" === r)
                        for (n = t.length - 1, i = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    else if ("le" === r)
                        for (n = 0, i = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    return this.strip()
                }, BN.prototype._parseHex = function _parseHex(t, e, r) {
                    this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o = 0,
                        a = 0;
                    if ("be" === r)
                        for (n = t.length - 1; n >= e; n -= 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                    else
                        for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                    this.strip()
                }, BN.prototype._parseBase = function _parseBase(t, e, r) {
                    this.words = [0], this.length = 1;
                    for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                    n--, i = i / e | 0;
                    for (var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n) u = parseBase(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== a) {
                        var l = 1;
                        for (u = parseBase(t, c, t.length, e), c = 0; c < a; c++) l *= e;
                        this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                    this.strip()
                }, BN.prototype.copy = function copy(t) {
                    t.words = new Array(this.length);
                    for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                    t.length = this.length, t.negative = this.negative, t.red = this.red
                }, BN.prototype.clone = function clone() {
                    var t = new BN(null);
                    return this.copy(t), t
                }, BN.prototype._expand = function _expand(t) {
                    for (; this.length < t;) this.words[this.length++] = 0;
                    return this
                }, BN.prototype.strip = function strip() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                    return this._normSign()
                }, BN.prototype._normSign = function _normSign() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                }, BN.prototype.inspect = function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                };
                var i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    o = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    a = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function smallMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, d = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= d; p++) {
                            var m = c - p | 0;
                            l += (a = (i = 0 | t.words[m]) * (o = 0 | e.words[p]) + h) / 67108864 | 0, h = 67108863 & a
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r.strip()
                }
                BN.prototype.toString = function toString(t, e) {
                    var r;
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var n = 0, s = 0, u = 0; u < this.length; u++) {
                            var c = this.words[u],
                                l = (16777215 & (c << n | s)).toString(16);
                            r = 0 !== (s = c >>> 24 - n & 16777215) || u !== this.length - 1 ? i[6 - l.length] + l + r : l + r, (n += 2) >= 26 && (n -= 26, u--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var h = o[t],
                            d = a[t];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero();) {
                            var m = p.modn(d).toString(t);
                            r = (p = p.idivn(d)).isZero() ? m + r : i[h - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    assert(!1, "Base should be between 2 and 36")
                }, BN.prototype.toNumber = function toNumber() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, BN.prototype.toJSON = function toJSON() {
                    return this.toString(16)
                }, BN.prototype.toBuffer = function toBuffer(t, e) {
                    return assert(void 0 !== n), this.toArrayLike(n, t, e)
                }, BN.prototype.toArray = function toArray(t, e) {
                    return this.toArrayLike(Array, t, e)
                }, BN.prototype.toArrayLike = function toArrayLike(t, e, r) {
                    var n = this.byteLength(),
                        i = r || Math.max(1, n);
                    assert(n <= i, "byte array longer than desired length"), assert(i > 0, "Requested array length <= 0"), this.strip();
                    var o, a, s = "le" === e,
                        u = new t(i),
                        c = this.clone();
                    if (s) {
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[a] = o;
                        for (; a < i; a++) u[a] = 0
                    } else {
                        for (a = 0; a < i - n; a++) u[a] = 0;
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[i - a - 1] = o
                    }
                    return u
                }, Math.clz32 ? BN.prototype._countBits = function _countBits(t) {
                    return 32 - Math.clz32(t)
                } : BN.prototype._countBits = function _countBits(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, BN.prototype._zeroBits = function _zeroBits(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r
                }, BN.prototype.bitLength = function bitLength() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return 26 * (this.length - 1) + e
                }, BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8)
                }, BN.prototype.toTwos = function toTwos(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, BN.prototype.fromTwos = function fromTwos(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, BN.prototype.isNeg = function isNeg() {
                    return 0 !== this.negative
                }, BN.prototype.neg = function neg() {
                    return this.clone().ineg()
                }, BN.prototype.ineg = function ineg() {
                    return this.isZero() || (this.negative ^= 1), this
                }, BN.prototype.iuor = function iuor(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this.strip()
                }, BN.prototype.ior = function ior(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuor(t)
                }, BN.prototype.or = function or(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, BN.prototype.uor = function uor(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, BN.prototype.iuand = function iuand(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this.strip()
                }, BN.prototype.iand = function iand(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuand(t)
                }, BN.prototype.and = function and(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, BN.prototype.uand = function uand(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, BN.prototype.iuxor = function iuxor(t) {
                    var e, r;
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this.strip()
                }, BN.prototype.ixor = function ixor(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuxor(t)
                }, BN.prototype.xor = function xor(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, BN.prototype.uxor = function uxor(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, BN.prototype.inotn = function inotn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip()
                }, BN.prototype.notn = function notn(t) {
                    return this.clone().inotn(t)
                }, BN.prototype.setn = function setn(t, e) {
                    assert("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        n = t % 26;
                    return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip()
                }, BN.prototype.iadd = function iadd(t) {
                    var e, r, n;
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, BN.prototype.add = function add(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, BN.prototype.isub = function isub(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e = this.iadd(t);
                        return t.negative = 1, e._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var r, n, i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (r = this, n = t) : (r = t, n = this);
                    for (var o = 0, a = 0; a < n.length; a++) o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    for (; 0 !== o && a < r.length; a++) o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    if (0 === o && a < r.length && r !== this)
                        for (; a < r.length; a++) this.words[a] = r.words[a];
                    return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this.strip()
                }, BN.prototype.sub = function sub(t) {
                    return this.clone().isub(t)
                };
                var s = function comb10MulTo(t, e, r) {
                    var n, i, o, a = t.words,
                        s = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        h = 8191 & l,
                        d = l >>> 13,
                        p = 0 | a[1],
                        m = 8191 & p,
                        y = p >>> 13,
                        b = 0 | a[2],
                        g = 8191 & b,
                        v = b >>> 13,
                        w = 0 | a[3],
                        M = 8191 & w,
                        A = w >>> 13,
                        x = 0 | a[4],
                        B = 8191 & x,
                        E = x >>> 13,
                        k = 0 | a[5],
                        N = 8191 & k,
                        T = k >>> 13,
                        C = 0 | a[6],
                        P = 8191 & C,
                        I = C >>> 13,
                        O = 0 | a[7],
                        D = 8191 & O,
                        j = O >>> 13,
                        L = 0 | a[8],
                        U = 8191 & L,
                        H = L >>> 13,
                        q = 0 | a[9],
                        z = 8191 & q,
                        G = q >>> 13,
                        V = 0 | s[0],
                        J = 8191 & V,
                        W = V >>> 13,
                        Z = 0 | s[1],
                        X = 8191 & Z,
                        Y = Z >>> 13,
                        $ = 0 | s[2],
                        Q = 8191 & $,
                        tt = $ >>> 13,
                        et = 0 | s[3],
                        rt = 8191 & et,
                        nt = et >>> 13,
                        it = 0 | s[4],
                        ot = 8191 & it,
                        st = it >>> 13,
                        ut = 0 | s[5],
                        ct = 8191 & ut,
                        ht = ut >>> 13,
                        dt = 0 | s[6],
                        pt = 8191 & dt,
                        mt = dt >>> 13,
                        yt = 0 | s[7],
                        bt = 8191 & yt,
                        vt = yt >>> 13,
                        wt = 0 | s[8],
                        Mt = 8191 & wt,
                        _t = wt >>> 13,
                        At = 0 | s[9],
                        xt = 8191 & At,
                        Bt = At >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var Et = (c + (n = Math.imul(h, J)) | 0) + ((8191 & (i = (i = Math.imul(h, W)) + Math.imul(d, J) | 0)) << 13) | 0;
                    c = ((o = Math.imul(d, W)) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(m, J), i = (i = Math.imul(m, W)) + Math.imul(y, J) | 0, o = Math.imul(y, W);
                    var kt = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(d, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Y) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(g, J), i = (i = Math.imul(g, W)) + Math.imul(v, J) | 0, o = Math.imul(v, W), n = n + Math.imul(m, X) | 0, i = (i = i + Math.imul(m, Y) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, Y) | 0;
                    var Nt = (c + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, tt) | 0) + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(M, J), i = (i = Math.imul(M, W)) + Math.imul(A, J) | 0, o = Math.imul(A, W), n = n + Math.imul(g, X) | 0, i = (i = i + Math.imul(g, Y) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, Y) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0;
                    var St = (c + (n = n + Math.imul(h, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, nt) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, nt) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(B, J), i = (i = Math.imul(B, W)) + Math.imul(E, J) | 0, o = Math.imul(E, W), n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(g, Q) | 0, i = (i = i + Math.imul(g, tt) | 0) + Math.imul(v, Q) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                    var Tt = (c + (n = n + Math.imul(h, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, st) | 0) + Math.imul(d, ot) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, st) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(N, J), i = (i = Math.imul(N, W)) + Math.imul(T, J) | 0, o = Math.imul(T, W), n = n + Math.imul(B, X) | 0, i = (i = i + Math.imul(B, Y) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(g, rt) | 0, i = (i = i + Math.imul(g, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                    var Ct = (c + (n = n + Math.imul(h, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ht) | 0) + Math.imul(d, ct) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, ht) | 0) + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(P, J), i = (i = Math.imul(P, W)) + Math.imul(I, J) | 0, o = Math.imul(I, W), n = n + Math.imul(N, X) | 0, i = (i = i + Math.imul(N, Y) | 0) + Math.imul(T, X) | 0, o = o + Math.imul(T, Y) | 0, n = n + Math.imul(B, Q) | 0, i = (i = i + Math.imul(B, tt) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(M, rt) | 0, i = (i = i + Math.imul(M, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(g, ot) | 0, i = (i = i + Math.imul(g, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(m, ct) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, ht) | 0;
                    var Pt = (c + (n = n + Math.imul(h, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, mt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, mt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(D, J), i = (i = Math.imul(D, W)) + Math.imul(j, J) | 0, o = Math.imul(j, W), n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(N, Q) | 0, i = (i = i + Math.imul(N, tt) | 0) + Math.imul(T, Q) | 0, o = o + Math.imul(T, tt) | 0, n = n + Math.imul(B, rt) | 0, i = (i = i + Math.imul(B, nt) | 0) + Math.imul(E, rt) | 0, o = o + Math.imul(E, nt) | 0, n = n + Math.imul(M, ot) | 0, i = (i = i + Math.imul(M, st) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(g, ct) | 0, i = (i = i + Math.imul(g, ht) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(m, pt) | 0, i = (i = i + Math.imul(m, mt) | 0) + Math.imul(y, pt) | 0, o = o + Math.imul(y, mt) | 0;
                    var It = (c + (n = n + Math.imul(h, bt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, vt) | 0) + Math.imul(d, bt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, vt) | 0) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(U, J), i = (i = Math.imul(U, W)) + Math.imul(H, J) | 0, o = Math.imul(H, W), n = n + Math.imul(D, X) | 0, i = (i = i + Math.imul(D, Y) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, tt) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = (i = i + Math.imul(N, nt) | 0) + Math.imul(T, rt) | 0, o = o + Math.imul(T, nt) | 0, n = n + Math.imul(B, ot) | 0, i = (i = i + Math.imul(B, st) | 0) + Math.imul(E, ot) | 0, o = o + Math.imul(E, st) | 0, n = n + Math.imul(M, ct) | 0, i = (i = i + Math.imul(M, ht) | 0) + Math.imul(A, ct) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(g, pt) | 0, i = (i = i + Math.imul(g, mt) | 0) + Math.imul(v, pt) | 0, o = o + Math.imul(v, mt) | 0, n = n + Math.imul(m, bt) | 0, i = (i = i + Math.imul(m, vt) | 0) + Math.imul(y, bt) | 0, o = o + Math.imul(y, vt) | 0;
                    var Ot = (c + (n = n + Math.imul(h, Mt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, _t) | 0) + Math.imul(d, Mt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, _t) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(z, J), i = (i = Math.imul(z, W)) + Math.imul(G, J) | 0, o = Math.imul(G, W), n = n + Math.imul(U, X) | 0, i = (i = i + Math.imul(U, Y) | 0) + Math.imul(H, X) | 0, o = o + Math.imul(H, Y) | 0, n = n + Math.imul(D, Q) | 0, i = (i = i + Math.imul(D, tt) | 0) + Math.imul(j, Q) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(P, rt) | 0, i = (i = i + Math.imul(P, nt) | 0) + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = (i = i + Math.imul(N, st) | 0) + Math.imul(T, ot) | 0, o = o + Math.imul(T, st) | 0, n = n + Math.imul(B, ct) | 0, i = (i = i + Math.imul(B, ht) | 0) + Math.imul(E, ct) | 0, o = o + Math.imul(E, ht) | 0, n = n + Math.imul(M, pt) | 0, i = (i = i + Math.imul(M, mt) | 0) + Math.imul(A, pt) | 0, o = o + Math.imul(A, mt) | 0, n = n + Math.imul(g, bt) | 0, i = (i = i + Math.imul(g, vt) | 0) + Math.imul(v, bt) | 0, o = o + Math.imul(v, vt) | 0, n = n + Math.imul(m, Mt) | 0, i = (i = i + Math.imul(m, _t) | 0) + Math.imul(y, Mt) | 0, o = o + Math.imul(y, _t) | 0;
                    var Rt = (c + (n = n + Math.imul(h, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Bt) | 0) + Math.imul(d, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Bt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(z, X), i = (i = Math.imul(z, Y)) + Math.imul(G, X) | 0, o = Math.imul(G, Y), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, tt) | 0) + Math.imul(H, Q) | 0, o = o + Math.imul(H, tt) | 0, n = n + Math.imul(D, rt) | 0, i = (i = i + Math.imul(D, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(P, ot) | 0, i = (i = i + Math.imul(P, st) | 0) + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ct) | 0, i = (i = i + Math.imul(N, ht) | 0) + Math.imul(T, ct) | 0, o = o + Math.imul(T, ht) | 0, n = n + Math.imul(B, pt) | 0, i = (i = i + Math.imul(B, mt) | 0) + Math.imul(E, pt) | 0, o = o + Math.imul(E, mt) | 0, n = n + Math.imul(M, bt) | 0, i = (i = i + Math.imul(M, vt) | 0) + Math.imul(A, bt) | 0, o = o + Math.imul(A, vt) | 0, n = n + Math.imul(g, Mt) | 0, i = (i = i + Math.imul(g, _t) | 0) + Math.imul(v, Mt) | 0, o = o + Math.imul(v, _t) | 0;
                    var Ft = (c + (n = n + Math.imul(m, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, Bt) | 0) + Math.imul(y, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, Bt) | 0) + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(z, Q), i = (i = Math.imul(z, tt)) + Math.imul(G, Q) | 0, o = Math.imul(G, tt), n = n + Math.imul(U, rt) | 0, i = (i = i + Math.imul(U, nt) | 0) + Math.imul(H, rt) | 0, o = o + Math.imul(H, nt) | 0, n = n + Math.imul(D, ot) | 0, i = (i = i + Math.imul(D, st) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, st) | 0, n = n + Math.imul(P, ct) | 0, i = (i = i + Math.imul(P, ht) | 0) + Math.imul(I, ct) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, pt) | 0, i = (i = i + Math.imul(N, mt) | 0) + Math.imul(T, pt) | 0, o = o + Math.imul(T, mt) | 0, n = n + Math.imul(B, bt) | 0, i = (i = i + Math.imul(B, vt) | 0) + Math.imul(E, bt) | 0, o = o + Math.imul(E, vt) | 0, n = n + Math.imul(M, Mt) | 0, i = (i = i + Math.imul(M, _t) | 0) + Math.imul(A, Mt) | 0, o = o + Math.imul(A, _t) | 0;
                    var Dt = (c + (n = n + Math.imul(g, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(g, Bt) | 0) + Math.imul(v, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(v, Bt) | 0) + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(z, rt), i = (i = Math.imul(z, nt)) + Math.imul(G, rt) | 0, o = Math.imul(G, nt), n = n + Math.imul(U, ot) | 0, i = (i = i + Math.imul(U, st) | 0) + Math.imul(H, ot) | 0, o = o + Math.imul(H, st) | 0, n = n + Math.imul(D, ct) | 0, i = (i = i + Math.imul(D, ht) | 0) + Math.imul(j, ct) | 0, o = o + Math.imul(j, ht) | 0, n = n + Math.imul(P, pt) | 0, i = (i = i + Math.imul(P, mt) | 0) + Math.imul(I, pt) | 0, o = o + Math.imul(I, mt) | 0, n = n + Math.imul(N, bt) | 0, i = (i = i + Math.imul(N, vt) | 0) + Math.imul(T, bt) | 0, o = o + Math.imul(T, vt) | 0, n = n + Math.imul(B, Mt) | 0, i = (i = i + Math.imul(B, _t) | 0) + Math.imul(E, Mt) | 0, o = o + Math.imul(E, _t) | 0;
                    var jt = (c + (n = n + Math.imul(M, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, Bt) | 0) + Math.imul(A, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, Bt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(z, ot), i = (i = Math.imul(z, st)) + Math.imul(G, ot) | 0, o = Math.imul(G, st), n = n + Math.imul(U, ct) | 0, i = (i = i + Math.imul(U, ht) | 0) + Math.imul(H, ct) | 0, o = o + Math.imul(H, ht) | 0, n = n + Math.imul(D, pt) | 0, i = (i = i + Math.imul(D, mt) | 0) + Math.imul(j, pt) | 0, o = o + Math.imul(j, mt) | 0, n = n + Math.imul(P, bt) | 0, i = (i = i + Math.imul(P, vt) | 0) + Math.imul(I, bt) | 0, o = o + Math.imul(I, vt) | 0, n = n + Math.imul(N, Mt) | 0, i = (i = i + Math.imul(N, _t) | 0) + Math.imul(T, Mt) | 0, o = o + Math.imul(T, _t) | 0;
                    var Lt = (c + (n = n + Math.imul(B, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, Bt) | 0) + Math.imul(E, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, Bt) | 0) + (i >>> 13) | 0) + (Lt >>> 26) | 0, Lt &= 67108863, n = Math.imul(z, ct), i = (i = Math.imul(z, ht)) + Math.imul(G, ct) | 0, o = Math.imul(G, ht), n = n + Math.imul(U, pt) | 0, i = (i = i + Math.imul(U, mt) | 0) + Math.imul(H, pt) | 0, o = o + Math.imul(H, mt) | 0, n = n + Math.imul(D, bt) | 0, i = (i = i + Math.imul(D, vt) | 0) + Math.imul(j, bt) | 0, o = o + Math.imul(j, vt) | 0, n = n + Math.imul(P, Mt) | 0, i = (i = i + Math.imul(P, _t) | 0) + Math.imul(I, Mt) | 0, o = o + Math.imul(I, _t) | 0;
                    var Ut = (c + (n = n + Math.imul(N, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(N, Bt) | 0) + Math.imul(T, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(T, Bt) | 0) + (i >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, n = Math.imul(z, pt), i = (i = Math.imul(z, mt)) + Math.imul(G, pt) | 0, o = Math.imul(G, mt), n = n + Math.imul(U, bt) | 0, i = (i = i + Math.imul(U, vt) | 0) + Math.imul(H, bt) | 0, o = o + Math.imul(H, vt) | 0, n = n + Math.imul(D, Mt) | 0, i = (i = i + Math.imul(D, _t) | 0) + Math.imul(j, Mt) | 0, o = o + Math.imul(j, _t) | 0;
                    var Ht = (c + (n = n + Math.imul(P, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, Bt) | 0) + Math.imul(I, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, Bt) | 0) + (i >>> 13) | 0) + (Ht >>> 26) | 0, Ht &= 67108863, n = Math.imul(z, bt), i = (i = Math.imul(z, vt)) + Math.imul(G, bt) | 0, o = Math.imul(G, vt), n = n + Math.imul(U, Mt) | 0, i = (i = i + Math.imul(U, _t) | 0) + Math.imul(H, Mt) | 0, o = o + Math.imul(H, _t) | 0;
                    var qt = (c + (n = n + Math.imul(D, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(D, Bt) | 0) + Math.imul(j, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, Bt) | 0) + (i >>> 13) | 0) + (qt >>> 26) | 0, qt &= 67108863, n = Math.imul(z, Mt), i = (i = Math.imul(z, _t)) + Math.imul(G, Mt) | 0, o = Math.imul(G, _t);
                    var zt = (c + (n = n + Math.imul(U, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, Bt) | 0) + Math.imul(H, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(H, Bt) | 0) + (i >>> 13) | 0) + (zt >>> 26) | 0, zt &= 67108863;
                    var Gt = (c + (n = Math.imul(z, xt)) | 0) + ((8191 & (i = (i = Math.imul(z, Bt)) + Math.imul(G, xt) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(G, Bt)) + (i >>> 13) | 0) + (Gt >>> 26) | 0, Gt &= 67108863, u[0] = Et, u[1] = kt, u[2] = Nt, u[3] = St, u[4] = Tt, u[5] = Ct, u[6] = Pt, u[7] = It, u[8] = Ot, u[9] = Rt, u[10] = Ft, u[11] = Dt, u[12] = jt, u[13] = Lt, u[14] = Ut, u[15] = Ht, u[16] = qt, u[17] = zt, u[18] = Gt, 0 !== c && (u[19] = c, r.length++), r
                };

                function jumboMulTo(t, e, r) {
                    return (new FFTM).mulp(t, e, r)
                }

                function FFTM(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (s = smallMulTo), BN.prototype.mulTo = function mulTo(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? s(this, t, e) : r < 63 ? smallMulTo(this, t, e) : r < 1024 ? function bigMulTo(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var a = i;
                            i = 0;
                            for (var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                                var l = o - c,
                                    h = (0 | t.words[l]) * (0 | e.words[c]),
                                    d = 67108863 & h;
                                s = 67108863 & (d = d + s | 0), i += (a = (a = a + (h / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863
                            }
                            r.words[o] = s, n = a, a = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }(this, t, e) : jumboMulTo(this, t, e)
                }, FFTM.prototype.makeRBT = function makeRBT(t) {
                    for (var e = new Array(t), r = BN.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, FFTM.prototype.revBin = function revBin(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, FFTM.prototype.permute = function permute(t, e, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = e[t[a]], i[a] = r[t[a]]
                }, FFTM.prototype.transform = function transform(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var h = u, d = c, p = 0; p < a; p++) {
                                var m = r[l + p],
                                    y = n[l + p],
                                    b = r[l + p + a],
                                    g = n[l + p + a],
                                    v = h * b - d * g;
                                g = h * g + d * b, b = v, r[l + p] = m + b, n[l + p] = y + g, r[l + p + a] = m - b, n[l + p + a] = y - g, p !== s && (v = u * h - c * d, d = u * d + c * h, h = v)
                            }
                }, FFTM.prototype.guessLen13b = function guessLen13b(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, FFTM.prototype.conjugate = function conjugate(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, FFTM.prototype.normalize13b = function normalize13b(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, FFTM.prototype.convert13b = function convert13b(t, e, r, n) {
                    for (var i = 0, o = 0; o < e; o++) i += 0 | t[o], r[2 * o] = 8191 & i, i >>>= 13, r[2 * o + 1] = 8191 & i, i >>>= 13;
                    for (o = 2 * e; o < n; ++o) r[o] = 0;
                    assert(0 === i), assert(0 == (-8192 & i))
                }, FFTM.prototype.stub = function stub(t) {
                    for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, FFTM.prototype.mulp = function mulp(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = new Array(n),
                        s = new Array(n),
                        u = new Array(n),
                        c = new Array(n),
                        l = new Array(n),
                        h = new Array(n),
                        d = r.words;
                    d.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var p = 0; p < n; p++) {
                        var m = s[p] * l[p] - u[p] * h[p];
                        u[p] = s[p] * h[p] + u[p] * l[p], s[p] = m
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, d, o, n, i), this.conjugate(d, o, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                }, BN.prototype.mul = function mul(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                }, BN.prototype.mulf = function mulf(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), jumboMulTo(this, t, e)
                }, BN.prototype.imul = function imul(t) {
                    return this.clone().mulTo(t, this)
                }, BN.prototype.imuln = function imuln(t) {
                    assert("number" == typeof t), assert(t < 67108864);
                    for (var e = 0, r = 0; r < this.length; r++) {
                        var n = (0 | this.words[r]) * t,
                            i = (67108863 & n) + (67108863 & e);
                        e >>= 26, e += n / 67108864 | 0, e += i >>> 26, this.words[r] = 67108863 & i
                    }
                    return 0 !== e && (this.words[r] = e, this.length++), this
                }, BN.prototype.muln = function muln(t) {
                    return this.clone().imuln(t)
                }, BN.prototype.sqr = function sqr() {
                    return this.mul(this)
                }, BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone())
                }, BN.prototype.pow = function pow(t) {
                    var e = function toBitArray(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }(t);
                    if (0 === e.length) return new BN(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, BN.prototype.iushln = function iushln(t) {
                    assert("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        n = (t - r) / 26,
                        i = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & i,
                                s = (0 | this.words[e]) - a << r;
                            this.words[e] = s | o, o = a >>> 26 - r
                        }
                        o && (this.words[e] = o, this.length++)
                    }
                    if (0 !== n) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                        for (e = 0; e < n; e++) this.words[e] = 0;
                        this.length += n
                    }
                    return this.strip()
                }, BN.prototype.ishln = function ishln(t) {
                    return assert(0 === this.negative), this.iushln(t)
                }, BN.prototype.iushrn = function iushrn(t, e, r) {
                    var n;
                    assert("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                    var i = t % 26,
                        o = Math.min((t - i) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> i << i,
                        s = r;
                    if (n -= o, n = Math.max(0, n), s) {
                        for (var u = 0; u < o; u++) s.words[u] = this.words[u];
                        s.length = o
                    }
                    if (0 === o);
                    else if (this.length > o)
                        for (this.length -= o, u = 0; u < this.length; u++) this.words[u] = this.words[u + o];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= n); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - i | l >>> i, c = l & a
                    }
                    return s && 0 !== c && (s.words[s.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                }, BN.prototype.ishrn = function ishrn(t, e, r) {
                    return assert(0 === this.negative), this.iushrn(t, e, r)
                }, BN.prototype.shln = function shln(t) {
                    return this.clone().ishln(t)
                }, BN.prototype.ushln = function ushln(t) {
                    return this.clone().iushln(t)
                }, BN.prototype.shrn = function shrn(t) {
                    return this.clone().ishrn(t)
                }, BN.prototype.ushrn = function ushrn(t) {
                    return this.clone().iushrn(t)
                }, BN.prototype.testn = function testn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }, BN.prototype.imaskn = function imaskn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var n = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= n
                    }
                    return this.strip()
                }, BN.prototype.maskn = function maskn(t) {
                    return this.clone().imaskn(t)
                }, BN.prototype.iaddn = function iaddn(t) {
                    return assert("number" == typeof t), assert(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                }, BN.prototype._iaddn = function _iaddn(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, BN.prototype.isubn = function isubn(t) {
                    if (assert("number" == typeof t), assert(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this.strip()
                }, BN.prototype.addn = function addn(t) {
                    return this.clone().iaddn(t)
                }, BN.prototype.subn = function subn(t) {
                    return this.clone().isubn(t)
                }, BN.prototype.iabs = function iabs() {
                    return this.negative = 0, this
                }, BN.prototype.abs = function abs() {
                    return this.clone().iabs()
                }, BN.prototype._ishlnsubmul = function _ishlnsubmul(t, e, r) {
                    var n, i, o = t.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < t.length; n++) {
                        i = (0 | this.words[n + r]) + a;
                        var s = (0 | t.words[n]) * e;
                        a = ((i -= 67108863 & s) >> 26) - (s / 67108864 | 0), this.words[n + r] = 67108863 & i
                    }
                    for (; n < this.length - r; n++) a = (i = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & i;
                    if (0 === a) return this.strip();
                    for (assert(-1 === a), a = 0, n = 0; n < this.length; n++) a = (i = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & i;
                    return this.negative = 1, this.strip()
                }, BN.prototype._wordDiv = function _wordDiv(t, e) {
                    var r = (this.length, t.length),
                        n = this.clone(),
                        i = t,
                        o = 0 | i.words[i.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                    var a, s = n.length - i.length;
                    if ("mod" !== e) {
                        (a = new BN(null)).length = s + 1, a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++) a.words[u] = 0
                    }
                    var c = n.clone()._ishlnsubmul(i, 1, s);
                    0 === c.negative && (n = c, a && (a.words[s] = 1));
                    for (var l = s - 1; l >= 0; l--) {
                        var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                        for (h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;) h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                        a && (a.words[l] = h)
                    }
                    return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                        div: a || null,
                        mod: n
                    }
                }, BN.prototype.divmod = function divmod(t, e, r) {
                    return assert(!t.isZero()), this.isZero() ? {
                        div: new BN(0),
                        mod: new BN(0)
                    } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), "mod" !== e && (n = o.div.neg()), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(t)), {
                        div: n,
                        mod: i
                    }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), "mod" !== e && (n = o.div.neg()), {
                        div: n,
                        mod: o.mod
                    }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(t)), {
                        div: o.div,
                        mod: i
                    }) : t.length > this.length || this.cmp(t) < 0 ? {
                        div: new BN(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new BN(this.modn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new BN(this.modn(t.words[0]))
                    } : this._wordDiv(t, e);
                    var n, i, o
                }, BN.prototype.div = function div(t) {
                    return this.divmod(t, "div", !1).div
                }, BN.prototype.mod = function mod(t) {
                    return this.divmod(t, "mod", !1).mod
                }, BN.prototype.umod = function umod(t) {
                    return this.divmod(t, "mod", !0).mod
                }, BN.prototype.divRound = function divRound(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, BN.prototype.modn = function modn(t) {
                    assert(t <= 67108863);
                    for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) r = (e * r + (0 | this.words[n])) % t;
                    return r
                }, BN.prototype.idivn = function idivn(t) {
                    assert(t <= 67108863);
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = (0 | this.words[r]) + 67108864 * e;
                        this.words[r] = n / t | 0, e = n % t
                    }
                    return this.strip()
                }, BN.prototype.divn = function divn(t) {
                    return this.clone().idivn(t)
                }, BN.prototype.egcd = function egcd(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n = new BN(1), i = new BN(0), o = new BN(0), a = new BN(1), s = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++s;
                    for (var u = r.clone(), c = e.clone(); !e.isZero();) {
                        for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                        if (l > 0)
                            for (e.iushrn(l); l-- > 0;)(n.isOdd() || i.isOdd()) && (n.iadd(u), i.isub(c)), n.iushrn(1), i.iushrn(1);
                        for (var d = 0, p = 1; 0 == (r.words[0] & p) && d < 26; ++d, p <<= 1);
                        if (d > 0)
                            for (r.iushrn(d); d-- > 0;)(o.isOdd() || a.isOdd()) && (o.iadd(u), a.isub(c)), o.iushrn(1), a.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), n.isub(o), i.isub(a)) : (r.isub(e), o.isub(n), a.isub(i))
                    }
                    return {
                        a: o,
                        b: a,
                        gcd: r.iushln(s)
                    }
                }, BN.prototype._invmp = function _invmp(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n, i = new BN(1), o = new BN(0), a = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var s = 0, u = 1; 0 == (e.words[0] & u) && s < 26; ++s, u <<= 1);
                        if (s > 0)
                            for (e.iushrn(s); s-- > 0;) i.isOdd() && i.iadd(a), i.iushrn(1);
                        for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(a), o.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(o)) : (r.isub(e), o.isub(i))
                    }
                    return (n = 0 === e.cmpn(1) ? i : o).cmpn(0) < 0 && n.iadd(t), n
                }, BN.prototype.gcd = function gcd(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, BN.prototype.invm = function invm(t) {
                    return this.egcd(t).a.umod(t)
                }, BN.prototype.isEven = function isEven() {
                    return 0 == (1 & this.words[0])
                }, BN.prototype.isOdd = function isOdd() {
                    return 1 == (1 & this.words[0])
                }, BN.prototype.andln = function andln(t) {
                    return this.words[0] & t
                }, BN.prototype.bincn = function bincn(t) {
                    assert("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                    for (var i = n, o = r; 0 !== i && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        i = (a += i) >>> 26, a &= 67108863, this.words[o] = a
                    }
                    return 0 !== i && (this.words[o] = i, this.length++), this
                }, BN.prototype.isZero = function isZero() {
                    return 1 === this.length && 0 === this.words[0]
                }, BN.prototype.cmpn = function cmpn(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this.strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), assert(t <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        e = n === t ? 0 : n < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.cmp = function cmp(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.ucmp = function ucmp(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, BN.prototype.gtn = function gtn(t) {
                    return 1 === this.cmpn(t)
                }, BN.prototype.gt = function gt(t) {
                    return 1 === this.cmp(t)
                }, BN.prototype.gten = function gten(t) {
                    return this.cmpn(t) >= 0
                }, BN.prototype.gte = function gte(t) {
                    return this.cmp(t) >= 0
                }, BN.prototype.ltn = function ltn(t) {
                    return -1 === this.cmpn(t)
                }, BN.prototype.lt = function lt(t) {
                    return -1 === this.cmp(t)
                }, BN.prototype.lten = function lten(t) {
                    return this.cmpn(t) <= 0
                }, BN.prototype.lte = function lte(t) {
                    return this.cmp(t) <= 0
                }, BN.prototype.eqn = function eqn(t) {
                    return 0 === this.cmpn(t)
                }, BN.prototype.eq = function eq(t) {
                    return 0 === this.cmp(t)
                }, BN.red = function red(t) {
                    return new Red(t)
                }, BN.prototype.toRed = function toRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, BN.prototype.fromRed = function fromRed() {
                    return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, BN.prototype._forceRed = function _forceRed(t) {
                    return this.red = t, this
                }, BN.prototype.forceRed = function forceRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, BN.prototype.redAdd = function redAdd(t) {
                    return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, BN.prototype.redIAdd = function redIAdd(t) {
                    return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, BN.prototype.redSub = function redSub(t) {
                    return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, BN.prototype.redISub = function redISub(t) {
                    return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, BN.prototype.redShl = function redShl(t) {
                    return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, BN.prototype.redMul = function redMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, BN.prototype.redIMul = function redIMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, BN.prototype.redSqr = function redSqr() {
                    return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, BN.prototype.redISqr = function redISqr() {
                    return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, BN.prototype.redSqrt = function redSqrt() {
                    return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, BN.prototype.redInvm = function redInvm() {
                    return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, BN.prototype.redNeg = function redNeg() {
                    return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, BN.prototype.redPow = function redPow(t) {
                    return assert(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var u = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function MPrime(t, e) {
                    this.name = t, this.p = new BN(e, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function Red(t) {
                    if ("string" == typeof t) {
                        var e = BN._prime(t);
                        this.m = e.p, this.prime = e
                    } else assert(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function Mont(t) {
                    Red.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                MPrime.prototype._tmp = function _tmp() {
                    var t = new BN(null);
                    return t.words = new Array(Math.ceil(this.n / 13)), t
                }, MPrime.prototype.ireduce = function ireduce(t) {
                    var e, r = t;
                    do {
                        this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                }, MPrime.prototype.split = function split(t, e) {
                    t.iushrn(this.n, 0, e)
                }, MPrime.prototype.imulK = function imulK(t) {
                    return t.imul(this.k)
                }, inherits(K256, MPrime), K256.prototype.split = function split(t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++) e.words[n] = t.words[n];
                    if (e.length = r, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                    var i = t.words[9];
                    for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, K256.prototype.imulK = function imulK(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function imulK(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 19 * (0 | t.words[r]) + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, BN._prime = function prime(t) {
                    if (u[t]) return u[t];
                    var prime;
                    if ("k256" === t) prime = new K256;
                    else if ("p224" === t) prime = new P224;
                    else if ("p192" === t) prime = new P192;
                    else {
                        if ("p25519" !== t) throw new Error("Unknown prime " + t);
                        prime = new P25519
                    }
                    return u[t] = prime, prime
                }, Red.prototype._verify1 = function _verify1(t) {
                    assert(0 === t.negative, "red works only with positives"), assert(t.red, "red works only with red numbers")
                }, Red.prototype._verify2 = function _verify2(t, e) {
                    assert(0 == (t.negative | e.negative), "red works only with positives"), assert(t.red && t.red === e.red, "red works only with red numbers")
                }, Red.prototype.imod = function imod(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                }, Red.prototype.neg = function neg(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, Red.prototype.add = function add(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, Red.prototype.iadd = function iadd(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, Red.prototype.sub = function sub(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                }, Red.prototype.isub = function isub(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r
                }, Red.prototype.shl = function shl(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, Red.prototype.imul = function imul(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, Red.prototype.mul = function mul(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, Red.prototype.isqr = function isqr(t) {
                    return this.imul(t, t.clone())
                }, Red.prototype.sqr = function sqr(t) {
                    return this.mul(t, t)
                }, Red.prototype.sqrt = function sqrt(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (assert(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var n = this.m.subn(1), i = 0; !n.isZero() && 0 === n.andln(1);) i++, n.iushrn(1);
                    assert(!n.isZero());
                    var o = new BN(1).toRed(this),
                        a = o.redNeg(),
                        s = this.m.subn(1).iushrn(1),
                        u = this.m.bitLength();
                    for (u = new BN(2 * u * u).toRed(this); 0 !== this.pow(u, s).cmp(a);) u.redIAdd(a);
                    for (var c = this.pow(u, n), l = this.pow(t, n.addn(1).iushrn(1)), h = this.pow(t, n), d = i; 0 !== h.cmp(o);) {
                        for (var p = h, m = 0; 0 !== p.cmp(o); m++) p = p.redSqr();
                        assert(m < d);
                        var y = this.pow(c, new BN(1).iushln(d - m - 1));
                        l = l.redMul(y), c = y.redSqr(), h = h.redMul(c), d = m
                    }
                    return l
                }, Red.prototype.invm = function invm(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, Red.prototype.pow = function pow(t, e) {
                    if (e.isZero()) return new BN(1).toRed(this);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = new Array(16);
                    r[0] = new BN(1).toRed(this), r[1] = t;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], t);
                    var i = r[0],
                        o = 0,
                        a = 0,
                        s = e.bitLength() % 26;
                    for (0 === s && (s = 26), n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = s - 1; c >= 0; c--) {
                            var l = u >> c & 1;
                            i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 === ++a || 0 === n && 0 === c) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0
                        }
                        s = 26
                    }
                    return i
                }, Red.prototype.convertTo = function convertTo(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, Red.prototype.convertFrom = function convertFrom(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, BN.mont = function mont(t) {
                    return new Mont(t)
                }, inherits(Mont, Red), Mont.prototype.convertTo = function convertTo(t) {
                    return this.imod(t.ushln(this.shift))
                }, Mont.prototype.convertFrom = function convertFrom(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, Mont.prototype.imul = function imul(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.mul = function mul(t, e) {
                    if (t.isZero() || e.isZero()) return new BN(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.invm = function invm(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t, this)
        }).call(this, r(8)(t))
    }, function (t, e, r) {
        (function (t) {
            ! function (t, e) {
                function assert(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }

                function inherits(t, e) {
                    t.super_ = e;
                    var TempCtor = function () {};
                    TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
                }

                function BN(t, e, r) {
                    if (BN.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                var n;
                "object" == typeof t ? t.exports = BN : e.BN = BN, BN.BN = BN, BN.wordSize = 26;
                try {
                    n = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(718).Buffer
                } catch (t) {}

                function parseHex4Bits(t, e) {
                    var r = t.charCodeAt(e);
                    return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15
                }

                function parseHexByte(t, e, r) {
                    var n = parseHex4Bits(t, r);
                    return r - 1 >= e && (n |= parseHex4Bits(t, r - 1) << 4), n
                }

                function parseBase(t, e, r, n) {
                    for (var i = 0, o = Math.min(t.length, r), a = e; a < o; a++) {
                        var s = t.charCodeAt(a) - 48;
                        i *= n, i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s
                    }
                    return i
                }
                BN.isBN = function isBN(t) {
                    return t instanceof BN || null !== t && "object" == typeof t && t.constructor.wordSize === BN.wordSize && Array.isArray(t.words)
                }, BN.max = function max(t, e) {
                    return t.cmp(e) > 0 ? t : e
                }, BN.min = function min(t, e) {
                    return t.cmp(e) < 0 ? t : e
                }, BN.prototype._init = function init(t, e, r) {
                    if ("number" == typeof t) return this._initNumber(t, e, r);
                    if ("object" == typeof t) return this._initArray(t, e, r);
                    "hex" === e && (e = 16), assert(e === (0 | e) && e >= 2 && e <= 36);
                    var n = 0;
                    "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (n++, this.negative = 1), n < t.length && (16 === e ? this._parseHex(t, n, r) : (this._parseBase(t, e, n), "le" === r && this._initArray(this.toArray(), e, r)))
                }, BN.prototype._initNumber = function _initNumber(t, e, r) {
                    t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (assert(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initArray = function _initArray(t, e, r) {
                    if (assert("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                    this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o, a = 0;
                    if ("be" === r)
                        for (n = t.length - 1, i = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    else if ("le" === r)
                        for (n = 0, i = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    return this.strip()
                }, BN.prototype._parseHex = function _parseHex(t, e, r) {
                    this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o = 0,
                        a = 0;
                    if ("be" === r)
                        for (n = t.length - 1; n >= e; n -= 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                    else
                        for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                    this.strip()
                }, BN.prototype._parseBase = function _parseBase(t, e, r) {
                    this.words = [0], this.length = 1;
                    for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                    n--, i = i / e | 0;
                    for (var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n) u = parseBase(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== a) {
                        var l = 1;
                        for (u = parseBase(t, c, t.length, e), c = 0; c < a; c++) l *= e;
                        this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                    this.strip()
                }, BN.prototype.copy = function copy(t) {
                    t.words = new Array(this.length);
                    for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                    t.length = this.length, t.negative = this.negative, t.red = this.red
                }, BN.prototype.clone = function clone() {
                    var t = new BN(null);
                    return this.copy(t), t
                }, BN.prototype._expand = function _expand(t) {
                    for (; this.length < t;) this.words[this.length++] = 0;
                    return this
                }, BN.prototype.strip = function strip() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                    return this._normSign()
                }, BN.prototype._normSign = function _normSign() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                }, BN.prototype.inspect = function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                };
                var i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    o = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    a = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function smallMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, d = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= d; p++) {
                            var m = c - p | 0;
                            l += (a = (i = 0 | t.words[m]) * (o = 0 | e.words[p]) + h) / 67108864 | 0, h = 67108863 & a
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r.strip()
                }
                BN.prototype.toString = function toString(t, e) {
                    var r;
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var n = 0, s = 0, u = 0; u < this.length; u++) {
                            var c = this.words[u],
                                l = (16777215 & (c << n | s)).toString(16);
                            r = 0 !== (s = c >>> 24 - n & 16777215) || u !== this.length - 1 ? i[6 - l.length] + l + r : l + r, (n += 2) >= 26 && (n -= 26, u--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var h = o[t],
                            d = a[t];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero();) {
                            var m = p.modn(d).toString(t);
                            r = (p = p.idivn(d)).isZero() ? m + r : i[h - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    assert(!1, "Base should be between 2 and 36")
                }, BN.prototype.toNumber = function toNumber() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, BN.prototype.toJSON = function toJSON() {
                    return this.toString(16)
                }, BN.prototype.toBuffer = function toBuffer(t, e) {
                    return assert(void 0 !== n), this.toArrayLike(n, t, e)
                }, BN.prototype.toArray = function toArray(t, e) {
                    return this.toArrayLike(Array, t, e)
                }, BN.prototype.toArrayLike = function toArrayLike(t, e, r) {
                    var n = this.byteLength(),
                        i = r || Math.max(1, n);
                    assert(n <= i, "byte array longer than desired length"), assert(i > 0, "Requested array length <= 0"), this.strip();
                    var o, a, s = "le" === e,
                        u = new t(i),
                        c = this.clone();
                    if (s) {
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[a] = o;
                        for (; a < i; a++) u[a] = 0
                    } else {
                        for (a = 0; a < i - n; a++) u[a] = 0;
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[i - a - 1] = o
                    }
                    return u
                }, Math.clz32 ? BN.prototype._countBits = function _countBits(t) {
                    return 32 - Math.clz32(t)
                } : BN.prototype._countBits = function _countBits(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, BN.prototype._zeroBits = function _zeroBits(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r
                }, BN.prototype.bitLength = function bitLength() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return 26 * (this.length - 1) + e
                }, BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8)
                }, BN.prototype.toTwos = function toTwos(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, BN.prototype.fromTwos = function fromTwos(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, BN.prototype.isNeg = function isNeg() {
                    return 0 !== this.negative
                }, BN.prototype.neg = function neg() {
                    return this.clone().ineg()
                }, BN.prototype.ineg = function ineg() {
                    return this.isZero() || (this.negative ^= 1), this
                }, BN.prototype.iuor = function iuor(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this.strip()
                }, BN.prototype.ior = function ior(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuor(t)
                }, BN.prototype.or = function or(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, BN.prototype.uor = function uor(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, BN.prototype.iuand = function iuand(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this.strip()
                }, BN.prototype.iand = function iand(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuand(t)
                }, BN.prototype.and = function and(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, BN.prototype.uand = function uand(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, BN.prototype.iuxor = function iuxor(t) {
                    var e, r;
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this.strip()
                }, BN.prototype.ixor = function ixor(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuxor(t)
                }, BN.prototype.xor = function xor(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, BN.prototype.uxor = function uxor(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, BN.prototype.inotn = function inotn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip()
                }, BN.prototype.notn = function notn(t) {
                    return this.clone().inotn(t)
                }, BN.prototype.setn = function setn(t, e) {
                    assert("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        n = t % 26;
                    return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip()
                }, BN.prototype.iadd = function iadd(t) {
                    var e, r, n;
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, BN.prototype.add = function add(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, BN.prototype.isub = function isub(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e = this.iadd(t);
                        return t.negative = 1, e._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var r, n, i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (r = this, n = t) : (r = t, n = this);
                    for (var o = 0, a = 0; a < n.length; a++) o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    for (; 0 !== o && a < r.length; a++) o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    if (0 === o && a < r.length && r !== this)
                        for (; a < r.length; a++) this.words[a] = r.words[a];
                    return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this.strip()
                }, BN.prototype.sub = function sub(t) {
                    return this.clone().isub(t)
                };
                var s = function comb10MulTo(t, e, r) {
                    var n, i, o, a = t.words,
                        s = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        h = 8191 & l,
                        d = l >>> 13,
                        p = 0 | a[1],
                        m = 8191 & p,
                        y = p >>> 13,
                        b = 0 | a[2],
                        g = 8191 & b,
                        v = b >>> 13,
                        w = 0 | a[3],
                        M = 8191 & w,
                        A = w >>> 13,
                        x = 0 | a[4],
                        B = 8191 & x,
                        E = x >>> 13,
                        k = 0 | a[5],
                        N = 8191 & k,
                        T = k >>> 13,
                        C = 0 | a[6],
                        P = 8191 & C,
                        I = C >>> 13,
                        O = 0 | a[7],
                        D = 8191 & O,
                        j = O >>> 13,
                        L = 0 | a[8],
                        U = 8191 & L,
                        H = L >>> 13,
                        q = 0 | a[9],
                        z = 8191 & q,
                        G = q >>> 13,
                        V = 0 | s[0],
                        J = 8191 & V,
                        W = V >>> 13,
                        Z = 0 | s[1],
                        X = 8191 & Z,
                        Y = Z >>> 13,
                        $ = 0 | s[2],
                        Q = 8191 & $,
                        tt = $ >>> 13,
                        et = 0 | s[3],
                        rt = 8191 & et,
                        nt = et >>> 13,
                        it = 0 | s[4],
                        ot = 8191 & it,
                        st = it >>> 13,
                        ut = 0 | s[5],
                        ct = 8191 & ut,
                        ht = ut >>> 13,
                        dt = 0 | s[6],
                        pt = 8191 & dt,
                        mt = dt >>> 13,
                        yt = 0 | s[7],
                        bt = 8191 & yt,
                        vt = yt >>> 13,
                        wt = 0 | s[8],
                        Mt = 8191 & wt,
                        _t = wt >>> 13,
                        At = 0 | s[9],
                        xt = 8191 & At,
                        Bt = At >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var Et = (c + (n = Math.imul(h, J)) | 0) + ((8191 & (i = (i = Math.imul(h, W)) + Math.imul(d, J) | 0)) << 13) | 0;
                    c = ((o = Math.imul(d, W)) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(m, J), i = (i = Math.imul(m, W)) + Math.imul(y, J) | 0, o = Math.imul(y, W);
                    var kt = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(d, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Y) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(g, J), i = (i = Math.imul(g, W)) + Math.imul(v, J) | 0, o = Math.imul(v, W), n = n + Math.imul(m, X) | 0, i = (i = i + Math.imul(m, Y) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, Y) | 0;
                    var Nt = (c + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, tt) | 0) + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(M, J), i = (i = Math.imul(M, W)) + Math.imul(A, J) | 0, o = Math.imul(A, W), n = n + Math.imul(g, X) | 0, i = (i = i + Math.imul(g, Y) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, Y) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0;
                    var St = (c + (n = n + Math.imul(h, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, nt) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, nt) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(B, J), i = (i = Math.imul(B, W)) + Math.imul(E, J) | 0, o = Math.imul(E, W), n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(g, Q) | 0, i = (i = i + Math.imul(g, tt) | 0) + Math.imul(v, Q) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                    var Tt = (c + (n = n + Math.imul(h, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, st) | 0) + Math.imul(d, ot) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, st) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(N, J), i = (i = Math.imul(N, W)) + Math.imul(T, J) | 0, o = Math.imul(T, W), n = n + Math.imul(B, X) | 0, i = (i = i + Math.imul(B, Y) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(g, rt) | 0, i = (i = i + Math.imul(g, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                    var Ct = (c + (n = n + Math.imul(h, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ht) | 0) + Math.imul(d, ct) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, ht) | 0) + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(P, J), i = (i = Math.imul(P, W)) + Math.imul(I, J) | 0, o = Math.imul(I, W), n = n + Math.imul(N, X) | 0, i = (i = i + Math.imul(N, Y) | 0) + Math.imul(T, X) | 0, o = o + Math.imul(T, Y) | 0, n = n + Math.imul(B, Q) | 0, i = (i = i + Math.imul(B, tt) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(M, rt) | 0, i = (i = i + Math.imul(M, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(g, ot) | 0, i = (i = i + Math.imul(g, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(m, ct) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, ht) | 0;
                    var Pt = (c + (n = n + Math.imul(h, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, mt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, mt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(D, J), i = (i = Math.imul(D, W)) + Math.imul(j, J) | 0, o = Math.imul(j, W), n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(N, Q) | 0, i = (i = i + Math.imul(N, tt) | 0) + Math.imul(T, Q) | 0, o = o + Math.imul(T, tt) | 0, n = n + Math.imul(B, rt) | 0, i = (i = i + Math.imul(B, nt) | 0) + Math.imul(E, rt) | 0, o = o + Math.imul(E, nt) | 0, n = n + Math.imul(M, ot) | 0, i = (i = i + Math.imul(M, st) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(g, ct) | 0, i = (i = i + Math.imul(g, ht) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(m, pt) | 0, i = (i = i + Math.imul(m, mt) | 0) + Math.imul(y, pt) | 0, o = o + Math.imul(y, mt) | 0;
                    var It = (c + (n = n + Math.imul(h, bt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, vt) | 0) + Math.imul(d, bt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, vt) | 0) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(U, J), i = (i = Math.imul(U, W)) + Math.imul(H, J) | 0, o = Math.imul(H, W), n = n + Math.imul(D, X) | 0, i = (i = i + Math.imul(D, Y) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, tt) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = (i = i + Math.imul(N, nt) | 0) + Math.imul(T, rt) | 0, o = o + Math.imul(T, nt) | 0, n = n + Math.imul(B, ot) | 0, i = (i = i + Math.imul(B, st) | 0) + Math.imul(E, ot) | 0, o = o + Math.imul(E, st) | 0, n = n + Math.imul(M, ct) | 0, i = (i = i + Math.imul(M, ht) | 0) + Math.imul(A, ct) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(g, pt) | 0, i = (i = i + Math.imul(g, mt) | 0) + Math.imul(v, pt) | 0, o = o + Math.imul(v, mt) | 0, n = n + Math.imul(m, bt) | 0, i = (i = i + Math.imul(m, vt) | 0) + Math.imul(y, bt) | 0, o = o + Math.imul(y, vt) | 0;
                    var Ot = (c + (n = n + Math.imul(h, Mt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, _t) | 0) + Math.imul(d, Mt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, _t) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(z, J), i = (i = Math.imul(z, W)) + Math.imul(G, J) | 0, o = Math.imul(G, W), n = n + Math.imul(U, X) | 0, i = (i = i + Math.imul(U, Y) | 0) + Math.imul(H, X) | 0, o = o + Math.imul(H, Y) | 0, n = n + Math.imul(D, Q) | 0, i = (i = i + Math.imul(D, tt) | 0) + Math.imul(j, Q) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(P, rt) | 0, i = (i = i + Math.imul(P, nt) | 0) + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = (i = i + Math.imul(N, st) | 0) + Math.imul(T, ot) | 0, o = o + Math.imul(T, st) | 0, n = n + Math.imul(B, ct) | 0, i = (i = i + Math.imul(B, ht) | 0) + Math.imul(E, ct) | 0, o = o + Math.imul(E, ht) | 0, n = n + Math.imul(M, pt) | 0, i = (i = i + Math.imul(M, mt) | 0) + Math.imul(A, pt) | 0, o = o + Math.imul(A, mt) | 0, n = n + Math.imul(g, bt) | 0, i = (i = i + Math.imul(g, vt) | 0) + Math.imul(v, bt) | 0, o = o + Math.imul(v, vt) | 0, n = n + Math.imul(m, Mt) | 0, i = (i = i + Math.imul(m, _t) | 0) + Math.imul(y, Mt) | 0, o = o + Math.imul(y, _t) | 0;
                    var Rt = (c + (n = n + Math.imul(h, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Bt) | 0) + Math.imul(d, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Bt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(z, X), i = (i = Math.imul(z, Y)) + Math.imul(G, X) | 0, o = Math.imul(G, Y), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, tt) | 0) + Math.imul(H, Q) | 0, o = o + Math.imul(H, tt) | 0, n = n + Math.imul(D, rt) | 0, i = (i = i + Math.imul(D, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(P, ot) | 0, i = (i = i + Math.imul(P, st) | 0) + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ct) | 0, i = (i = i + Math.imul(N, ht) | 0) + Math.imul(T, ct) | 0, o = o + Math.imul(T, ht) | 0, n = n + Math.imul(B, pt) | 0, i = (i = i + Math.imul(B, mt) | 0) + Math.imul(E, pt) | 0, o = o + Math.imul(E, mt) | 0, n = n + Math.imul(M, bt) | 0, i = (i = i + Math.imul(M, vt) | 0) + Math.imul(A, bt) | 0, o = o + Math.imul(A, vt) | 0, n = n + Math.imul(g, Mt) | 0, i = (i = i + Math.imul(g, _t) | 0) + Math.imul(v, Mt) | 0, o = o + Math.imul(v, _t) | 0;
                    var Ft = (c + (n = n + Math.imul(m, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, Bt) | 0) + Math.imul(y, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, Bt) | 0) + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(z, Q), i = (i = Math.imul(z, tt)) + Math.imul(G, Q) | 0, o = Math.imul(G, tt), n = n + Math.imul(U, rt) | 0, i = (i = i + Math.imul(U, nt) | 0) + Math.imul(H, rt) | 0, o = o + Math.imul(H, nt) | 0, n = n + Math.imul(D, ot) | 0, i = (i = i + Math.imul(D, st) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, st) | 0, n = n + Math.imul(P, ct) | 0, i = (i = i + Math.imul(P, ht) | 0) + Math.imul(I, ct) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, pt) | 0, i = (i = i + Math.imul(N, mt) | 0) + Math.imul(T, pt) | 0, o = o + Math.imul(T, mt) | 0, n = n + Math.imul(B, bt) | 0, i = (i = i + Math.imul(B, vt) | 0) + Math.imul(E, bt) | 0, o = o + Math.imul(E, vt) | 0, n = n + Math.imul(M, Mt) | 0, i = (i = i + Math.imul(M, _t) | 0) + Math.imul(A, Mt) | 0, o = o + Math.imul(A, _t) | 0;
                    var Dt = (c + (n = n + Math.imul(g, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(g, Bt) | 0) + Math.imul(v, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(v, Bt) | 0) + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(z, rt), i = (i = Math.imul(z, nt)) + Math.imul(G, rt) | 0, o = Math.imul(G, nt), n = n + Math.imul(U, ot) | 0, i = (i = i + Math.imul(U, st) | 0) + Math.imul(H, ot) | 0, o = o + Math.imul(H, st) | 0, n = n + Math.imul(D, ct) | 0, i = (i = i + Math.imul(D, ht) | 0) + Math.imul(j, ct) | 0, o = o + Math.imul(j, ht) | 0, n = n + Math.imul(P, pt) | 0, i = (i = i + Math.imul(P, mt) | 0) + Math.imul(I, pt) | 0, o = o + Math.imul(I, mt) | 0, n = n + Math.imul(N, bt) | 0, i = (i = i + Math.imul(N, vt) | 0) + Math.imul(T, bt) | 0, o = o + Math.imul(T, vt) | 0, n = n + Math.imul(B, Mt) | 0, i = (i = i + Math.imul(B, _t) | 0) + Math.imul(E, Mt) | 0, o = o + Math.imul(E, _t) | 0;
                    var jt = (c + (n = n + Math.imul(M, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, Bt) | 0) + Math.imul(A, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, Bt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(z, ot), i = (i = Math.imul(z, st)) + Math.imul(G, ot) | 0, o = Math.imul(G, st), n = n + Math.imul(U, ct) | 0, i = (i = i + Math.imul(U, ht) | 0) + Math.imul(H, ct) | 0, o = o + Math.imul(H, ht) | 0, n = n + Math.imul(D, pt) | 0, i = (i = i + Math.imul(D, mt) | 0) + Math.imul(j, pt) | 0, o = o + Math.imul(j, mt) | 0, n = n + Math.imul(P, bt) | 0, i = (i = i + Math.imul(P, vt) | 0) + Math.imul(I, bt) | 0, o = o + Math.imul(I, vt) | 0, n = n + Math.imul(N, Mt) | 0, i = (i = i + Math.imul(N, _t) | 0) + Math.imul(T, Mt) | 0, o = o + Math.imul(T, _t) | 0;
                    var Lt = (c + (n = n + Math.imul(B, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, Bt) | 0) + Math.imul(E, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, Bt) | 0) + (i >>> 13) | 0) + (Lt >>> 26) | 0, Lt &= 67108863, n = Math.imul(z, ct), i = (i = Math.imul(z, ht)) + Math.imul(G, ct) | 0, o = Math.imul(G, ht), n = n + Math.imul(U, pt) | 0, i = (i = i + Math.imul(U, mt) | 0) + Math.imul(H, pt) | 0, o = o + Math.imul(H, mt) | 0, n = n + Math.imul(D, bt) | 0, i = (i = i + Math.imul(D, vt) | 0) + Math.imul(j, bt) | 0, o = o + Math.imul(j, vt) | 0, n = n + Math.imul(P, Mt) | 0, i = (i = i + Math.imul(P, _t) | 0) + Math.imul(I, Mt) | 0, o = o + Math.imul(I, _t) | 0;
                    var Ut = (c + (n = n + Math.imul(N, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(N, Bt) | 0) + Math.imul(T, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(T, Bt) | 0) + (i >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, n = Math.imul(z, pt), i = (i = Math.imul(z, mt)) + Math.imul(G, pt) | 0, o = Math.imul(G, mt), n = n + Math.imul(U, bt) | 0, i = (i = i + Math.imul(U, vt) | 0) + Math.imul(H, bt) | 0, o = o + Math.imul(H, vt) | 0, n = n + Math.imul(D, Mt) | 0, i = (i = i + Math.imul(D, _t) | 0) + Math.imul(j, Mt) | 0, o = o + Math.imul(j, _t) | 0;
                    var Ht = (c + (n = n + Math.imul(P, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, Bt) | 0) + Math.imul(I, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, Bt) | 0) + (i >>> 13) | 0) + (Ht >>> 26) | 0, Ht &= 67108863, n = Math.imul(z, bt), i = (i = Math.imul(z, vt)) + Math.imul(G, bt) | 0, o = Math.imul(G, vt), n = n + Math.imul(U, Mt) | 0, i = (i = i + Math.imul(U, _t) | 0) + Math.imul(H, Mt) | 0, o = o + Math.imul(H, _t) | 0;
                    var qt = (c + (n = n + Math.imul(D, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(D, Bt) | 0) + Math.imul(j, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, Bt) | 0) + (i >>> 13) | 0) + (qt >>> 26) | 0, qt &= 67108863, n = Math.imul(z, Mt), i = (i = Math.imul(z, _t)) + Math.imul(G, Mt) | 0, o = Math.imul(G, _t);
                    var zt = (c + (n = n + Math.imul(U, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, Bt) | 0) + Math.imul(H, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(H, Bt) | 0) + (i >>> 13) | 0) + (zt >>> 26) | 0, zt &= 67108863;
                    var Gt = (c + (n = Math.imul(z, xt)) | 0) + ((8191 & (i = (i = Math.imul(z, Bt)) + Math.imul(G, xt) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(G, Bt)) + (i >>> 13) | 0) + (Gt >>> 26) | 0, Gt &= 67108863, u[0] = Et, u[1] = kt, u[2] = Nt, u[3] = St, u[4] = Tt, u[5] = Ct, u[6] = Pt, u[7] = It, u[8] = Ot, u[9] = Rt, u[10] = Ft, u[11] = Dt, u[12] = jt, u[13] = Lt, u[14] = Ut, u[15] = Ht, u[16] = qt, u[17] = zt, u[18] = Gt, 0 !== c && (u[19] = c, r.length++), r
                };

                function jumboMulTo(t, e, r) {
                    return (new FFTM).mulp(t, e, r)
                }

                function FFTM(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (s = smallMulTo), BN.prototype.mulTo = function mulTo(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? s(this, t, e) : r < 63 ? smallMulTo(this, t, e) : r < 1024 ? function bigMulTo(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var a = i;
                            i = 0;
                            for (var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                                var l = o - c,
                                    h = (0 | t.words[l]) * (0 | e.words[c]),
                                    d = 67108863 & h;
                                s = 67108863 & (d = d + s | 0), i += (a = (a = a + (h / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863
                            }
                            r.words[o] = s, n = a, a = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }(this, t, e) : jumboMulTo(this, t, e)
                }, FFTM.prototype.makeRBT = function makeRBT(t) {
                    for (var e = new Array(t), r = BN.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, FFTM.prototype.revBin = function revBin(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, FFTM.prototype.permute = function permute(t, e, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = e[t[a]], i[a] = r[t[a]]
                }, FFTM.prototype.transform = function transform(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var h = u, d = c, p = 0; p < a; p++) {
                                var m = r[l + p],
                                    y = n[l + p],
                                    b = r[l + p + a],
                                    g = n[l + p + a],
                                    v = h * b - d * g;
                                g = h * g + d * b, b = v, r[l + p] = m + b, n[l + p] = y + g, r[l + p + a] = m - b, n[l + p + a] = y - g, p !== s && (v = u * h - c * d, d = u * d + c * h, h = v)
                            }
                }, FFTM.prototype.guessLen13b = function guessLen13b(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, FFTM.prototype.conjugate = function conjugate(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, FFTM.prototype.normalize13b = function normalize13b(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, FFTM.prototype.convert13b = function convert13b(t, e, r, n) {
                    for (var i = 0, o = 0; o < e; o++) i += 0 | t[o], r[2 * o] = 8191 & i, i >>>= 13, r[2 * o + 1] = 8191 & i, i >>>= 13;
                    for (o = 2 * e; o < n; ++o) r[o] = 0;
                    assert(0 === i), assert(0 == (-8192 & i))
                }, FFTM.prototype.stub = function stub(t) {
                    for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, FFTM.prototype.mulp = function mulp(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = new Array(n),
                        s = new Array(n),
                        u = new Array(n),
                        c = new Array(n),
                        l = new Array(n),
                        h = new Array(n),
                        d = r.words;
                    d.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var p = 0; p < n; p++) {
                        var m = s[p] * l[p] - u[p] * h[p];
                        u[p] = s[p] * h[p] + u[p] * l[p], s[p] = m
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, d, o, n, i), this.conjugate(d, o, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                }, BN.prototype.mul = function mul(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                }, BN.prototype.mulf = function mulf(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), jumboMulTo(this, t, e)
                }, BN.prototype.imul = function imul(t) {
                    return this.clone().mulTo(t, this)
                }, BN.prototype.imuln = function imuln(t) {
                    assert("number" == typeof t), assert(t < 67108864);
                    for (var e = 0, r = 0; r < this.length; r++) {
                        var n = (0 | this.words[r]) * t,
                            i = (67108863 & n) + (67108863 & e);
                        e >>= 26, e += n / 67108864 | 0, e += i >>> 26, this.words[r] = 67108863 & i
                    }
                    return 0 !== e && (this.words[r] = e, this.length++), this
                }, BN.prototype.muln = function muln(t) {
                    return this.clone().imuln(t)
                }, BN.prototype.sqr = function sqr() {
                    return this.mul(this)
                }, BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone())
                }, BN.prototype.pow = function pow(t) {
                    var e = function toBitArray(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }(t);
                    if (0 === e.length) return new BN(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, BN.prototype.iushln = function iushln(t) {
                    assert("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        n = (t - r) / 26,
                        i = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & i,
                                s = (0 | this.words[e]) - a << r;
                            this.words[e] = s | o, o = a >>> 26 - r
                        }
                        o && (this.words[e] = o, this.length++)
                    }
                    if (0 !== n) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                        for (e = 0; e < n; e++) this.words[e] = 0;
                        this.length += n
                    }
                    return this.strip()
                }, BN.prototype.ishln = function ishln(t) {
                    return assert(0 === this.negative), this.iushln(t)
                }, BN.prototype.iushrn = function iushrn(t, e, r) {
                    var n;
                    assert("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                    var i = t % 26,
                        o = Math.min((t - i) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> i << i,
                        s = r;
                    if (n -= o, n = Math.max(0, n), s) {
                        for (var u = 0; u < o; u++) s.words[u] = this.words[u];
                        s.length = o
                    }
                    if (0 === o);
                    else if (this.length > o)
                        for (this.length -= o, u = 0; u < this.length; u++) this.words[u] = this.words[u + o];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= n); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - i | l >>> i, c = l & a
                    }
                    return s && 0 !== c && (s.words[s.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                }, BN.prototype.ishrn = function ishrn(t, e, r) {
                    return assert(0 === this.negative), this.iushrn(t, e, r)
                }, BN.prototype.shln = function shln(t) {
                    return this.clone().ishln(t)
                }, BN.prototype.ushln = function ushln(t) {
                    return this.clone().iushln(t)
                }, BN.prototype.shrn = function shrn(t) {
                    return this.clone().ishrn(t)
                }, BN.prototype.ushrn = function ushrn(t) {
                    return this.clone().iushrn(t)
                }, BN.prototype.testn = function testn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }, BN.prototype.imaskn = function imaskn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var n = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= n
                    }
                    return this.strip()
                }, BN.prototype.maskn = function maskn(t) {
                    return this.clone().imaskn(t)
                }, BN.prototype.iaddn = function iaddn(t) {
                    return assert("number" == typeof t), assert(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                }, BN.prototype._iaddn = function _iaddn(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, BN.prototype.isubn = function isubn(t) {
                    if (assert("number" == typeof t), assert(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this.strip()
                }, BN.prototype.addn = function addn(t) {
                    return this.clone().iaddn(t)
                }, BN.prototype.subn = function subn(t) {
                    return this.clone().isubn(t)
                }, BN.prototype.iabs = function iabs() {
                    return this.negative = 0, this
                }, BN.prototype.abs = function abs() {
                    return this.clone().iabs()
                }, BN.prototype._ishlnsubmul = function _ishlnsubmul(t, e, r) {
                    var n, i, o = t.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < t.length; n++) {
                        i = (0 | this.words[n + r]) + a;
                        var s = (0 | t.words[n]) * e;
                        a = ((i -= 67108863 & s) >> 26) - (s / 67108864 | 0), this.words[n + r] = 67108863 & i
                    }
                    for (; n < this.length - r; n++) a = (i = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & i;
                    if (0 === a) return this.strip();
                    for (assert(-1 === a), a = 0, n = 0; n < this.length; n++) a = (i = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & i;
                    return this.negative = 1, this.strip()
                }, BN.prototype._wordDiv = function _wordDiv(t, e) {
                    var r = (this.length, t.length),
                        n = this.clone(),
                        i = t,
                        o = 0 | i.words[i.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                    var a, s = n.length - i.length;
                    if ("mod" !== e) {
                        (a = new BN(null)).length = s + 1, a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++) a.words[u] = 0
                    }
                    var c = n.clone()._ishlnsubmul(i, 1, s);
                    0 === c.negative && (n = c, a && (a.words[s] = 1));
                    for (var l = s - 1; l >= 0; l--) {
                        var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                        for (h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;) h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                        a && (a.words[l] = h)
                    }
                    return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                        div: a || null,
                        mod: n
                    }
                }, BN.prototype.divmod = function divmod(t, e, r) {
                    return assert(!t.isZero()), this.isZero() ? {
                        div: new BN(0),
                        mod: new BN(0)
                    } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), "mod" !== e && (n = o.div.neg()), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(t)), {
                        div: n,
                        mod: i
                    }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), "mod" !== e && (n = o.div.neg()), {
                        div: n,
                        mod: o.mod
                    }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(t)), {
                        div: o.div,
                        mod: i
                    }) : t.length > this.length || this.cmp(t) < 0 ? {
                        div: new BN(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new BN(this.modn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new BN(this.modn(t.words[0]))
                    } : this._wordDiv(t, e);
                    var n, i, o
                }, BN.prototype.div = function div(t) {
                    return this.divmod(t, "div", !1).div
                }, BN.prototype.mod = function mod(t) {
                    return this.divmod(t, "mod", !1).mod
                }, BN.prototype.umod = function umod(t) {
                    return this.divmod(t, "mod", !0).mod
                }, BN.prototype.divRound = function divRound(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, BN.prototype.modn = function modn(t) {
                    assert(t <= 67108863);
                    for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) r = (e * r + (0 | this.words[n])) % t;
                    return r
                }, BN.prototype.idivn = function idivn(t) {
                    assert(t <= 67108863);
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = (0 | this.words[r]) + 67108864 * e;
                        this.words[r] = n / t | 0, e = n % t
                    }
                    return this.strip()
                }, BN.prototype.divn = function divn(t) {
                    return this.clone().idivn(t)
                }, BN.prototype.egcd = function egcd(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n = new BN(1), i = new BN(0), o = new BN(0), a = new BN(1), s = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++s;
                    for (var u = r.clone(), c = e.clone(); !e.isZero();) {
                        for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                        if (l > 0)
                            for (e.iushrn(l); l-- > 0;)(n.isOdd() || i.isOdd()) && (n.iadd(u), i.isub(c)), n.iushrn(1), i.iushrn(1);
                        for (var d = 0, p = 1; 0 == (r.words[0] & p) && d < 26; ++d, p <<= 1);
                        if (d > 0)
                            for (r.iushrn(d); d-- > 0;)(o.isOdd() || a.isOdd()) && (o.iadd(u), a.isub(c)), o.iushrn(1), a.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), n.isub(o), i.isub(a)) : (r.isub(e), o.isub(n), a.isub(i))
                    }
                    return {
                        a: o,
                        b: a,
                        gcd: r.iushln(s)
                    }
                }, BN.prototype._invmp = function _invmp(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n, i = new BN(1), o = new BN(0), a = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var s = 0, u = 1; 0 == (e.words[0] & u) && s < 26; ++s, u <<= 1);
                        if (s > 0)
                            for (e.iushrn(s); s-- > 0;) i.isOdd() && i.iadd(a), i.iushrn(1);
                        for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(a), o.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(o)) : (r.isub(e), o.isub(i))
                    }
                    return (n = 0 === e.cmpn(1) ? i : o).cmpn(0) < 0 && n.iadd(t), n
                }, BN.prototype.gcd = function gcd(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, BN.prototype.invm = function invm(t) {
                    return this.egcd(t).a.umod(t)
                }, BN.prototype.isEven = function isEven() {
                    return 0 == (1 & this.words[0])
                }, BN.prototype.isOdd = function isOdd() {
                    return 1 == (1 & this.words[0])
                }, BN.prototype.andln = function andln(t) {
                    return this.words[0] & t
                }, BN.prototype.bincn = function bincn(t) {
                    assert("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                    for (var i = n, o = r; 0 !== i && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        i = (a += i) >>> 26, a &= 67108863, this.words[o] = a
                    }
                    return 0 !== i && (this.words[o] = i, this.length++), this
                }, BN.prototype.isZero = function isZero() {
                    return 1 === this.length && 0 === this.words[0]
                }, BN.prototype.cmpn = function cmpn(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this.strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), assert(t <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        e = n === t ? 0 : n < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.cmp = function cmp(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.ucmp = function ucmp(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, BN.prototype.gtn = function gtn(t) {
                    return 1 === this.cmpn(t)
                }, BN.prototype.gt = function gt(t) {
                    return 1 === this.cmp(t)
                }, BN.prototype.gten = function gten(t) {
                    return this.cmpn(t) >= 0
                }, BN.prototype.gte = function gte(t) {
                    return this.cmp(t) >= 0
                }, BN.prototype.ltn = function ltn(t) {
                    return -1 === this.cmpn(t)
                }, BN.prototype.lt = function lt(t) {
                    return -1 === this.cmp(t)
                }, BN.prototype.lten = function lten(t) {
                    return this.cmpn(t) <= 0
                }, BN.prototype.lte = function lte(t) {
                    return this.cmp(t) <= 0
                }, BN.prototype.eqn = function eqn(t) {
                    return 0 === this.cmpn(t)
                }, BN.prototype.eq = function eq(t) {
                    return 0 === this.cmp(t)
                }, BN.red = function red(t) {
                    return new Red(t)
                }, BN.prototype.toRed = function toRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, BN.prototype.fromRed = function fromRed() {
                    return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, BN.prototype._forceRed = function _forceRed(t) {
                    return this.red = t, this
                }, BN.prototype.forceRed = function forceRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, BN.prototype.redAdd = function redAdd(t) {
                    return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, BN.prototype.redIAdd = function redIAdd(t) {
                    return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, BN.prototype.redSub = function redSub(t) {
                    return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, BN.prototype.redISub = function redISub(t) {
                    return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, BN.prototype.redShl = function redShl(t) {
                    return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, BN.prototype.redMul = function redMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, BN.prototype.redIMul = function redIMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, BN.prototype.redSqr = function redSqr() {
                    return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, BN.prototype.redISqr = function redISqr() {
                    return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, BN.prototype.redSqrt = function redSqrt() {
                    return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, BN.prototype.redInvm = function redInvm() {
                    return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, BN.prototype.redNeg = function redNeg() {
                    return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, BN.prototype.redPow = function redPow(t) {
                    return assert(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var u = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function MPrime(t, e) {
                    this.name = t, this.p = new BN(e, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function Red(t) {
                    if ("string" == typeof t) {
                        var e = BN._prime(t);
                        this.m = e.p, this.prime = e
                    } else assert(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function Mont(t) {
                    Red.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                MPrime.prototype._tmp = function _tmp() {
                    var t = new BN(null);
                    return t.words = new Array(Math.ceil(this.n / 13)), t
                }, MPrime.prototype.ireduce = function ireduce(t) {
                    var e, r = t;
                    do {
                        this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                }, MPrime.prototype.split = function split(t, e) {
                    t.iushrn(this.n, 0, e)
                }, MPrime.prototype.imulK = function imulK(t) {
                    return t.imul(this.k)
                }, inherits(K256, MPrime), K256.prototype.split = function split(t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++) e.words[n] = t.words[n];
                    if (e.length = r, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                    var i = t.words[9];
                    for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, K256.prototype.imulK = function imulK(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function imulK(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 19 * (0 | t.words[r]) + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, BN._prime = function prime(t) {
                    if (u[t]) return u[t];
                    var prime;
                    if ("k256" === t) prime = new K256;
                    else if ("p224" === t) prime = new P224;
                    else if ("p192" === t) prime = new P192;
                    else {
                        if ("p25519" !== t) throw new Error("Unknown prime " + t);
                        prime = new P25519
                    }
                    return u[t] = prime, prime
                }, Red.prototype._verify1 = function _verify1(t) {
                    assert(0 === t.negative, "red works only with positives"), assert(t.red, "red works only with red numbers")
                }, Red.prototype._verify2 = function _verify2(t, e) {
                    assert(0 == (t.negative | e.negative), "red works only with positives"), assert(t.red && t.red === e.red, "red works only with red numbers")
                }, Red.prototype.imod = function imod(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                }, Red.prototype.neg = function neg(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, Red.prototype.add = function add(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, Red.prototype.iadd = function iadd(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, Red.prototype.sub = function sub(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                }, Red.prototype.isub = function isub(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r
                }, Red.prototype.shl = function shl(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, Red.prototype.imul = function imul(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, Red.prototype.mul = function mul(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, Red.prototype.isqr = function isqr(t) {
                    return this.imul(t, t.clone())
                }, Red.prototype.sqr = function sqr(t) {
                    return this.mul(t, t)
                }, Red.prototype.sqrt = function sqrt(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (assert(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var n = this.m.subn(1), i = 0; !n.isZero() && 0 === n.andln(1);) i++, n.iushrn(1);
                    assert(!n.isZero());
                    var o = new BN(1).toRed(this),
                        a = o.redNeg(),
                        s = this.m.subn(1).iushrn(1),
                        u = this.m.bitLength();
                    for (u = new BN(2 * u * u).toRed(this); 0 !== this.pow(u, s).cmp(a);) u.redIAdd(a);
                    for (var c = this.pow(u, n), l = this.pow(t, n.addn(1).iushrn(1)), h = this.pow(t, n), d = i; 0 !== h.cmp(o);) {
                        for (var p = h, m = 0; 0 !== p.cmp(o); m++) p = p.redSqr();
                        assert(m < d);
                        var y = this.pow(c, new BN(1).iushln(d - m - 1));
                        l = l.redMul(y), c = y.redSqr(), h = h.redMul(c), d = m
                    }
                    return l
                }, Red.prototype.invm = function invm(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, Red.prototype.pow = function pow(t, e) {
                    if (e.isZero()) return new BN(1).toRed(this);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = new Array(16);
                    r[0] = new BN(1).toRed(this), r[1] = t;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], t);
                    var i = r[0],
                        o = 0,
                        a = 0,
                        s = e.bitLength() % 26;
                    for (0 === s && (s = 26), n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = s - 1; c >= 0; c--) {
                            var l = u >> c & 1;
                            i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 === ++a || 0 === n && 0 === c) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0
                        }
                        s = 26
                    }
                    return i
                }, Red.prototype.convertTo = function convertTo(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, Red.prototype.convertFrom = function convertFrom(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, BN.mont = function mont(t) {
                    return new Mont(t)
                }, inherits(Mont, Red), Mont.prototype.convertTo = function convertTo(t) {
                    return this.imod(t.ushln(this.shift))
                }, Mont.prototype.convertFrom = function convertFrom(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, Mont.prototype.imul = function imul(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.mul = function mul(t, e) {
                    if (t.isZero() || e.isZero()) return new BN(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.invm = function invm(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t, this)
        }).call(this, r(8)(t))
    }, function (t, e, r) {
        var n = r(191),
            i = function PromiEvent(t) {
                var e, r, i = new Promise((function () {
                    e = arguments[0], r = arguments[1]
                }));
                if (t) return {
                    resolve: e,
                    reject: r,
                    eventEmitter: i
                };
                var o = new n;
                return i._events = o._events, i.emit = o.emit, i.on = o.on, i.once = o.once, i.off = o.off, i.listeners = o.listeners, i.addListener = o.addListener, i.removeListener = o.removeListener, i.removeAllListeners = o.removeAllListeners, {
                    resolve: e,
                    reject: r,
                    eventEmitter: i
                }
            };
        i.resolve = function (t) {
            var e = i(!0);
            return e.resolve(t), e.eventEmitter
        }, t.exports = i
    }, function (t) {
        t.exports = JSON.parse('{"identity":0,"ip4":4,"tcp":6,"sha1":17,"sha2-256":18,"sha2-512":19,"sha3-512":20,"sha3-384":21,"sha3-256":22,"sha3-224":23,"shake-128":24,"shake-256":25,"keccak-224":26,"keccak-256":27,"keccak-384":28,"keccak-512":29,"dccp":33,"murmur3-128":34,"murmur3-32":35,"ip6":41,"ip6zone":42,"path":47,"multicodec":48,"multihash":49,"multiaddr":50,"multibase":51,"dns":53,"dns4":54,"dns6":55,"dnsaddr":56,"protobuf":80,"cbor":81,"raw":85,"dbl-sha2-256":86,"rlp":96,"bencode":99,"dag-pb":112,"dag-cbor":113,"libp2p-key":114,"git-raw":120,"torrent-info":123,"torrent-file":124,"leofcoin-block":129,"leofcoin-tx":130,"leofcoin-pr":131,"sctp":132,"eth-block":144,"eth-block-list":145,"eth-tx-trie":146,"eth-tx":147,"eth-tx-receipt-trie":148,"eth-tx-receipt":149,"eth-state-trie":150,"eth-account-snapshot":151,"eth-storage-trie":152,"bitcoin-block":176,"bitcoin-tx":177,"zcash-block":192,"zcash-tx":193,"stellar-block":208,"stellar-tx":209,"md4":212,"md5":213,"bmt":214,"decred-block":224,"decred-tx":225,"ipld-ns":226,"ipfs-ns":227,"swarm-ns":228,"ipns-ns":229,"zeronet":230,"ed25519-pub":237,"dash-block":240,"dash-tx":241,"swarm-manifest":250,"swarm-feed":251,"udp":273,"p2p-webrtc-star":275,"p2p-webrtc-direct":276,"p2p-stardust":277,"p2p-circuit":290,"dag-json":297,"udt":301,"utp":302,"unix":400,"p2p":421,"ipfs":421,"https":443,"onion":444,"onion3":445,"garlic64":446,"garlic32":447,"tls":448,"quic":460,"ws":477,"wss":478,"p2p-websocket-star":479,"http":480,"json":512,"messagepack":513,"x11":4352,"blake2b-8":45569,"blake2b-16":45570,"blake2b-24":45571,"blake2b-32":45572,"blake2b-40":45573,"blake2b-48":45574,"blake2b-56":45575,"blake2b-64":45576,"blake2b-72":45577,"blake2b-80":45578,"blake2b-88":45579,"blake2b-96":45580,"blake2b-104":45581,"blake2b-112":45582,"blake2b-120":45583,"blake2b-128":45584,"blake2b-136":45585,"blake2b-144":45586,"blake2b-152":45587,"blake2b-160":45588,"blake2b-168":45589,"blake2b-176":45590,"blake2b-184":45591,"blake2b-192":45592,"blake2b-200":45593,"blake2b-208":45594,"blake2b-216":45595,"blake2b-224":45596,"blake2b-232":45597,"blake2b-240":45598,"blake2b-248":45599,"blake2b-256":45600,"blake2b-264":45601,"blake2b-272":45602,"blake2b-280":45603,"blake2b-288":45604,"blake2b-296":45605,"blake2b-304":45606,"blake2b-312":45607,"blake2b-320":45608,"blake2b-328":45609,"blake2b-336":45610,"blake2b-344":45611,"blake2b-352":45612,"blake2b-360":45613,"blake2b-368":45614,"blake2b-376":45615,"blake2b-384":45616,"blake2b-392":45617,"blake2b-400":45618,"blake2b-408":45619,"blake2b-416":45620,"blake2b-424":45621,"blake2b-432":45622,"blake2b-440":45623,"blake2b-448":45624,"blake2b-456":45625,"blake2b-464":45626,"blake2b-472":45627,"blake2b-480":45628,"blake2b-488":45629,"blake2b-496":45630,"blake2b-504":45631,"blake2b-512":45632,"blake2s-8":45633,"blake2s-16":45634,"blake2s-24":45635,"blake2s-32":45636,"blake2s-40":45637,"blake2s-48":45638,"blake2s-56":45639,"blake2s-64":45640,"blake2s-72":45641,"blake2s-80":45642,"blake2s-88":45643,"blake2s-96":45644,"blake2s-104":45645,"blake2s-112":45646,"blake2s-120":45647,"blake2s-128":45648,"blake2s-136":45649,"blake2s-144":45650,"blake2s-152":45651,"blake2s-160":45652,"blake2s-168":45653,"blake2s-176":45654,"blake2s-184":45655,"blake2s-192":45656,"blake2s-200":45657,"blake2s-208":45658,"blake2s-216":45659,"blake2s-224":45660,"blake2s-232":45661,"blake2s-240":45662,"blake2s-248":45663,"blake2s-256":45664,"skein256-8":45825,"skein256-16":45826,"skein256-24":45827,"skein256-32":45828,"skein256-40":45829,"skein256-48":45830,"skein256-56":45831,"skein256-64":45832,"skein256-72":45833,"skein256-80":45834,"skein256-88":45835,"skein256-96":45836,"skein256-104":45837,"skein256-112":45838,"skein256-120":45839,"skein256-128":45840,"skein256-136":45841,"skein256-144":45842,"skein256-152":45843,"skein256-160":45844,"skein256-168":45845,"skein256-176":45846,"skein256-184":45847,"skein256-192":45848,"skein256-200":45849,"skein256-208":45850,"skein256-216":45851,"skein256-224":45852,"skein256-232":45853,"skein256-240":45854,"skein256-248":45855,"skein256-256":45856,"skein512-8":45857,"skein512-16":45858,"skein512-24":45859,"skein512-32":45860,"skein512-40":45861,"skein512-48":45862,"skein512-56":45863,"skein512-64":45864,"skein512-72":45865,"skein512-80":45866,"skein512-88":45867,"skein512-96":45868,"skein512-104":45869,"skein512-112":45870,"skein512-120":45871,"skein512-128":45872,"skein512-136":45873,"skein512-144":45874,"skein512-152":45875,"skein512-160":45876,"skein512-168":45877,"skein512-176":45878,"skein512-184":45879,"skein512-192":45880,"skein512-200":45881,"skein512-208":45882,"skein512-216":45883,"skein512-224":45884,"skein512-232":45885,"skein512-240":45886,"skein512-248":45887,"skein512-256":45888,"skein512-264":45889,"skein512-272":45890,"skein512-280":45891,"skein512-288":45892,"skein512-296":45893,"skein512-304":45894,"skein512-312":45895,"skein512-320":45896,"skein512-328":45897,"skein512-336":45898,"skein512-344":45899,"skein512-352":45900,"skein512-360":45901,"skein512-368":45902,"skein512-376":45903,"skein512-384":45904,"skein512-392":45905,"skein512-400":45906,"skein512-408":45907,"skein512-416":45908,"skein512-424":45909,"skein512-432":45910,"skein512-440":45911,"skein512-448":45912,"skein512-456":45913,"skein512-464":45914,"skein512-472":45915,"skein512-480":45916,"skein512-488":45917,"skein512-496":45918,"skein512-504":45919,"skein512-512":45920,"skein1024-8":45921,"skein1024-16":45922,"skein1024-24":45923,"skein1024-32":45924,"skein1024-40":45925,"skein1024-48":45926,"skein1024-56":45927,"skein1024-64":45928,"skein1024-72":45929,"skein1024-80":45930,"skein1024-88":45931,"skein1024-96":45932,"skein1024-104":45933,"skein1024-112":45934,"skein1024-120":45935,"skein1024-128":45936,"skein1024-136":45937,"skein1024-144":45938,"skein1024-152":45939,"skein1024-160":45940,"skein1024-168":45941,"skein1024-176":45942,"skein1024-184":45943,"skein1024-192":45944,"skein1024-200":45945,"skein1024-208":45946,"skein1024-216":45947,"skein1024-224":45948,"skein1024-232":45949,"skein1024-240":45950,"skein1024-248":45951,"skein1024-256":45952,"skein1024-264":45953,"skein1024-272":45954,"skein1024-280":45955,"skein1024-288":45956,"skein1024-296":45957,"skein1024-304":45958,"skein1024-312":45959,"skein1024-320":45960,"skein1024-328":45961,"skein1024-336":45962,"skein1024-344":45963,"skein1024-352":45964,"skein1024-360":45965,"skein1024-368":45966,"skein1024-376":45967,"skein1024-384":45968,"skein1024-392":45969,"skein1024-400":45970,"skein1024-408":45971,"skein1024-416":45972,"skein1024-424":45973,"skein1024-432":45974,"skein1024-440":45975,"skein1024-448":45976,"skein1024-456":45977,"skein1024-464":45978,"skein1024-472":45979,"skein1024-480":45980,"skein1024-488":45981,"skein1024-496":45982,"skein1024-504":45983,"skein1024-512":45984,"skein1024-520":45985,"skein1024-528":45986,"skein1024-536":45987,"skein1024-544":45988,"skein1024-552":45989,"skein1024-560":45990,"skein1024-568":45991,"skein1024-576":45992,"skein1024-584":45993,"skein1024-592":45994,"skein1024-600":45995,"skein1024-608":45996,"skein1024-616":45997,"skein1024-624":45998,"skein1024-632":45999,"skein1024-640":46000,"skein1024-648":46001,"skein1024-656":46002,"skein1024-664":46003,"skein1024-672":46004,"skein1024-680":46005,"skein1024-688":46006,"skein1024-696":46007,"skein1024-704":46008,"skein1024-712":46009,"skein1024-720":46010,"skein1024-728":46011,"skein1024-736":46012,"skein1024-744":46013,"skein1024-752":46014,"skein1024-760":46015,"skein1024-768":46016,"skein1024-776":46017,"skein1024-784":46018,"skein1024-792":46019,"skein1024-800":46020,"skein1024-808":46021,"skein1024-816":46022,"skein1024-824":46023,"skein1024-832":46024,"skein1024-840":46025,"skein1024-848":46026,"skein1024-856":46027,"skein1024-864":46028,"skein1024-872":46029,"skein1024-880":46030,"skein1024-888":46031,"skein1024-896":46032,"skein1024-904":46033,"skein1024-912":46034,"skein1024-920":46035,"skein1024-928":46036,"skein1024-936":46037,"skein1024-944":46038,"skein1024-952":46039,"skein1024-960":46040,"skein1024-968":46041,"skein1024-976":46042,"skein1024-984":46043,"skein1024-992":46044,"skein1024-1000":46045,"skein1024-1008":46046,"skein1024-1016":46047,"skein1024-1024":46048,"holochain-adr-v0":8417572,"holochain-adr-v1":8483108,"holochain-key-v0":9728292,"holochain-key-v1":9793828,"holochain-sig-v0":10645796,"holochain-sig-v1":10711332}')
    }, function (t, e, r) {
        (function (t) {
            ! function (t, e) {
                function assert(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }

                function inherits(t, e) {
                    t.super_ = e;
                    var TempCtor = function () {};
                    TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
                }

                function BN(t, e, r) {
                    if (BN.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                var n;
                "object" == typeof t ? t.exports = BN : e.BN = BN, BN.BN = BN, BN.wordSize = 26;
                try {
                    n = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(780).Buffer
                } catch (t) {}

                function parseHex4Bits(t, e) {
                    var r = t.charCodeAt(e);
                    return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15
                }

                function parseHexByte(t, e, r) {
                    var n = parseHex4Bits(t, r);
                    return r - 1 >= e && (n |= parseHex4Bits(t, r - 1) << 4), n
                }

                function parseBase(t, e, r, n) {
                    for (var i = 0, o = Math.min(t.length, r), a = e; a < o; a++) {
                        var s = t.charCodeAt(a) - 48;
                        i *= n, i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s
                    }
                    return i
                }
                BN.isBN = function isBN(t) {
                    return t instanceof BN || null !== t && "object" == typeof t && t.constructor.wordSize === BN.wordSize && Array.isArray(t.words)
                }, BN.max = function max(t, e) {
                    return t.cmp(e) > 0 ? t : e
                }, BN.min = function min(t, e) {
                    return t.cmp(e) < 0 ? t : e
                }, BN.prototype._init = function init(t, e, r) {
                    if ("number" == typeof t) return this._initNumber(t, e, r);
                    if ("object" == typeof t) return this._initArray(t, e, r);
                    "hex" === e && (e = 16), assert(e === (0 | e) && e >= 2 && e <= 36);
                    var n = 0;
                    "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (n++, this.negative = 1), n < t.length && (16 === e ? this._parseHex(t, n, r) : (this._parseBase(t, e, n), "le" === r && this._initArray(this.toArray(), e, r)))
                }, BN.prototype._initNumber = function _initNumber(t, e, r) {
                    t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (assert(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initArray = function _initArray(t, e, r) {
                    if (assert("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                    this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o, a = 0;
                    if ("be" === r)
                        for (n = t.length - 1, i = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    else if ("le" === r)
                        for (n = 0, i = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    return this.strip()
                }, BN.prototype._parseHex = function _parseHex(t, e, r) {
                    this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o = 0,
                        a = 0;
                    if ("be" === r)
                        for (n = t.length - 1; n >= e; n -= 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                    else
                        for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                    this.strip()
                }, BN.prototype._parseBase = function _parseBase(t, e, r) {
                    this.words = [0], this.length = 1;
                    for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                    n--, i = i / e | 0;
                    for (var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n) u = parseBase(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== a) {
                        var l = 1;
                        for (u = parseBase(t, c, t.length, e), c = 0; c < a; c++) l *= e;
                        this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                    this.strip()
                }, BN.prototype.copy = function copy(t) {
                    t.words = new Array(this.length);
                    for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                    t.length = this.length, t.negative = this.negative, t.red = this.red
                }, BN.prototype.clone = function clone() {
                    var t = new BN(null);
                    return this.copy(t), t
                }, BN.prototype._expand = function _expand(t) {
                    for (; this.length < t;) this.words[this.length++] = 0;
                    return this
                }, BN.prototype.strip = function strip() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                    return this._normSign()
                }, BN.prototype._normSign = function _normSign() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                }, BN.prototype.inspect = function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                };
                var i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    o = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    a = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function smallMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, d = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= d; p++) {
                            var m = c - p | 0;
                            l += (a = (i = 0 | t.words[m]) * (o = 0 | e.words[p]) + h) / 67108864 | 0, h = 67108863 & a
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r.strip()
                }
                BN.prototype.toString = function toString(t, e) {
                    var r;
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var n = 0, s = 0, u = 0; u < this.length; u++) {
                            var c = this.words[u],
                                l = (16777215 & (c << n | s)).toString(16);
                            r = 0 !== (s = c >>> 24 - n & 16777215) || u !== this.length - 1 ? i[6 - l.length] + l + r : l + r, (n += 2) >= 26 && (n -= 26, u--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var h = o[t],
                            d = a[t];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero();) {
                            var m = p.modn(d).toString(t);
                            r = (p = p.idivn(d)).isZero() ? m + r : i[h - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    assert(!1, "Base should be between 2 and 36")
                }, BN.prototype.toNumber = function toNumber() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, BN.prototype.toJSON = function toJSON() {
                    return this.toString(16)
                }, BN.prototype.toBuffer = function toBuffer(t, e) {
                    return assert(void 0 !== n), this.toArrayLike(n, t, e)
                }, BN.prototype.toArray = function toArray(t, e) {
                    return this.toArrayLike(Array, t, e)
                }, BN.prototype.toArrayLike = function toArrayLike(t, e, r) {
                    var n = this.byteLength(),
                        i = r || Math.max(1, n);
                    assert(n <= i, "byte array longer than desired length"), assert(i > 0, "Requested array length <= 0"), this.strip();
                    var o, a, s = "le" === e,
                        u = new t(i),
                        c = this.clone();
                    if (s) {
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[a] = o;
                        for (; a < i; a++) u[a] = 0
                    } else {
                        for (a = 0; a < i - n; a++) u[a] = 0;
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[i - a - 1] = o
                    }
                    return u
                }, Math.clz32 ? BN.prototype._countBits = function _countBits(t) {
                    return 32 - Math.clz32(t)
                } : BN.prototype._countBits = function _countBits(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, BN.prototype._zeroBits = function _zeroBits(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r
                }, BN.prototype.bitLength = function bitLength() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return 26 * (this.length - 1) + e
                }, BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8)
                }, BN.prototype.toTwos = function toTwos(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, BN.prototype.fromTwos = function fromTwos(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, BN.prototype.isNeg = function isNeg() {
                    return 0 !== this.negative
                }, BN.prototype.neg = function neg() {
                    return this.clone().ineg()
                }, BN.prototype.ineg = function ineg() {
                    return this.isZero() || (this.negative ^= 1), this
                }, BN.prototype.iuor = function iuor(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this.strip()
                }, BN.prototype.ior = function ior(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuor(t)
                }, BN.prototype.or = function or(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, BN.prototype.uor = function uor(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, BN.prototype.iuand = function iuand(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this.strip()
                }, BN.prototype.iand = function iand(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuand(t)
                }, BN.prototype.and = function and(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, BN.prototype.uand = function uand(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, BN.prototype.iuxor = function iuxor(t) {
                    var e, r;
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this.strip()
                }, BN.prototype.ixor = function ixor(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuxor(t)
                }, BN.prototype.xor = function xor(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, BN.prototype.uxor = function uxor(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, BN.prototype.inotn = function inotn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip()
                }, BN.prototype.notn = function notn(t) {
                    return this.clone().inotn(t)
                }, BN.prototype.setn = function setn(t, e) {
                    assert("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        n = t % 26;
                    return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip()
                }, BN.prototype.iadd = function iadd(t) {
                    var e, r, n;
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, BN.prototype.add = function add(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, BN.prototype.isub = function isub(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e = this.iadd(t);
                        return t.negative = 1, e._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var r, n, i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (r = this, n = t) : (r = t, n = this);
                    for (var o = 0, a = 0; a < n.length; a++) o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    for (; 0 !== o && a < r.length; a++) o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    if (0 === o && a < r.length && r !== this)
                        for (; a < r.length; a++) this.words[a] = r.words[a];
                    return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this.strip()
                }, BN.prototype.sub = function sub(t) {
                    return this.clone().isub(t)
                };
                var s = function comb10MulTo(t, e, r) {
                    var n, i, o, a = t.words,
                        s = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        h = 8191 & l,
                        d = l >>> 13,
                        p = 0 | a[1],
                        m = 8191 & p,
                        y = p >>> 13,
                        b = 0 | a[2],
                        g = 8191 & b,
                        v = b >>> 13,
                        w = 0 | a[3],
                        M = 8191 & w,
                        A = w >>> 13,
                        x = 0 | a[4],
                        B = 8191 & x,
                        E = x >>> 13,
                        k = 0 | a[5],
                        N = 8191 & k,
                        T = k >>> 13,
                        C = 0 | a[6],
                        P = 8191 & C,
                        I = C >>> 13,
                        O = 0 | a[7],
                        D = 8191 & O,
                        j = O >>> 13,
                        L = 0 | a[8],
                        U = 8191 & L,
                        H = L >>> 13,
                        q = 0 | a[9],
                        z = 8191 & q,
                        G = q >>> 13,
                        V = 0 | s[0],
                        J = 8191 & V,
                        W = V >>> 13,
                        Z = 0 | s[1],
                        X = 8191 & Z,
                        Y = Z >>> 13,
                        $ = 0 | s[2],
                        Q = 8191 & $,
                        tt = $ >>> 13,
                        et = 0 | s[3],
                        rt = 8191 & et,
                        nt = et >>> 13,
                        it = 0 | s[4],
                        ot = 8191 & it,
                        st = it >>> 13,
                        ut = 0 | s[5],
                        ct = 8191 & ut,
                        ht = ut >>> 13,
                        dt = 0 | s[6],
                        pt = 8191 & dt,
                        mt = dt >>> 13,
                        yt = 0 | s[7],
                        bt = 8191 & yt,
                        vt = yt >>> 13,
                        wt = 0 | s[8],
                        Mt = 8191 & wt,
                        _t = wt >>> 13,
                        At = 0 | s[9],
                        xt = 8191 & At,
                        Bt = At >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var Et = (c + (n = Math.imul(h, J)) | 0) + ((8191 & (i = (i = Math.imul(h, W)) + Math.imul(d, J) | 0)) << 13) | 0;
                    c = ((o = Math.imul(d, W)) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(m, J), i = (i = Math.imul(m, W)) + Math.imul(y, J) | 0, o = Math.imul(y, W);
                    var kt = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(d, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Y) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(g, J), i = (i = Math.imul(g, W)) + Math.imul(v, J) | 0, o = Math.imul(v, W), n = n + Math.imul(m, X) | 0, i = (i = i + Math.imul(m, Y) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, Y) | 0;
                    var Nt = (c + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, tt) | 0) + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(M, J), i = (i = Math.imul(M, W)) + Math.imul(A, J) | 0, o = Math.imul(A, W), n = n + Math.imul(g, X) | 0, i = (i = i + Math.imul(g, Y) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, Y) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0;
                    var St = (c + (n = n + Math.imul(h, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, nt) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, nt) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(B, J), i = (i = Math.imul(B, W)) + Math.imul(E, J) | 0, o = Math.imul(E, W), n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(g, Q) | 0, i = (i = i + Math.imul(g, tt) | 0) + Math.imul(v, Q) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                    var Tt = (c + (n = n + Math.imul(h, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, st) | 0) + Math.imul(d, ot) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, st) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(N, J), i = (i = Math.imul(N, W)) + Math.imul(T, J) | 0, o = Math.imul(T, W), n = n + Math.imul(B, X) | 0, i = (i = i + Math.imul(B, Y) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(g, rt) | 0, i = (i = i + Math.imul(g, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                    var Ct = (c + (n = n + Math.imul(h, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ht) | 0) + Math.imul(d, ct) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, ht) | 0) + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(P, J), i = (i = Math.imul(P, W)) + Math.imul(I, J) | 0, o = Math.imul(I, W), n = n + Math.imul(N, X) | 0, i = (i = i + Math.imul(N, Y) | 0) + Math.imul(T, X) | 0, o = o + Math.imul(T, Y) | 0, n = n + Math.imul(B, Q) | 0, i = (i = i + Math.imul(B, tt) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(M, rt) | 0, i = (i = i + Math.imul(M, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(g, ot) | 0, i = (i = i + Math.imul(g, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(m, ct) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, ht) | 0;
                    var Pt = (c + (n = n + Math.imul(h, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, mt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, mt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(D, J), i = (i = Math.imul(D, W)) + Math.imul(j, J) | 0, o = Math.imul(j, W), n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(N, Q) | 0, i = (i = i + Math.imul(N, tt) | 0) + Math.imul(T, Q) | 0, o = o + Math.imul(T, tt) | 0, n = n + Math.imul(B, rt) | 0, i = (i = i + Math.imul(B, nt) | 0) + Math.imul(E, rt) | 0, o = o + Math.imul(E, nt) | 0, n = n + Math.imul(M, ot) | 0, i = (i = i + Math.imul(M, st) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(g, ct) | 0, i = (i = i + Math.imul(g, ht) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(m, pt) | 0, i = (i = i + Math.imul(m, mt) | 0) + Math.imul(y, pt) | 0, o = o + Math.imul(y, mt) | 0;
                    var It = (c + (n = n + Math.imul(h, bt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, vt) | 0) + Math.imul(d, bt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, vt) | 0) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(U, J), i = (i = Math.imul(U, W)) + Math.imul(H, J) | 0, o = Math.imul(H, W), n = n + Math.imul(D, X) | 0, i = (i = i + Math.imul(D, Y) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, tt) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = (i = i + Math.imul(N, nt) | 0) + Math.imul(T, rt) | 0, o = o + Math.imul(T, nt) | 0, n = n + Math.imul(B, ot) | 0, i = (i = i + Math.imul(B, st) | 0) + Math.imul(E, ot) | 0, o = o + Math.imul(E, st) | 0, n = n + Math.imul(M, ct) | 0, i = (i = i + Math.imul(M, ht) | 0) + Math.imul(A, ct) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(g, pt) | 0, i = (i = i + Math.imul(g, mt) | 0) + Math.imul(v, pt) | 0, o = o + Math.imul(v, mt) | 0, n = n + Math.imul(m, bt) | 0, i = (i = i + Math.imul(m, vt) | 0) + Math.imul(y, bt) | 0, o = o + Math.imul(y, vt) | 0;
                    var Ot = (c + (n = n + Math.imul(h, Mt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, _t) | 0) + Math.imul(d, Mt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, _t) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(z, J), i = (i = Math.imul(z, W)) + Math.imul(G, J) | 0, o = Math.imul(G, W), n = n + Math.imul(U, X) | 0, i = (i = i + Math.imul(U, Y) | 0) + Math.imul(H, X) | 0, o = o + Math.imul(H, Y) | 0, n = n + Math.imul(D, Q) | 0, i = (i = i + Math.imul(D, tt) | 0) + Math.imul(j, Q) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(P, rt) | 0, i = (i = i + Math.imul(P, nt) | 0) + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = (i = i + Math.imul(N, st) | 0) + Math.imul(T, ot) | 0, o = o + Math.imul(T, st) | 0, n = n + Math.imul(B, ct) | 0, i = (i = i + Math.imul(B, ht) | 0) + Math.imul(E, ct) | 0, o = o + Math.imul(E, ht) | 0, n = n + Math.imul(M, pt) | 0, i = (i = i + Math.imul(M, mt) | 0) + Math.imul(A, pt) | 0, o = o + Math.imul(A, mt) | 0, n = n + Math.imul(g, bt) | 0, i = (i = i + Math.imul(g, vt) | 0) + Math.imul(v, bt) | 0, o = o + Math.imul(v, vt) | 0, n = n + Math.imul(m, Mt) | 0, i = (i = i + Math.imul(m, _t) | 0) + Math.imul(y, Mt) | 0, o = o + Math.imul(y, _t) | 0;
                    var Rt = (c + (n = n + Math.imul(h, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Bt) | 0) + Math.imul(d, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Bt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(z, X), i = (i = Math.imul(z, Y)) + Math.imul(G, X) | 0, o = Math.imul(G, Y), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, tt) | 0) + Math.imul(H, Q) | 0, o = o + Math.imul(H, tt) | 0, n = n + Math.imul(D, rt) | 0, i = (i = i + Math.imul(D, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(P, ot) | 0, i = (i = i + Math.imul(P, st) | 0) + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ct) | 0, i = (i = i + Math.imul(N, ht) | 0) + Math.imul(T, ct) | 0, o = o + Math.imul(T, ht) | 0, n = n + Math.imul(B, pt) | 0, i = (i = i + Math.imul(B, mt) | 0) + Math.imul(E, pt) | 0, o = o + Math.imul(E, mt) | 0, n = n + Math.imul(M, bt) | 0, i = (i = i + Math.imul(M, vt) | 0) + Math.imul(A, bt) | 0, o = o + Math.imul(A, vt) | 0, n = n + Math.imul(g, Mt) | 0, i = (i = i + Math.imul(g, _t) | 0) + Math.imul(v, Mt) | 0, o = o + Math.imul(v, _t) | 0;
                    var Ft = (c + (n = n + Math.imul(m, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, Bt) | 0) + Math.imul(y, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, Bt) | 0) + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(z, Q), i = (i = Math.imul(z, tt)) + Math.imul(G, Q) | 0, o = Math.imul(G, tt), n = n + Math.imul(U, rt) | 0, i = (i = i + Math.imul(U, nt) | 0) + Math.imul(H, rt) | 0, o = o + Math.imul(H, nt) | 0, n = n + Math.imul(D, ot) | 0, i = (i = i + Math.imul(D, st) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, st) | 0, n = n + Math.imul(P, ct) | 0, i = (i = i + Math.imul(P, ht) | 0) + Math.imul(I, ct) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, pt) | 0, i = (i = i + Math.imul(N, mt) | 0) + Math.imul(T, pt) | 0, o = o + Math.imul(T, mt) | 0, n = n + Math.imul(B, bt) | 0, i = (i = i + Math.imul(B, vt) | 0) + Math.imul(E, bt) | 0, o = o + Math.imul(E, vt) | 0, n = n + Math.imul(M, Mt) | 0, i = (i = i + Math.imul(M, _t) | 0) + Math.imul(A, Mt) | 0, o = o + Math.imul(A, _t) | 0;
                    var Dt = (c + (n = n + Math.imul(g, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(g, Bt) | 0) + Math.imul(v, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(v, Bt) | 0) + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(z, rt), i = (i = Math.imul(z, nt)) + Math.imul(G, rt) | 0, o = Math.imul(G, nt), n = n + Math.imul(U, ot) | 0, i = (i = i + Math.imul(U, st) | 0) + Math.imul(H, ot) | 0, o = o + Math.imul(H, st) | 0, n = n + Math.imul(D, ct) | 0, i = (i = i + Math.imul(D, ht) | 0) + Math.imul(j, ct) | 0, o = o + Math.imul(j, ht) | 0, n = n + Math.imul(P, pt) | 0, i = (i = i + Math.imul(P, mt) | 0) + Math.imul(I, pt) | 0, o = o + Math.imul(I, mt) | 0, n = n + Math.imul(N, bt) | 0, i = (i = i + Math.imul(N, vt) | 0) + Math.imul(T, bt) | 0, o = o + Math.imul(T, vt) | 0, n = n + Math.imul(B, Mt) | 0, i = (i = i + Math.imul(B, _t) | 0) + Math.imul(E, Mt) | 0, o = o + Math.imul(E, _t) | 0;
                    var jt = (c + (n = n + Math.imul(M, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, Bt) | 0) + Math.imul(A, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, Bt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(z, ot), i = (i = Math.imul(z, st)) + Math.imul(G, ot) | 0, o = Math.imul(G, st), n = n + Math.imul(U, ct) | 0, i = (i = i + Math.imul(U, ht) | 0) + Math.imul(H, ct) | 0, o = o + Math.imul(H, ht) | 0, n = n + Math.imul(D, pt) | 0, i = (i = i + Math.imul(D, mt) | 0) + Math.imul(j, pt) | 0, o = o + Math.imul(j, mt) | 0, n = n + Math.imul(P, bt) | 0, i = (i = i + Math.imul(P, vt) | 0) + Math.imul(I, bt) | 0, o = o + Math.imul(I, vt) | 0, n = n + Math.imul(N, Mt) | 0, i = (i = i + Math.imul(N, _t) | 0) + Math.imul(T, Mt) | 0, o = o + Math.imul(T, _t) | 0;
                    var Lt = (c + (n = n + Math.imul(B, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, Bt) | 0) + Math.imul(E, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, Bt) | 0) + (i >>> 13) | 0) + (Lt >>> 26) | 0, Lt &= 67108863, n = Math.imul(z, ct), i = (i = Math.imul(z, ht)) + Math.imul(G, ct) | 0, o = Math.imul(G, ht), n = n + Math.imul(U, pt) | 0, i = (i = i + Math.imul(U, mt) | 0) + Math.imul(H, pt) | 0, o = o + Math.imul(H, mt) | 0, n = n + Math.imul(D, bt) | 0, i = (i = i + Math.imul(D, vt) | 0) + Math.imul(j, bt) | 0, o = o + Math.imul(j, vt) | 0, n = n + Math.imul(P, Mt) | 0, i = (i = i + Math.imul(P, _t) | 0) + Math.imul(I, Mt) | 0, o = o + Math.imul(I, _t) | 0;
                    var Ut = (c + (n = n + Math.imul(N, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(N, Bt) | 0) + Math.imul(T, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(T, Bt) | 0) + (i >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, n = Math.imul(z, pt), i = (i = Math.imul(z, mt)) + Math.imul(G, pt) | 0, o = Math.imul(G, mt), n = n + Math.imul(U, bt) | 0, i = (i = i + Math.imul(U, vt) | 0) + Math.imul(H, bt) | 0, o = o + Math.imul(H, vt) | 0, n = n + Math.imul(D, Mt) | 0, i = (i = i + Math.imul(D, _t) | 0) + Math.imul(j, Mt) | 0, o = o + Math.imul(j, _t) | 0;
                    var Ht = (c + (n = n + Math.imul(P, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, Bt) | 0) + Math.imul(I, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, Bt) | 0) + (i >>> 13) | 0) + (Ht >>> 26) | 0, Ht &= 67108863, n = Math.imul(z, bt), i = (i = Math.imul(z, vt)) + Math.imul(G, bt) | 0, o = Math.imul(G, vt), n = n + Math.imul(U, Mt) | 0, i = (i = i + Math.imul(U, _t) | 0) + Math.imul(H, Mt) | 0, o = o + Math.imul(H, _t) | 0;
                    var qt = (c + (n = n + Math.imul(D, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(D, Bt) | 0) + Math.imul(j, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, Bt) | 0) + (i >>> 13) | 0) + (qt >>> 26) | 0, qt &= 67108863, n = Math.imul(z, Mt), i = (i = Math.imul(z, _t)) + Math.imul(G, Mt) | 0, o = Math.imul(G, _t);
                    var zt = (c + (n = n + Math.imul(U, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, Bt) | 0) + Math.imul(H, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(H, Bt) | 0) + (i >>> 13) | 0) + (zt >>> 26) | 0, zt &= 67108863;
                    var Gt = (c + (n = Math.imul(z, xt)) | 0) + ((8191 & (i = (i = Math.imul(z, Bt)) + Math.imul(G, xt) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(G, Bt)) + (i >>> 13) | 0) + (Gt >>> 26) | 0, Gt &= 67108863, u[0] = Et, u[1] = kt, u[2] = Nt, u[3] = St, u[4] = Tt, u[5] = Ct, u[6] = Pt, u[7] = It, u[8] = Ot, u[9] = Rt, u[10] = Ft, u[11] = Dt, u[12] = jt, u[13] = Lt, u[14] = Ut, u[15] = Ht, u[16] = qt, u[17] = zt, u[18] = Gt, 0 !== c && (u[19] = c, r.length++), r
                };

                function jumboMulTo(t, e, r) {
                    return (new FFTM).mulp(t, e, r)
                }

                function FFTM(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (s = smallMulTo), BN.prototype.mulTo = function mulTo(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? s(this, t, e) : r < 63 ? smallMulTo(this, t, e) : r < 1024 ? function bigMulTo(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var a = i;
                            i = 0;
                            for (var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                                var l = o - c,
                                    h = (0 | t.words[l]) * (0 | e.words[c]),
                                    d = 67108863 & h;
                                s = 67108863 & (d = d + s | 0), i += (a = (a = a + (h / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863
                            }
                            r.words[o] = s, n = a, a = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }(this, t, e) : jumboMulTo(this, t, e)
                }, FFTM.prototype.makeRBT = function makeRBT(t) {
                    for (var e = new Array(t), r = BN.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, FFTM.prototype.revBin = function revBin(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, FFTM.prototype.permute = function permute(t, e, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = e[t[a]], i[a] = r[t[a]]
                }, FFTM.prototype.transform = function transform(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var h = u, d = c, p = 0; p < a; p++) {
                                var m = r[l + p],
                                    y = n[l + p],
                                    b = r[l + p + a],
                                    g = n[l + p + a],
                                    v = h * b - d * g;
                                g = h * g + d * b, b = v, r[l + p] = m + b, n[l + p] = y + g, r[l + p + a] = m - b, n[l + p + a] = y - g, p !== s && (v = u * h - c * d, d = u * d + c * h, h = v)
                            }
                }, FFTM.prototype.guessLen13b = function guessLen13b(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, FFTM.prototype.conjugate = function conjugate(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, FFTM.prototype.normalize13b = function normalize13b(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, FFTM.prototype.convert13b = function convert13b(t, e, r, n) {
                    for (var i = 0, o = 0; o < e; o++) i += 0 | t[o], r[2 * o] = 8191 & i, i >>>= 13, r[2 * o + 1] = 8191 & i, i >>>= 13;
                    for (o = 2 * e; o < n; ++o) r[o] = 0;
                    assert(0 === i), assert(0 == (-8192 & i))
                }, FFTM.prototype.stub = function stub(t) {
                    for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, FFTM.prototype.mulp = function mulp(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = new Array(n),
                        s = new Array(n),
                        u = new Array(n),
                        c = new Array(n),
                        l = new Array(n),
                        h = new Array(n),
                        d = r.words;
                    d.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var p = 0; p < n; p++) {
                        var m = s[p] * l[p] - u[p] * h[p];
                        u[p] = s[p] * h[p] + u[p] * l[p], s[p] = m
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, d, o, n, i), this.conjugate(d, o, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                }, BN.prototype.mul = function mul(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                }, BN.prototype.mulf = function mulf(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), jumboMulTo(this, t, e)
                }, BN.prototype.imul = function imul(t) {
                    return this.clone().mulTo(t, this)
                }, BN.prototype.imuln = function imuln(t) {
                    assert("number" == typeof t), assert(t < 67108864);
                    for (var e = 0, r = 0; r < this.length; r++) {
                        var n = (0 | this.words[r]) * t,
                            i = (67108863 & n) + (67108863 & e);
                        e >>= 26, e += n / 67108864 | 0, e += i >>> 26, this.words[r] = 67108863 & i
                    }
                    return 0 !== e && (this.words[r] = e, this.length++), this
                }, BN.prototype.muln = function muln(t) {
                    return this.clone().imuln(t)
                }, BN.prototype.sqr = function sqr() {
                    return this.mul(this)
                }, BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone())
                }, BN.prototype.pow = function pow(t) {
                    var e = function toBitArray(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }(t);
                    if (0 === e.length) return new BN(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, BN.prototype.iushln = function iushln(t) {
                    assert("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        n = (t - r) / 26,
                        i = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & i,
                                s = (0 | this.words[e]) - a << r;
                            this.words[e] = s | o, o = a >>> 26 - r
                        }
                        o && (this.words[e] = o, this.length++)
                    }
                    if (0 !== n) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                        for (e = 0; e < n; e++) this.words[e] = 0;
                        this.length += n
                    }
                    return this.strip()
                }, BN.prototype.ishln = function ishln(t) {
                    return assert(0 === this.negative), this.iushln(t)
                }, BN.prototype.iushrn = function iushrn(t, e, r) {
                    var n;
                    assert("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                    var i = t % 26,
                        o = Math.min((t - i) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> i << i,
                        s = r;
                    if (n -= o, n = Math.max(0, n), s) {
                        for (var u = 0; u < o; u++) s.words[u] = this.words[u];
                        s.length = o
                    }
                    if (0 === o);
                    else if (this.length > o)
                        for (this.length -= o, u = 0; u < this.length; u++) this.words[u] = this.words[u + o];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= n); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - i | l >>> i, c = l & a
                    }
                    return s && 0 !== c && (s.words[s.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                }, BN.prototype.ishrn = function ishrn(t, e, r) {
                    return assert(0 === this.negative), this.iushrn(t, e, r)
                }, BN.prototype.shln = function shln(t) {
                    return this.clone().ishln(t)
                }, BN.prototype.ushln = function ushln(t) {
                    return this.clone().iushln(t)
                }, BN.prototype.shrn = function shrn(t) {
                    return this.clone().ishrn(t)
                }, BN.prototype.ushrn = function ushrn(t) {
                    return this.clone().iushrn(t)
                }, BN.prototype.testn = function testn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }, BN.prototype.imaskn = function imaskn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var n = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= n
                    }
                    return this.strip()
                }, BN.prototype.maskn = function maskn(t) {
                    return this.clone().imaskn(t)
                }, BN.prototype.iaddn = function iaddn(t) {
                    return assert("number" == typeof t), assert(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                }, BN.prototype._iaddn = function _iaddn(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, BN.prototype.isubn = function isubn(t) {
                    if (assert("number" == typeof t), assert(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this.strip()
                }, BN.prototype.addn = function addn(t) {
                    return this.clone().iaddn(t)
                }, BN.prototype.subn = function subn(t) {
                    return this.clone().isubn(t)
                }, BN.prototype.iabs = function iabs() {
                    return this.negative = 0, this
                }, BN.prototype.abs = function abs() {
                    return this.clone().iabs()
                }, BN.prototype._ishlnsubmul = function _ishlnsubmul(t, e, r) {
                    var n, i, o = t.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < t.length; n++) {
                        i = (0 | this.words[n + r]) + a;
                        var s = (0 | t.words[n]) * e;
                        a = ((i -= 67108863 & s) >> 26) - (s / 67108864 | 0), this.words[n + r] = 67108863 & i
                    }
                    for (; n < this.length - r; n++) a = (i = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & i;
                    if (0 === a) return this.strip();
                    for (assert(-1 === a), a = 0, n = 0; n < this.length; n++) a = (i = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & i;
                    return this.negative = 1, this.strip()
                }, BN.prototype._wordDiv = function _wordDiv(t, e) {
                    var r = (this.length, t.length),
                        n = this.clone(),
                        i = t,
                        o = 0 | i.words[i.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                    var a, s = n.length - i.length;
                    if ("mod" !== e) {
                        (a = new BN(null)).length = s + 1, a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++) a.words[u] = 0
                    }
                    var c = n.clone()._ishlnsubmul(i, 1, s);
                    0 === c.negative && (n = c, a && (a.words[s] = 1));
                    for (var l = s - 1; l >= 0; l--) {
                        var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                        for (h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;) h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                        a && (a.words[l] = h)
                    }
                    return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                        div: a || null,
                        mod: n
                    }
                }, BN.prototype.divmod = function divmod(t, e, r) {
                    return assert(!t.isZero()), this.isZero() ? {
                        div: new BN(0),
                        mod: new BN(0)
                    } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), "mod" !== e && (n = o.div.neg()), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(t)), {
                        div: n,
                        mod: i
                    }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), "mod" !== e && (n = o.div.neg()), {
                        div: n,
                        mod: o.mod
                    }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(t)), {
                        div: o.div,
                        mod: i
                    }) : t.length > this.length || this.cmp(t) < 0 ? {
                        div: new BN(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new BN(this.modn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new BN(this.modn(t.words[0]))
                    } : this._wordDiv(t, e);
                    var n, i, o
                }, BN.prototype.div = function div(t) {
                    return this.divmod(t, "div", !1).div
                }, BN.prototype.mod = function mod(t) {
                    return this.divmod(t, "mod", !1).mod
                }, BN.prototype.umod = function umod(t) {
                    return this.divmod(t, "mod", !0).mod
                }, BN.prototype.divRound = function divRound(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, BN.prototype.modn = function modn(t) {
                    assert(t <= 67108863);
                    for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) r = (e * r + (0 | this.words[n])) % t;
                    return r
                }, BN.prototype.idivn = function idivn(t) {
                    assert(t <= 67108863);
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = (0 | this.words[r]) + 67108864 * e;
                        this.words[r] = n / t | 0, e = n % t
                    }
                    return this.strip()
                }, BN.prototype.divn = function divn(t) {
                    return this.clone().idivn(t)
                }, BN.prototype.egcd = function egcd(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n = new BN(1), i = new BN(0), o = new BN(0), a = new BN(1), s = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++s;
                    for (var u = r.clone(), c = e.clone(); !e.isZero();) {
                        for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                        if (l > 0)
                            for (e.iushrn(l); l-- > 0;)(n.isOdd() || i.isOdd()) && (n.iadd(u), i.isub(c)), n.iushrn(1), i.iushrn(1);
                        for (var d = 0, p = 1; 0 == (r.words[0] & p) && d < 26; ++d, p <<= 1);
                        if (d > 0)
                            for (r.iushrn(d); d-- > 0;)(o.isOdd() || a.isOdd()) && (o.iadd(u), a.isub(c)), o.iushrn(1), a.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), n.isub(o), i.isub(a)) : (r.isub(e), o.isub(n), a.isub(i))
                    }
                    return {
                        a: o,
                        b: a,
                        gcd: r.iushln(s)
                    }
                }, BN.prototype._invmp = function _invmp(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n, i = new BN(1), o = new BN(0), a = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var s = 0, u = 1; 0 == (e.words[0] & u) && s < 26; ++s, u <<= 1);
                        if (s > 0)
                            for (e.iushrn(s); s-- > 0;) i.isOdd() && i.iadd(a), i.iushrn(1);
                        for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(a), o.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(o)) : (r.isub(e), o.isub(i))
                    }
                    return (n = 0 === e.cmpn(1) ? i : o).cmpn(0) < 0 && n.iadd(t), n
                }, BN.prototype.gcd = function gcd(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, BN.prototype.invm = function invm(t) {
                    return this.egcd(t).a.umod(t)
                }, BN.prototype.isEven = function isEven() {
                    return 0 == (1 & this.words[0])
                }, BN.prototype.isOdd = function isOdd() {
                    return 1 == (1 & this.words[0])
                }, BN.prototype.andln = function andln(t) {
                    return this.words[0] & t
                }, BN.prototype.bincn = function bincn(t) {
                    assert("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                    for (var i = n, o = r; 0 !== i && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        i = (a += i) >>> 26, a &= 67108863, this.words[o] = a
                    }
                    return 0 !== i && (this.words[o] = i, this.length++), this
                }, BN.prototype.isZero = function isZero() {
                    return 1 === this.length && 0 === this.words[0]
                }, BN.prototype.cmpn = function cmpn(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this.strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), assert(t <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        e = n === t ? 0 : n < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.cmp = function cmp(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.ucmp = function ucmp(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, BN.prototype.gtn = function gtn(t) {
                    return 1 === this.cmpn(t)
                }, BN.prototype.gt = function gt(t) {
                    return 1 === this.cmp(t)
                }, BN.prototype.gten = function gten(t) {
                    return this.cmpn(t) >= 0
                }, BN.prototype.gte = function gte(t) {
                    return this.cmp(t) >= 0
                }, BN.prototype.ltn = function ltn(t) {
                    return -1 === this.cmpn(t)
                }, BN.prototype.lt = function lt(t) {
                    return -1 === this.cmp(t)
                }, BN.prototype.lten = function lten(t) {
                    return this.cmpn(t) <= 0
                }, BN.prototype.lte = function lte(t) {
                    return this.cmp(t) <= 0
                }, BN.prototype.eqn = function eqn(t) {
                    return 0 === this.cmpn(t)
                }, BN.prototype.eq = function eq(t) {
                    return 0 === this.cmp(t)
                }, BN.red = function red(t) {
                    return new Red(t)
                }, BN.prototype.toRed = function toRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, BN.prototype.fromRed = function fromRed() {
                    return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, BN.prototype._forceRed = function _forceRed(t) {
                    return this.red = t, this
                }, BN.prototype.forceRed = function forceRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, BN.prototype.redAdd = function redAdd(t) {
                    return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, BN.prototype.redIAdd = function redIAdd(t) {
                    return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, BN.prototype.redSub = function redSub(t) {
                    return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, BN.prototype.redISub = function redISub(t) {
                    return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, BN.prototype.redShl = function redShl(t) {
                    return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, BN.prototype.redMul = function redMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, BN.prototype.redIMul = function redIMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, BN.prototype.redSqr = function redSqr() {
                    return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, BN.prototype.redISqr = function redISqr() {
                    return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, BN.prototype.redSqrt = function redSqrt() {
                    return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, BN.prototype.redInvm = function redInvm() {
                    return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, BN.prototype.redNeg = function redNeg() {
                    return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, BN.prototype.redPow = function redPow(t) {
                    return assert(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var u = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function MPrime(t, e) {
                    this.name = t, this.p = new BN(e, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function Red(t) {
                    if ("string" == typeof t) {
                        var e = BN._prime(t);
                        this.m = e.p, this.prime = e
                    } else assert(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function Mont(t) {
                    Red.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                MPrime.prototype._tmp = function _tmp() {
                    var t = new BN(null);
                    return t.words = new Array(Math.ceil(this.n / 13)), t
                }, MPrime.prototype.ireduce = function ireduce(t) {
                    var e, r = t;
                    do {
                        this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                }, MPrime.prototype.split = function split(t, e) {
                    t.iushrn(this.n, 0, e)
                }, MPrime.prototype.imulK = function imulK(t) {
                    return t.imul(this.k)
                }, inherits(K256, MPrime), K256.prototype.split = function split(t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++) e.words[n] = t.words[n];
                    if (e.length = r, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                    var i = t.words[9];
                    for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, K256.prototype.imulK = function imulK(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function imulK(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 19 * (0 | t.words[r]) + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, BN._prime = function prime(t) {
                    if (u[t]) return u[t];
                    var prime;
                    if ("k256" === t) prime = new K256;
                    else if ("p224" === t) prime = new P224;
                    else if ("p192" === t) prime = new P192;
                    else {
                        if ("p25519" !== t) throw new Error("Unknown prime " + t);
                        prime = new P25519
                    }
                    return u[t] = prime, prime
                }, Red.prototype._verify1 = function _verify1(t) {
                    assert(0 === t.negative, "red works only with positives"), assert(t.red, "red works only with red numbers")
                }, Red.prototype._verify2 = function _verify2(t, e) {
                    assert(0 == (t.negative | e.negative), "red works only with positives"), assert(t.red && t.red === e.red, "red works only with red numbers")
                }, Red.prototype.imod = function imod(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                }, Red.prototype.neg = function neg(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, Red.prototype.add = function add(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, Red.prototype.iadd = function iadd(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, Red.prototype.sub = function sub(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                }, Red.prototype.isub = function isub(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r
                }, Red.prototype.shl = function shl(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, Red.prototype.imul = function imul(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, Red.prototype.mul = function mul(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, Red.prototype.isqr = function isqr(t) {
                    return this.imul(t, t.clone())
                }, Red.prototype.sqr = function sqr(t) {
                    return this.mul(t, t)
                }, Red.prototype.sqrt = function sqrt(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (assert(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var n = this.m.subn(1), i = 0; !n.isZero() && 0 === n.andln(1);) i++, n.iushrn(1);
                    assert(!n.isZero());
                    var o = new BN(1).toRed(this),
                        a = o.redNeg(),
                        s = this.m.subn(1).iushrn(1),
                        u = this.m.bitLength();
                    for (u = new BN(2 * u * u).toRed(this); 0 !== this.pow(u, s).cmp(a);) u.redIAdd(a);
                    for (var c = this.pow(u, n), l = this.pow(t, n.addn(1).iushrn(1)), h = this.pow(t, n), d = i; 0 !== h.cmp(o);) {
                        for (var p = h, m = 0; 0 !== p.cmp(o); m++) p = p.redSqr();
                        assert(m < d);
                        var y = this.pow(c, new BN(1).iushln(d - m - 1));
                        l = l.redMul(y), c = y.redSqr(), h = h.redMul(c), d = m
                    }
                    return l
                }, Red.prototype.invm = function invm(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, Red.prototype.pow = function pow(t, e) {
                    if (e.isZero()) return new BN(1).toRed(this);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = new Array(16);
                    r[0] = new BN(1).toRed(this), r[1] = t;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], t);
                    var i = r[0],
                        o = 0,
                        a = 0,
                        s = e.bitLength() % 26;
                    for (0 === s && (s = 26), n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = s - 1; c >= 0; c--) {
                            var l = u >> c & 1;
                            i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 === ++a || 0 === n && 0 === c) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0
                        }
                        s = 26
                    }
                    return i
                }, Red.prototype.convertTo = function convertTo(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, Red.prototype.convertFrom = function convertFrom(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, BN.mont = function mont(t) {
                    return new Mont(t)
                }, inherits(Mont, Red), Mont.prototype.convertTo = function convertTo(t) {
                    return this.imod(t.ushln(this.shift))
                }, Mont.prototype.convertFrom = function convertFrom(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, Mont.prototype.imul = function imul(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.mul = function mul(t, e) {
                    if (t.isZero() || e.isZero()) return new BN(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.invm = function invm(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t, this)
        }).call(this, r(8)(t))
    }, function (t, e, r) {
        e.randomBytes = e.rng = e.pseudoRandomBytes = e.prng = r(15), e.createHash = e.Hash = r(55), e.createHmac = e.Hmac = r(305);
        var n = r(797),
            i = Object.keys(n),
            o = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(i);
        e.getHashes = function () {
            return o
        };
        var a = r(308);
        e.pbkdf2 = a.pbkdf2, e.pbkdf2Sync = a.pbkdf2Sync;
        var s = r(799);
        e.Cipher = s.Cipher, e.createCipher = s.createCipher, e.Cipheriv = s.Cipheriv, e.createCipheriv = s.createCipheriv, e.Decipher = s.Decipher, e.createDecipher = s.createDecipher, e.Decipheriv = s.Decipheriv, e.createDecipheriv = s.createDecipheriv, e.getCiphers = s.getCiphers, e.listCiphers = s.listCiphers;
        var u = r(814);
        e.DiffieHellmanGroup = u.DiffieHellmanGroup, e.createDiffieHellmanGroup = u.createDiffieHellmanGroup, e.getDiffieHellman = u.getDiffieHellman, e.createDiffieHellman = u.createDiffieHellman, e.DiffieHellman = u.DiffieHellman;
        var c = r(817);
        e.createSign = c.createSign, e.Sign = c.Sign, e.createVerify = c.createVerify, e.Verify = c.Verify, e.createECDH = r(833);
        var l = r(834);
        e.publicEncrypt = l.publicEncrypt, e.privateEncrypt = l.privateEncrypt, e.publicDecrypt = l.publicDecrypt, e.privateDecrypt = l.privateDecrypt;
        var h = r(837);
        e.randomFill = h.randomFill, e.randomFillSync = h.randomFillSync, e.createCredentials = function () {
            throw new Error(["sorry, createCredentials is not implemented yet", "we accept pull requests", "https://github.com/crypto-browserify/crypto-browserify"].join("\n"))
        }, e.constants = {
            DH_CHECK_P_NOT_SAFE_PRIME: 2,
            DH_CHECK_P_NOT_PRIME: 1,
            DH_UNABLE_TO_CHECK_GENERATOR: 4,
            DH_NOT_SUITABLE_GENERATOR: 8,
            NPN_ENABLED: 1,
            ALPN_ENABLED: 1,
            RSA_PKCS1_PADDING: 1,
            RSA_SSLV23_PADDING: 2,
            RSA_NO_PADDING: 3,
            RSA_PKCS1_OAEP_PADDING: 4,
            RSA_X931_PADDING: 5,
            RSA_PKCS1_PSS_PADDING: 6,
            POINT_CONVERSION_COMPRESSED: 2,
            POINT_CONVERSION_UNCOMPRESSED: 4,
            POINT_CONVERSION_HYBRID: 6
        }
    }, function (t, e, r) {
        var n = r(3).Buffer;

        function asUInt32Array(t) {
            n.isBuffer(t) || (t = n.from(t));
            for (var e = t.length / 4 | 0, r = new Array(e), i = 0; i < e; i++) r[i] = t.readUInt32BE(4 * i);
            return r
        }

        function scrubVec(t) {
            for (; 0 < t.length; t++) t[0] = 0
        }

        function cryptBlock(t, e, r, n, i) {
            for (var o, a, s, u, c = r[0], l = r[1], h = r[2], d = r[3], p = t[0] ^ e[0], m = t[1] ^ e[1], y = t[2] ^ e[2], b = t[3] ^ e[3], g = 4, v = 1; v < i; v++) o = c[p >>> 24] ^ l[m >>> 16 & 255] ^ h[y >>> 8 & 255] ^ d[255 & b] ^ e[g++], a = c[m >>> 24] ^ l[y >>> 16 & 255] ^ h[b >>> 8 & 255] ^ d[255 & p] ^ e[g++], s = c[y >>> 24] ^ l[b >>> 16 & 255] ^ h[p >>> 8 & 255] ^ d[255 & m] ^ e[g++], u = c[b >>> 24] ^ l[p >>> 16 & 255] ^ h[m >>> 8 & 255] ^ d[255 & y] ^ e[g++], p = o, m = a, y = s, b = u;
            return o = (n[p >>> 24] << 24 | n[m >>> 16 & 255] << 16 | n[y >>> 8 & 255] << 8 | n[255 & b]) ^ e[g++], a = (n[m >>> 24] << 24 | n[y >>> 16 & 255] << 16 | n[b >>> 8 & 255] << 8 | n[255 & p]) ^ e[g++], s = (n[y >>> 24] << 24 | n[b >>> 16 & 255] << 16 | n[p >>> 8 & 255] << 8 | n[255 & m]) ^ e[g++], u = (n[b >>> 24] << 24 | n[p >>> 16 & 255] << 16 | n[m >>> 8 & 255] << 8 | n[255 & y]) ^ e[g++], [o >>>= 0, a >>>= 0, s >>>= 0, u >>>= 0]
        }
        var i = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
            o = function () {
                for (var t = new Array(256), e = 0; e < 256; e++) t[e] = e < 128 ? e << 1 : e << 1 ^ 283;
                for (var r = [], n = [], i = [
                        [],
                        [],
                        [],
                        []
                    ], o = [
                        [],
                        [],
                        [],
                        []
                    ], a = 0, s = 0, u = 0; u < 256; ++u) {
                    var c = s ^ s << 1 ^ s << 2 ^ s << 3 ^ s << 4;
                    c = c >>> 8 ^ 255 & c ^ 99, r[a] = c, n[c] = a;
                    var l = t[a],
                        h = t[l],
                        d = t[h],
                        p = 257 * t[c] ^ 16843008 * c;
                    i[0][a] = p << 24 | p >>> 8, i[1][a] = p << 16 | p >>> 16, i[2][a] = p << 8 | p >>> 24, i[3][a] = p, p = 16843009 * d ^ 65537 * h ^ 257 * l ^ 16843008 * a, o[0][c] = p << 24 | p >>> 8, o[1][c] = p << 16 | p >>> 16, o[2][c] = p << 8 | p >>> 24, o[3][c] = p, 0 === a ? a = s = 1 : (a = l ^ t[t[t[d ^ l]]], s ^= t[t[s]])
                }
                return {
                    SBOX: r,
                    INV_SBOX: n,
                    SUB_MIX: i,
                    INV_SUB_MIX: o
                }
            }();

        function AES(t) {
            this._key = asUInt32Array(t), this._reset()
        }
        AES.blockSize = 16, AES.keySize = 32, AES.prototype.blockSize = AES.blockSize, AES.prototype.keySize = AES.keySize, AES.prototype._reset = function () {
            for (var t = this._key, e = t.length, r = e + 6, n = 4 * (r + 1), a = [], s = 0; s < e; s++) a[s] = t[s];
            for (s = e; s < n; s++) {
                var u = a[s - 1];
                s % e == 0 ? (u = u << 8 | u >>> 24, u = o.SBOX[u >>> 24] << 24 | o.SBOX[u >>> 16 & 255] << 16 | o.SBOX[u >>> 8 & 255] << 8 | o.SBOX[255 & u], u ^= i[s / e | 0] << 24) : e > 6 && s % e == 4 && (u = o.SBOX[u >>> 24] << 24 | o.SBOX[u >>> 16 & 255] << 16 | o.SBOX[u >>> 8 & 255] << 8 | o.SBOX[255 & u]), a[s] = a[s - e] ^ u
            }
            for (var c = [], l = 0; l < n; l++) {
                var h = n - l,
                    d = a[h - (l % 4 ? 0 : 4)];
                c[l] = l < 4 || h <= 4 ? d : o.INV_SUB_MIX[0][o.SBOX[d >>> 24]] ^ o.INV_SUB_MIX[1][o.SBOX[d >>> 16 & 255]] ^ o.INV_SUB_MIX[2][o.SBOX[d >>> 8 & 255]] ^ o.INV_SUB_MIX[3][o.SBOX[255 & d]]
            }
            this._nRounds = r, this._keySchedule = a, this._invKeySchedule = c
        }, AES.prototype.encryptBlockRaw = function (t) {
            return cryptBlock(t = asUInt32Array(t), this._keySchedule, o.SUB_MIX, o.SBOX, this._nRounds)
        }, AES.prototype.encryptBlock = function (t) {
            var e = this.encryptBlockRaw(t),
                r = n.allocUnsafe(16);
            return r.writeUInt32BE(e[0], 0), r.writeUInt32BE(e[1], 4), r.writeUInt32BE(e[2], 8), r.writeUInt32BE(e[3], 12), r
        }, AES.prototype.decryptBlock = function (t) {
            var e = (t = asUInt32Array(t))[1];
            t[1] = t[3], t[3] = e;
            var r = cryptBlock(t, this._invKeySchedule, o.INV_SUB_MIX, o.INV_SBOX, this._nRounds),
                i = n.allocUnsafe(16);
            return i.writeUInt32BE(r[0], 0), i.writeUInt32BE(r[3], 4), i.writeUInt32BE(r[2], 8), i.writeUInt32BE(r[1], 12), i
        }, AES.prototype.scrub = function () {
            scrubVec(this._keySchedule), scrubVec(this._invKeySchedule), scrubVec(this._key)
        }, t.exports.AES = AES
    }, function (t, e, r) {
        var n = r(3).Buffer,
            i = r(184);
        t.exports = function EVP_BytesToKey(t, e, r, o) {
            if (n.isBuffer(t) || (t = n.from(t, "binary")), e && (n.isBuffer(e) || (e = n.from(e, "binary")), 8 !== e.length)) throw new RangeError("salt should be Buffer with 8 byte length");
            for (var a = r / 8, s = n.alloc(a), u = n.alloc(o || 0), c = n.alloc(0); a > 0 || o > 0;) {
                var l = new i;
                l.update(c), l.update(t), e && l.update(e), c = l.digest();
                var h = 0;
                if (a > 0) {
                    var d = s.length - a;
                    h = Math.min(a, c.length), c.copy(s, d, 0, h), a -= h
                }
                if (h < c.length && o > 0) {
                    var p = u.length - o,
                        m = Math.min(o, c.length - h);
                    c.copy(u, p, h, h + m), o -= m
                }
            }
            return c.fill(0), {
                key: s,
                iv: u
            }
        }
    }, function (t, e, r) {
        var n = r(819),
            i = r(830),
            o = r(831),
            a = r(195),
            s = r(308),
            u = r(3).Buffer;

        function parseKeys(t) {
            var e;
            "object" != typeof t || u.isBuffer(t) || (e = t.passphrase, t = t.key), "string" == typeof t && (t = u.from(t));
            var r, c, l = o(t, e),
                h = l.tag,
                d = l.data;
            switch (h) {
                case "CERTIFICATE":
                    c = n.certificate.decode(d, "der").tbsCertificate.subjectPublicKeyInfo;
                case "PUBLIC KEY":
                    switch (c || (c = n.PublicKey.decode(d, "der")), r = c.algorithm.algorithm.join(".")) {
                        case "1.2.840.113549.1.1.1":
                            return n.RSAPublicKey.decode(c.subjectPublicKey.data, "der");
                        case "1.2.840.10045.2.1":
                            return c.subjectPrivateKey = c.subjectPublicKey, {
                                type: "ec",
                                data: c
                            };
                        case "1.2.840.10040.4.1":
                            return c.algorithm.params.pub_key = n.DSAparam.decode(c.subjectPublicKey.data, "der"), {
                                type: "dsa",
                                data: c.algorithm.params
                            };
                        default:
                            throw new Error("unknown key id " + r)
                    }
                    throw new Error("unknown key type " + h);
                case "ENCRYPTED PRIVATE KEY":
                    d = function decrypt(t, e) {
                        var r = t.algorithm.decrypt.kde.kdeparams.salt,
                            n = parseInt(t.algorithm.decrypt.kde.kdeparams.iters.toString(), 10),
                            o = i[t.algorithm.decrypt.cipher.algo.join(".")],
                            c = t.algorithm.decrypt.cipher.iv,
                            l = t.subjectPrivateKey,
                            h = parseInt(o.split("-")[1], 10) / 8,
                            d = s.pbkdf2Sync(e, r, n, h, "sha1"),
                            p = a.createDecipheriv(o, d, c),
                            m = [];
                        return m.push(p.update(l)), m.push(p.final()), u.concat(m)
                    }(d = n.EncryptedPrivateKey.decode(d, "der"), e);
                case "PRIVATE KEY":
                    switch (r = (c = n.PrivateKey.decode(d, "der")).algorithm.algorithm.join(".")) {
                        case "1.2.840.113549.1.1.1":
                            return n.RSAPrivateKey.decode(c.subjectPrivateKey, "der");
                        case "1.2.840.10045.2.1":
                            return {
                                curve: c.algorithm.curve, privateKey: n.ECPrivateKey.decode(c.subjectPrivateKey, "der").privateKey
                            };
                        case "1.2.840.10040.4.1":
                            return c.algorithm.params.priv_key = n.DSAparam.decode(c.subjectPrivateKey, "der"), {
                                type: "dsa",
                                params: c.algorithm.params
                            };
                        default:
                            throw new Error("unknown key id " + r)
                    }
                    throw new Error("unknown key type " + h);
                case "RSA PUBLIC KEY":
                    return n.RSAPublicKey.decode(d, "der");
                case "RSA PRIVATE KEY":
                    return n.RSAPrivateKey.decode(d, "der");
                case "DSA PRIVATE KEY":
                    return {
                        type: "dsa", params: n.DSAPrivateKey.decode(d, "der")
                    };
                case "EC PRIVATE KEY":
                    return {
                        curve: (d = n.ECPrivateKey.decode(d, "der")).parameters.value, privateKey: d.privateKey
                    };
                default:
                    throw new Error("unknown key type " + h)
            }
        }
        t.exports = parseKeys, parseKeys.signature = n.signature
    }, function (t, e, r) {
        (function (t) {
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.getLength = e.decode = e.encode = void 0;
            var n = r(846);

            function safeParseInt(t, e) {
                if ("00" === t.slice(0, 2)) throw new Error("invalid RLP: extra zeros");
                return parseInt(t, e)
            }

            function encodeLength(e, r) {
                if (e < 56) return t.from([e + r]);
                var n = intToHex(e),
                    i = intToHex(r + 55 + n.length / 2);
                return t.from(i + n, "hex")
            }

            function isHexPrefixed(t) {
                return "0x" === t.slice(0, 2)
            }

            function intToHex(t) {
                if (t < 0) throw new Error("Invalid integer as argument, must be unsigned!");
                var e = t.toString(16);
                return e.length % 2 ? "0" + e : e
            }

            function toBuffer(e) {
                if (!t.isBuffer(e)) {
                    if ("string" == typeof e) return isHexPrefixed(e) ? t.from(function padToEven(t) {
                        return t.length % 2 ? "0" + t : t
                    }(function stripHexPrefix(t) {
                        return "string" != typeof t ? t : isHexPrefixed(t) ? t.slice(2) : t
                    }(e)), "hex") : t.from(e);
                    if ("number" == typeof e || "bigint" == typeof e) return e ? function intToBuffer(e) {
                        var r = intToHex(e);
                        return t.from(r, "hex")
                    }(e) : t.from([]);
                    if (null == e) return t.from([]);
                    if (e instanceof Uint8Array) return t.from(e);
                    if (n.isBN(e)) return t.from(e.toArray());
                    throw new Error("invalid type")
                }
                return e
            }
            e.encode = function encode(e) {
                if (Array.isArray(e)) {
                    for (var r = [], n = 0; n < e.length; n++) r.push(encode(e[n]));
                    var i = t.concat(r);
                    return t.concat([encodeLength(i.length, 192), i])
                }
                var o = toBuffer(e);
                return 1 === o.length && o[0] < 128 ? o : t.concat([encodeLength(o.length, 128), o])
            }, e.decode = function decode(e, r) {
                if (void 0 === r && (r = !1), !e || 0 === e.length) return t.from([]);
                var n = function _decode(e) {
                    var r, n, i, o, a, s = [],
                        u = e[0];
                    if (u <= 127) return {
                        data: e.slice(0, 1),
                        remainder: e.slice(1)
                    };
                    if (u <= 183) {
                        if (r = u - 127, i = 128 === u ? t.from([]) : e.slice(1, r), 2 === r && i[0] < 128) throw new Error("invalid rlp encoding: byte must be less 0x80");
                        return {
                            data: i,
                            remainder: e.slice(r)
                        }
                    }
                    if (u <= 191) {
                        if (n = u - 182, e.length - 1 < n) throw new Error("invalid RLP: not enough bytes for string length");
                        if ((r = safeParseInt(e.slice(1, n).toString("hex"), 16)) <= 55) throw new Error("invalid RLP: expected string length to be greater than 55");
                        if ((i = e.slice(n, r + n)).length < r) throw new Error("invalid RLP: not enough bytes for string");
                        return {
                            data: i,
                            remainder: e.slice(r + n)
                        }
                    }
                    if (u <= 247) {
                        for (r = u - 191, o = e.slice(1, r); o.length;) a = _decode(o), s.push(a.data), o = a.remainder;
                        return {
                            data: s,
                            remainder: e.slice(r)
                        }
                    }
                    n = u - 246, r = safeParseInt(e.slice(1, n).toString("hex"), 16);
                    var c = n + r;
                    if (c > e.length) throw new Error("invalid rlp: total length is larger than the data");
                    if (0 === (o = e.slice(n, c)).length) throw new Error("invalid rlp, List has a invalid length");
                    for (; o.length;) a = _decode(o), s.push(a.data), o = a.remainder;
                    return {
                        data: s,
                        remainder: e.slice(c)
                    }
                }(toBuffer(e));
                if (r) return n;
                if (0 !== n.remainder.length) throw new Error("invalid remainder");
                return n.data
            }, e.getLength = function getLength(e) {
                if (!e || 0 === e.length) return t.from([]);
                var r = toBuffer(e),
                    n = r[0];
                if (n <= 127) return r.length;
                if (n <= 183) return n - 127;
                if (n <= 191) return n - 182;
                if (n <= 247) return n - 191;
                var i = n - 246;
                return i + safeParseInt(r.slice(1, i).toString("hex"), 16)
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (t) {
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.assertIsString = e.assertIsArray = e.assertIsBuffer = e.assertIsHexString = void 0;
            var n = r(20);
            e.assertIsHexString = function (t) {
                if (!n.isHexString(t)) throw new Error("This method only supports 0x-prefixed hex strings but input was: " + t)
            }, e.assertIsBuffer = function (e) {
                if (!t.isBuffer(e)) throw new Error("This method only supports Buffer but input was: " + e)
            }, e.assertIsArray = function (t) {
                if (!Array.isArray(t)) throw new Error("This method only supports number arrays but input was: " + t)
            }, e.assertIsString = function (t) {
                if ("string" != typeof t) throw new Error("This method only supports strings but input was: " + t)
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (t) {
            ! function (t, e) {
                function assert(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }

                function inherits(t, e) {
                    t.super_ = e;
                    var TempCtor = function () {};
                    TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
                }

                function BN(t, e, r) {
                    if (BN.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                var n;
                "object" == typeof t ? t.exports = BN : e.BN = BN, BN.BN = BN, BN.wordSize = 26;
                try {
                    n = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(861).Buffer
                } catch (t) {}

                function parseHex4Bits(t, e) {
                    var r = t.charCodeAt(e);
                    return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15
                }

                function parseHexByte(t, e, r) {
                    var n = parseHex4Bits(t, r);
                    return r - 1 >= e && (n |= parseHex4Bits(t, r - 1) << 4), n
                }

                function parseBase(t, e, r, n) {
                    for (var i = 0, o = Math.min(t.length, r), a = e; a < o; a++) {
                        var s = t.charCodeAt(a) - 48;
                        i *= n, i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s
                    }
                    return i
                }
                BN.isBN = function isBN(t) {
                    return t instanceof BN || null !== t && "object" == typeof t && t.constructor.wordSize === BN.wordSize && Array.isArray(t.words)
                }, BN.max = function max(t, e) {
                    return t.cmp(e) > 0 ? t : e
                }, BN.min = function min(t, e) {
                    return t.cmp(e) < 0 ? t : e
                }, BN.prototype._init = function init(t, e, r) {
                    if ("number" == typeof t) return this._initNumber(t, e, r);
                    if ("object" == typeof t) return this._initArray(t, e, r);
                    "hex" === e && (e = 16), assert(e === (0 | e) && e >= 2 && e <= 36);
                    var n = 0;
                    "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (n++, this.negative = 1), n < t.length && (16 === e ? this._parseHex(t, n, r) : (this._parseBase(t, e, n), "le" === r && this._initArray(this.toArray(), e, r)))
                }, BN.prototype._initNumber = function _initNumber(t, e, r) {
                    t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (assert(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initArray = function _initArray(t, e, r) {
                    if (assert("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                    this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o, a = 0;
                    if ("be" === r)
                        for (n = t.length - 1, i = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    else if ("le" === r)
                        for (n = 0, i = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    return this.strip()
                }, BN.prototype._parseHex = function _parseHex(t, e, r) {
                    this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o = 0,
                        a = 0;
                    if ("be" === r)
                        for (n = t.length - 1; n >= e; n -= 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                    else
                        for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                    this.strip()
                }, BN.prototype._parseBase = function _parseBase(t, e, r) {
                    this.words = [0], this.length = 1;
                    for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                    n--, i = i / e | 0;
                    for (var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n) u = parseBase(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== a) {
                        var l = 1;
                        for (u = parseBase(t, c, t.length, e), c = 0; c < a; c++) l *= e;
                        this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                    this.strip()
                }, BN.prototype.copy = function copy(t) {
                    t.words = new Array(this.length);
                    for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                    t.length = this.length, t.negative = this.negative, t.red = this.red
                }, BN.prototype.clone = function clone() {
                    var t = new BN(null);
                    return this.copy(t), t
                }, BN.prototype._expand = function _expand(t) {
                    for (; this.length < t;) this.words[this.length++] = 0;
                    return this
                }, BN.prototype.strip = function strip() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                    return this._normSign()
                }, BN.prototype._normSign = function _normSign() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                }, BN.prototype.inspect = function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                };
                var i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    o = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    a = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function smallMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, d = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= d; p++) {
                            var m = c - p | 0;
                            l += (a = (i = 0 | t.words[m]) * (o = 0 | e.words[p]) + h) / 67108864 | 0, h = 67108863 & a
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r.strip()
                }
                BN.prototype.toString = function toString(t, e) {
                    var r;
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var n = 0, s = 0, u = 0; u < this.length; u++) {
                            var c = this.words[u],
                                l = (16777215 & (c << n | s)).toString(16);
                            r = 0 !== (s = c >>> 24 - n & 16777215) || u !== this.length - 1 ? i[6 - l.length] + l + r : l + r, (n += 2) >= 26 && (n -= 26, u--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var h = o[t],
                            d = a[t];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero();) {
                            var m = p.modn(d).toString(t);
                            r = (p = p.idivn(d)).isZero() ? m + r : i[h - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    assert(!1, "Base should be between 2 and 36")
                }, BN.prototype.toNumber = function toNumber() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, BN.prototype.toJSON = function toJSON() {
                    return this.toString(16)
                }, BN.prototype.toBuffer = function toBuffer(t, e) {
                    return assert(void 0 !== n), this.toArrayLike(n, t, e)
                }, BN.prototype.toArray = function toArray(t, e) {
                    return this.toArrayLike(Array, t, e)
                }, BN.prototype.toArrayLike = function toArrayLike(t, e, r) {
                    var n = this.byteLength(),
                        i = r || Math.max(1, n);
                    assert(n <= i, "byte array longer than desired length"), assert(i > 0, "Requested array length <= 0"), this.strip();
                    var o, a, s = "le" === e,
                        u = new t(i),
                        c = this.clone();
                    if (s) {
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[a] = o;
                        for (; a < i; a++) u[a] = 0
                    } else {
                        for (a = 0; a < i - n; a++) u[a] = 0;
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[i - a - 1] = o
                    }
                    return u
                }, Math.clz32 ? BN.prototype._countBits = function _countBits(t) {
                    return 32 - Math.clz32(t)
                } : BN.prototype._countBits = function _countBits(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, BN.prototype._zeroBits = function _zeroBits(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r
                }, BN.prototype.bitLength = function bitLength() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return 26 * (this.length - 1) + e
                }, BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8)
                }, BN.prototype.toTwos = function toTwos(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, BN.prototype.fromTwos = function fromTwos(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, BN.prototype.isNeg = function isNeg() {
                    return 0 !== this.negative
                }, BN.prototype.neg = function neg() {
                    return this.clone().ineg()
                }, BN.prototype.ineg = function ineg() {
                    return this.isZero() || (this.negative ^= 1), this
                }, BN.prototype.iuor = function iuor(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this.strip()
                }, BN.prototype.ior = function ior(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuor(t)
                }, BN.prototype.or = function or(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, BN.prototype.uor = function uor(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, BN.prototype.iuand = function iuand(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this.strip()
                }, BN.prototype.iand = function iand(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuand(t)
                }, BN.prototype.and = function and(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, BN.prototype.uand = function uand(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, BN.prototype.iuxor = function iuxor(t) {
                    var e, r;
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this.strip()
                }, BN.prototype.ixor = function ixor(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuxor(t)
                }, BN.prototype.xor = function xor(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, BN.prototype.uxor = function uxor(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, BN.prototype.inotn = function inotn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip()
                }, BN.prototype.notn = function notn(t) {
                    return this.clone().inotn(t)
                }, BN.prototype.setn = function setn(t, e) {
                    assert("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        n = t % 26;
                    return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip()
                }, BN.prototype.iadd = function iadd(t) {
                    var e, r, n;
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, BN.prototype.add = function add(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, BN.prototype.isub = function isub(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e = this.iadd(t);
                        return t.negative = 1, e._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var r, n, i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (r = this, n = t) : (r = t, n = this);
                    for (var o = 0, a = 0; a < n.length; a++) o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    for (; 0 !== o && a < r.length; a++) o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    if (0 === o && a < r.length && r !== this)
                        for (; a < r.length; a++) this.words[a] = r.words[a];
                    return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this.strip()
                }, BN.prototype.sub = function sub(t) {
                    return this.clone().isub(t)
                };
                var s = function comb10MulTo(t, e, r) {
                    var n, i, o, a = t.words,
                        s = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        h = 8191 & l,
                        d = l >>> 13,
                        p = 0 | a[1],
                        m = 8191 & p,
                        y = p >>> 13,
                        b = 0 | a[2],
                        g = 8191 & b,
                        v = b >>> 13,
                        w = 0 | a[3],
                        M = 8191 & w,
                        A = w >>> 13,
                        x = 0 | a[4],
                        B = 8191 & x,
                        E = x >>> 13,
                        k = 0 | a[5],
                        N = 8191 & k,
                        T = k >>> 13,
                        C = 0 | a[6],
                        P = 8191 & C,
                        I = C >>> 13,
                        O = 0 | a[7],
                        D = 8191 & O,
                        j = O >>> 13,
                        L = 0 | a[8],
                        U = 8191 & L,
                        H = L >>> 13,
                        q = 0 | a[9],
                        z = 8191 & q,
                        G = q >>> 13,
                        V = 0 | s[0],
                        J = 8191 & V,
                        W = V >>> 13,
                        Z = 0 | s[1],
                        X = 8191 & Z,
                        Y = Z >>> 13,
                        $ = 0 | s[2],
                        Q = 8191 & $,
                        tt = $ >>> 13,
                        et = 0 | s[3],
                        rt = 8191 & et,
                        nt = et >>> 13,
                        it = 0 | s[4],
                        ot = 8191 & it,
                        st = it >>> 13,
                        ut = 0 | s[5],
                        ct = 8191 & ut,
                        ht = ut >>> 13,
                        dt = 0 | s[6],
                        pt = 8191 & dt,
                        mt = dt >>> 13,
                        yt = 0 | s[7],
                        bt = 8191 & yt,
                        vt = yt >>> 13,
                        wt = 0 | s[8],
                        Mt = 8191 & wt,
                        _t = wt >>> 13,
                        At = 0 | s[9],
                        xt = 8191 & At,
                        Bt = At >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var Et = (c + (n = Math.imul(h, J)) | 0) + ((8191 & (i = (i = Math.imul(h, W)) + Math.imul(d, J) | 0)) << 13) | 0;
                    c = ((o = Math.imul(d, W)) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(m, J), i = (i = Math.imul(m, W)) + Math.imul(y, J) | 0, o = Math.imul(y, W);
                    var kt = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(d, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Y) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(g, J), i = (i = Math.imul(g, W)) + Math.imul(v, J) | 0, o = Math.imul(v, W), n = n + Math.imul(m, X) | 0, i = (i = i + Math.imul(m, Y) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, Y) | 0;
                    var Nt = (c + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, tt) | 0) + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(M, J), i = (i = Math.imul(M, W)) + Math.imul(A, J) | 0, o = Math.imul(A, W), n = n + Math.imul(g, X) | 0, i = (i = i + Math.imul(g, Y) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, Y) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0;
                    var St = (c + (n = n + Math.imul(h, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, nt) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, nt) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(B, J), i = (i = Math.imul(B, W)) + Math.imul(E, J) | 0, o = Math.imul(E, W), n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(g, Q) | 0, i = (i = i + Math.imul(g, tt) | 0) + Math.imul(v, Q) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                    var Tt = (c + (n = n + Math.imul(h, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, st) | 0) + Math.imul(d, ot) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, st) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(N, J), i = (i = Math.imul(N, W)) + Math.imul(T, J) | 0, o = Math.imul(T, W), n = n + Math.imul(B, X) | 0, i = (i = i + Math.imul(B, Y) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(g, rt) | 0, i = (i = i + Math.imul(g, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                    var Ct = (c + (n = n + Math.imul(h, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ht) | 0) + Math.imul(d, ct) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, ht) | 0) + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(P, J), i = (i = Math.imul(P, W)) + Math.imul(I, J) | 0, o = Math.imul(I, W), n = n + Math.imul(N, X) | 0, i = (i = i + Math.imul(N, Y) | 0) + Math.imul(T, X) | 0, o = o + Math.imul(T, Y) | 0, n = n + Math.imul(B, Q) | 0, i = (i = i + Math.imul(B, tt) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(M, rt) | 0, i = (i = i + Math.imul(M, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(g, ot) | 0, i = (i = i + Math.imul(g, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(m, ct) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, ht) | 0;
                    var Pt = (c + (n = n + Math.imul(h, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, mt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, mt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(D, J), i = (i = Math.imul(D, W)) + Math.imul(j, J) | 0, o = Math.imul(j, W), n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(N, Q) | 0, i = (i = i + Math.imul(N, tt) | 0) + Math.imul(T, Q) | 0, o = o + Math.imul(T, tt) | 0, n = n + Math.imul(B, rt) | 0, i = (i = i + Math.imul(B, nt) | 0) + Math.imul(E, rt) | 0, o = o + Math.imul(E, nt) | 0, n = n + Math.imul(M, ot) | 0, i = (i = i + Math.imul(M, st) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(g, ct) | 0, i = (i = i + Math.imul(g, ht) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(m, pt) | 0, i = (i = i + Math.imul(m, mt) | 0) + Math.imul(y, pt) | 0, o = o + Math.imul(y, mt) | 0;
                    var It = (c + (n = n + Math.imul(h, bt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, vt) | 0) + Math.imul(d, bt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, vt) | 0) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(U, J), i = (i = Math.imul(U, W)) + Math.imul(H, J) | 0, o = Math.imul(H, W), n = n + Math.imul(D, X) | 0, i = (i = i + Math.imul(D, Y) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, tt) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = (i = i + Math.imul(N, nt) | 0) + Math.imul(T, rt) | 0, o = o + Math.imul(T, nt) | 0, n = n + Math.imul(B, ot) | 0, i = (i = i + Math.imul(B, st) | 0) + Math.imul(E, ot) | 0, o = o + Math.imul(E, st) | 0, n = n + Math.imul(M, ct) | 0, i = (i = i + Math.imul(M, ht) | 0) + Math.imul(A, ct) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(g, pt) | 0, i = (i = i + Math.imul(g, mt) | 0) + Math.imul(v, pt) | 0, o = o + Math.imul(v, mt) | 0, n = n + Math.imul(m, bt) | 0, i = (i = i + Math.imul(m, vt) | 0) + Math.imul(y, bt) | 0, o = o + Math.imul(y, vt) | 0;
                    var Ot = (c + (n = n + Math.imul(h, Mt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, _t) | 0) + Math.imul(d, Mt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, _t) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(z, J), i = (i = Math.imul(z, W)) + Math.imul(G, J) | 0, o = Math.imul(G, W), n = n + Math.imul(U, X) | 0, i = (i = i + Math.imul(U, Y) | 0) + Math.imul(H, X) | 0, o = o + Math.imul(H, Y) | 0, n = n + Math.imul(D, Q) | 0, i = (i = i + Math.imul(D, tt) | 0) + Math.imul(j, Q) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(P, rt) | 0, i = (i = i + Math.imul(P, nt) | 0) + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = (i = i + Math.imul(N, st) | 0) + Math.imul(T, ot) | 0, o = o + Math.imul(T, st) | 0, n = n + Math.imul(B, ct) | 0, i = (i = i + Math.imul(B, ht) | 0) + Math.imul(E, ct) | 0, o = o + Math.imul(E, ht) | 0, n = n + Math.imul(M, pt) | 0, i = (i = i + Math.imul(M, mt) | 0) + Math.imul(A, pt) | 0, o = o + Math.imul(A, mt) | 0, n = n + Math.imul(g, bt) | 0, i = (i = i + Math.imul(g, vt) | 0) + Math.imul(v, bt) | 0, o = o + Math.imul(v, vt) | 0, n = n + Math.imul(m, Mt) | 0, i = (i = i + Math.imul(m, _t) | 0) + Math.imul(y, Mt) | 0, o = o + Math.imul(y, _t) | 0;
                    var Rt = (c + (n = n + Math.imul(h, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Bt) | 0) + Math.imul(d, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Bt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(z, X), i = (i = Math.imul(z, Y)) + Math.imul(G, X) | 0, o = Math.imul(G, Y), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, tt) | 0) + Math.imul(H, Q) | 0, o = o + Math.imul(H, tt) | 0, n = n + Math.imul(D, rt) | 0, i = (i = i + Math.imul(D, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(P, ot) | 0, i = (i = i + Math.imul(P, st) | 0) + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ct) | 0, i = (i = i + Math.imul(N, ht) | 0) + Math.imul(T, ct) | 0, o = o + Math.imul(T, ht) | 0, n = n + Math.imul(B, pt) | 0, i = (i = i + Math.imul(B, mt) | 0) + Math.imul(E, pt) | 0, o = o + Math.imul(E, mt) | 0, n = n + Math.imul(M, bt) | 0, i = (i = i + Math.imul(M, vt) | 0) + Math.imul(A, bt) | 0, o = o + Math.imul(A, vt) | 0, n = n + Math.imul(g, Mt) | 0, i = (i = i + Math.imul(g, _t) | 0) + Math.imul(v, Mt) | 0, o = o + Math.imul(v, _t) | 0;
                    var Ft = (c + (n = n + Math.imul(m, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, Bt) | 0) + Math.imul(y, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, Bt) | 0) + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(z, Q), i = (i = Math.imul(z, tt)) + Math.imul(G, Q) | 0, o = Math.imul(G, tt), n = n + Math.imul(U, rt) | 0, i = (i = i + Math.imul(U, nt) | 0) + Math.imul(H, rt) | 0, o = o + Math.imul(H, nt) | 0, n = n + Math.imul(D, ot) | 0, i = (i = i + Math.imul(D, st) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, st) | 0, n = n + Math.imul(P, ct) | 0, i = (i = i + Math.imul(P, ht) | 0) + Math.imul(I, ct) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, pt) | 0, i = (i = i + Math.imul(N, mt) | 0) + Math.imul(T, pt) | 0, o = o + Math.imul(T, mt) | 0, n = n + Math.imul(B, bt) | 0, i = (i = i + Math.imul(B, vt) | 0) + Math.imul(E, bt) | 0, o = o + Math.imul(E, vt) | 0, n = n + Math.imul(M, Mt) | 0, i = (i = i + Math.imul(M, _t) | 0) + Math.imul(A, Mt) | 0, o = o + Math.imul(A, _t) | 0;
                    var Dt = (c + (n = n + Math.imul(g, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(g, Bt) | 0) + Math.imul(v, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(v, Bt) | 0) + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(z, rt), i = (i = Math.imul(z, nt)) + Math.imul(G, rt) | 0, o = Math.imul(G, nt), n = n + Math.imul(U, ot) | 0, i = (i = i + Math.imul(U, st) | 0) + Math.imul(H, ot) | 0, o = o + Math.imul(H, st) | 0, n = n + Math.imul(D, ct) | 0, i = (i = i + Math.imul(D, ht) | 0) + Math.imul(j, ct) | 0, o = o + Math.imul(j, ht) | 0, n = n + Math.imul(P, pt) | 0, i = (i = i + Math.imul(P, mt) | 0) + Math.imul(I, pt) | 0, o = o + Math.imul(I, mt) | 0, n = n + Math.imul(N, bt) | 0, i = (i = i + Math.imul(N, vt) | 0) + Math.imul(T, bt) | 0, o = o + Math.imul(T, vt) | 0, n = n + Math.imul(B, Mt) | 0, i = (i = i + Math.imul(B, _t) | 0) + Math.imul(E, Mt) | 0, o = o + Math.imul(E, _t) | 0;
                    var jt = (c + (n = n + Math.imul(M, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, Bt) | 0) + Math.imul(A, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, Bt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(z, ot), i = (i = Math.imul(z, st)) + Math.imul(G, ot) | 0, o = Math.imul(G, st), n = n + Math.imul(U, ct) | 0, i = (i = i + Math.imul(U, ht) | 0) + Math.imul(H, ct) | 0, o = o + Math.imul(H, ht) | 0, n = n + Math.imul(D, pt) | 0, i = (i = i + Math.imul(D, mt) | 0) + Math.imul(j, pt) | 0, o = o + Math.imul(j, mt) | 0, n = n + Math.imul(P, bt) | 0, i = (i = i + Math.imul(P, vt) | 0) + Math.imul(I, bt) | 0, o = o + Math.imul(I, vt) | 0, n = n + Math.imul(N, Mt) | 0, i = (i = i + Math.imul(N, _t) | 0) + Math.imul(T, Mt) | 0, o = o + Math.imul(T, _t) | 0;
                    var Lt = (c + (n = n + Math.imul(B, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, Bt) | 0) + Math.imul(E, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, Bt) | 0) + (i >>> 13) | 0) + (Lt >>> 26) | 0, Lt &= 67108863, n = Math.imul(z, ct), i = (i = Math.imul(z, ht)) + Math.imul(G, ct) | 0, o = Math.imul(G, ht), n = n + Math.imul(U, pt) | 0, i = (i = i + Math.imul(U, mt) | 0) + Math.imul(H, pt) | 0, o = o + Math.imul(H, mt) | 0, n = n + Math.imul(D, bt) | 0, i = (i = i + Math.imul(D, vt) | 0) + Math.imul(j, bt) | 0, o = o + Math.imul(j, vt) | 0, n = n + Math.imul(P, Mt) | 0, i = (i = i + Math.imul(P, _t) | 0) + Math.imul(I, Mt) | 0, o = o + Math.imul(I, _t) | 0;
                    var Ut = (c + (n = n + Math.imul(N, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(N, Bt) | 0) + Math.imul(T, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(T, Bt) | 0) + (i >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, n = Math.imul(z, pt), i = (i = Math.imul(z, mt)) + Math.imul(G, pt) | 0, o = Math.imul(G, mt), n = n + Math.imul(U, bt) | 0, i = (i = i + Math.imul(U, vt) | 0) + Math.imul(H, bt) | 0, o = o + Math.imul(H, vt) | 0, n = n + Math.imul(D, Mt) | 0, i = (i = i + Math.imul(D, _t) | 0) + Math.imul(j, Mt) | 0, o = o + Math.imul(j, _t) | 0;
                    var Ht = (c + (n = n + Math.imul(P, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, Bt) | 0) + Math.imul(I, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, Bt) | 0) + (i >>> 13) | 0) + (Ht >>> 26) | 0, Ht &= 67108863, n = Math.imul(z, bt), i = (i = Math.imul(z, vt)) + Math.imul(G, bt) | 0, o = Math.imul(G, vt), n = n + Math.imul(U, Mt) | 0, i = (i = i + Math.imul(U, _t) | 0) + Math.imul(H, Mt) | 0, o = o + Math.imul(H, _t) | 0;
                    var qt = (c + (n = n + Math.imul(D, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(D, Bt) | 0) + Math.imul(j, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, Bt) | 0) + (i >>> 13) | 0) + (qt >>> 26) | 0, qt &= 67108863, n = Math.imul(z, Mt), i = (i = Math.imul(z, _t)) + Math.imul(G, Mt) | 0, o = Math.imul(G, _t);
                    var zt = (c + (n = n + Math.imul(U, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, Bt) | 0) + Math.imul(H, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(H, Bt) | 0) + (i >>> 13) | 0) + (zt >>> 26) | 0, zt &= 67108863;
                    var Gt = (c + (n = Math.imul(z, xt)) | 0) + ((8191 & (i = (i = Math.imul(z, Bt)) + Math.imul(G, xt) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(G, Bt)) + (i >>> 13) | 0) + (Gt >>> 26) | 0, Gt &= 67108863, u[0] = Et, u[1] = kt, u[2] = Nt, u[3] = St, u[4] = Tt, u[5] = Ct, u[6] = Pt, u[7] = It, u[8] = Ot, u[9] = Rt, u[10] = Ft, u[11] = Dt, u[12] = jt, u[13] = Lt, u[14] = Ut, u[15] = Ht, u[16] = qt, u[17] = zt, u[18] = Gt, 0 !== c && (u[19] = c, r.length++), r
                };

                function jumboMulTo(t, e, r) {
                    return (new FFTM).mulp(t, e, r)
                }

                function FFTM(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (s = smallMulTo), BN.prototype.mulTo = function mulTo(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? s(this, t, e) : r < 63 ? smallMulTo(this, t, e) : r < 1024 ? function bigMulTo(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var a = i;
                            i = 0;
                            for (var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                                var l = o - c,
                                    h = (0 | t.words[l]) * (0 | e.words[c]),
                                    d = 67108863 & h;
                                s = 67108863 & (d = d + s | 0), i += (a = (a = a + (h / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863
                            }
                            r.words[o] = s, n = a, a = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }(this, t, e) : jumboMulTo(this, t, e)
                }, FFTM.prototype.makeRBT = function makeRBT(t) {
                    for (var e = new Array(t), r = BN.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, FFTM.prototype.revBin = function revBin(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, FFTM.prototype.permute = function permute(t, e, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = e[t[a]], i[a] = r[t[a]]
                }, FFTM.prototype.transform = function transform(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var h = u, d = c, p = 0; p < a; p++) {
                                var m = r[l + p],
                                    y = n[l + p],
                                    b = r[l + p + a],
                                    g = n[l + p + a],
                                    v = h * b - d * g;
                                g = h * g + d * b, b = v, r[l + p] = m + b, n[l + p] = y + g, r[l + p + a] = m - b, n[l + p + a] = y - g, p !== s && (v = u * h - c * d, d = u * d + c * h, h = v)
                            }
                }, FFTM.prototype.guessLen13b = function guessLen13b(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, FFTM.prototype.conjugate = function conjugate(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, FFTM.prototype.normalize13b = function normalize13b(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, FFTM.prototype.convert13b = function convert13b(t, e, r, n) {
                    for (var i = 0, o = 0; o < e; o++) i += 0 | t[o], r[2 * o] = 8191 & i, i >>>= 13, r[2 * o + 1] = 8191 & i, i >>>= 13;
                    for (o = 2 * e; o < n; ++o) r[o] = 0;
                    assert(0 === i), assert(0 == (-8192 & i))
                }, FFTM.prototype.stub = function stub(t) {
                    for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, FFTM.prototype.mulp = function mulp(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = new Array(n),
                        s = new Array(n),
                        u = new Array(n),
                        c = new Array(n),
                        l = new Array(n),
                        h = new Array(n),
                        d = r.words;
                    d.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var p = 0; p < n; p++) {
                        var m = s[p] * l[p] - u[p] * h[p];
                        u[p] = s[p] * h[p] + u[p] * l[p], s[p] = m
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, d, o, n, i), this.conjugate(d, o, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                }, BN.prototype.mul = function mul(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                }, BN.prototype.mulf = function mulf(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), jumboMulTo(this, t, e)
                }, BN.prototype.imul = function imul(t) {
                    return this.clone().mulTo(t, this)
                }, BN.prototype.imuln = function imuln(t) {
                    assert("number" == typeof t), assert(t < 67108864);
                    for (var e = 0, r = 0; r < this.length; r++) {
                        var n = (0 | this.words[r]) * t,
                            i = (67108863 & n) + (67108863 & e);
                        e >>= 26, e += n / 67108864 | 0, e += i >>> 26, this.words[r] = 67108863 & i
                    }
                    return 0 !== e && (this.words[r] = e, this.length++), this
                }, BN.prototype.muln = function muln(t) {
                    return this.clone().imuln(t)
                }, BN.prototype.sqr = function sqr() {
                    return this.mul(this)
                }, BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone())
                }, BN.prototype.pow = function pow(t) {
                    var e = function toBitArray(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }(t);
                    if (0 === e.length) return new BN(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, BN.prototype.iushln = function iushln(t) {
                    assert("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        n = (t - r) / 26,
                        i = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & i,
                                s = (0 | this.words[e]) - a << r;
                            this.words[e] = s | o, o = a >>> 26 - r
                        }
                        o && (this.words[e] = o, this.length++)
                    }
                    if (0 !== n) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                        for (e = 0; e < n; e++) this.words[e] = 0;
                        this.length += n
                    }
                    return this.strip()
                }, BN.prototype.ishln = function ishln(t) {
                    return assert(0 === this.negative), this.iushln(t)
                }, BN.prototype.iushrn = function iushrn(t, e, r) {
                    var n;
                    assert("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                    var i = t % 26,
                        o = Math.min((t - i) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> i << i,
                        s = r;
                    if (n -= o, n = Math.max(0, n), s) {
                        for (var u = 0; u < o; u++) s.words[u] = this.words[u];
                        s.length = o
                    }
                    if (0 === o);
                    else if (this.length > o)
                        for (this.length -= o, u = 0; u < this.length; u++) this.words[u] = this.words[u + o];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= n); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - i | l >>> i, c = l & a
                    }
                    return s && 0 !== c && (s.words[s.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                }, BN.prototype.ishrn = function ishrn(t, e, r) {
                    return assert(0 === this.negative), this.iushrn(t, e, r)
                }, BN.prototype.shln = function shln(t) {
                    return this.clone().ishln(t)
                }, BN.prototype.ushln = function ushln(t) {
                    return this.clone().iushln(t)
                }, BN.prototype.shrn = function shrn(t) {
                    return this.clone().ishrn(t)
                }, BN.prototype.ushrn = function ushrn(t) {
                    return this.clone().iushrn(t)
                }, BN.prototype.testn = function testn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }, BN.prototype.imaskn = function imaskn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var n = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= n
                    }
                    return this.strip()
                }, BN.prototype.maskn = function maskn(t) {
                    return this.clone().imaskn(t)
                }, BN.prototype.iaddn = function iaddn(t) {
                    return assert("number" == typeof t), assert(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                }, BN.prototype._iaddn = function _iaddn(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, BN.prototype.isubn = function isubn(t) {
                    if (assert("number" == typeof t), assert(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this.strip()
                }, BN.prototype.addn = function addn(t) {
                    return this.clone().iaddn(t)
                }, BN.prototype.subn = function subn(t) {
                    return this.clone().isubn(t)
                }, BN.prototype.iabs = function iabs() {
                    return this.negative = 0, this
                }, BN.prototype.abs = function abs() {
                    return this.clone().iabs()
                }, BN.prototype._ishlnsubmul = function _ishlnsubmul(t, e, r) {
                    var n, i, o = t.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < t.length; n++) {
                        i = (0 | this.words[n + r]) + a;
                        var s = (0 | t.words[n]) * e;
                        a = ((i -= 67108863 & s) >> 26) - (s / 67108864 | 0), this.words[n + r] = 67108863 & i
                    }
                    for (; n < this.length - r; n++) a = (i = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & i;
                    if (0 === a) return this.strip();
                    for (assert(-1 === a), a = 0, n = 0; n < this.length; n++) a = (i = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & i;
                    return this.negative = 1, this.strip()
                }, BN.prototype._wordDiv = function _wordDiv(t, e) {
                    var r = (this.length, t.length),
                        n = this.clone(),
                        i = t,
                        o = 0 | i.words[i.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                    var a, s = n.length - i.length;
                    if ("mod" !== e) {
                        (a = new BN(null)).length = s + 1, a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++) a.words[u] = 0
                    }
                    var c = n.clone()._ishlnsubmul(i, 1, s);
                    0 === c.negative && (n = c, a && (a.words[s] = 1));
                    for (var l = s - 1; l >= 0; l--) {
                        var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                        for (h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;) h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                        a && (a.words[l] = h)
                    }
                    return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                        div: a || null,
                        mod: n
                    }
                }, BN.prototype.divmod = function divmod(t, e, r) {
                    return assert(!t.isZero()), this.isZero() ? {
                        div: new BN(0),
                        mod: new BN(0)
                    } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), "mod" !== e && (n = o.div.neg()), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(t)), {
                        div: n,
                        mod: i
                    }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), "mod" !== e && (n = o.div.neg()), {
                        div: n,
                        mod: o.mod
                    }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(t)), {
                        div: o.div,
                        mod: i
                    }) : t.length > this.length || this.cmp(t) < 0 ? {
                        div: new BN(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new BN(this.modn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new BN(this.modn(t.words[0]))
                    } : this._wordDiv(t, e);
                    var n, i, o
                }, BN.prototype.div = function div(t) {
                    return this.divmod(t, "div", !1).div
                }, BN.prototype.mod = function mod(t) {
                    return this.divmod(t, "mod", !1).mod
                }, BN.prototype.umod = function umod(t) {
                    return this.divmod(t, "mod", !0).mod
                }, BN.prototype.divRound = function divRound(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, BN.prototype.modn = function modn(t) {
                    assert(t <= 67108863);
                    for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) r = (e * r + (0 | this.words[n])) % t;
                    return r
                }, BN.prototype.idivn = function idivn(t) {
                    assert(t <= 67108863);
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = (0 | this.words[r]) + 67108864 * e;
                        this.words[r] = n / t | 0, e = n % t
                    }
                    return this.strip()
                }, BN.prototype.divn = function divn(t) {
                    return this.clone().idivn(t)
                }, BN.prototype.egcd = function egcd(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n = new BN(1), i = new BN(0), o = new BN(0), a = new BN(1), s = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++s;
                    for (var u = r.clone(), c = e.clone(); !e.isZero();) {
                        for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                        if (l > 0)
                            for (e.iushrn(l); l-- > 0;)(n.isOdd() || i.isOdd()) && (n.iadd(u), i.isub(c)), n.iushrn(1), i.iushrn(1);
                        for (var d = 0, p = 1; 0 == (r.words[0] & p) && d < 26; ++d, p <<= 1);
                        if (d > 0)
                            for (r.iushrn(d); d-- > 0;)(o.isOdd() || a.isOdd()) && (o.iadd(u), a.isub(c)), o.iushrn(1), a.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), n.isub(o), i.isub(a)) : (r.isub(e), o.isub(n), a.isub(i))
                    }
                    return {
                        a: o,
                        b: a,
                        gcd: r.iushln(s)
                    }
                }, BN.prototype._invmp = function _invmp(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n, i = new BN(1), o = new BN(0), a = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var s = 0, u = 1; 0 == (e.words[0] & u) && s < 26; ++s, u <<= 1);
                        if (s > 0)
                            for (e.iushrn(s); s-- > 0;) i.isOdd() && i.iadd(a), i.iushrn(1);
                        for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(a), o.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(o)) : (r.isub(e), o.isub(i))
                    }
                    return (n = 0 === e.cmpn(1) ? i : o).cmpn(0) < 0 && n.iadd(t), n
                }, BN.prototype.gcd = function gcd(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, BN.prototype.invm = function invm(t) {
                    return this.egcd(t).a.umod(t)
                }, BN.prototype.isEven = function isEven() {
                    return 0 == (1 & this.words[0])
                }, BN.prototype.isOdd = function isOdd() {
                    return 1 == (1 & this.words[0])
                }, BN.prototype.andln = function andln(t) {
                    return this.words[0] & t
                }, BN.prototype.bincn = function bincn(t) {
                    assert("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                    for (var i = n, o = r; 0 !== i && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        i = (a += i) >>> 26, a &= 67108863, this.words[o] = a
                    }
                    return 0 !== i && (this.words[o] = i, this.length++), this
                }, BN.prototype.isZero = function isZero() {
                    return 1 === this.length && 0 === this.words[0]
                }, BN.prototype.cmpn = function cmpn(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this.strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), assert(t <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        e = n === t ? 0 : n < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.cmp = function cmp(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.ucmp = function ucmp(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, BN.prototype.gtn = function gtn(t) {
                    return 1 === this.cmpn(t)
                }, BN.prototype.gt = function gt(t) {
                    return 1 === this.cmp(t)
                }, BN.prototype.gten = function gten(t) {
                    return this.cmpn(t) >= 0
                }, BN.prototype.gte = function gte(t) {
                    return this.cmp(t) >= 0
                }, BN.prototype.ltn = function ltn(t) {
                    return -1 === this.cmpn(t)
                }, BN.prototype.lt = function lt(t) {
                    return -1 === this.cmp(t)
                }, BN.prototype.lten = function lten(t) {
                    return this.cmpn(t) <= 0
                }, BN.prototype.lte = function lte(t) {
                    return this.cmp(t) <= 0
                }, BN.prototype.eqn = function eqn(t) {
                    return 0 === this.cmpn(t)
                }, BN.prototype.eq = function eq(t) {
                    return 0 === this.cmp(t)
                }, BN.red = function red(t) {
                    return new Red(t)
                }, BN.prototype.toRed = function toRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, BN.prototype.fromRed = function fromRed() {
                    return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, BN.prototype._forceRed = function _forceRed(t) {
                    return this.red = t, this
                }, BN.prototype.forceRed = function forceRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, BN.prototype.redAdd = function redAdd(t) {
                    return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, BN.prototype.redIAdd = function redIAdd(t) {
                    return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, BN.prototype.redSub = function redSub(t) {
                    return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, BN.prototype.redISub = function redISub(t) {
                    return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, BN.prototype.redShl = function redShl(t) {
                    return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, BN.prototype.redMul = function redMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, BN.prototype.redIMul = function redIMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, BN.prototype.redSqr = function redSqr() {
                    return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, BN.prototype.redISqr = function redISqr() {
                    return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, BN.prototype.redSqrt = function redSqrt() {
                    return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, BN.prototype.redInvm = function redInvm() {
                    return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, BN.prototype.redNeg = function redNeg() {
                    return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, BN.prototype.redPow = function redPow(t) {
                    return assert(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var u = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function MPrime(t, e) {
                    this.name = t, this.p = new BN(e, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function Red(t) {
                    if ("string" == typeof t) {
                        var e = BN._prime(t);
                        this.m = e.p, this.prime = e
                    } else assert(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function Mont(t) {
                    Red.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                MPrime.prototype._tmp = function _tmp() {
                    var t = new BN(null);
                    return t.words = new Array(Math.ceil(this.n / 13)), t
                }, MPrime.prototype.ireduce = function ireduce(t) {
                    var e, r = t;
                    do {
                        this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                }, MPrime.prototype.split = function split(t, e) {
                    t.iushrn(this.n, 0, e)
                }, MPrime.prototype.imulK = function imulK(t) {
                    return t.imul(this.k)
                }, inherits(K256, MPrime), K256.prototype.split = function split(t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++) e.words[n] = t.words[n];
                    if (e.length = r, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                    var i = t.words[9];
                    for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, K256.prototype.imulK = function imulK(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function imulK(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 19 * (0 | t.words[r]) + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, BN._prime = function prime(t) {
                    if (u[t]) return u[t];
                    var prime;
                    if ("k256" === t) prime = new K256;
                    else if ("p224" === t) prime = new P224;
                    else if ("p192" === t) prime = new P192;
                    else {
                        if ("p25519" !== t) throw new Error("Unknown prime " + t);
                        prime = new P25519
                    }
                    return u[t] = prime, prime
                }, Red.prototype._verify1 = function _verify1(t) {
                    assert(0 === t.negative, "red works only with positives"), assert(t.red, "red works only with red numbers")
                }, Red.prototype._verify2 = function _verify2(t, e) {
                    assert(0 == (t.negative | e.negative), "red works only with positives"), assert(t.red && t.red === e.red, "red works only with red numbers")
                }, Red.prototype.imod = function imod(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                }, Red.prototype.neg = function neg(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, Red.prototype.add = function add(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, Red.prototype.iadd = function iadd(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, Red.prototype.sub = function sub(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                }, Red.prototype.isub = function isub(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r
                }, Red.prototype.shl = function shl(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, Red.prototype.imul = function imul(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, Red.prototype.mul = function mul(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, Red.prototype.isqr = function isqr(t) {
                    return this.imul(t, t.clone())
                }, Red.prototype.sqr = function sqr(t) {
                    return this.mul(t, t)
                }, Red.prototype.sqrt = function sqrt(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (assert(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var n = this.m.subn(1), i = 0; !n.isZero() && 0 === n.andln(1);) i++, n.iushrn(1);
                    assert(!n.isZero());
                    var o = new BN(1).toRed(this),
                        a = o.redNeg(),
                        s = this.m.subn(1).iushrn(1),
                        u = this.m.bitLength();
                    for (u = new BN(2 * u * u).toRed(this); 0 !== this.pow(u, s).cmp(a);) u.redIAdd(a);
                    for (var c = this.pow(u, n), l = this.pow(t, n.addn(1).iushrn(1)), h = this.pow(t, n), d = i; 0 !== h.cmp(o);) {
                        for (var p = h, m = 0; 0 !== p.cmp(o); m++) p = p.redSqr();
                        assert(m < d);
                        var y = this.pow(c, new BN(1).iushln(d - m - 1));
                        l = l.redMul(y), c = y.redSqr(), h = h.redMul(c), d = m
                    }
                    return l
                }, Red.prototype.invm = function invm(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, Red.prototype.pow = function pow(t, e) {
                    if (e.isZero()) return new BN(1).toRed(this);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = new Array(16);
                    r[0] = new BN(1).toRed(this), r[1] = t;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], t);
                    var i = r[0],
                        o = 0,
                        a = 0,
                        s = e.bitLength() % 26;
                    for (0 === s && (s = 26), n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = s - 1; c >= 0; c--) {
                            var l = u >> c & 1;
                            i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 === ++a || 0 === n && 0 === c) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0
                        }
                        s = 26
                    }
                    return i
                }, Red.prototype.convertTo = function convertTo(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, Red.prototype.convertFrom = function convertFrom(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, BN.mont = function mont(t) {
                    return new Mont(t)
                }, inherits(Mont, Red), Mont.prototype.convertTo = function convertTo(t) {
                    return this.imod(t.ushln(this.shift))
                }, Mont.prototype.convertFrom = function convertFrom(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, Mont.prototype.imul = function imul(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.mul = function mul(t, e) {
                    if (t.isZero() || e.isZero()) return new BN(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.invm = function invm(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t, this)
        }).call(this, r(8)(t))
    }, function (t, e, r) {
        (function (t, r) {
            var n;
            ! function () {
                var i = "object" == typeof self && self.self === self && self || "object" == typeof t && t.global === t && t || this || {},
                    o = i._,
                    a = Array.prototype,
                    s = Object.prototype,
                    u = "undefined" != typeof Symbol ? Symbol.prototype : null,
                    c = a.push,
                    l = a.slice,
                    h = s.toString,
                    d = s.hasOwnProperty,
                    p = Array.isArray,
                    m = Object.keys,
                    y = Object.create,
                    Ctor = function () {},
                    _ = function (t) {
                        return t instanceof _ ? t : this instanceof _ ? void(this._wrapped = t) : new _(t)
                    };
                e.nodeType ? i._ = _ : (!r.nodeType && r.exports && (e = r.exports = _), e._ = _), _.VERSION = "1.9.1";
                var b, optimizeCb = function (t, e, r) {
                        if (void 0 === e) return t;
                        switch (null == r ? 3 : r) {
                            case 1:
                                return function (r) {
                                    return t.call(e, r)
                                };
                            case 3:
                                return function (r, n, i) {
                                    return t.call(e, r, n, i)
                                };
                            case 4:
                                return function (r, n, i, o) {
                                    return t.call(e, r, n, i, o)
                                }
                        }
                        return function () {
                            return t.apply(e, arguments)
                        }
                    },
                    cb = function (t, e, r) {
                        return _.iteratee !== b ? _.iteratee(t, e) : null == t ? _.identity : _.isFunction(t) ? optimizeCb(t, e, r) : _.isObject(t) && !_.isArray(t) ? _.matcher(t) : _.property(t)
                    };
                _.iteratee = b = function (t, e) {
                    return cb(t, e, 1 / 0)
                };
                var restArguments = function (t, e) {
                        return e = null == e ? t.length - 1 : +e,
                            function () {
                                for (var r = Math.max(arguments.length - e, 0), n = Array(r), i = 0; i < r; i++) n[i] = arguments[i + e];
                                switch (e) {
                                    case 0:
                                        return t.call(this, n);
                                    case 1:
                                        return t.call(this, arguments[0], n);
                                    case 2:
                                        return t.call(this, arguments[0], arguments[1], n)
                                }
                                var o = Array(e + 1);
                                for (i = 0; i < e; i++) o[i] = arguments[i];
                                return o[e] = n, t.apply(this, o)
                            }
                    },
                    baseCreate = function (t) {
                        if (!_.isObject(t)) return {};
                        if (y) return y(t);
                        Ctor.prototype = t;
                        var e = new Ctor;
                        return Ctor.prototype = null, e
                    },
                    shallowProperty = function (t) {
                        return function (e) {
                            return null == e ? void 0 : e[t]
                        }
                    },
                    has = function (t, e) {
                        return null != t && d.call(t, e)
                    },
                    deepGet = function (t, e) {
                        for (var r = e.length, n = 0; n < r; n++) {
                            if (null == t) return;
                            t = t[e[n]]
                        }
                        return r ? t : void 0
                    },
                    g = Math.pow(2, 53) - 1,
                    v = shallowProperty("length"),
                    isArrayLike = function (t) {
                        var e = v(t);
                        return "number" == typeof e && e >= 0 && e <= g
                    };
                _.each = _.forEach = function (t, e, r) {
                    var n, i;
                    if (e = optimizeCb(e, r), isArrayLike(t))
                        for (n = 0, i = t.length; n < i; n++) e(t[n], n, t);
                    else {
                        var o = _.keys(t);
                        for (n = 0, i = o.length; n < i; n++) e(t[o[n]], o[n], t)
                    }
                    return t
                }, _.map = _.collect = function (t, e, r) {
                    e = cb(e, r);
                    for (var n = !isArrayLike(t) && _.keys(t), i = (n || t).length, o = Array(i), a = 0; a < i; a++) {
                        var s = n ? n[a] : a;
                        o[a] = e(t[s], s, t)
                    }
                    return o
                };
                var createReduce = function (t) {
                    var reducer = function (e, r, n, i) {
                        var o = !isArrayLike(e) && _.keys(e),
                            a = (o || e).length,
                            s = t > 0 ? 0 : a - 1;
                        for (i || (n = e[o ? o[s] : s], s += t); s >= 0 && s < a; s += t) {
                            var u = o ? o[s] : s;
                            n = r(n, e[u], u, e)
                        }
                        return n
                    };
                    return function (t, e, r, n) {
                        var i = arguments.length >= 3;
                        return reducer(t, optimizeCb(e, n, 4), r, i)
                    }
                };
                _.reduce = _.foldl = _.inject = createReduce(1), _.reduceRight = _.foldr = createReduce(-1), _.find = _.detect = function (t, e, r) {
                    var n = (isArrayLike(t) ? _.findIndex : _.findKey)(t, e, r);
                    if (void 0 !== n && -1 !== n) return t[n]
                }, _.filter = _.select = function (t, e, r) {
                    var n = [];
                    return e = cb(e, r), _.each(t, (function (t, r, i) {
                        e(t, r, i) && n.push(t)
                    })), n
                }, _.reject = function (t, e, r) {
                    return _.filter(t, _.negate(cb(e)), r)
                }, _.every = _.all = function (t, e, r) {
                    e = cb(e, r);
                    for (var n = !isArrayLike(t) && _.keys(t), i = (n || t).length, o = 0; o < i; o++) {
                        var a = n ? n[o] : o;
                        if (!e(t[a], a, t)) return !1
                    }
                    return !0
                }, _.some = _.any = function (t, e, r) {
                    e = cb(e, r);
                    for (var n = !isArrayLike(t) && _.keys(t), i = (n || t).length, o = 0; o < i; o++) {
                        var a = n ? n[o] : o;
                        if (e(t[a], a, t)) return !0
                    }
                    return !1
                }, _.contains = _.includes = _.include = function (t, e, r, n) {
                    return isArrayLike(t) || (t = _.values(t)), ("number" != typeof r || n) && (r = 0), _.indexOf(t, e, r) >= 0
                }, _.invoke = restArguments((function (t, e, r) {
                    var n, i;
                    return _.isFunction(e) ? i = e : _.isArray(e) && (n = e.slice(0, -1), e = e[e.length - 1]), _.map(t, (function (t) {
                        var o = i;
                        if (!o) {
                            if (n && n.length && (t = deepGet(t, n)), null == t) return;
                            o = t[e]
                        }
                        return null == o ? o : o.apply(t, r)
                    }))
                })), _.pluck = function (t, e) {
                    return _.map(t, _.property(e))
                }, _.where = function (t, e) {
                    return _.filter(t, _.matcher(e))
                }, _.findWhere = function (t, e) {
                    return _.find(t, _.matcher(e))
                }, _.max = function (t, e, r) {
                    var n, i, o = -1 / 0,
                        a = -1 / 0;
                    if (null == e || "number" == typeof e && "object" != typeof t[0] && null != t)
                        for (var s = 0, u = (t = isArrayLike(t) ? t : _.values(t)).length; s < u; s++) null != (n = t[s]) && n > o && (o = n);
                    else e = cb(e, r), _.each(t, (function (t, r, n) {
                        ((i = e(t, r, n)) > a || i === -1 / 0 && o === -1 / 0) && (o = t, a = i)
                    }));
                    return o
                }, _.min = function (t, e, r) {
                    var n, i, o = 1 / 0,
                        a = 1 / 0;
                    if (null == e || "number" == typeof e && "object" != typeof t[0] && null != t)
                        for (var s = 0, u = (t = isArrayLike(t) ? t : _.values(t)).length; s < u; s++) null != (n = t[s]) && n < o && (o = n);
                    else e = cb(e, r), _.each(t, (function (t, r, n) {
                        ((i = e(t, r, n)) < a || i === 1 / 0 && o === 1 / 0) && (o = t, a = i)
                    }));
                    return o
                }, _.shuffle = function (t) {
                    return _.sample(t, 1 / 0)
                }, _.sample = function (t, e, r) {
                    if (null == e || r) return isArrayLike(t) || (t = _.values(t)), t[_.random(t.length - 1)];
                    var n = isArrayLike(t) ? _.clone(t) : _.values(t),
                        i = v(n);
                    e = Math.max(Math.min(e, i), 0);
                    for (var o = i - 1, a = 0; a < e; a++) {
                        var s = _.random(a, o),
                            u = n[a];
                        n[a] = n[s], n[s] = u
                    }
                    return n.slice(0, e)
                }, _.sortBy = function (t, e, r) {
                    var n = 0;
                    return e = cb(e, r), _.pluck(_.map(t, (function (t, r, i) {
                        return {
                            value: t,
                            index: n++,
                            criteria: e(t, r, i)
                        }
                    })).sort((function (t, e) {
                        var r = t.criteria,
                            n = e.criteria;
                        if (r !== n) {
                            if (r > n || void 0 === r) return 1;
                            if (r < n || void 0 === n) return -1
                        }
                        return t.index - e.index
                    })), "value")
                };
                var group = function (t, e) {
                    return function (r, n, i) {
                        var o = e ? [
                            [],
                            []
                        ] : {};
                        return n = cb(n, i), _.each(r, (function (e, i) {
                            var a = n(e, i, r);
                            t(o, e, a)
                        })), o
                    }
                };
                _.groupBy = group((function (t, e, r) {
                    has(t, r) ? t[r].push(e) : t[r] = [e]
                })), _.indexBy = group((function (t, e, r) {
                    t[r] = e
                })), _.countBy = group((function (t, e, r) {
                    has(t, r) ? t[r]++ : t[r] = 1
                }));
                var w = /[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;
                _.toArray = function (t) {
                    return t ? _.isArray(t) ? l.call(t) : _.isString(t) ? t.match(w) : isArrayLike(t) ? _.map(t, _.identity) : _.values(t) : []
                }, _.size = function (t) {
                    return null == t ? 0 : isArrayLike(t) ? t.length : _.keys(t).length
                }, _.partition = group((function (t, e, r) {
                    t[r ? 0 : 1].push(e)
                }), !0), _.first = _.head = _.take = function (t, e, r) {
                    return null == t || t.length < 1 ? null == e ? void 0 : [] : null == e || r ? t[0] : _.initial(t, t.length - e)
                }, _.initial = function (t, e, r) {
                    return l.call(t, 0, Math.max(0, t.length - (null == e || r ? 1 : e)))
                }, _.last = function (t, e, r) {
                    return null == t || t.length < 1 ? null == e ? void 0 : [] : null == e || r ? t[t.length - 1] : _.rest(t, Math.max(0, t.length - e))
                }, _.rest = _.tail = _.drop = function (t, e, r) {
                    return l.call(t, null == e || r ? 1 : e)
                }, _.compact = function (t) {
                    return _.filter(t, Boolean)
                };
                var flatten = function (t, e, r, n) {
                    for (var i = (n = n || []).length, o = 0, a = v(t); o < a; o++) {
                        var s = t[o];
                        if (isArrayLike(s) && (_.isArray(s) || _.isArguments(s)))
                            if (e)
                                for (var u = 0, c = s.length; u < c;) n[i++] = s[u++];
                            else flatten(s, e, r, n), i = n.length;
                        else r || (n[i++] = s)
                    }
                    return n
                };
                _.flatten = function (t, e) {
                    return flatten(t, e, !1)
                }, _.without = restArguments((function (t, e) {
                    return _.difference(t, e)
                })), _.uniq = _.unique = function (t, e, r, n) {
                    _.isBoolean(e) || (n = r, r = e, e = !1), null != r && (r = cb(r, n));
                    for (var i = [], o = [], a = 0, s = v(t); a < s; a++) {
                        var u = t[a],
                            c = r ? r(u, a, t) : u;
                        e && !r ? (a && o === c || i.push(u), o = c) : r ? _.contains(o, c) || (o.push(c), i.push(u)) : _.contains(i, u) || i.push(u)
                    }
                    return i
                }, _.union = restArguments((function (t) {
                    return _.uniq(flatten(t, !0, !0))
                })), _.intersection = function (t) {
                    for (var e = [], r = arguments.length, n = 0, i = v(t); n < i; n++) {
                        var o = t[n];
                        if (!_.contains(e, o)) {
                            var a;
                            for (a = 1; a < r && _.contains(arguments[a], o); a++);
                            a === r && e.push(o)
                        }
                    }
                    return e
                }, _.difference = restArguments((function (t, e) {
                    return e = flatten(e, !0, !0), _.filter(t, (function (t) {
                        return !_.contains(e, t)
                    }))
                })), _.unzip = function (t) {
                    for (var e = t && _.max(t, v).length || 0, r = Array(e), n = 0; n < e; n++) r[n] = _.pluck(t, n);
                    return r
                }, _.zip = restArguments(_.unzip), _.object = function (t, e) {
                    for (var r = {}, n = 0, i = v(t); n < i; n++) e ? r[t[n]] = e[n] : r[t[n][0]] = t[n][1];
                    return r
                };
                var createPredicateIndexFinder = function (t) {
                    return function (e, r, n) {
                        r = cb(r, n);
                        for (var i = v(e), o = t > 0 ? 0 : i - 1; o >= 0 && o < i; o += t)
                            if (r(e[o], o, e)) return o;
                        return -1
                    }
                };
                _.findIndex = createPredicateIndexFinder(1), _.findLastIndex = createPredicateIndexFinder(-1), _.sortedIndex = function (t, e, r, n) {
                    for (var i = (r = cb(r, n, 1))(e), o = 0, a = v(t); o < a;) {
                        var s = Math.floor((o + a) / 2);
                        r(t[s]) < i ? o = s + 1 : a = s
                    }
                    return o
                };
                var createIndexFinder = function (t, e, r) {
                    return function (n, i, o) {
                        var a = 0,
                            s = v(n);
                        if ("number" == typeof o) t > 0 ? a = o >= 0 ? o : Math.max(o + s, a) : s = o >= 0 ? Math.min(o + 1, s) : o + s + 1;
                        else if (r && o && s) return n[o = r(n, i)] === i ? o : -1;
                        if (i != i) return (o = e(l.call(n, a, s), _.isNaN)) >= 0 ? o + a : -1;
                        for (o = t > 0 ? a : s - 1; o >= 0 && o < s; o += t)
                            if (n[o] === i) return o;
                        return -1
                    }
                };
                _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex), _.lastIndexOf = createIndexFinder(-1, _.findLastIndex), _.range = function (t, e, r) {
                    null == e && (e = t || 0, t = 0), r || (r = e < t ? -1 : 1);
                    for (var n = Math.max(Math.ceil((e - t) / r), 0), i = Array(n), o = 0; o < n; o++, t += r) i[o] = t;
                    return i
                }, _.chunk = function (t, e) {
                    if (null == e || e < 1) return [];
                    for (var r = [], n = 0, i = t.length; n < i;) r.push(l.call(t, n, n += e));
                    return r
                };
                var executeBound = function (t, e, r, n, i) {
                    if (!(n instanceof e)) return t.apply(r, i);
                    var o = baseCreate(t.prototype),
                        a = t.apply(o, i);
                    return _.isObject(a) ? a : o
                };
                _.bind = restArguments((function (t, e, r) {
                    if (!_.isFunction(t)) throw new TypeError("Bind must be called on a function");
                    var n = restArguments((function (i) {
                        return executeBound(t, n, e, this, r.concat(i))
                    }));
                    return n
                })), _.partial = restArguments((function (t, e) {
                    var r = _.partial.placeholder,
                        bound = function () {
                            for (var n = 0, i = e.length, o = Array(i), a = 0; a < i; a++) o[a] = e[a] === r ? arguments[n++] : e[a];
                            for (; n < arguments.length;) o.push(arguments[n++]);
                            return executeBound(t, bound, this, this, o)
                        };
                    return bound
                })), _.partial.placeholder = _, _.bindAll = restArguments((function (t, e) {
                    var r = (e = flatten(e, !1, !1)).length;
                    if (r < 1) throw new Error("bindAll must be passed function names");
                    for (; r--;) {
                        var n = e[r];
                        t[n] = _.bind(t[n], t)
                    }
                })), _.memoize = function (t, e) {
                    var memoize = function (r) {
                        var n = memoize.cache,
                            i = "" + (e ? e.apply(this, arguments) : r);
                        return has(n, i) || (n[i] = t.apply(this, arguments)), n[i]
                    };
                    return memoize.cache = {}, memoize
                }, _.delay = restArguments((function (t, e, r) {
                    return setTimeout((function () {
                        return t.apply(null, r)
                    }), e)
                })), _.defer = _.partial(_.delay, _, 1), _.throttle = function (t, e, r) {
                    var n, i, o, a, s = 0;
                    r || (r = {});
                    var later = function () {
                            s = !1 === r.leading ? 0 : _.now(), n = null, a = t.apply(i, o), n || (i = o = null)
                        },
                        throttled = function () {
                            var u = _.now();
                            s || !1 !== r.leading || (s = u);
                            var c = e - (u - s);
                            return i = this, o = arguments, c <= 0 || c > e ? (n && (clearTimeout(n), n = null), s = u, a = t.apply(i, o), n || (i = o = null)) : n || !1 === r.trailing || (n = setTimeout(later, c)), a
                        };
                    return throttled.cancel = function () {
                        clearTimeout(n), s = 0, n = i = o = null
                    }, throttled
                }, _.debounce = function (t, e, r) {
                    var n, i, later = function (e, r) {
                            n = null, r && (i = t.apply(e, r))
                        },
                        o = restArguments((function (o) {
                            if (n && clearTimeout(n), r) {
                                var a = !n;
                                n = setTimeout(later, e), a && (i = t.apply(this, o))
                            } else n = _.delay(later, e, this, o);
                            return i
                        }));
                    return o.cancel = function () {
                        clearTimeout(n), n = null
                    }, o
                }, _.wrap = function (t, e) {
                    return _.partial(e, t)
                }, _.negate = function (t) {
                    return function () {
                        return !t.apply(this, arguments)
                    }
                }, _.compose = function () {
                    var t = arguments,
                        e = t.length - 1;
                    return function () {
                        for (var r = e, n = t[e].apply(this, arguments); r--;) n = t[r].call(this, n);
                        return n
                    }
                }, _.after = function (t, e) {
                    return function () {
                        if (--t < 1) return e.apply(this, arguments)
                    }
                }, _.before = function (t, e) {
                    var r;
                    return function () {
                        return --t > 0 && (r = e.apply(this, arguments)), t <= 1 && (e = null), r
                    }
                }, _.once = _.partial(_.before, 2), _.restArguments = restArguments;
                var M = !{
                        toString: null
                    }.propertyIsEnumerable("toString"),
                    A = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"],
                    collectNonEnumProps = function (t, e) {
                        var r = A.length,
                            n = t.constructor,
                            i = _.isFunction(n) && n.prototype || s,
                            o = "constructor";
                        for (has(t, o) && !_.contains(e, o) && e.push(o); r--;)(o = A[r]) in t && t[o] !== i[o] && !_.contains(e, o) && e.push(o)
                    };
                _.keys = function (t) {
                    if (!_.isObject(t)) return [];
                    if (m) return m(t);
                    var e = [];
                    for (var r in t) has(t, r) && e.push(r);
                    return M && collectNonEnumProps(t, e), e
                }, _.allKeys = function (t) {
                    if (!_.isObject(t)) return [];
                    var e = [];
                    for (var r in t) e.push(r);
                    return M && collectNonEnumProps(t, e), e
                }, _.values = function (t) {
                    for (var e = _.keys(t), r = e.length, n = Array(r), i = 0; i < r; i++) n[i] = t[e[i]];
                    return n
                }, _.mapObject = function (t, e, r) {
                    e = cb(e, r);
                    for (var n = _.keys(t), i = n.length, o = {}, a = 0; a < i; a++) {
                        var s = n[a];
                        o[s] = e(t[s], s, t)
                    }
                    return o
                }, _.pairs = function (t) {
                    for (var e = _.keys(t), r = e.length, n = Array(r), i = 0; i < r; i++) n[i] = [e[i], t[e[i]]];
                    return n
                }, _.invert = function (t) {
                    for (var e = {}, r = _.keys(t), n = 0, i = r.length; n < i; n++) e[t[r[n]]] = r[n];
                    return e
                }, _.functions = _.methods = function (t) {
                    var e = [];
                    for (var r in t) _.isFunction(t[r]) && e.push(r);
                    return e.sort()
                };
                var createAssigner = function (t, e) {
                    return function (r) {
                        var n = arguments.length;
                        if (e && (r = Object(r)), n < 2 || null == r) return r;
                        for (var i = 1; i < n; i++)
                            for (var o = arguments[i], a = t(o), s = a.length, u = 0; u < s; u++) {
                                var c = a[u];
                                e && void 0 !== r[c] || (r[c] = o[c])
                            }
                        return r
                    }
                };
                _.extend = createAssigner(_.allKeys), _.extendOwn = _.assign = createAssigner(_.keys), _.findKey = function (t, e, r) {
                    e = cb(e, r);
                    for (var n, i = _.keys(t), o = 0, a = i.length; o < a; o++)
                        if (e(t[n = i[o]], n, t)) return n
                };
                var x, B, keyInObj = function (t, e, r) {
                    return e in r
                };
                _.pick = restArguments((function (t, e) {
                    var r = {},
                        n = e[0];
                    if (null == t) return r;
                    _.isFunction(n) ? (e.length > 1 && (n = optimizeCb(n, e[1])), e = _.allKeys(t)) : (n = keyInObj, e = flatten(e, !1, !1), t = Object(t));
                    for (var i = 0, o = e.length; i < o; i++) {
                        var a = e[i],
                            s = t[a];
                        n(s, a, t) && (r[a] = s)
                    }
                    return r
                })), _.omit = restArguments((function (t, e) {
                    var r, n = e[0];
                    return _.isFunction(n) ? (n = _.negate(n), e.length > 1 && (r = e[1])) : (e = _.map(flatten(e, !1, !1), String), n = function (t, r) {
                        return !_.contains(e, r)
                    }), _.pick(t, n, r)
                })), _.defaults = createAssigner(_.allKeys, !0), _.create = function (t, e) {
                    var r = baseCreate(t);
                    return e && _.extendOwn(r, e), r
                }, _.clone = function (t) {
                    return _.isObject(t) ? _.isArray(t) ? t.slice() : _.extend({}, t) : t
                }, _.tap = function (t, e) {
                    return e(t), t
                }, _.isMatch = function (t, e) {
                    var r = _.keys(e),
                        n = r.length;
                    if (null == t) return !n;
                    for (var i = Object(t), o = 0; o < n; o++) {
                        var a = r[o];
                        if (e[a] !== i[a] || !(a in i)) return !1
                    }
                    return !0
                }, x = function (t, e, r, n) {
                    if (t === e) return 0 !== t || 1 / t == 1 / e;
                    if (null == t || null == e) return !1;
                    if (t != t) return e != e;
                    var i = typeof t;
                    return ("function" === i || "object" === i || "object" == typeof e) && B(t, e, r, n)
                }, B = function (t, e, r, n) {
                    t instanceof _ && (t = t._wrapped), e instanceof _ && (e = e._wrapped);
                    var i = h.call(t);
                    if (i !== h.call(e)) return !1;
                    switch (i) {
                        case "[object RegExp]":
                        case "[object String]":
                            return "" + t == "" + e;
                        case "[object Number]":
                            return +t != +t ? +e != +e : 0 == +t ? 1 / +t == 1 / e : +t == +e;
                        case "[object Date]":
                        case "[object Boolean]":
                            return +t == +e;
                        case "[object Symbol]":
                            return u.valueOf.call(t) === u.valueOf.call(e)
                    }
                    var o = "[object Array]" === i;
                    if (!o) {
                        if ("object" != typeof t || "object" != typeof e) return !1;
                        var a = t.constructor,
                            s = e.constructor;
                        if (a !== s && !(_.isFunction(a) && a instanceof a && _.isFunction(s) && s instanceof s) && "constructor" in t && "constructor" in e) return !1
                    }
                    n = n || [];
                    for (var c = (r = r || []).length; c--;)
                        if (r[c] === t) return n[c] === e;
                    if (r.push(t), n.push(e), o) {
                        if ((c = t.length) !== e.length) return !1;
                        for (; c--;)
                            if (!x(t[c], e[c], r, n)) return !1
                    } else {
                        var l, d = _.keys(t);
                        if (c = d.length, _.keys(e).length !== c) return !1;
                        for (; c--;)
                            if (l = d[c], !has(e, l) || !x(t[l], e[l], r, n)) return !1
                    }
                    return r.pop(), n.pop(), !0
                }, _.isEqual = function (t, e) {
                    return x(t, e)
                }, _.isEmpty = function (t) {
                    return null == t || (isArrayLike(t) && (_.isArray(t) || _.isString(t) || _.isArguments(t)) ? 0 === t.length : 0 === _.keys(t).length)
                }, _.isElement = function (t) {
                    return !(!t || 1 !== t.nodeType)
                }, _.isArray = p || function (t) {
                    return "[object Array]" === h.call(t)
                }, _.isObject = function (t) {
                    var e = typeof t;
                    return "function" === e || "object" === e && !!t
                }, _.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error", "Symbol", "Map", "WeakMap", "Set", "WeakSet"], (function (t) {
                    _["is" + t] = function (e) {
                        return h.call(e) === "[object " + t + "]"
                    }
                })), _.isArguments(arguments) || (_.isArguments = function (t) {
                    return has(t, "callee")
                });
                var E = i.document && i.document.childNodes;
                "object" != typeof Int8Array && "function" != typeof E && (_.isFunction = function (t) {
                    return "function" == typeof t || !1
                }), _.isFinite = function (t) {
                    return !_.isSymbol(t) && isFinite(t) && !isNaN(parseFloat(t))
                }, _.isNaN = function (t) {
                    return _.isNumber(t) && isNaN(t)
                }, _.isBoolean = function (t) {
                    return !0 === t || !1 === t || "[object Boolean]" === h.call(t)
                }, _.isNull = function (t) {
                    return null === t
                }, _.isUndefined = function (t) {
                    return void 0 === t
                }, _.has = function (t, e) {
                    if (!_.isArray(e)) return has(t, e);
                    for (var r = e.length, n = 0; n < r; n++) {
                        var i = e[n];
                        if (null == t || !d.call(t, i)) return !1;
                        t = t[i]
                    }
                    return !!r
                }, _.noConflict = function () {
                    return i._ = o, this
                }, _.identity = function (t) {
                    return t
                }, _.constant = function (t) {
                    return function () {
                        return t
                    }
                }, _.noop = function () {}, _.property = function (t) {
                    return _.isArray(t) ? function (e) {
                        return deepGet(e, t)
                    } : shallowProperty(t)
                }, _.propertyOf = function (t) {
                    return null == t ? function () {} : function (e) {
                        return _.isArray(e) ? deepGet(t, e) : t[e]
                    }
                }, _.matcher = _.matches = function (t) {
                    return t = _.extendOwn({}, t),
                        function (e) {
                            return _.isMatch(e, t)
                        }
                }, _.times = function (t, e, r) {
                    var n = Array(Math.max(0, t));
                    e = optimizeCb(e, r, 1);
                    for (var i = 0; i < t; i++) n[i] = e(i);
                    return n
                }, _.random = function (t, e) {
                    return null == e && (e = t, t = 0), t + Math.floor(Math.random() * (e - t + 1))
                }, _.now = Date.now || function () {
                    return (new Date).getTime()
                };
                var k = {
                        "&": "&amp;",
                        "<": "&lt;",
                        ">": "&gt;",
                        '"': "&quot;",
                        "'": "&#x27;",
                        "`": "&#x60;"
                    },
                    N = _.invert(k),
                    createEscaper = function (t) {
                        var escaper = function (e) {
                                return t[e]
                            },
                            e = "(?:" + _.keys(t).join("|") + ")",
                            r = RegExp(e),
                            n = RegExp(e, "g");
                        return function (t) {
                            return t = null == t ? "" : "" + t, r.test(t) ? t.replace(n, escaper) : t
                        }
                    };
                _.escape = createEscaper(k), _.unescape = createEscaper(N), _.result = function (t, e, r) {
                    _.isArray(e) || (e = [e]);
                    var n = e.length;
                    if (!n) return _.isFunction(r) ? r.call(t) : r;
                    for (var i = 0; i < n; i++) {
                        var o = null == t ? void 0 : t[e[i]];
                        void 0 === o && (o = r, i = n), t = _.isFunction(o) ? o.call(t) : o
                    }
                    return t
                };
                var T = 0;
                _.uniqueId = function (t) {
                    var e = ++T + "";
                    return t ? t + e : e
                }, _.templateSettings = {
                    evaluate: /<%([\s\S]+?)%>/g,
                    interpolate: /<%=([\s\S]+?)%>/g,
                    escape: /<%-([\s\S]+?)%>/g
                };
                var C = /(.)^/,
                    P = {
                        "'": "'",
                        "\\": "\\",
                        "\r": "r",
                        "\n": "n",
                        "\u2028": "u2028",
                        "\u2029": "u2029"
                    },
                    I = /\\|'|\r|\n|\u2028|\u2029/g,
                    escapeChar = function (t) {
                        return "\\" + P[t]
                    };
                _.template = function (t, e, r) {
                    !e && r && (e = r), e = _.defaults({}, e, _.templateSettings);
                    var n, i = RegExp([(e.escape || C).source, (e.interpolate || C).source, (e.evaluate || C).source].join("|") + "|$", "g"),
                        o = 0,
                        a = "__p+='";
                    t.replace(i, (function (e, r, n, i, s) {
                        return a += t.slice(o, s).replace(I, escapeChar), o = s + e.length, r ? a += "'+\n((__t=(" + r + "))==null?'':_.escape(__t))+\n'" : n ? a += "'+\n((__t=(" + n + "))==null?'':__t)+\n'" : i && (a += "';\n" + i + "\n__p+='"), e
                    })), a += "';\n", e.variable || (a = "with(obj||{}){\n" + a + "}\n"), a = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + a + "return __p;\n";
                    try {
                        n = new Function(e.variable || "obj", "_", a)
                    } catch (t) {
                        throw t.source = a, t
                    }
                    var template = function (t) {
                            return n.call(this, t, _)
                        },
                        s = e.variable || "obj";
                    return template.source = "function(" + s + "){\n" + a + "}", template
                }, _.chain = function (t) {
                    var e = _(t);
                    return e._chain = !0, e
                };
                var chainResult = function (t, e) {
                    return t._chain ? _(e).chain() : e
                };
                _.mixin = function (t) {
                    return _.each(_.functions(t), (function (e) {
                        var r = _[e] = t[e];
                        _.prototype[e] = function () {
                            var t = [this._wrapped];
                            return c.apply(t, arguments), chainResult(this, r.apply(_, t))
                        }
                    })), _
                }, _.mixin(_), _.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], (function (t) {
                    var e = a[t];
                    _.prototype[t] = function () {
                        var r = this._wrapped;
                        return e.apply(r, arguments), "shift" !== t && "splice" !== t || 0 !== r.length || delete r[0], chainResult(this, r)
                    }
                })), _.each(["concat", "join", "slice"], (function (t) {
                    var e = a[t];
                    _.prototype[t] = function () {
                        return chainResult(this, e.apply(this._wrapped, arguments))
                    }
                })), _.prototype.value = function () {
                    return this._wrapped
                }, _.prototype.valueOf = _.prototype.toJSON = _.prototype.value, _.prototype.toString = function () {
                    return String(this._wrapped)
                }, void 0 === (n = function () {
                    return _
                }.apply(e, [])) || (r.exports = n)
            }()
        }).call(this, r(6), r(8)(t))
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.UNKNOWN_ERROR = "UNKNOWN_ERROR", e.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", e.MISSING_NEW = "MISSING_NEW", e.CALL_EXCEPTION = "CALL_EXCEPTION", e.INVALID_ARGUMENT = "INVALID_ARGUMENT", e.MISSING_ARGUMENT = "MISSING_ARGUMENT", e.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", e.NUMERIC_FAULT = "NUMERIC_FAULT", e.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION";
        var n = !1,
            i = !1;

        function throwError(t, r, n) {
            if (i) throw new Error("unknown error");
            r || (r = e.UNKNOWN_ERROR), n || (n = {});
            var o = [];
            Object.keys(n).forEach((function (t) {
                try {
                    o.push(t + "=" + JSON.stringify(n[t]))
                } catch (e) {
                    o.push(t + "=" + JSON.stringify(n[t].toString()))
                }
            }));
            var a = t;
            o.length && (t += " (" + o.join(", ") + ")");
            var s = new Error(t);
            throw s.reason = a, s.code = r, Object.keys(n).forEach((function (t) {
                s[t] = n[t]
            })), s
        }
        e.throwError = throwError, e.checkNew = function checkNew(t, r) {
            t instanceof r || throwError("missing new", e.MISSING_NEW, {
                name: r.name
            })
        }, e.checkArgumentCount = function checkArgumentCount(t, r, n) {
            n || (n = ""), t < r && throwError("missing argument" + n, e.MISSING_ARGUMENT, {
                count: t,
                expectedCount: r
            }), t > r && throwError("too many arguments" + n, e.UNEXPECTED_ARGUMENT, {
                count: t,
                expectedCount: r
            })
        }, e.setCensorship = function setCensorship(t, r) {
            n && throwError("error censorship permanent", e.UNSUPPORTED_OPERATION, {
                operation: "setCersorship"
            }), i = !!t, n = !!r
        }
    }, function (t, e, r) {
        r.r(e), r.d(e, "ConstructorFragment", (function () {
            return fragments_ConstructorFragment
        })), r.d(e, "EventFragment", (function () {
            return EventFragment
        })), r.d(e, "Fragment", (function () {
            return fragments_Fragment
        })), r.d(e, "FunctionFragment", (function () {
            return fragments_FunctionFragment
        })), r.d(e, "ParamType", (function () {
            return fragments_ParamType
        })), r.d(e, "FormatTypes", (function () {
            return E
        })), r.d(e, "AbiCoder", (function () {
            return abi_coder_AbiCoder
        })), r.d(e, "defaultAbiCoder", (function () {
            return $
        })), r.d(e, "Interface", (function () {
            return interface_Interface
        })), r.d(e, "Indexed", (function () {
            return interface_Indexed
        })), r.d(e, "checkResultErrors", (function () {
            return checkResultErrors
        })), r.d(e, "LogDescription", (function () {
            return interface_LogDescription
        })), r.d(e, "TransactionDescription", (function () {
            return interface_TransactionDescription
        }));
        var n = r(348),
            i = r.n(n);
        let o = !1,
            a = !1;
        const s = {
            debug: 1,
            default: 2,
            info: 2,
            warning: 3,
            error: 4,
            off: 5
        };
        let u = s.default,
            c = null;
        const l = function _checkNormalize() {
            try {
                const t = [];
                if (["NFD", "NFC", "NFKD", "NFKC"].forEach(e => {
                        try {
                            if ("test" !== "test".normalize(e)) throw new Error("bad normalize")
                        } catch (r) {
                            t.push(e)
                        }
                    }), t.length) throw new Error("missing " + t.join(", "));
                if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) throw new Error("broken implementation")
            } catch (t) {
                return t.message
            }
            return null
        }();
        var h, d;
        ! function (t) {
            t.DEBUG = "DEBUG", t.INFO = "INFO", t.WARNING = "WARNING", t.ERROR = "ERROR", t.OFF = "OFF"
        }(h || (h = {})),
        function (t) {
            t.UNKNOWN_ERROR = "UNKNOWN_ERROR", t.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", t.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", t.NETWORK_ERROR = "NETWORK_ERROR", t.SERVER_ERROR = "SERVER_ERROR", t.TIMEOUT = "TIMEOUT", t.BUFFER_OVERRUN = "BUFFER_OVERRUN", t.NUMERIC_FAULT = "NUMERIC_FAULT", t.MISSING_NEW = "MISSING_NEW", t.INVALID_ARGUMENT = "INVALID_ARGUMENT", t.MISSING_ARGUMENT = "MISSING_ARGUMENT", t.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", t.CALL_EXCEPTION = "CALL_EXCEPTION", t.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", t.NONCE_EXPIRED = "NONCE_EXPIRED", t.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", t.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", t.TRANSACTION_REPLACED = "TRANSACTION_REPLACED"
        }(d || (d = {}));
        class lib_esm_Logger {
            constructor(t) {
                Object.defineProperty(this, "version", {
                    enumerable: !0,
                    value: t,
                    writable: !1
                })
            }
            _log(t, e) {
                const r = t.toLowerCase();
                null == s[r] && this.throwArgumentError("invalid log level name", "logLevel", t), u > s[r] || console.log.apply(console, e)
            }
            debug(...t) {
                this._log(lib_esm_Logger.levels.DEBUG, t)
            }
            info(...t) {
                this._log(lib_esm_Logger.levels.INFO, t)
            }
            warn(...t) {
                this._log(lib_esm_Logger.levels.WARNING, t)
            }
            makeError(t, e, r) {
                if (a) return this.makeError("censored error", e, {});
                e || (e = lib_esm_Logger.errors.UNKNOWN_ERROR), r || (r = {});
                const n = [];
                Object.keys(r).forEach(t => {
                    try {
                        n.push(t + "=" + JSON.stringify(r[t]))
                    } catch (e) {
                        n.push(t + "=" + JSON.stringify(r[t].toString()))
                    }
                }), n.push("code=" + e), n.push("version=" + this.version);
                const i = t;
                n.length && (t += " (" + n.join(", ") + ")");
                const o = new Error(t);
                return o.reason = i, o.code = e, Object.keys(r).forEach((function (t) {
                    o[t] = r[t]
                })), o
            }
            throwError(t, e, r) {
                throw this.makeError(t, e, r)
            }
            throwArgumentError(t, e, r) {
                return this.throwError(t, lib_esm_Logger.errors.INVALID_ARGUMENT, {
                    argument: e,
                    value: r
                })
            }
            assert(t, e, r, n) {
                t || this.throwError(e, r, n)
            }
            assertArgument(t, e, r, n) {
                t || this.throwArgumentError(e, r, n)
            }
            checkNormalize(t) {
                null == t && (t = "platform missing String.prototype.normalize"), l && this.throwError("platform missing String.prototype.normalize", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "String.prototype.normalize",
                    form: l
                })
            }
            checkSafeUint53(t, e) {
                "number" == typeof t && (null == e && (e = "value not safe"), (t < 0 || t >= 9007199254740991) && this.throwError(e, lib_esm_Logger.errors.NUMERIC_FAULT, {
                    operation: "checkSafeInteger",
                    fault: "out-of-safe-range",
                    value: t
                }), t % 1 && this.throwError(e, lib_esm_Logger.errors.NUMERIC_FAULT, {
                    operation: "checkSafeInteger",
                    fault: "non-integer",
                    value: t
                }))
            }
            checkArgumentCount(t, e, r) {
                r = r ? ": " + r : "", t < e && this.throwError("missing argument" + r, lib_esm_Logger.errors.MISSING_ARGUMENT, {
                    count: t,
                    expectedCount: e
                }), t > e && this.throwError("too many arguments" + r, lib_esm_Logger.errors.UNEXPECTED_ARGUMENT, {
                    count: t,
                    expectedCount: e
                })
            }
            checkNew(t, e) {
                t !== Object && null != t || this.throwError("missing new", lib_esm_Logger.errors.MISSING_NEW, {
                    name: e.name
                })
            }
            checkAbstract(t, e) {
                t === e ? this.throwError("cannot instantiate abstract class " + JSON.stringify(e.name) + " directly; use a sub-class", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    name: t.name,
                    operation: "new"
                }) : t !== Object && null != t || this.throwError("missing new", lib_esm_Logger.errors.MISSING_NEW, {
                    name: e.name
                })
            }
            static globalLogger() {
                return c || (c = new lib_esm_Logger("logger/5.4.0")), c
            }
            static setCensorship(t, e) {
                if (!t && e && this.globalLogger().throwError("cannot permanently disable censorship", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "setCensorship"
                    }), o) {
                    if (!t) return;
                    this.globalLogger().throwError("error censorship permanent", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                        operation: "setCensorship"
                    })
                }
                a = !!t, o = !!e
            }
            static setLogLevel(t) {
                const e = s[t.toLowerCase()];
                null != e ? u = e : lib_esm_Logger.globalLogger().warn("invalid log level - " + t)
            }
            static from(t) {
                return new lib_esm_Logger(t)
            }
        }
        lib_esm_Logger.errors = d, lib_esm_Logger.levels = h;
        const p = new lib_esm_Logger("bytes/5.4.0");

        function isHexable(t) {
            return !!t.toHexString
        }

        function addSlice(t) {
            return t.slice || (t.slice = function () {
                const e = Array.prototype.slice.call(arguments);
                return addSlice(new Uint8Array(Array.prototype.slice.apply(t, e)))
            }), t
        }

        function isBytes(t) {
            if (null == t) return !1;
            if (t.constructor === Uint8Array) return !0;
            if ("string" == typeof t) return !1;
            if (null == t.length) return !1;
            for (let e = 0; e < t.length; e++) {
                const r = t[e];
                if ("number" != typeof r || r < 0 || r >= 256 || r % 1) return !1
            }
            return !0
        }

        function arrayify(t, e) {
            if (e || (e = {}), "number" == typeof t) {
                p.checkSafeUint53(t, "invalid arrayify value");
                const e = [];
                for (; t;) e.unshift(255 & t), t = parseInt(String(t / 256));
                return 0 === e.length && e.push(0), addSlice(new Uint8Array(e))
            }
            if (e.allowMissingPrefix && "string" == typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), isHexable(t) && (t = t.toHexString()), isHexString(t)) {
                let r = t.substring(2);
                r.length % 2 && ("left" === e.hexPad ? r = "0x0" + r.substring(2) : "right" === e.hexPad ? r += "0" : p.throwArgumentError("hex data is odd-length", "value", t));
                const n = [];
                for (let t = 0; t < r.length; t += 2) n.push(parseInt(r.substring(t, t + 2), 16));
                return addSlice(new Uint8Array(n))
            }
            return isBytes(t) ? addSlice(new Uint8Array(t)) : p.throwArgumentError("invalid arrayify value", "value", t)
        }

        function concat(t) {
            const e = t.map(t => arrayify(t)),
                r = e.reduce((t, e) => t + e.length, 0),
                n = new Uint8Array(r);
            return e.reduce((t, e) => (n.set(e, t), t + e.length), 0), addSlice(n)
        }

        function isHexString(t, e) {
            return !("string" != typeof t || !t.match(/^0x[0-9A-Fa-f]*$/)) && (!e || t.length === 2 + 2 * e)
        }

        function hexlify(t, e) {
            if (e || (e = {}), "number" == typeof t) {
                p.checkSafeUint53(t, "invalid hexlify value");
                let e = "";
                for (; t;) e = "0123456789abcdef" [15 & t] + e, t = Math.floor(t / 16);
                return e.length ? (e.length % 2 && (e = "0" + e), "0x" + e) : "0x00"
            }
            if ("bigint" == typeof t) return (t = t.toString(16)).length % 2 ? "0x0" + t : "0x" + t;
            if (e.allowMissingPrefix && "string" == typeof t && "0x" !== t.substring(0, 2) && (t = "0x" + t), isHexable(t)) return t.toHexString();
            if (isHexString(t)) return t.length % 2 && ("left" === e.hexPad ? t = "0x0" + t.substring(2) : "right" === e.hexPad ? t += "0" : p.throwArgumentError("hex data is odd-length", "value", t)), t.toLowerCase();
            if (isBytes(t)) {
                let e = "0x";
                for (let r = 0; r < t.length; r++) {
                    let n = t[r];
                    e += "0123456789abcdef" [(240 & n) >> 4] + "0123456789abcdef" [15 & n]
                }
                return e
            }
            return p.throwArgumentError("invalid hexlify value", "value", t)
        }

        function hexDataSlice(t, e, r) {
            return "string" != typeof t ? t = hexlify(t) : (!isHexString(t) || t.length % 2) && p.throwArgumentError("invalid hexData", "value", t), e = 2 + 2 * e, null != r ? "0x" + t.substring(e, 2 + 2 * r) : "0x" + t.substring(e)
        }

        function hexZeroPad(t, e) {
            for ("string" != typeof t ? t = hexlify(t) : isHexString(t) || p.throwArgumentError("invalid hex string", "value", t), t.length > 2 * e + 2 && p.throwArgumentError("value out of range", "value", arguments[1]); t.length < 2 * e + 2;) t = "0x0" + t.substring(2);
            return t
        }
        var m = i.a.BN;
        const y = new lib_esm_Logger("bignumber/5.4.1"),
            b = {};
        let g = !1;
        class bignumber_BigNumber {
            constructor(t, e) {
                y.checkNew(new.target, bignumber_BigNumber), t !== b && y.throwError("cannot call constructor directly; use BigNumber.from", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new (BigNumber)"
                }), this._hex = e, this._isBigNumber = !0, Object.freeze(this)
            }
            fromTwos(t) {
                return toBigNumber(toBN(this).fromTwos(t))
            }
            toTwos(t) {
                return toBigNumber(toBN(this).toTwos(t))
            }
            abs() {
                return "-" === this._hex[0] ? bignumber_BigNumber.from(this._hex.substring(1)) : this
            }
            add(t) {
                return toBigNumber(toBN(this).add(toBN(t)))
            }
            sub(t) {
                return toBigNumber(toBN(this).sub(toBN(t)))
            }
            div(t) {
                return bignumber_BigNumber.from(t).isZero() && throwFault("division by zero", "div"), toBigNumber(toBN(this).div(toBN(t)))
            }
            mul(t) {
                return toBigNumber(toBN(this).mul(toBN(t)))
            }
            mod(t) {
                const e = toBN(t);
                return e.isNeg() && throwFault("cannot modulo negative values", "mod"), toBigNumber(toBN(this).umod(e))
            }
            pow(t) {
                const e = toBN(t);
                return e.isNeg() && throwFault("cannot raise to negative values", "pow"), toBigNumber(toBN(this).pow(e))
            }
            and(t) {
                const e = toBN(t);
                return (this.isNegative() || e.isNeg()) && throwFault("cannot 'and' negative values", "and"), toBigNumber(toBN(this).and(e))
            }
            or(t) {
                const e = toBN(t);
                return (this.isNegative() || e.isNeg()) && throwFault("cannot 'or' negative values", "or"), toBigNumber(toBN(this).or(e))
            }
            xor(t) {
                const e = toBN(t);
                return (this.isNegative() || e.isNeg()) && throwFault("cannot 'xor' negative values", "xor"), toBigNumber(toBN(this).xor(e))
            }
            mask(t) {
                return (this.isNegative() || t < 0) && throwFault("cannot mask negative values", "mask"), toBigNumber(toBN(this).maskn(t))
            }
            shl(t) {
                return (this.isNegative() || t < 0) && throwFault("cannot shift negative values", "shl"), toBigNumber(toBN(this).shln(t))
            }
            shr(t) {
                return (this.isNegative() || t < 0) && throwFault("cannot shift negative values", "shr"), toBigNumber(toBN(this).shrn(t))
            }
            eq(t) {
                return toBN(this).eq(toBN(t))
            }
            lt(t) {
                return toBN(this).lt(toBN(t))
            }
            lte(t) {
                return toBN(this).lte(toBN(t))
            }
            gt(t) {
                return toBN(this).gt(toBN(t))
            }
            gte(t) {
                return toBN(this).gte(toBN(t))
            }
            isNegative() {
                return "-" === this._hex[0]
            }
            isZero() {
                return toBN(this).isZero()
            }
            toNumber() {
                try {
                    return toBN(this).toNumber()
                } catch (t) {
                    throwFault("overflow", "toNumber", this.toString())
                }
                return null
            }
            toBigInt() {
                try {
                    return BigInt(this.toString())
                } catch (t) {}
                return y.throwError("this platform does not support BigInt", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    value: this.toString()
                })
            }
            toString() {
                return arguments.length > 0 && (10 === arguments[0] ? g || (g = !0, y.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? y.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", lib_esm_Logger.errors.UNEXPECTED_ARGUMENT, {}) : y.throwError("BigNumber.toString does not accept parameters", lib_esm_Logger.errors.UNEXPECTED_ARGUMENT, {})), toBN(this).toString(10)
            }
            toHexString() {
                return this._hex
            }
            toJSON(t) {
                return {
                    type: "BigNumber",
                    hex: this.toHexString()
                }
            }
            static from(t) {
                if (t instanceof bignumber_BigNumber) return t;
                if ("string" == typeof t) return t.match(/^-?0x[0-9a-f]+$/i) ? new bignumber_BigNumber(b, toHex(t)) : t.match(/^-?[0-9]+$/) ? new bignumber_BigNumber(b, toHex(new m(t))) : y.throwArgumentError("invalid BigNumber string", "value", t);
                if ("number" == typeof t) return t % 1 && throwFault("underflow", "BigNumber.from", t), (t >= 9007199254740991 || t <= -9007199254740991) && throwFault("overflow", "BigNumber.from", t), bignumber_BigNumber.from(String(t));
                const e = t;
                if ("bigint" == typeof e) return bignumber_BigNumber.from(e.toString());
                if (isBytes(e)) return bignumber_BigNumber.from(hexlify(e));
                if (e)
                    if (e.toHexString) {
                        const t = e.toHexString();
                        if ("string" == typeof t) return bignumber_BigNumber.from(t)
                    } else {
                        let t = e._hex;
                        if (null == t && "BigNumber" === e.type && (t = e.hex), "string" == typeof t && (isHexString(t) || "-" === t[0] && isHexString(t.substring(1)))) return bignumber_BigNumber.from(t)
                    } return y.throwArgumentError("invalid BigNumber value", "value", t)
            }
            static isBigNumber(t) {
                return !(!t || !t._isBigNumber)
            }
        }

        function toHex(t) {
            if ("string" != typeof t) return toHex(t.toString(16));
            if ("-" === t[0]) return "-" === (t = t.substring(1))[0] && y.throwArgumentError("invalid hex", "value", t), "0x00" === (t = toHex(t)) ? t : "-" + t;
            if ("0x" !== t.substring(0, 2) && (t = "0x" + t), "0x" === t) return "0x00";
            for (t.length % 2 && (t = "0x0" + t.substring(2)); t.length > 4 && "0x00" === t.substring(0, 4);) t = "0x" + t.substring(4);
            return t
        }

        function toBigNumber(t) {
            return bignumber_BigNumber.from(toHex(t))
        }

        function toBN(t) {
            const e = bignumber_BigNumber.from(t).toHexString();
            return "-" === e[0] ? new m("-" + e.substring(3), 16) : new m(e.substring(2), 16)
        }

        function throwFault(t, e, r) {
            const n = {
                fault: t,
                operation: e
            };
            return null != r && (n.value = r), y.throwError(t, lib_esm_Logger.errors.NUMERIC_FAULT, n)
        }
        const v = new lib_esm_Logger("properties/5.4.0");

        function defineReadOnly(t, e, r) {
            Object.defineProperty(t, e, {
                enumerable: !0,
                value: r,
                writable: !1
            })
        }

        function getStatic(t, e) {
            for (let r = 0; r < 32; r++) {
                if (t[e]) return t[e];
                if (!t.prototype || "object" != typeof t.prototype) break;
                t = Object.getPrototypeOf(t.prototype).constructor
            }
            return null
        }
        const w = {
            bigint: !0,
            boolean: !0,
            function: !0,
            number: !0,
            string: !0
        };

        function _deepCopy(t) {
            if (function _isFrozen(t) {
                    if (null == t || w[typeof t]) return !0;
                    if (Array.isArray(t) || "object" == typeof t) {
                        if (!Object.isFrozen(t)) return !1;
                        const e = Object.keys(t);
                        for (let r = 0; r < e.length; r++)
                            if (!_isFrozen(t[e[r]])) return !1;
                        return !0
                    }
                    return v.throwArgumentError("Cannot deepCopy " + typeof t, "object", t)
                }(t)) return t;
            if (Array.isArray(t)) return Object.freeze(t.map(t => deepCopy(t)));
            if ("object" == typeof t) {
                const e = {};
                for (const r in t) {
                    const n = t[r];
                    void 0 !== n && defineReadOnly(e, r, deepCopy(n))
                }
                return e
            }
            return v.throwArgumentError("Cannot deepCopy " + typeof t, "object", t)
        }

        function deepCopy(t) {
            return _deepCopy(t)
        }
        class Description {
            constructor(t) {
                for (const e in t) this[e] = deepCopy(t[e])
            }
        }
        const M = new lib_esm_Logger("abi/5.0.7"),
            A = {};
        let x = {
                calldata: !0,
                memory: !0,
                storage: !0
            },
            B = {
                calldata: !0,
                memory: !0
            };

        function checkModifier(t, e) {
            if ("bytes" === t || "string" === t) {
                if (x[e]) return !0
            } else if ("address" === t) {
                if ("payable" === e) return !0
            } else if ((t.indexOf("[") >= 0 || "tuple" === t) && B[e]) return !0;
            return (x[e] || "payable" === e) && M.throwArgumentError("invalid modifier", "name", e), !1
        }

        function populate(t, e) {
            for (let r in e) defineReadOnly(t, r, e[r])
        }
        const E = Object.freeze({
                sighash: "sighash",
                minimal: "minimal",
                full: "full",
                json: "json"
            }),
            k = new RegExp(/^(.*)\[([0-9]*)\]$/);
        class fragments_ParamType {
            constructor(t, e) {
                t !== A && M.throwError("use fromString", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new ParamType()"
                }), populate(this, e);
                let r = this.type.match(k);
                populate(this, r ? {
                    arrayLength: parseInt(r[2] || "-1"),
                    arrayChildren: fragments_ParamType.fromObject({
                        type: r[1],
                        components: this.components
                    }),
                    baseType: "array"
                } : {
                    arrayLength: null,
                    arrayChildren: null,
                    baseType: null != this.components ? "tuple" : this.type
                }), this._isParamType = !0, Object.freeze(this)
            }
            format(t) {
                if (t || (t = E.sighash), E[t] || M.throwArgumentError("invalid format type", "format", t), t === E.json) {
                    let e = {
                        type: "tuple" === this.baseType ? "tuple" : this.type,
                        name: this.name || void 0
                    };
                    return "boolean" == typeof this.indexed && (e.indexed = this.indexed), this.components && (e.components = this.components.map(e => JSON.parse(e.format(t)))), JSON.stringify(e)
                }
                let e = "";
                return "array" === this.baseType ? (e += this.arrayChildren.format(t), e += "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]") : "tuple" === this.baseType ? (t !== E.sighash && (e += this.type), e += "(" + this.components.map(e => e.format(t)).join(t === E.full ? ", " : ",") + ")") : e += this.type, t !== E.sighash && (!0 === this.indexed && (e += " indexed"), t === E.full && this.name && (e += " " + this.name)), e
            }
            static from(t, e) {
                return "string" == typeof t ? fragments_ParamType.fromString(t, e) : fragments_ParamType.fromObject(t)
            }
            static fromObject(t) {
                return fragments_ParamType.isParamType(t) ? t : new fragments_ParamType(A, {
                    name: t.name || null,
                    type: verifyType(t.type),
                    indexed: null == t.indexed ? null : !!t.indexed,
                    components: t.components ? t.components.map(fragments_ParamType.fromObject) : null
                })
            }
            static fromString(t, e) {
                return function ParamTypify(t) {
                    return fragments_ParamType.fromObject({
                        name: t.name,
                        type: t.type,
                        indexed: t.indexed,
                        components: t.components
                    })
                }(function parseParamType(t, e) {
                    let r = t;

                    function throwError(e) {
                        M.throwArgumentError("unexpected character at position " + e, "param", t)
                    }

                    function newNode(t) {
                        let r = {
                            type: "",
                            name: "",
                            parent: t,
                            state: {
                                allowType: !0
                            }
                        };
                        return e && (r.indexed = !1), r
                    }
                    t = t.replace(/\s/g, " ");
                    let n = {
                            type: "",
                            name: "",
                            state: {
                                allowType: !0
                            }
                        },
                        i = n;
                    for (let r = 0; r < t.length; r++) {
                        let n = t[r];
                        switch (n) {
                            case "(":
                                i.state.allowType && "" === i.type ? i.type = "tuple" : i.state.allowParams || throwError(r), i.state.allowType = !1, i.type = verifyType(i.type), i.components = [newNode(i)], i = i.components[0];
                                break;
                            case ")":
                                delete i.state, "indexed" === i.name && (e || throwError(r), i.indexed = !0, i.name = ""), checkModifier(i.type, i.name) && (i.name = ""), i.type = verifyType(i.type);
                                let t = i;
                                i = i.parent, i || throwError(r), delete t.parent, i.state.allowParams = !1, i.state.allowName = !0, i.state.allowArray = !0;
                                break;
                            case ",":
                                delete i.state, "indexed" === i.name && (e || throwError(r), i.indexed = !0, i.name = ""), checkModifier(i.type, i.name) && (i.name = ""), i.type = verifyType(i.type);
                                let o = newNode(i.parent);
                                i.parent.components.push(o), delete i.parent, i = o;
                                break;
                            case " ":
                                i.state.allowType && "" !== i.type && (i.type = verifyType(i.type), delete i.state.allowType, i.state.allowName = !0, i.state.allowParams = !0), i.state.allowName && "" !== i.name && ("indexed" === i.name ? (e || throwError(r), i.indexed && throwError(r), i.indexed = !0, i.name = "") : checkModifier(i.type, i.name) ? i.name = "" : i.state.allowName = !1);
                                break;
                            case "[":
                                i.state.allowArray || throwError(r), i.type += n, i.state.allowArray = !1, i.state.allowName = !1, i.state.readArray = !0;
                                break;
                            case "]":
                                i.state.readArray || throwError(r), i.type += n, i.state.readArray = !1, i.state.allowArray = !0, i.state.allowName = !0;
                                break;
                            default:
                                i.state.allowType ? (i.type += n, i.state.allowParams = !0, i.state.allowArray = !0) : i.state.allowName ? (i.name += n, delete i.state.allowArray) : i.state.readArray ? i.type += n : throwError(r)
                        }
                    }
                    return i.parent && M.throwArgumentError("unexpected eof", "param", t), delete n.state, "indexed" === i.name ? (e || throwError(r.length - 7), i.indexed && throwError(r.length - 7), i.indexed = !0, i.name = "") : checkModifier(i.type, i.name) && (i.name = ""), n.type = verifyType(n.type), n
                }(t, !!e))
            }
            static isParamType(t) {
                return !(null == t || !t._isParamType)
            }
        }

        function parseParams(t, e) {
            return function splitNesting(t) {
                t = t.trim();
                let e = [],
                    r = "",
                    n = 0;
                for (let i = 0; i < t.length; i++) {
                    let o = t[i];
                    "," === o && 0 === n ? (e.push(r), r = "") : (r += o, "(" === o ? n++ : ")" === o && (n--, -1 === n && M.throwArgumentError("unbalanced parenthesis", "value", t)))
                }
                r && e.push(r);
                return e
            }(t).map(t => fragments_ParamType.fromString(t, e))
        }
        class fragments_Fragment {
            constructor(t, e) {
                t !== A && M.throwError("use a static from method", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new Fragment()"
                }), populate(this, e), this._isFragment = !0, Object.freeze(this)
            }
            static from(t) {
                return fragments_Fragment.isFragment(t) ? t : "string" == typeof t ? fragments_Fragment.fromString(t) : fragments_Fragment.fromObject(t)
            }
            static fromObject(t) {
                if (fragments_Fragment.isFragment(t)) return t;
                switch (t.type) {
                    case "function":
                        return fragments_FunctionFragment.fromObject(t);
                    case "event":
                        return EventFragment.fromObject(t);
                    case "constructor":
                        return fragments_ConstructorFragment.fromObject(t);
                    case "fallback":
                    case "receive":
                        return null
                }
                return M.throwArgumentError("invalid fragment object", "value", t)
            }
            static fromString(t) {
                return "event" === (t = (t = (t = t.replace(/\s/g, " ")).replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ")).trim()).split(" ")[0] ? EventFragment.fromString(t.substring(5).trim()) : "function" === t.split(" ")[0] ? fragments_FunctionFragment.fromString(t.substring(8).trim()) : "constructor" === t.split("(")[0].trim() ? fragments_ConstructorFragment.fromString(t.trim()) : M.throwArgumentError("unsupported fragment", "value", t)
            }
            static isFragment(t) {
                return !(!t || !t._isFragment)
            }
        }
        class EventFragment extends fragments_Fragment {
            format(t) {
                if (t || (t = E.sighash), E[t] || M.throwArgumentError("invalid format type", "format", t), t === E.json) return JSON.stringify({
                    type: "event",
                    anonymous: this.anonymous,
                    name: this.name,
                    inputs: this.inputs.map(e => JSON.parse(e.format(t)))
                });
                let e = "";
                return t !== E.sighash && (e += "event "), e += this.name + "(" + this.inputs.map(e => e.format(t)).join(t === E.full ? ", " : ",") + ") ", t !== E.sighash && this.anonymous && (e += "anonymous "), e.trim()
            }
            static from(t) {
                return "string" == typeof t ? EventFragment.fromString(t) : EventFragment.fromObject(t)
            }
            static fromObject(t) {
                if (EventFragment.isEventFragment(t)) return t;
                "event" !== t.type && M.throwArgumentError("invalid event object", "value", t);
                const e = {
                    name: verifyIdentifier(t.name),
                    anonymous: t.anonymous,
                    inputs: t.inputs ? t.inputs.map(fragments_ParamType.fromObject) : [],
                    type: "event"
                };
                return new EventFragment(A, e)
            }
            static fromString(t) {
                let e = t.match(T);
                e || M.throwArgumentError("invalid event string", "value", t);
                let r = !1;
                return e[3].split(" ").forEach(t => {
                    switch (t.trim()) {
                        case "anonymous":
                            r = !0;
                            break;
                        case "":
                            break;
                        default:
                            M.warn("unknown modifier: " + t)
                    }
                }), EventFragment.fromObject({
                    name: e[1].trim(),
                    anonymous: r,
                    inputs: parseParams(e[2], !0),
                    type: "event"
                })
            }
            static isEventFragment(t) {
                return t && t._isFragment && "event" === t.type
            }
        }

        function parseGas(t, e) {
            e.gas = null;
            let r = t.split("@");
            return 1 !== r.length ? (r.length > 2 && M.throwArgumentError("invalid human-readable ABI signature", "value", t), r[1].match(/^[0-9]+$/) || M.throwArgumentError("invalid human-readable ABI signature gas", "value", t), e.gas = bignumber_BigNumber.from(r[1]), r[0]) : t
        }

        function parseModifiers(t, e) {
            e.constant = !1, e.payable = !1, e.stateMutability = "nonpayable", t.split(" ").forEach(t => {
                switch (t.trim()) {
                    case "constant":
                        e.constant = !0;
                        break;
                    case "payable":
                        e.payable = !0, e.stateMutability = "payable";
                        break;
                    case "nonpayable":
                        e.payable = !1, e.stateMutability = "nonpayable";
                        break;
                    case "pure":
                        e.constant = !0, e.stateMutability = "pure";
                        break;
                    case "view":
                        e.constant = !0, e.stateMutability = "view";
                        break;
                    case "external":
                    case "public":
                    case "":
                        break;
                    default:
                        console.log("unknown modifier: " + t)
                }
            })
        }

        function verifyState(t) {
            let e = {
                constant: !1,
                payable: !0,
                stateMutability: "payable"
            };
            return null != t.stateMutability ? (e.stateMutability = t.stateMutability, e.constant = "view" === e.stateMutability || "pure" === e.stateMutability, null != t.constant && !!t.constant !== e.constant && M.throwArgumentError("cannot have constant function with mutability " + e.stateMutability, "value", t), e.payable = "payable" === e.stateMutability, null != t.payable && !!t.payable !== e.payable && M.throwArgumentError("cannot have payable function with mutability " + e.stateMutability, "value", t)) : null != t.payable ? (e.payable = !!t.payable, null != t.constant || e.payable || "constructor" === t.type || M.throwArgumentError("unable to determine stateMutability", "value", t), e.constant = !!t.constant, e.constant ? e.stateMutability = "view" : e.stateMutability = e.payable ? "payable" : "nonpayable", e.payable && e.constant && M.throwArgumentError("cannot have constant payable function", "value", t)) : null != t.constant ? (e.constant = !!t.constant, e.payable = !e.constant, e.stateMutability = e.constant ? "view" : "payable") : "constructor" !== t.type && M.throwArgumentError("unable to determine stateMutability", "value", t), e
        }
        class fragments_ConstructorFragment extends fragments_Fragment {
            format(t) {
                if (t || (t = E.sighash), E[t] || M.throwArgumentError("invalid format type", "format", t), t === E.json) return JSON.stringify({
                    type: "constructor",
                    stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                    payble: this.payable,
                    gas: this.gas ? this.gas.toNumber() : void 0,
                    inputs: this.inputs.map(e => JSON.parse(e.format(t)))
                });
                t === E.sighash && M.throwError("cannot format a constructor for sighash", lib_esm_Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "format(sighash)"
                });
                let e = "constructor(" + this.inputs.map(e => e.format(t)).join(t === E.full ? ", " : ",") + ") ";
                return this.stateMutability && "nonpayable" !== this.stateMutability && (e += this.stateMutability + " "), e.trim()
            }
            static from(t) {
                return "string" == typeof t ? fragments_ConstructorFragment.fromString(t) : fragments_ConstructorFragment.fromObject(t)
            }
            static fromObject(t) {
                if (fragments_ConstructorFragment.isConstructorFragment(t)) return t;
                "constructor" !== t.type && M.throwArgumentError("invalid constructor object", "value", t);
                let e = verifyState(t);
                e.constant && M.throwArgumentError("constructor cannot be constant", "value", t);
                const r = {
                    name: null,
                    type: t.type,
                    inputs: t.inputs ? t.inputs.map(fragments_ParamType.fromObject) : [],
                    payable: e.payable,
                    stateMutability: e.stateMutability,
                    gas: t.gas ? bignumber_BigNumber.from(t.gas) : null
                };
                return new fragments_ConstructorFragment(A, r)
            }
            static fromString(t) {
                let e = {
                        type: "constructor"
                    },
                    r = (t = parseGas(t, e)).match(T);
                return r && "constructor" === r[1].trim() || M.throwArgumentError("invalid constructor string", "value", t), e.inputs = parseParams(r[2].trim(), !1), parseModifiers(r[3].trim(), e), fragments_ConstructorFragment.fromObject(e)
            }
            static isConstructorFragment(t) {
                return t && t._isFragment && "constructor" === t.type
            }
        }
        class fragments_FunctionFragment extends fragments_ConstructorFragment {
            format(t) {
                if (t || (t = E.sighash), E[t] || M.throwArgumentError("invalid format type", "format", t), t === E.json) return JSON.stringify({
                    type: "function",
                    name: this.name,
                    constant: this.constant,
                    stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0,
                    payble: this.payable,
                    gas: this.gas ? this.gas.toNumber() : void 0,
                    inputs: this.inputs.map(e => JSON.parse(e.format(t))),
                    ouputs: this.outputs.map(e => JSON.parse(e.format(t)))
                });
                let e = "";
                return t !== E.sighash && (e += "function "), e += this.name + "(" + this.inputs.map(e => e.format(t)).join(t === E.full ? ", " : ",") + ") ", t !== E.sighash && (this.stateMutability ? "nonpayable" !== this.stateMutability && (e += this.stateMutability + " ") : this.constant && (e += "view "), this.outputs && this.outputs.length && (e += "returns (" + this.outputs.map(e => e.format(t)).join(", ") + ") "), null != this.gas && (e += "@" + this.gas.toString() + " ")), e.trim()
            }
            static from(t) {
                return "string" == typeof t ? fragments_FunctionFragment.fromString(t) : fragments_FunctionFragment.fromObject(t)
            }
            static fromObject(t) {
                if (fragments_FunctionFragment.isFunctionFragment(t)) return t;
                "function" !== t.type && M.throwArgumentError("invalid function object", "value", t);
                let e = verifyState(t);
                const r = {
                    type: t.type,
                    name: verifyIdentifier(t.name),
                    constant: e.constant,
                    inputs: t.inputs ? t.inputs.map(fragments_ParamType.fromObject) : [],
                    outputs: t.outputs ? t.outputs.map(fragments_ParamType.fromObject) : [],
                    payable: e.payable,
                    stateMutability: e.stateMutability,
                    gas: t.gas ? bignumber_BigNumber.from(t.gas) : null
                };
                return new fragments_FunctionFragment(A, r)
            }
            static fromString(t) {
                let e = {
                        type: "function"
                    },
                    r = (t = parseGas(t, e)).split(" returns ");
                r.length > 2 && M.throwArgumentError("invalid function string", "value", t);
                let n = r[0].match(T);
                if (n || M.throwArgumentError("invalid function signature", "value", t), e.name = n[1].trim(), e.name && verifyIdentifier(e.name), e.inputs = parseParams(n[2], !1), parseModifiers(n[3].trim(), e), r.length > 1) {
                    let n = r[1].match(T);
                    "" == n[1].trim() && "" == n[3].trim() || M.throwArgumentError("unexpected tokens", "value", t), e.outputs = parseParams(n[2], !1)
                } else e.outputs = [];
                return fragments_FunctionFragment.fromObject(e)
            }
            static isFunctionFragment(t) {
                return t && t._isFragment && "function" === t.type
            }
        }

        function verifyType(t) {
            return t.match(/^uint($|[^1-9])/) ? t = "uint256" + t.substring(4) : t.match(/^int($|[^1-9])/) && (t = "int256" + t.substring(3)), t
        }
        const N = new RegExp("^[A-Za-z_][A-Za-z0-9_]*$");

        function verifyIdentifier(t) {
            return t && t.match(N) || M.throwArgumentError(`invalid identifier "${t}"`, "value", t), t
        }
        const T = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");
        const C = new lib_esm_Logger("abi/5.0.7");

        function checkResultErrors(t) {
            const e = [],
                checkErrors = function (t, r) {
                    if (Array.isArray(r))
                        for (let n in r) {
                            const i = t.slice();
                            i.push(n);
                            try {
                                checkErrors(i, r[n])
                            } catch (t) {
                                e.push({
                                    path: i,
                                    error: t
                                })
                            }
                        }
                };
            return checkErrors([], t), e
        }
        class Coder {
            constructor(t, e, r, n) {
                this.name = t, this.type = e, this.localName = r, this.dynamic = n
            }
            _throwError(t, e) {
                C.throwArgumentError(t, this.localName, e)
            }
        }
        class abstract_coder_Writer {
            constructor(t) {
                defineReadOnly(this, "wordSize", t || 32), this._data = [], this._dataLength = 0, this._padding = new Uint8Array(t)
            }
            get data() {
                return function hexConcat(t) {
                    let e = "0x";
                    return t.forEach(t => {
                        e += hexlify(t).substring(2)
                    }), e
                }(this._data)
            }
            get length() {
                return this._dataLength
            }
            _writeData(t) {
                return this._data.push(t), this._dataLength += t.length, t.length
            }
            appendWriter(t) {
                return this._writeData(concat(t._data))
            }
            writeBytes(t) {
                let e = arrayify(t);
                const r = e.length % this.wordSize;
                return r && (e = concat([e, this._padding.slice(r)])), this._writeData(e)
            }
            _getValue(t) {
                let e = arrayify(bignumber_BigNumber.from(t));
                return e.length > this.wordSize && C.throwError("value out-of-bounds", lib_esm_Logger.errors.BUFFER_OVERRUN, {
                    length: this.wordSize,
                    offset: e.length
                }), e.length % this.wordSize && (e = concat([this._padding.slice(e.length % this.wordSize), e])), e
            }
            writeValue(t) {
                return this._writeData(this._getValue(t))
            }
            writeUpdatableValue() {
                const t = this._data.length;
                return this._data.push(this._padding), this._dataLength += this.wordSize, e => {
                    this._data[t] = this._getValue(e)
                }
            }
        }
        class abstract_coder_Reader {
            constructor(t, e, r, n) {
                defineReadOnly(this, "_data", arrayify(t)), defineReadOnly(this, "wordSize", e || 32), defineReadOnly(this, "_coerceFunc", r), defineReadOnly(this, "allowLoose", n), this._offset = 0
            }
            get data() {
                return hexlify(this._data)
            }
            get consumed() {
                return this._offset
            }
            static coerce(t, e) {
                let r = t.match("^u?int([0-9]+)$");
                return r && parseInt(r[1]) <= 48 && (e = e.toNumber()), e
            }
            coerce(t, e) {
                return this._coerceFunc ? this._coerceFunc(t, e) : abstract_coder_Reader.coerce(t, e)
            }
            _peekBytes(t, e, r) {
                let n = Math.ceil(e / this.wordSize) * this.wordSize;
                return this._offset + n > this._data.length && (this.allowLoose && r && this._offset + e <= this._data.length ? n = e : C.throwError("data out-of-bounds", lib_esm_Logger.errors.BUFFER_OVERRUN, {
                    length: this._data.length,
                    offset: this._offset + n
                })), this._data.slice(this._offset, this._offset + n)
            }
            subReader(t) {
                return new abstract_coder_Reader(this._data.slice(this._offset + t), this.wordSize, this._coerceFunc, this.allowLoose)
            }
            readBytes(t, e) {
                let r = this._peekBytes(0, t, !!e);
                return this._offset += r.length, r.slice(0, t)
            }
            readValue() {
                return bignumber_BigNumber.from(this.readBytes(this.wordSize))
            }
        }
        var P = r(72),
            I = r.n(P);

        function keccak256(t) {
            return "0x" + I.a.keccak_256(arrayify(t))
        }
        new lib_esm_Logger("rlp/5.4.0");
        const O = new lib_esm_Logger("address/5.4.0");

        function getChecksumAddress(t) {
            isHexString(t, 20) || O.throwArgumentError("invalid address", "address", t);
            const e = (t = t.toLowerCase()).substring(2).split(""),
                r = new Uint8Array(40);
            for (let t = 0; t < 40; t++) r[t] = e[t].charCodeAt(0);
            const n = arrayify(keccak256(r));
            for (let t = 0; t < 40; t += 2) n[t >> 1] >> 4 >= 8 && (e[t] = e[t].toUpperCase()), (15 & n[t >> 1]) >= 8 && (e[t + 1] = e[t + 1].toUpperCase());
            return "0x" + e.join("")
        }
        const D = {};
        for (let t = 0; t < 10; t++) D[String(t)] = String(t);
        for (let t = 0; t < 26; t++) D[String.fromCharCode(65 + t)] = String(10 + t);
        const j = Math.floor(function log10(t) {
            return Math.log10 ? Math.log10(t) : Math.log(t) / Math.LN10
        }(9007199254740991));

        function ibanChecksum(t) {
            let e = (t = (t = t.toUpperCase()).substring(4) + t.substring(0, 2) + "00").split("").map(t => D[t]).join("");
            for (; e.length >= j;) {
                let t = e.substring(0, j);
                e = parseInt(t, 10) % 97 + e.substring(t.length)
            }
            let r = String(98 - parseInt(e, 10) % 97);
            for (; r.length < 2;) r = "0" + r;
            return r
        }

        function getAddress(t) {
            let e = null;
            if ("string" != typeof t && O.throwArgumentError("invalid address", "address", t), t.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== t.substring(0, 2) && (t = "0x" + t), e = getChecksumAddress(t), t.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && e !== t && O.throwArgumentError("bad address checksum", "address", t);
            else if (t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                for (t.substring(2, 4) !== ibanChecksum(t) && O.throwArgumentError("bad icap checksum", "address", t), e = function _base36To16(t) {
                        return new m(t, 36).toString(16)
                    }(t.substring(4)); e.length < 40;) e = "0" + e;
                e = getChecksumAddress("0x" + e)
            } else O.throwArgumentError("invalid address", "address", t);
            return e
        }
        class address_AddressCoder extends Coder {
            constructor(t) {
                super("address", "address", t, !1)
            }
            encode(t, e) {
                try {
                    getAddress(e)
                } catch (t) {
                    this._throwError(t.message, e)
                }
                return t.writeValue(e)
            }
            decode(t) {
                return getAddress(hexZeroPad(t.readValue().toHexString(), 20))
            }
        }
        class anonymous_AnonymousCoder extends Coder {
            constructor(t) {
                super(t.name, t.type, void 0, t.dynamic), this.coder = t
            }
            encode(t, e) {
                return this.coder.encode(t, e)
            }
            decode(t) {
                return this.coder.decode(t)
            }
        }
        const L = new lib_esm_Logger("abi/5.0.7");

        function pack(t, e, r) {
            let n = null;
            if (Array.isArray(r)) n = r;
            else if (r && "object" == typeof r) {
                let t = {};
                n = e.map(e => {
                    const n = e.localName;
                    return n || L.throwError("cannot encode object for signature with missing names", lib_esm_Logger.errors.INVALID_ARGUMENT, {
                        argument: "values",
                        coder: e,
                        value: r
                    }), t[n] && L.throwError("cannot encode object for signature with duplicate names", lib_esm_Logger.errors.INVALID_ARGUMENT, {
                        argument: "values",
                        coder: e,
                        value: r
                    }), t[n] = !0, r[n]
                })
            } else L.throwArgumentError("invalid tuple value", "tuple", r);
            e.length !== n.length && L.throwArgumentError("types/value length mismatch", "tuple", r);
            let i = new abstract_coder_Writer(t.wordSize),
                o = new abstract_coder_Writer(t.wordSize),
                a = [];
            e.forEach((t, e) => {
                let r = n[e];
                if (t.dynamic) {
                    let e = o.length;
                    t.encode(o, r);
                    let n = i.writeUpdatableValue();
                    a.push(t => {
                        n(t + e)
                    })
                } else t.encode(i, r)
            }), a.forEach(t => {
                t(i.length)
            });
            let s = t.appendWriter(i);
            return s += t.appendWriter(o), s
        }

        function unpack(t, e) {
            let r = [],
                n = t.subReader(0);
            e.forEach(e => {
                let i = null;
                if (e.dynamic) {
                    let r = t.readValue(),
                        o = n.subReader(r.toNumber());
                    try {
                        i = e.decode(o)
                    } catch (t) {
                        if (t.code === lib_esm_Logger.errors.BUFFER_OVERRUN) throw t;
                        i = t, i.baseType = e.name, i.name = e.localName, i.type = e.type
                    }
                } else try {
                    i = e.decode(t)
                } catch (t) {
                    if (t.code === lib_esm_Logger.errors.BUFFER_OVERRUN) throw t;
                    i = t, i.baseType = e.name, i.name = e.localName, i.type = e.type
                }
                null != i && r.push(i)
            });
            const i = e.reduce((t, e) => {
                const r = e.localName;
                return r && (t[r] || (t[r] = 0), t[r]++), t
            }, {});
            e.forEach((t, e) => {
                let n = t.localName;
                if (!n || 1 !== i[n]) return;
                if ("length" === n && (n = "_length"), null != r[n]) return;
                const o = r[e];
                o instanceof Error ? Object.defineProperty(r, n, {
                    get: () => {
                        throw o
                    }
                }) : r[n] = o
            });
            for (let t = 0; t < r.length; t++) {
                const e = r[t];
                e instanceof Error && Object.defineProperty(r, t, {
                    get: () => {
                        throw e
                    }
                })
            }
            return Object.freeze(r)
        }
        class array_ArrayCoder extends Coder {
            constructor(t, e, r) {
                super("array", t.type + "[" + (e >= 0 ? e : "") + "]", r, -1 === e || t.dynamic), this.coder = t, this.length = e
            }
            encode(t, e) {
                Array.isArray(e) || this._throwError("expected array value", e);
                let r = this.length; - 1 === r && (r = e.length, t.writeValue(e.length)), L.checkArgumentCount(e.length, r, "coder array" + (this.localName ? " " + this.localName : ""));
                let n = [];
                for (let t = 0; t < e.length; t++) n.push(this.coder);
                return pack(t, n, e)
            }
            decode(t) {
                let e = this.length; - 1 === e && (e = t.readValue().toNumber());
                let r = [];
                for (let t = 0; t < e; t++) r.push(new anonymous_AnonymousCoder(this.coder));
                return t.coerce(this.name, unpack(t, r))
            }
        }
        class boolean_BooleanCoder extends Coder {
            constructor(t) {
                super("bool", "bool", t, !1)
            }
            encode(t, e) {
                return t.writeValue(e ? 1 : 0)
            }
            decode(t) {
                return t.coerce(this.type, !t.readValue().isZero())
            }
        }
        class bytes_DynamicBytesCoder extends Coder {
            constructor(t, e) {
                super(t, t, e, !0)
            }
            encode(t, e) {
                e = arrayify(e);
                let r = t.writeValue(e.length);
                return r += t.writeBytes(e), r
            }
            decode(t) {
                return t.readBytes(t.readValue().toNumber(), !0)
            }
        }
        class bytes_BytesCoder extends bytes_DynamicBytesCoder {
            constructor(t) {
                super("bytes", t)
            }
            decode(t) {
                return t.coerce(this.name, hexlify(super.decode(t)))
            }
        }
        class fixed_bytes_FixedBytesCoder extends Coder {
            constructor(t, e) {
                let r = "bytes" + String(t);
                super(r, r, e, !1), this.size = t
            }
            encode(t, e) {
                let r = arrayify(e);
                return r.length !== this.size && this._throwError("incorrect data length", e), t.writeBytes(r)
            }
            decode(t) {
                return t.coerce(this.name, hexlify(t.readBytes(this.size)))
            }
        }
        class null_NullCoder extends Coder {
            constructor(t) {
                super("null", "", t, !1)
            }
            encode(t, e) {
                return null != e && this._throwError("not null", e), t.writeBytes([])
            }
            decode(t) {
                return t.readBytes(0), t.coerce(this.name, null)
            }
        }
        const U = bignumber_BigNumber.from(-1),
            H = bignumber_BigNumber.from(0),
            q = bignumber_BigNumber.from(1),
            z = bignumber_BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
        class number_NumberCoder extends Coder {
            constructor(t, e, r) {
                const n = (e ? "int" : "uint") + 8 * t;
                super(n, n, r, !1), this.size = t, this.signed = e
            }
            encode(t, e) {
                let r = bignumber_BigNumber.from(e),
                    n = z.mask(8 * t.wordSize);
                if (this.signed) {
                    let t = n.mask(8 * this.size - 1);
                    (r.gt(t) || r.lt(t.add(q).mul(U))) && this._throwError("value out-of-bounds", e)
                } else(r.lt(H) || r.gt(n.mask(8 * this.size))) && this._throwError("value out-of-bounds", e);
                return r = r.toTwos(8 * this.size).mask(8 * this.size), this.signed && (r = r.fromTwos(8 * this.size).toTwos(8 * t.wordSize)), t.writeValue(r)
            }
            decode(t) {
                let e = t.readValue().mask(8 * this.size);
                return this.signed && (e = e.fromTwos(8 * this.size)), t.coerce(this.name, e)
            }
        }
        const G = new lib_esm_Logger("strings/5.4.0");
        var V, J;

        function ignoreFunc(t, e, r, n, i) {
            if (t === J.BAD_PREFIX || t === J.UNEXPECTED_CONTINUE) {
                let t = 0;
                for (let n = e + 1; n < r.length && r[n] >> 6 == 2; n++) t++;
                return t
            }
            return t === J.OVERRUN ? r.length - e - 1 : 0
        }! function (t) {
            t.current = "", t.NFC = "NFC", t.NFD = "NFD", t.NFKC = "NFKC", t.NFKD = "NFKD"
        }(V || (V = {})),
        function (t) {
            t.UNEXPECTED_CONTINUE = "unexpected continuation byte", t.BAD_PREFIX = "bad codepoint prefix", t.OVERRUN = "string overrun", t.MISSING_CONTINUE = "missing continuation byte", t.OUT_OF_RANGE = "out of UTF-8 range", t.UTF16_SURROGATE = "UTF-16 surrogate", t.OVERLONG = "overlong representation"
        }(J || (J = {}));
        const W = Object.freeze({
            error: function errorFunc(t, e, r, n, i) {
                return G.throwArgumentError(`invalid codepoint at offset ${e}; ${t}`, "bytes", r)
            },
            ignore: ignoreFunc,
            replace: function replaceFunc(t, e, r, n, i) {
                return t === J.OVERLONG ? (n.push(i), 0) : (n.push(65533), ignoreFunc(t, e, r))
            }
        });

        function getUtf8CodePoints(t, e) {
            null == e && (e = W.error), t = arrayify(t);
            const r = [];
            let n = 0;
            for (; n < t.length;) {
                const i = t[n++];
                if (i >> 7 == 0) {
                    r.push(i);
                    continue
                }
                let o = null,
                    a = null;
                if (192 == (224 & i)) o = 1, a = 127;
                else if (224 == (240 & i)) o = 2, a = 2047;
                else {
                    if (240 != (248 & i)) {
                        n += e(128 == (192 & i) ? J.UNEXPECTED_CONTINUE : J.BAD_PREFIX, n - 1, t, r);
                        continue
                    }
                    o = 3, a = 65535
                }
                if (n - 1 + o >= t.length) {
                    n += e(J.OVERRUN, n - 1, t, r);
                    continue
                }
                let s = i & (1 << 8 - o - 1) - 1;
                for (let i = 0; i < o; i++) {
                    let i = t[n];
                    if (128 != (192 & i)) {
                        n += e(J.MISSING_CONTINUE, n, t, r), s = null;
                        break
                    }
                    s = s << 6 | 63 & i, n++
                }
                null !== s && (s > 1114111 ? n += e(J.OUT_OF_RANGE, n - 1 - o, t, r, s) : s >= 55296 && s <= 57343 ? n += e(J.UTF16_SURROGATE, n - 1 - o, t, r, s) : s <= a ? n += e(J.OVERLONG, n - 1 - o, t, r, s) : r.push(s))
            }
            return r
        }

        function toUtf8Bytes(t, e = V.current) {
            e != V.current && (G.checkNormalize(), t = t.normalize(e));
            let r = [];
            for (let e = 0; e < t.length; e++) {
                const n = t.charCodeAt(e);
                if (n < 128) r.push(n);
                else if (n < 2048) r.push(n >> 6 | 192), r.push(63 & n | 128);
                else if (55296 == (64512 & n)) {
                    e++;
                    const i = t.charCodeAt(e);
                    if (e >= t.length || 56320 != (64512 & i)) throw new Error("invalid utf-8 string");
                    const o = 65536 + ((1023 & n) << 10) + (1023 & i);
                    r.push(o >> 18 | 240), r.push(o >> 12 & 63 | 128), r.push(o >> 6 & 63 | 128), r.push(63 & o | 128)
                } else r.push(n >> 12 | 224), r.push(n >> 6 & 63 | 128), r.push(63 & n | 128)
            }
            return arrayify(r)
        }

        function toUtf8String(t, e) {
            return function _toUtf8String(t) {
                return t.map(t => t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode(55296 + (t >> 10 & 1023), 56320 + (1023 & t)))).join("")
            }(getUtf8CodePoints(t, e))
        }
        class string_StringCoder extends bytes_DynamicBytesCoder {
            constructor(t) {
                super("string", t)
            }
            encode(t, e) {
                return super.encode(t, toUtf8Bytes(e))
            }
            decode(t) {
                return toUtf8String(super.decode(t))
            }
        }
        class tuple_TupleCoder extends Coder {
            constructor(t, e) {
                let r = !1;
                const n = [];
                t.forEach(t => {
                    t.dynamic && (r = !0), n.push(t.type)
                }), super("tuple", "tuple(" + n.join(",") + ")", e, r), this.coders = t
            }
            encode(t, e) {
                return pack(t, this.coders, e)
            }
            decode(t) {
                return t.coerce(this.name, unpack(t, this.coders))
            }
        }
        const Z = new lib_esm_Logger("abi/5.0.7"),
            X = new RegExp(/^bytes([0-9]*)$/),
            Y = new RegExp(/^(u?int)([0-9]*)$/);
        class abi_coder_AbiCoder {
            constructor(t) {
                Z.checkNew(new.target, abi_coder_AbiCoder), defineReadOnly(this, "coerceFunc", t || null)
            }
            _getCoder(t) {
                switch (t.baseType) {
                    case "address":
                        return new address_AddressCoder(t.name);
                    case "bool":
                        return new boolean_BooleanCoder(t.name);
                    case "string":
                        return new string_StringCoder(t.name);
                    case "bytes":
                        return new bytes_BytesCoder(t.name);
                    case "array":
                        return new array_ArrayCoder(this._getCoder(t.arrayChildren), t.arrayLength, t.name);
                    case "tuple":
                        return new tuple_TupleCoder((t.components || []).map(t => this._getCoder(t)), t.name);
                    case "":
                        return new null_NullCoder(t.name)
                }
                let e = t.type.match(Y);
                if (e) {
                    let r = parseInt(e[2] || "256");
                    return (0 === r || r > 256 || r % 8 != 0) && Z.throwArgumentError("invalid " + e[1] + " bit length", "param", t), new number_NumberCoder(r / 8, "int" === e[1], t.name)
                }
                if (e = t.type.match(X), e) {
                    let r = parseInt(e[1]);
                    return (0 === r || r > 32) && Z.throwArgumentError("invalid bytes length", "param", t), new fixed_bytes_FixedBytesCoder(r, t.name)
                }
                return Z.throwArgumentError("invalid type", "type", t.type)
            }
            _getWordSize() {
                return 32
            }
            _getReader(t, e) {
                return new abstract_coder_Reader(t, this._getWordSize(), this.coerceFunc, e)
            }
            _getWriter() {
                return new abstract_coder_Writer(this._getWordSize())
            }
            encode(t, e) {
                t.length !== e.length && Z.throwError("types/values length mismatch", lib_esm_Logger.errors.INVALID_ARGUMENT, {
                    count: {
                        types: t.length,
                        values: e.length
                    },
                    value: {
                        types: t,
                        values: e
                    }
                });
                const r = t.map(t => this._getCoder(fragments_ParamType.from(t))),
                    n = new tuple_TupleCoder(r, "_"),
                    i = this._getWriter();
                return n.encode(i, e), i.data
            }
            decode(t, e, r) {
                const n = t.map(t => this._getCoder(fragments_ParamType.from(t)));
                return new tuple_TupleCoder(n, "_").decode(this._getReader(arrayify(e), r))
            }
        }
        const $ = new abi_coder_AbiCoder;

        function id(t) {
            return keccak256(toUtf8Bytes(t))
        }
        const Q = new lib_esm_Logger("abi/5.0.7");
        class interface_LogDescription extends Description {}
        class interface_TransactionDescription extends Description {}
        class interface_Indexed extends Description {
            static isIndexed(t) {
                return !(!t || !t._isIndexed)
            }
        }

        function wrapAccessError(t, e) {
            const r = new Error("deferred error during ABI decoding triggered accessing " + t);
            return r.error = e, r
        }
        class interface_Interface {
            constructor(t) {
                Q.checkNew(new.target, interface_Interface);
                let e = [];
                e = "string" == typeof t ? JSON.parse(t) : t, defineReadOnly(this, "fragments", e.map(t => fragments_Fragment.from(t)).filter(t => null != t)), defineReadOnly(this, "_abiCoder", getStatic(new.target, "getAbiCoder")()), defineReadOnly(this, "functions", {}), defineReadOnly(this, "errors", {}), defineReadOnly(this, "events", {}), defineReadOnly(this, "structs", {}), this.fragments.forEach(t => {
                    let e = null;
                    switch (t.type) {
                        case "constructor":
                            return this.deploy ? void Q.warn("duplicate definition - constructor") : void defineReadOnly(this, "deploy", t);
                        case "function":
                            e = this.functions;
                            break;
                        case "event":
                            e = this.events;
                            break;
                        default:
                            return
                    }
                    let r = t.format();
                    e[r] ? Q.warn("duplicate definition - " + r) : e[r] = t
                }), this.deploy || defineReadOnly(this, "deploy", fragments_ConstructorFragment.from({
                    payable: !1,
                    type: "constructor"
                })), defineReadOnly(this, "_isInterface", !0)
            }
            format(t) {
                t || (t = E.full), t === E.sighash && Q.throwArgumentError("interface does not support formatting sighash", "format", t);
                const e = this.fragments.map(e => e.format(t));
                return t === E.json ? JSON.stringify(e.map(t => JSON.parse(t))) : e
            }
            static getAbiCoder() {
                return $
            }
            static getAddress(t) {
                return getAddress(t)
            }
            static getSighash(t) {
                return hexDataSlice(id(t.format()), 0, 4)
            }
            static getEventTopic(t) {
                return id(t.format())
            }
            getFunction(t) {
                if (isHexString(t)) {
                    for (const e in this.functions)
                        if (t === this.getSighash(e)) return this.functions[e];
                    Q.throwArgumentError("no matching function", "sighash", t)
                }
                if (-1 === t.indexOf("(")) {
                    const e = t.trim(),
                        r = Object.keys(this.functions).filter(t => t.split("(")[0] === e);
                    return 0 === r.length ? Q.throwArgumentError("no matching function", "name", e) : r.length > 1 && Q.throwArgumentError("multiple matching functions", "name", e), this.functions[r[0]]
                }
                const e = this.functions[fragments_FunctionFragment.fromString(t).format()];
                return e || Q.throwArgumentError("no matching function", "signature", t), e
            }
            getEvent(t) {
                if (isHexString(t)) {
                    const e = t.toLowerCase();
                    for (const t in this.events)
                        if (e === this.getEventTopic(t)) return this.events[t];
                    Q.throwArgumentError("no matching event", "topichash", e)
                }
                if (-1 === t.indexOf("(")) {
                    const e = t.trim(),
                        r = Object.keys(this.events).filter(t => t.split("(")[0] === e);
                    return 0 === r.length ? Q.throwArgumentError("no matching event", "name", e) : r.length > 1 && Q.throwArgumentError("multiple matching events", "name", e), this.events[r[0]]
                }
                const e = this.events[EventFragment.fromString(t).format()];
                return e || Q.throwArgumentError("no matching event", "signature", t), e
            }
            getSighash(t) {
                return "string" == typeof t && (t = this.getFunction(t)), getStatic(this.constructor, "getSighash")(t)
            }
            getEventTopic(t) {
                return "string" == typeof t && (t = this.getEvent(t)), getStatic(this.constructor, "getEventTopic")(t)
            }
            _decodeParams(t, e) {
                return this._abiCoder.decode(t, e)
            }
            _encodeParams(t, e) {
                return this._abiCoder.encode(t, e)
            }
            encodeDeploy(t) {
                return this._encodeParams(this.deploy.inputs, t || [])
            }
            decodeFunctionData(t, e) {
                "string" == typeof t && (t = this.getFunction(t));
                const r = arrayify(e);
                return hexlify(r.slice(0, 4)) !== this.getSighash(t) && Q.throwArgumentError(`data signature does not match function ${t.name}.`, "data", hexlify(r)), this._decodeParams(t.inputs, r.slice(4))
            }
            encodeFunctionData(t, e) {
                return "string" == typeof t && (t = this.getFunction(t)), hexlify(concat([this.getSighash(t), this._encodeParams(t.inputs, e || [])]))
            }
            decodeFunctionResult(t, e) {
                "string" == typeof t && (t = this.getFunction(t));
                let r = arrayify(e),
                    n = null,
                    i = null;
                switch (r.length % this._abiCoder._getWordSize()) {
                    case 0:
                        try {
                            return this._abiCoder.decode(t.outputs, r)
                        } catch (t) {}
                        break;
                    case 4:
                        "0x08c379a0" === hexlify(r.slice(0, 4)) && (i = "Error(string)", n = this._abiCoder.decode(["string"], r.slice(4))[0])
                }
                return Q.throwError("call revert exception", lib_esm_Logger.errors.CALL_EXCEPTION, {
                    method: t.format(),
                    errorSignature: i,
                    errorArgs: [n],
                    reason: n
                })
            }
            encodeFunctionResult(t, e) {
                return "string" == typeof t && (t = this.getFunction(t)), hexlify(this._abiCoder.encode(t.outputs, e || []))
            }
            encodeFilterTopics(t, e) {
                "string" == typeof t && (t = this.getEvent(t)), e.length > t.inputs.length && Q.throwError("too many arguments for " + t.format(), lib_esm_Logger.errors.UNEXPECTED_ARGUMENT, {
                    argument: "values",
                    value: e
                });
                let r = [];
                t.anonymous || r.push(this.getEventTopic(t));
                const encodeTopic = (t, e) => "string" === t.type ? id(e) : "bytes" === t.type ? keccak256(hexlify(e)) : ("address" === t.type && this._abiCoder.encode(["address"], [e]), hexZeroPad(hexlify(e), 32));
                for (e.forEach((e, n) => {
                        let i = t.inputs[n];
                        i.indexed ? null == e ? r.push(null) : "array" === i.baseType || "tuple" === i.baseType ? Q.throwArgumentError("filtering with tuples or arrays not supported", "contract." + i.name, e) : Array.isArray(e) ? r.push(e.map(t => encodeTopic(i, t))) : r.push(encodeTopic(i, e)) : null != e && Q.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + i.name, e)
                    }); r.length && null === r[r.length - 1];) r.pop();
                return r
            }
            encodeEventLog(t, e) {
                "string" == typeof t && (t = this.getEvent(t));
                const r = [],
                    n = [],
                    i = [];
                return t.anonymous || r.push(this.getEventTopic(t)), e.length !== t.inputs.length && Q.throwArgumentError("event arguments/values mismatch", "values", e), t.inputs.forEach((t, o) => {
                    const a = e[o];
                    if (t.indexed)
                        if ("string" === t.type) r.push(id(a));
                        else if ("bytes" === t.type) r.push(keccak256(a));
                    else {
                        if ("tuple" === t.baseType || "array" === t.baseType) throw new Error("not implemented");
                        r.push(this._abiCoder.encode([t.type], [a]))
                    } else n.push(t), i.push(a)
                }), {
                    data: this._abiCoder.encode(n, i),
                    topics: r
                }
            }
            decodeEventLog(t, e, r) {
                if ("string" == typeof t && (t = this.getEvent(t)), null != r && !t.anonymous) {
                    let e = this.getEventTopic(t);
                    isHexString(r[0], 32) && r[0].toLowerCase() === e || Q.throwError("fragment/topic mismatch", lib_esm_Logger.errors.INVALID_ARGUMENT, {
                        argument: "topics[0]",
                        expected: e,
                        value: r[0]
                    }), r = r.slice(1)
                }
                let n = [],
                    i = [],
                    o = [];
                t.inputs.forEach((t, e) => {
                    t.indexed ? "string" === t.type || "bytes" === t.type || "tuple" === t.baseType || "array" === t.baseType ? (n.push(fragments_ParamType.fromObject({
                        type: "bytes32",
                        name: t.name
                    })), o.push(!0)) : (n.push(t), o.push(!1)) : (i.push(t), o.push(!1))
                });
                let a = null != r ? this._abiCoder.decode(n, concat(r)) : null,
                    s = this._abiCoder.decode(i, e, !0),
                    u = [],
                    c = 0,
                    l = 0;
                t.inputs.forEach((t, e) => {
                    if (t.indexed)
                        if (null == a) u[e] = new interface_Indexed({
                            _isIndexed: !0,
                            hash: null
                        });
                        else if (o[e]) u[e] = new interface_Indexed({
                        _isIndexed: !0,
                        hash: a[l++]
                    });
                    else try {
                        u[e] = a[l++]
                    } catch (t) {
                        u[e] = t
                    } else try {
                        u[e] = s[c++]
                    } catch (t) {
                        u[e] = t
                    }
                    if (t.name && null == u[t.name]) {
                        const r = u[e];
                        r instanceof Error ? Object.defineProperty(u, t.name, {
                            get: () => {
                                throw wrapAccessError("property " + JSON.stringify(t.name), r)
                            }
                        }) : u[t.name] = r
                    }
                });
                for (let t = 0; t < u.length; t++) {
                    const e = u[t];
                    e instanceof Error && Object.defineProperty(u, t, {
                        get: () => {
                            throw wrapAccessError("index " + t, e)
                        }
                    })
                }
                return Object.freeze(u)
            }
            parseTransaction(t) {
                let e = this.getFunction(t.data.substring(0, 10).toLowerCase());
                return e ? new interface_TransactionDescription({
                    args: this._abiCoder.decode(e.inputs, "0x" + t.data.substring(10)),
                    functionFragment: e,
                    name: e.name,
                    signature: e.format(),
                    sighash: this.getSighash(e),
                    value: bignumber_BigNumber.from(t.value || "0")
                }) : null
            }
            parseLog(t) {
                let e = this.getEvent(t.topics[0]);
                return !e || e.anonymous ? null : new interface_LogDescription({
                    eventFragment: e,
                    name: e.name,
                    signature: e.format(),
                    topic: this.getEventTopic(e),
                    args: this.decodeEventLog(e, t.data, t.topics)
                })
            }
            static isInterface(t) {
                return !(!t || !t._isInterface)
            }
        }
    }, function (t, e, r) {
        var n = Object.getOwnPropertySymbols,
            i = Object.prototype.hasOwnProperty,
            o = Object.prototype.propertyIsEnumerable;

        function toObject(t) {
            if (null == t) throw new TypeError("Object.assign cannot be called with null or undefined");
            return Object(t)
        }
        t.exports = function shouldUseNative() {
            try {
                if (!Object.assign) return !1;
                var t = new String("abc");
                if (t[5] = "de", "5" === Object.getOwnPropertyNames(t)[0]) return !1;
                for (var e = {}, r = 0; r < 10; r++) e["_" + String.fromCharCode(r)] = r;
                if ("0123456789" !== Object.getOwnPropertyNames(e).map((function (t) {
                        return e[t]
                    })).join("")) return !1;
                var n = {};
                return "abcdefghijklmnopqrst".split("").forEach((function (t) {
                    n[t] = t
                })), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, n)).join("")
            } catch (t) {
                return !1
            }
        }() ? Object.assign : function (t, e) {
            for (var r, a, s = toObject(t), u = 1; u < arguments.length; u++) {
                for (var c in r = Object(arguments[u])) i.call(r, c) && (s[c] = r[c]);
                if (n) {
                    a = n(r);
                    for (var l = 0; l < a.length; l++) o.call(r, a[l]) && (s[a[l]] = r[a[l]])
                }
            }
            return s
        }
    }, function (t, e, r) {
        var n = r(369),
            i = r(76),
            o = Object.prototype,
            a = o.hasOwnProperty,
            s = o.propertyIsEnumerable,
            u = n(function () {
                return arguments
            }()) ? n : function (t) {
                return i(t) && a.call(t, "callee") && !s.call(t, "callee")
            };
        t.exports = u
    }, function (t, e) {
        t.exports = function isLength(t) {
            return "number" == typeof t && t > -1 && t % 1 == 0 && t <= 9007199254740991
        }
    }, function (t, e, r) {
        var n = r(208),
            i = r(143);
        t.exports = function isArrayLike(t) {
            return null != t && i(t.length) && !n(t)
        }
    }, function (t, e, r) {
        var n = r(44)(r(34), "Map");
        t.exports = n
    }, function (t, e, r) {
        var n = r(389),
            i = r(396),
            o = r(398),
            a = r(399),
            s = r(400);

        function MapCache(t) {
            var e = -1,
                r = null == t ? 0 : t.length;
            for (this.clear(); ++e < r;) {
                var n = t[e];
                this.set(n[0], n[1])
            }
        }
        MapCache.prototype.clear = n, MapCache.prototype.delete = i, MapCache.prototype.get = o, MapCache.prototype.has = a, MapCache.prototype.set = s, t.exports = MapCache
    }, function (t, e) {
        t.exports = function setToArray(t) {
            var e = -1,
                r = Array(t.size);
            return t.forEach((function (t) {
                r[++e] = t
            })), r
        }
    }, function (t, e, r) {
        var n = r(22),
            i = r(77),
            o = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
            a = /^\w*$/;
        t.exports = function isKey(t, e) {
            if (n(t)) return !1;
            var r = typeof t;
            return !("number" != r && "symbol" != r && "boolean" != r && null != t && !i(t)) || (a.test(t) || !o.test(t) || null != e && t in Object(e))
        }
    }, function (t, e, r) {
        var n = r(229);
        t.exports = function toString(t) {
            return null == t ? "" : n(t)
        }
    }, function (t, e) {
        t.exports = function arrayMap(t, e) {
            for (var r = -1, n = null == t ? 0 : t.length, i = Array(n); ++r < n;) i[r] = e(t[r], r, t);
            return i
        }
    }, function (t, e) {
        t.exports = function identity(t) {
            return t
        }
    }, function (t, e, r) {
        var n = r(443);
        t.exports = function (t, e, r) {
            if (n(t), void 0 === e) return t;
            switch (r) {
                case 1:
                    return function (r) {
                        return t.call(e, r)
                    };
                case 2:
                    return function (r, n) {
                        return t.call(e, r, n)
                    };
                case 3:
                    return function (r, n, i) {
                        return t.call(e, r, n, i)
                    }
            }
            return function () {
                return t.apply(e, arguments)
            }
        }
    }, function (t, e, r) {
        var n = r(61);
        t.exports = function (t, e) {
            if (!n(t)) return t;
            var r, i;
            if (e && "function" == typeof (r = t.toString) && !n(i = r.call(t))) return i;
            if ("function" == typeof (r = t.valueOf) && !n(i = r.call(t))) return i;
            if (!e && "function" == typeof (r = t.toString) && !n(i = r.call(t))) return i;
            throw TypeError("Can't convert object to primitive value")
        }
    }, function (t, e) {
        var r = {}.toString;
        t.exports = function (t) {
            return r.call(t).slice(8, -1)
        }
    }, function (t, e) {
        t.exports = function (t) {
            if (null == t) throw TypeError("Can't call method on  " + t);
            return t
        }
    }, function (t, e) {
        var r = Math.ceil,
            n = Math.floor;
        t.exports = function (t) {
            return isNaN(t = +t) ? 0 : (t > 0 ? n : r)(t)
        }
    }, function (t, e, r) {
        var n = r(158)("keys"),
            i = r(113);
        t.exports = function (t) {
            return n[t] || (n[t] = i(t))
        }
    }, function (t, e, r) {
        var n = r(13),
            i = r(37),
            o = i["__core-js_shared__"] || (i["__core-js_shared__"] = {});
        (t.exports = function (t, e) {
            return o[t] || (o[t] = void 0 !== e ? e : {})
        })("versions", []).push({
            version: n.version,
            mode: r(112) ? "pure" : "global",
            copyright: "© 2019 Denis Pushkarev (zloirock.ru)"
        })
    }, function (t, e) {
        t.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")
    }, function (t, e) {
        e.f = Object.getOwnPropertySymbols
    }, function (t, e, r) {
        var n = r(452)(!0);
        r(245)(String, "String", (function (t) {
            this._t = String(t), this._i = 0
        }), (function () {
            var t, e = this._t,
                r = this._i;
            return r >= e.length ? {
                value: void 0,
                done: !0
            } : (t = n(e, r), this._i += t.length, {
                value: t,
                done: !1
            })
        }))
    }, function (t, e, r) {
        var n = r(45),
            i = r(454),
            o = r(159),
            a = r(157)("IE_PROTO"),
            Empty = function () {},
            createDict = function () {
                var t, e = r(236)("iframe"),
                    n = o.length;
                for (e.style.display = "none", r(455).appendChild(e), e.src = "javascript:", (t = e.contentWindow.document).open(), t.write("<script>document.F=Object<\/script>"), t.close(), createDict = t.F; n--;) delete createDict.prototype[o[n]];
                return createDict()
            };
        t.exports = Object.create || function create(t, e) {
            var r;
            return null !== t ? (Empty.prototype = n(t), r = new Empty, Empty.prototype = null, r[a] = t) : r = createDict(), void 0 === e ? r : i(r, e)
        }
    }, function (t, e, r) {
        var n = r(38).f,
            i = r(46),
            o = r(27)("toStringTag");
        t.exports = function (t, e, r) {
            t && !i(t = r ? t : t.prototype, o) && n(t, o, {
                configurable: !0,
                value: e
            })
        }
    }, function (t, e, r) {
        e.f = r(27)
    }, function (t, e, r) {
        var n = r(37),
            i = r(13),
            o = r(112),
            a = r(164),
            s = r(38).f;
        t.exports = function (t) {
            var e = i.Symbol || (i.Symbol = o ? {} : n.Symbol || {});
            "_" == t.charAt(0) || t in e || s(e, t, {
                value: a.f(t)
            })
        }
    }, function (t, e) {
        function _setPrototypeOf(e, r) {
            return t.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(t, e) {
                return t.__proto__ = e, t
            }, _setPrototypeOf(e, r)
        }
        t.exports = _setPrototypeOf
    }, function (t, e) {
        t.exports = function _applyDecoratedDescriptor(t, e, r, n, i) {
            var o = {};
            return Object.keys(n).forEach((function (t) {
                o[t] = n[t]
            })), o.enumerable = !!o.enumerable, o.configurable = !!o.configurable, ("value" in o || o.initializer) && (o.writable = !0), o = r.slice().reverse().reduce((function (r, n) {
                return n(t, e, r) || r
            }), o), i && void 0 !== o.initializer && (o.value = o.initializer ? o.initializer.call(i) : void 0, o.initializer = void 0), void 0 === o.initializer && (Object.defineProperty(t, e, o), o = null), o
        }
    }, function (t, e, r) {
        var n = r(14),
            i = r(166),
            o = r(542),
            a = r(543);

        function _wrapNativeSuper(e) {
            var r = "function" == typeof Map ? new Map : void 0;
            return t.exports = _wrapNativeSuper = function _wrapNativeSuper(t) {
                if (null === t || !o(t)) return t;
                if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
                if (void 0 !== r) {
                    if (r.has(t)) return r.get(t);
                    r.set(t, Wrapper)
                }

                function Wrapper() {
                    return a(t, arguments, n(this).constructor)
                }
                return Wrapper.prototype = Object.create(t.prototype, {
                    constructor: {
                        value: Wrapper,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }), i(Wrapper, t)
            }, _wrapNativeSuper(e)
        }
        t.exports = _wrapNativeSuper
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.DependencyNotResolvedError = e.UnknownDependencyError = e.InvalidServiceError = e.default = void 0;
        var i = n(r(47)),
            o = n(r(547)),
            a = n(r(11)),
            s = n(r(9)),
            u = n(r(24)),
            c = n(r(14)),
            l = n(r(23)),
            h = n(r(168)),
            d = n(r(549)),
            p = function (t) {
                function InvalidServiceError(t) {
                    return (0, s.default)(this, InvalidServiceError), (0, u.default)(this, (0, c.default)(InvalidServiceError).call(this, t))
                }
                return (0, l.default)(InvalidServiceError, t), InvalidServiceError
            }((0, h.default)(Error));
        e.InvalidServiceError = p;
        var m = function (t) {
            function UnknownDependencyError(t, e) {
                return (0, s.default)(this, UnknownDependencyError), (0, u.default)(this, (0, c.default)(UnknownDependencyError).call(this, "Injected service " + e + " is not a dependency of " + t))
            }
            return (0, l.default)(UnknownDependencyError, t), UnknownDependencyError
        }((0, h.default)(Error));
        e.UnknownDependencyError = m;
        var y = function (t) {
            function DependencyNotResolvedError(t, e) {
                return (0, s.default)(this, DependencyNotResolvedError), (0, u.default)(this, (0, c.default)(DependencyNotResolvedError).call(this, "Dependency " + e + " of service " + t + " is unavailable."))
            }
            return (0, l.default)(DependencyNotResolvedError, t), DependencyNotResolvedError
        }((0, h.default)(Error));

        function _waitForDependencies(t) {
            return Promise.all(this.dependencies().map((function (e) {
                return t(e)
            })))
        }
        e.DependencyNotResolvedError = y;
        var b = function (t) {
            function ServiceManager(t) {
                var e, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                    i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
                    o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null;
                if ((0, s.default)(this, ServiceManager), e = (0, u.default)(this, (0, c.default)(ServiceManager).call(this, n, i, o)), !t) throw new Error("Service name must not be empty.");
                return e._name = t, e._dependencies = r, e._injections = {}, r.forEach((function (t) {
                    return e._injections[t] = null
                })), e
            }
            return (0, l.default)(ServiceManager, t), (0, a.default)(ServiceManager, null, [{
                key: "isValidService",
                value: function isValidService(t) {
                    return null !== t && "object" === (0, i.default)(t) && "function" == typeof t.manager
                }
            }]), (0, a.default)(ServiceManager, [{
                key: "name",
                value: function name() {
                    return this._name
                }
            }, {
                key: "dependencies",
                value: function dependencies() {
                    return this._dependencies
                }
            }, {
                key: "inject",
                value: function inject(t, e) {
                    if (void 0 === this._injections[t]) throw new m(this.name(), t);
                    if (!ServiceManager.isValidService(e)) throw new p("Cannot inject invalid service in " + this.name());
                    return this._injections[t] = e, this
                }
            }, {
                key: "dependency",
                value: function dependency(t) {
                    if (!this._injections[t]) throw new y(this.name(), t);
                    return this._injections[t]
                }
            }, {
                key: "initialize",
                value: function initialize() {
                    var t = this;
                    return this.initializeDependencies().then((function () {
                        return (0, o.default)((0, c.default)(ServiceManager.prototype), "initialize", t).call(t, t._settings)
                    }))
                }
            }, {
                key: "connect",
                value: function connect() {
                    var t = this;
                    return this.connectDependencies().then((function () {
                        return (0, o.default)((0, c.default)(ServiceManager.prototype), "connect", t).call(t)
                    }))
                }
            }, {
                key: "authenticate",
                value: function authenticate() {
                    var t = this;
                    return this.authenticateDependencies().then((function () {
                        return (0, o.default)((0, c.default)(ServiceManager.prototype), "authenticate", t).call(t)
                    }))
                }
            }, {
                key: "initializeDependencies",
                value: function initializeDependencies() {
                    var t = this;
                    return _waitForDependencies.call(this, (function (e) {
                        return t.dependency(e).manager().initialize()
                    }))
                }
            }, {
                key: "connectDependencies",
                value: function connectDependencies() {
                    var t = this;
                    return _waitForDependencies.call(this, (function (e) {
                        return t.dependency(e).manager().connect()
                    }))
                }
            }, {
                key: "authenticateDependencies",
                value: function authenticateDependencies() {
                    var t = this;
                    return _waitForDependencies.call(this, (function (e) {
                        return t.dependency(e).manager().authenticate()
                    }))
                }
            }, {
                key: "createService",
                value: function createService() {
                    var t = this;
                    return {
                        manager: function manager() {
                            return t
                        }
                    }
                }
            }]), ServiceManager
        }(d.default);
        e.default = b
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var n = {
            CREATED: "CREATED",
            INITIALIZING: "INITIALIZING",
            OFFLINE: "OFFLINE",
            CONNECTING: "CONNECTING",
            ONLINE: "ONLINE",
            AUTHENTICATING: "AUTHENTICATING",
            READY: "READY",
            ERROR: "ERROR"
        };
        e.default = n
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var i = n(r(9)),
            o = n(r(11)),
            a = n(r(169)),
            s = n(r(82)),
            u = n(r(170));

        function _defineLifeCycleMethods(t) {
            void 0 === this.initialize && (this.initialize = function () {}), t !== s.default.LOCAL && (void 0 === this.connect && (this.connect = function () {}), this.disconnect = function () {}), t === s.default.PRIVATE && (void 0 === this.authenticate && (this.authenticate = function () {}), this.deauthenticate = function () {})
        }

        function _buildServiceManager(t, e, r) {
            var n = this,
                i = t === s.default.LOCAL ? null : function (t) {
                    return n.disconnect = t, n.connect()
                },
                o = t !== s.default.PRIVATE ? null : function (t) {
                    return n.deauthenticate = t, n.authenticate()
                };
            return new a.default(e, r, (function (t) {
                return n.initialize(t)
            }), i, o)
        }

        function _installLifeCycleHooks(t) {
            var e = this;
            t.onInitialized((function () {
                t.type() !== s.default.LOCAL && t.dependencies().forEach((function (t) {
                    e.get(t).manager().onDisconnected((function () {
                        return e.disconnect()
                    }))
                })), t.type() === s.default.PRIVATE && t.dependencies().forEach((function (t) {
                    e.get(t).manager().onDeauthenticated((function () {
                        return e.deauthenticate()
                    }))
                }))
            }))
        }

        function _guardLifeCycleMethods() {
            var t = {
                initialize: this.initialize,
                connect: this.connect,
                authenticate: this.authenticate
            };
            this.initialize = function (e) {
                if (this.manager().state() !== u.default.INITIALIZING) throw new Error("Expected state INITIALIZING, but got " + this.manager().state() + ". Did you mean to call service.manager().initialize() instead of service.initialize()?");
                return t.initialize.apply(this, [e])
            }, void 0 !== t.connect && (this.connect = function () {
                if (this.manager().state() !== u.default.CONNECTING) throw new Error("Expected state CONNECTING, but got " + this.manager().state() + ". Did you mean to call service.manager().connect() instead of service.connect()?");
                return t.connect.apply(this)
            }), void 0 !== t.authenticate && (this.authenticate = function () {
                if (this.manager().state() !== u.default.AUTHENTICATING) throw new Error("Expected state AUTHENTICATING, but got " + this.manager().state() + ". Did you mean to call service.manager().authenticate() instead of service.authenticate()?");
                return t.authenticate.apply(this)
            })
        }
        var c = function () {
            function ServiceBase(t, e) {
                var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
                if ((0, i.default)(this, ServiceBase), void 0 === s.default[t]) throw new Error("Invalid ServiceType: " + t);
                _defineLifeCycleMethods.call(this, t), this._serviceManager = _buildServiceManager.call(this, t, e, r), _installLifeCycleHooks.call(this, this._serviceManager), _guardLifeCycleMethods.call(this)
            }
            return (0, o.default)(ServiceBase, [{
                key: "manager",
                value: function manager() {
                    return this._serviceManager
                }
            }, {
                key: "get",
                value: function get(t) {
                    return this._serviceManager.dependency(t)
                }
            }]), ServiceBase
        }();
        e.default = c
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.tracksTransactionsWithOptions = tracksTransactionsWithOptions, e.default = void 0;
        var i = n(r(28)),
            o = n(r(101)),
            a = n(r(29)),
            s = n(r(47)),
            u = n(r(557)),
            c = tracksTransactionsWithOptions({});

        function tracksTransactionsWithOptions(t) {
            var e = t.numArguments;
            return function (t, r, n) {
                var c = n.value,
                    l = e || c.length;
                return n.value = function () {
                    for (var t = this, e = arguments.length, r = new Array(e), n = 0; n < e; n++) r[n] = arguments[n];
                    var h, d = r[r.length - 1];
                    "object" === (0, s.default)(d) && null !== d && d.constructor === Object ? (r = r.slice(0, r.length - 1), h = d) : h = {};
                    var p = (0, a.default)(i.default.mark((function _callee() {
                        var e;
                        return i.default.wrap((function _callee$(n) {
                            for (;;) switch (n.prev = n.next) {
                                case 0:
                                    return n.next = 2, 0;
                                case 2:
                                    return h.promise || (h.promise = p), e = [].concat((0, o.default)(r), (0, o.default)((0, u.default)(l - 1 - r.length, (function () {}))), [h]), n.abrupt("return", c.apply(t, e));
                                case 5:
                                case "end":
                                    return n.stop()
                            }
                        }), _callee)
                    })))();
                    return p
                }, n
            }
        }
        e.default = c
    }, function (t, e, r) {
        var n = r(559);
        t.exports = function toInteger(t) {
            var e = n(t),
                r = e % 1;
            return e == e ? r ? e - r : e : 0
        }
    }, function (t, e, r) {
        const n = r(566),
            i = r(606);
        t.exports = {
            packageInit: (t, e) => {
                if (e = Array.prototype.slice.call(e), !t) throw new Error('You need to instantiate using the "new" keyword.');
                Object.defineProperty(t, "currentProvider", {
                    get: () => t._provider,
                    set: e => t.setProvider(e),
                    enumerable: !0,
                    configurable: !0
                }), e[0] && e[0]._requestManager ? t._requestManager = e[0]._requestManager : t._requestManager = new n.Manager(e[0], e[1]), t.givenProvider = n.Manager.givenProvider, t.providers = n.Manager.providers, t._provider = t._requestManager.provider, t.setProvider || (t.setProvider = (e, r) => (t._requestManager.setProvider(e, r), t._provider = t._requestManager.provider, !0)), t.setRequestManager = e => {
                    t._requestManager = e, t._provider = e.provider
                }, t.BatchRequest = n.BatchManager.bind(null, t._requestManager), t.extend = i(t)
            },
            addProviders: t => {
                t.givenProvider = n.Manager.givenProvider, t.providers = n.Manager.providers
            }
        }
    }, function (t, e, r) {
        var n = Object.prototype.hasOwnProperty,
            i = "~";

        function Events() {}

        function EE(t, e, r) {
            this.fn = t, this.context = e, this.once = r || !1
        }

        function addListener(t, e, r, n, o) {
            if ("function" != typeof r) throw new TypeError("The listener must be a function");
            var a = new EE(r, n || t, o),
                s = i ? i + e : e;
            return t._events[s] ? t._events[s].fn ? t._events[s] = [t._events[s], a] : t._events[s].push(a) : (t._events[s] = a, t._eventsCount++), t
        }

        function clearEvent(t, e) {
            0 == --t._eventsCount ? t._events = new Events : delete t._events[e]
        }

        function EventEmitter() {
            this._events = new Events, this._eventsCount = 0
        }
        Object.create && (Events.prototype = Object.create(null), (new Events).__proto__ || (i = !1)), EventEmitter.prototype.eventNames = function eventNames() {
            var t, e, r = [];
            if (0 === this._eventsCount) return r;
            for (e in t = this._events) n.call(t, e) && r.push(i ? e.slice(1) : e);
            return Object.getOwnPropertySymbols ? r.concat(Object.getOwnPropertySymbols(t)) : r
        }, EventEmitter.prototype.listeners = function listeners(t) {
            var e = i ? i + t : t,
                r = this._events[e];
            if (!r) return [];
            if (r.fn) return [r.fn];
            for (var n = 0, o = r.length, a = new Array(o); n < o; n++) a[n] = r[n].fn;
            return a
        }, EventEmitter.prototype.listenerCount = function listenerCount(t) {
            var e = i ? i + t : t,
                r = this._events[e];
            return r ? r.fn ? 1 : r.length : 0
        }, EventEmitter.prototype.emit = function emit(t, e, r, n, o, a) {
            var s = i ? i + t : t;
            if (!this._events[s]) return !1;
            var u, c, l = this._events[s],
                h = arguments.length;
            if (l.fn) {
                switch (l.once && this.removeListener(t, l.fn, void 0, !0), h) {
                    case 1:
                        return l.fn.call(l.context), !0;
                    case 2:
                        return l.fn.call(l.context, e), !0;
                    case 3:
                        return l.fn.call(l.context, e, r), !0;
                    case 4:
                        return l.fn.call(l.context, e, r, n), !0;
                    case 5:
                        return l.fn.call(l.context, e, r, n, o), !0;
                    case 6:
                        return l.fn.call(l.context, e, r, n, o, a), !0
                }
                for (c = 1, u = new Array(h - 1); c < h; c++) u[c - 1] = arguments[c];
                l.fn.apply(l.context, u)
            } else {
                var d, p = l.length;
                for (c = 0; c < p; c++) switch (l[c].once && this.removeListener(t, l[c].fn, void 0, !0), h) {
                    case 1:
                        l[c].fn.call(l[c].context);
                        break;
                    case 2:
                        l[c].fn.call(l[c].context, e);
                        break;
                    case 3:
                        l[c].fn.call(l[c].context, e, r);
                        break;
                    case 4:
                        l[c].fn.call(l[c].context, e, r, n);
                        break;
                    default:
                        if (!u)
                            for (d = 1, u = new Array(h - 1); d < h; d++) u[d - 1] = arguments[d];
                        l[c].fn.apply(l[c].context, u)
                }
            }
            return !0
        }, EventEmitter.prototype.on = function on(t, e, r) {
            return addListener(this, t, e, r, !1)
        }, EventEmitter.prototype.once = function once(t, e, r) {
            return addListener(this, t, e, r, !0)
        }, EventEmitter.prototype.removeListener = function removeListener(t, e, r, n) {
            var o = i ? i + t : t;
            if (!this._events[o]) return this;
            if (!e) return clearEvent(this, o), this;
            var a = this._events[o];
            if (a.fn) a.fn !== e || n && !a.once || r && a.context !== r || clearEvent(this, o);
            else {
                for (var s = 0, u = [], c = a.length; s < c; s++)(a[s].fn !== e || n && !a[s].once || r && a[s].context !== r) && u.push(a[s]);
                u.length ? this._events[o] = 1 === u.length ? u[0] : u : clearEvent(this, o)
            }
            return this
        }, EventEmitter.prototype.removeAllListeners = function removeAllListeners(t) {
            var e;
            return t ? (e = i ? i + t : t, this._events[e] && clearEvent(this, e)) : (this._events = new Events, this._eventsCount = 0), this
        }, EventEmitter.prototype.off = EventEmitter.prototype.removeListener, EventEmitter.prototype.addListener = EventEmitter.prototype.on, EventEmitter.prefixed = i, EventEmitter.EventEmitter = EventEmitter, t.exports = EventEmitter
    }, function (t, e, r) {
        var n = r(0),
            i = n.Buffer;

        function copyProps(t, e) {
            for (var r in t) e[r] = t[r]
        }

        function SafeBuffer(t, e, r) {
            return i(t, e, r)
        }
        i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t.exports = n : (copyProps(n, e), e.Buffer = SafeBuffer), copyProps(i, SafeBuffer), SafeBuffer.from = function (t, e, r) {
            if ("number" == typeof t) throw new TypeError("Argument must not be a number");
            return i(t, e, r)
        }, SafeBuffer.alloc = function (t, e, r) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            var n = i(t);
            return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0), n
        }, SafeBuffer.allocUnsafe = function (t) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            return i(t)
        }, SafeBuffer.allocUnsafeSlow = function (t) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            return n.SlowBuffer(t)
        }
    }, function (t, e, r) {
        (function (e, n, i) {
            var o = r(118);

            function CorkedRequest(t) {
                var e = this;
                this.next = null, this.entry = null, this.finish = function () {
                    ! function onCorkedFinish(t, e, r) {
                        var n = t.entry;
                        t.entry = null;
                        for (; n;) {
                            var i = n.callback;
                            e.pendingcb--, i(r), n = n.next
                        }
                        e.corkedRequestsFree ? e.corkedRequestsFree.next = t : e.corkedRequestsFree = t
                    }(e, t)
                }
            }
            t.exports = Writable;
            var a, s = !e.browser && ["v0.10", "v0.9."].indexOf(e.version.slice(0, 5)) > -1 ? n : o.nextTick;
            Writable.WritableState = WritableState;
            var u = Object.create(r(86));
            u.inherits = r(1);
            var c = {
                    deprecate: r(595)
                },
                l = r(267),
                h = r(176).Buffer,
                d = i.Uint8Array || function () {};
            var p, m = r(268);

            function nop() {}

            function WritableState(t, e) {
                a = a || r(52), t = t || {};
                var n = e instanceof a;
                this.objectMode = !!t.objectMode, n && (this.objectMode = this.objectMode || !!t.writableObjectMode);
                var i = t.highWaterMark,
                    u = t.writableHighWaterMark,
                    c = this.objectMode ? 16 : 16384;
                this.highWaterMark = i || 0 === i ? i : n && (u || 0 === u) ? u : c, this.highWaterMark = Math.floor(this.highWaterMark), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
                var l = !1 === t.decodeStrings;
                this.decodeStrings = !l, this.defaultEncoding = t.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function (t) {
                    ! function onwrite(t, e) {
                        var r = t._writableState,
                            n = r.sync,
                            i = r.writecb;
                        if (function onwriteStateUpdate(t) {
                                t.writing = !1, t.writecb = null, t.length -= t.writelen, t.writelen = 0
                            }(r), e) ! function onwriteError(t, e, r, n, i) {
                            --e.pendingcb, r ? (o.nextTick(i, n), o.nextTick(finishMaybe, t, e), t._writableState.errorEmitted = !0, t.emit("error", n)) : (i(n), t._writableState.errorEmitted = !0, t.emit("error", n), finishMaybe(t, e))
                        }(t, r, n, e, i);
                        else {
                            var a = needFinish(r);
                            a || r.corked || r.bufferProcessing || !r.bufferedRequest || clearBuffer(t, r), n ? s(afterWrite, t, r, a, i) : afterWrite(t, r, a, i)
                        }
                    }(e, t)
                }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.bufferedRequestCount = 0, this.corkedRequestsFree = new CorkedRequest(this)
            }

            function Writable(t) {
                if (a = a || r(52), !(p.call(Writable, this) || this instanceof a)) return new Writable(t);
                this._writableState = new WritableState(t, this), this.writable = !0, t && ("function" == typeof t.write && (this._write = t.write), "function" == typeof t.writev && (this._writev = t.writev), "function" == typeof t.destroy && (this._destroy = t.destroy), "function" == typeof t.final && (this._final = t.final)), l.call(this)
            }

            function doWrite(t, e, r, n, i, o, a) {
                e.writelen = n, e.writecb = a, e.writing = !0, e.sync = !0, r ? t._writev(i, e.onwrite) : t._write(i, o, e.onwrite), e.sync = !1
            }

            function afterWrite(t, e, r, n) {
                r || function onwriteDrain(t, e) {
                    0 === e.length && e.needDrain && (e.needDrain = !1, t.emit("drain"))
                }(t, e), e.pendingcb--, n(), finishMaybe(t, e)
            }

            function clearBuffer(t, e) {
                e.bufferProcessing = !0;
                var r = e.bufferedRequest;
                if (t._writev && r && r.next) {
                    var n = e.bufferedRequestCount,
                        i = new Array(n),
                        o = e.corkedRequestsFree;
                    o.entry = r;
                    for (var a = 0, s = !0; r;) i[a] = r, r.isBuf || (s = !1), r = r.next, a += 1;
                    i.allBuffers = s, doWrite(t, e, !0, e.length, i, "", o.finish), e.pendingcb++, e.lastBufferedRequest = null, o.next ? (e.corkedRequestsFree = o.next, o.next = null) : e.corkedRequestsFree = new CorkedRequest(e), e.bufferedRequestCount = 0
                } else {
                    for (; r;) {
                        var u = r.chunk,
                            c = r.encoding,
                            l = r.callback;
                        if (doWrite(t, e, !1, e.objectMode ? 1 : u.length, u, c, l), r = r.next, e.bufferedRequestCount--, e.writing) break
                    }
                    null === r && (e.lastBufferedRequest = null)
                }
                e.bufferedRequest = r, e.bufferProcessing = !1
            }

            function needFinish(t) {
                return t.ending && 0 === t.length && null === t.bufferedRequest && !t.finished && !t.writing
            }

            function callFinal(t, e) {
                t._final((function (r) {
                    e.pendingcb--, r && t.emit("error", r), e.prefinished = !0, t.emit("prefinish"), finishMaybe(t, e)
                }))
            }

            function finishMaybe(t, e) {
                var r = needFinish(e);
                return r && (! function prefinish(t, e) {
                    e.prefinished || e.finalCalled || ("function" == typeof t._final ? (e.pendingcb++, e.finalCalled = !0, o.nextTick(callFinal, t, e)) : (e.prefinished = !0, t.emit("prefinish")))
                }(t, e), 0 === e.pendingcb && (e.finished = !0, t.emit("finish"))), r
            }
            u.inherits(Writable, l), WritableState.prototype.getBuffer = function getBuffer() {
                    for (var t = this.bufferedRequest, e = []; t;) e.push(t), t = t.next;
                    return e
                },
                function () {
                    try {
                        Object.defineProperty(WritableState.prototype, "buffer", {
                            get: c.deprecate((function () {
                                return this.getBuffer()
                            }), "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                        })
                    } catch (t) {}
                }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (p = Function.prototype[Symbol.hasInstance], Object.defineProperty(Writable, Symbol.hasInstance, {
                    value: function (t) {
                        return !!p.call(this, t) || this === Writable && (t && t._writableState instanceof WritableState)
                    }
                })) : p = function (t) {
                    return t instanceof this
                }, Writable.prototype.pipe = function () {
                    this.emit("error", new Error("Cannot pipe, not readable"))
                }, Writable.prototype.write = function (t, e, r) {
                    var n = this._writableState,
                        i = !1,
                        a = !n.objectMode && function _isUint8Array(t) {
                            return h.isBuffer(t) || t instanceof d
                        }(t);
                    return a && !h.isBuffer(t) && (t = function _uint8ArrayToBuffer(t) {
                        return h.from(t)
                    }(t)), "function" == typeof e && (r = e, e = null), a ? e = "buffer" : e || (e = n.defaultEncoding), "function" != typeof r && (r = nop), n.ended ? function writeAfterEnd(t, e) {
                        var r = new Error("write after end");
                        t.emit("error", r), o.nextTick(e, r)
                    }(this, r) : (a || function validChunk(t, e, r, n) {
                        var i = !0,
                            a = !1;
                        return null === r ? a = new TypeError("May not write null values to stream") : "string" == typeof r || void 0 === r || e.objectMode || (a = new TypeError("Invalid non-string/buffer chunk")), a && (t.emit("error", a), o.nextTick(n, a), i = !1), i
                    }(this, n, t, r)) && (n.pendingcb++, i = function writeOrBuffer(t, e, r, n, i, o) {
                        if (!r) {
                            var a = function decodeChunk(t, e, r) {
                                t.objectMode || !1 === t.decodeStrings || "string" != typeof e || (e = h.from(e, r));
                                return e
                            }(e, n, i);
                            n !== a && (r = !0, i = "buffer", n = a)
                        }
                        var s = e.objectMode ? 1 : n.length;
                        e.length += s;
                        var u = e.length < e.highWaterMark;
                        u || (e.needDrain = !0);
                        if (e.writing || e.corked) {
                            var c = e.lastBufferedRequest;
                            e.lastBufferedRequest = {
                                chunk: n,
                                encoding: i,
                                isBuf: r,
                                callback: o,
                                next: null
                            }, c ? c.next = e.lastBufferedRequest : e.bufferedRequest = e.lastBufferedRequest, e.bufferedRequestCount += 1
                        } else doWrite(t, e, !1, s, n, i, o);
                        return u
                    }(this, n, a, t, e, r)), i
                }, Writable.prototype.cork = function () {
                    this._writableState.corked++
                }, Writable.prototype.uncork = function () {
                    var t = this._writableState;
                    t.corked && (t.corked--, t.writing || t.corked || t.finished || t.bufferProcessing || !t.bufferedRequest || clearBuffer(this, t))
                }, Writable.prototype.setDefaultEncoding = function setDefaultEncoding(t) {
                    if ("string" == typeof t && (t = t.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((t + "").toLowerCase()) > -1)) throw new TypeError("Unknown encoding: " + t);
                    return this._writableState.defaultEncoding = t, this
                }, Object.defineProperty(Writable.prototype, "writableHighWaterMark", {
                    enumerable: !1,
                    get: function () {
                        return this._writableState.highWaterMark
                    }
                }), Writable.prototype._write = function (t, e, r) {
                    r(new Error("_write() is not implemented"))
                }, Writable.prototype._writev = null, Writable.prototype.end = function (t, e, r) {
                    var n = this._writableState;
                    "function" == typeof t ? (r = t, t = null, e = null) : "function" == typeof e && (r = e, e = null), null != t && this.write(t, e), n.corked && (n.corked = 1, this.uncork()), n.ending || n.finished || function endWritable(t, e, r) {
                        e.ending = !0, finishMaybe(t, e), r && (e.finished ? o.nextTick(r) : t.once("finish", r));
                        e.ended = !0, t.writable = !1
                    }(this, n, r)
                }, Object.defineProperty(Writable.prototype, "destroyed", {
                    get: function () {
                        return void 0 !== this._writableState && this._writableState.destroyed
                    },
                    set: function (t) {
                        this._writableState && (this._writableState.destroyed = t)
                    }
                }), Writable.prototype.destroy = m.destroy, Writable.prototype._undestroy = m.undestroy, Writable.prototype._destroy = function (t, e) {
                    this.end(), e(t)
                }
        }).call(this, r(7), r(269).setImmediate, r(6))
    }, function (t, e, r) {
        var n = r(3).Buffer,
            i = n.isEncoding || function (t) {
                switch ((t = "" + t) && t.toLowerCase()) {
                    case "hex":
                    case "utf8":
                    case "utf-8":
                    case "ascii":
                    case "binary":
                    case "base64":
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                    case "raw":
                        return !0;
                    default:
                        return !1
                }
            };

        function StringDecoder(t) {
            var e;
            switch (this.encoding = function normalizeEncoding(t) {
                var e = function _normalizeEncoding(t) {
                    if (!t) return "utf8";
                    for (var e;;) switch (t) {
                        case "utf8":
                        case "utf-8":
                            return "utf8";
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return "utf16le";
                        case "latin1":
                        case "binary":
                            return "latin1";
                        case "base64":
                        case "ascii":
                        case "hex":
                            return t;
                        default:
                            if (e) return;
                            t = ("" + t).toLowerCase(), e = !0
                    }
                }(t);
                if ("string" != typeof e && (n.isEncoding === i || !i(t))) throw new Error("Unknown encoding: " + t);
                return e || t
            }(t), this.encoding) {
                case "utf16le":
                    this.text = utf16Text, this.end = utf16End, e = 4;
                    break;
                case "utf8":
                    this.fillLast = utf8FillLast, e = 4;
                    break;
                case "base64":
                    this.text = base64Text, this.end = base64End, e = 3;
                    break;
                default:
                    return this.write = simpleWrite, void(this.end = simpleEnd)
            }
            this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n.allocUnsafe(e)
        }

        function utf8CheckByte(t) {
            return t <= 127 ? 0 : t >> 5 == 6 ? 2 : t >> 4 == 14 ? 3 : t >> 3 == 30 ? 4 : t >> 6 == 2 ? -1 : -2
        }

        function utf8FillLast(t) {
            var e = this.lastTotal - this.lastNeed,
                r = function utf8CheckExtraBytes(t, e, r) {
                    if (128 != (192 & e[0])) return t.lastNeed = 0, "�";
                    if (t.lastNeed > 1 && e.length > 1) {
                        if (128 != (192 & e[1])) return t.lastNeed = 1, "�";
                        if (t.lastNeed > 2 && e.length > 2 && 128 != (192 & e[2])) return t.lastNeed = 2, "�"
                    }
                }(this, t);
            return void 0 !== r ? r : this.lastNeed <= t.length ? (t.copy(this.lastChar, e, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (t.copy(this.lastChar, e, 0, t.length), void(this.lastNeed -= t.length))
        }

        function utf16Text(t, e) {
            if ((t.length - e) % 2 == 0) {
                var r = t.toString("utf16le", e);
                if (r) {
                    var n = r.charCodeAt(r.length - 1);
                    if (n >= 55296 && n <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1], r.slice(0, -1)
                }
                return r
            }
            return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t[t.length - 1], t.toString("utf16le", e, t.length - 1)
        }

        function utf16End(t) {
            var e = t && t.length ? this.write(t) : "";
            if (this.lastNeed) {
                var r = this.lastTotal - this.lastNeed;
                return e + this.lastChar.toString("utf16le", 0, r)
            }
            return e
        }

        function base64Text(t, e) {
            var r = (t.length - e) % 3;
            return 0 === r ? t.toString("base64", e) : (this.lastNeed = 3 - r, this.lastTotal = 3, 1 === r ? this.lastChar[0] = t[t.length - 1] : (this.lastChar[0] = t[t.length - 2], this.lastChar[1] = t[t.length - 1]), t.toString("base64", e, t.length - r))
        }

        function base64End(t) {
            var e = t && t.length ? this.write(t) : "";
            return this.lastNeed ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e
        }

        function simpleWrite(t) {
            return t.toString(this.encoding)
        }

        function simpleEnd(t) {
            return t && t.length ? this.write(t) : ""
        }
        e.StringDecoder = StringDecoder, StringDecoder.prototype.write = function (t) {
            if (0 === t.length) return "";
            var e, r;
            if (this.lastNeed) {
                if (void 0 === (e = this.fillLast(t))) return "";
                r = this.lastNeed, this.lastNeed = 0
            } else r = 0;
            return r < t.length ? e ? e + this.text(t, r) : this.text(t, r) : e || ""
        }, StringDecoder.prototype.end = function utf8End(t) {
            var e = t && t.length ? this.write(t) : "";
            return this.lastNeed ? e + "�" : e
        }, StringDecoder.prototype.text = function utf8Text(t, e) {
            var r = function utf8CheckIncomplete(t, e, r) {
                var n = e.length - 1;
                if (n < r) return 0;
                var i = utf8CheckByte(e[n]);
                if (i >= 0) return i > 0 && (t.lastNeed = i - 1), i;
                if (--n < r || -2 === i) return 0;
                if ((i = utf8CheckByte(e[n])) >= 0) return i > 0 && (t.lastNeed = i - 2), i;
                if (--n < r || -2 === i) return 0;
                if ((i = utf8CheckByte(e[n])) >= 0) return i > 0 && (2 === i ? i = 0 : t.lastNeed = i - 3), i;
                return 0
            }(this, t, e);
            if (!this.lastNeed) return t.toString("utf8", e);
            this.lastTotal = r;
            var n = t.length - (r - this.lastNeed);
            return t.copy(this.lastChar, 0, n), t.toString("utf8", e, n)
        }, StringDecoder.prototype.fillLast = function (t) {
            if (this.lastNeed <= t.length) return t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
            t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length), this.lastNeed -= t.length
        }
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = function () {
            function XMLHttpRequestEventTarget() {
                this.listeners = {}
            }
            return XMLHttpRequestEventTarget.prototype.addEventListener = function (t, e) {
                t = t.toLowerCase(), this.listeners[t] = this.listeners[t] || [], this.listeners[t].push(e.handleEvent || e)
            }, XMLHttpRequestEventTarget.prototype.removeEventListener = function (t, e) {
                if (t = t.toLowerCase(), this.listeners[t]) {
                    var r = this.listeners[t].indexOf(e.handleEvent || e);
                    r < 0 || this.listeners[t].splice(r, 1)
                }
            }, XMLHttpRequestEventTarget.prototype.dispatchEvent = function (t) {
                var e = t.type.toLowerCase();
                if (t.target = this, this.listeners[e])
                    for (var r = 0, n = this.listeners[e]; r < n.length; r++) {
                        n[r].call(this, t)
                    }
                var i = this["on" + e];
                return i && i.call(this, t), !0
            }, XMLHttpRequestEventTarget
        }();
        e.XMLHttpRequestEventTarget = n
    }, function (t, e, r) {
        var n = r(25).errors,
            i = r(25).formatters,
            o = r(48),
            a = r(607),
            s = r(608).subscriptions,
            u = r(41).Hardfork,
            c = r(100),
            l = function Method(t) {
                if (!t.call || !t.name) throw new Error('When creating a method you need to provide at least the "name" and "call" property.');
                this.name = t.name, this.call = t.call, this.params = t.params || 0, this.inputFormatter = t.inputFormatter, this.outputFormatter = t.outputFormatter, this.transformPayload = t.transformPayload, this.extraFormatters = t.extraFormatters, this.abiCoder = t.abiCoder, this.requestManager = t.requestManager, this.accounts = t.accounts, this.defaultBlock = t.defaultBlock || "latest", this.defaultAccount = t.defaultAccount || null, this.transactionBlockTimeout = t.transactionBlockTimeout || 50, this.transactionConfirmationBlocks = t.transactionConfirmationBlocks || 24, this.transactionPollingTimeout = t.transactionPollingTimeout || 750, this.defaultCommon = t.defaultCommon, this.defaultChain = t.defaultChain, this.defaultHardfork = t.defaultHardfork, this.handleRevert = t.handleRevert
            };
        l.prototype.setRequestManager = function (t, e) {
            this.requestManager = t, e && (this.accounts = e)
        }, l.prototype.createFunction = function (t, e) {
            var r = this.buildCall();
            return r.call = this.call, this.setRequestManager(t || this.requestManager, e || this.accounts), r
        }, l.prototype.attachToObject = function (t) {
            var e = this.buildCall();
            e.call = this.call;
            var r = this.name.split(".");
            r.length > 1 ? (t[r[0]] = t[r[0]] || {}, t[r[0]][r[1]] = e) : t[r[0]] = e
        }, l.prototype.getCall = function (t) {
            return "function" == typeof this.call ? this.call(t) : this.call
        }, l.prototype.extractCallback = function (t) {
            if ("function" == typeof t[t.length - 1]) return t.pop()
        }, l.prototype.validateArgs = function (t) {
            if (t.length !== this.params) throw n.InvalidNumberOfParams(t.length, this.params, this.name)
        }, l.prototype.formatInput = function (t) {
            var e = this;
            return this.inputFormatter ? this.inputFormatter.map((function (r, n) {
                return r ? r.call(e, t[n]) : t[n]
            })) : t
        }, l.prototype.formatOutput = function (t) {
            var e = this;
            return Array.isArray(t) ? t.map((function (t) {
                return e.outputFormatter && t ? e.outputFormatter(t) : t
            })) : this.outputFormatter && t ? this.outputFormatter(t) : t
        }, l.prototype.toPayload = function (t) {
            var e = this.getCall(t),
                r = this.extractCallback(t),
                n = this.formatInput(t);
            this.validateArgs(n);
            var i = {
                method: e,
                params: n,
                callback: r
            };
            return this.transformPayload && (i = this.transformPayload(i)), i
        }, l.prototype._confirmTransaction = function (t, e, r) {
            var u = this,
                h = !1,
                d = !0,
                p = 0,
                m = 0,
                y = null,
                b = null,
                g = r.params[0] && "object" == typeof r.params[0] && r.params[0].gas ? r.params[0].gas : null,
                v = !!r.params[0] && "object" == typeof r.params[0] && r.params[0].data && r.params[0].from && !r.params[0].to,
                w = v && r.params[0].data.length > 2,
                M = [new l({
                    name: "getBlockByNumber",
                    call: "eth_getBlockByNumber",
                    params: 2,
                    inputFormatter: [i.inputBlockNumberFormatter, function (t) {
                        return !!t
                    }],
                    outputFormatter: i.outputBlockFormatter
                }), new l({
                    name: "getTransactionReceipt",
                    call: "eth_getTransactionReceipt",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: i.outputTransactionReceiptFormatter
                }), new l({
                    name: "getCode",
                    call: "eth_getCode",
                    params: 2,
                    inputFormatter: [i.inputAddressFormatter, i.inputDefaultBlockNumberFormatter]
                }), new l({
                    name: "getTransactionByHash",
                    call: "eth_getTransactionByHash",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: i.outputTransactionFormatter
                }), new s({
                    name: "subscribe",
                    type: "eth",
                    subscriptions: {
                        newBlockHeaders: {
                            subscriptionName: "newHeads",
                            params: 0,
                            outputFormatter: i.outputBlockFormatter
                        }
                    }
                })],
                A = {};
            M.forEach(t => {
                t.attachToObject(A), t.requestManager = u.requestManager
            });
            var checkConfirmation = function (s, l, M, x, B) {
                    if (!M) return B || (B = {
                        unsubscribe: function () {
                            clearInterval(y)
                        }
                    }), (s ? a.resolve(s) : A.getTransactionReceipt(e)).catch((function (e) {
                        B.unsubscribe(), h = !0, o._fireError({
                            message: "Failed to check for transaction receipt:",
                            data: e
                        }, t.eventEmitter, t.reject)
                    })).then((async function (e) {
                        if (!e || !e.blockHash) throw new Error("Receipt missing or blockHash null");
                        if (u.extraFormatters && u.extraFormatters.receiptFormatter && (e = u.extraFormatters.receiptFormatter(e)), t.eventEmitter.listeners("confirmation").length > 0) {
                            var r;
                            if (void 0 === s || 0 !== m) {
                                var n = await A.getBlockByNumber("latest"),
                                    i = n ? n.hash : null;
                                l ? b ? (r = await A.getBlockByNumber(b.number + 1)) && (b = r, t.eventEmitter.emit("confirmation", m, e, i)) : (r = await A.getBlockByNumber(e.blockNumber), b = r, t.eventEmitter.emit("confirmation", m, e, i)) : t.eventEmitter.emit("confirmation", m, e, i)
                            }(l && r || !l) && m++, d = !1, m === u.transactionConfirmationBlocks + 1 && (B.unsubscribe(), t.eventEmitter.removeAllListeners())
                        }
                        return e
                    })).then((async function (e) {
                        if (v && !h) {
                            if (!e.contractAddress) return d && (B.unsubscribe(), h = !0), void o._fireError(n.NoContractAddressFoundError(e), t.eventEmitter, t.reject, null, e);
                            var r;
                            try {
                                r = await A.getCode(e.contractAddress)
                            } catch (t) {}
                            if (!r) return;
                            !0 === e.status && w || r.length > 2 ? (t.eventEmitter.emit("receipt", e), u.extraFormatters && u.extraFormatters.contractDeployFormatter ? t.resolve(u.extraFormatters.contractDeployFormatter(e)) : t.resolve(e), d && t.eventEmitter.removeAllListeners()) : o._fireError(n.ContractCodeNotStoredError(e), t.eventEmitter, t.reject, null, e), d && B.unsubscribe(), h = !0
                        }
                        return e
                    })).then((async function (e) {
                        if (!v && !h) {
                            if (e.outOfGas || g && g === e.gasUsed || !0 !== e.status && "0x1" !== e.status && void 0 !== e.status)
                                if (JSON.stringify(e, null, 2), !1 === e.status || "0x0" === e.status) try {
                                    var a = null;
                                    if (!u.handleRevert || "eth_sendTransaction" !== u.call && "eth_sendRawTransaction" !== u.call) throw !1;
                                    var s = r.params[0];
                                    if ("eth_sendRawTransaction" === u.call) {
                                        var l = r.params[0],
                                            p = c.parse(l);
                                        s = i.inputTransactionFormatter({
                                            data: p.data,
                                            to: p.to,
                                            from: p.from,
                                            gas: p.gasLimit.toHexString(),
                                            gasPrice: p.gasPrice.toHexString(),
                                            value: p.value.toHexString()
                                        })
                                    }
                                    if (!(a = await u.getRevertReason(s, e.blockNumber))) throw !1;
                                    o._fireError(n.TransactionRevertInstructionError(a.reason, a.signature, e), t.eventEmitter, t.reject, null, e)
                                } catch (r) {
                                    o._fireError(n.TransactionRevertedWithoutReasonError(e), t.eventEmitter, t.reject, null, e)
                                } else o._fireError(n.TransactionOutOfGasError(e), t.eventEmitter, t.reject, null, e);
                                else t.eventEmitter.emit("receipt", e), t.resolve(e), d && t.eventEmitter.removeAllListeners();
                            d && B.unsubscribe(), h = !0
                        }
                    })).catch((function () {
                        p++, l ? p - 1 >= u.transactionPollingTimeout && (B.unsubscribe(), h = !0, o._fireError(n.TransactionError("Transaction was not mined within " + u.transactionPollingTimeout + " seconds, please make sure your transaction was properly sent. Be aware that it might still be mined!"), t.eventEmitter, t.reject)) : p - 1 >= u.transactionBlockTimeout && (B.unsubscribe(), h = !0, o._fireError(n.TransactionError("Transaction was not mined within " + u.transactionBlockTimeout + " blocks, please make sure your transaction was properly sent. Be aware that it might still be mined!"), t.eventEmitter, t.reject))
                    }));
                    B.unsubscribe(), h = !0, o._fireError({
                        message: "Failed to subscribe to new newBlockHeaders to confirm the transaction receipts.",
                        data: M
                    }, t.eventEmitter, t.reject)
                },
                x = function (t) {
                    const startInterval = () => {
                        y = setInterval(checkConfirmation.bind(null, t, !0), 1e3)
                    };
                    this.requestManager.provider.on ? A.subscribe("newBlockHeaders", (function (e, r, n) {
                        e || !r ? startInterval() : checkConfirmation(t, !1, e, 0, n)
                    })) : startInterval()
                }.bind(this);
            A.getTransactionReceipt(e).then((function (e) {
                e && e.blockHash ? (t.eventEmitter.listeners("confirmation").length > 0 && x(e), checkConfirmation(e, !1)) : h || x()
            })).catch((function () {
                h || x()
            }))
        };
        var getWallet = function (t, e) {
            return "number" == typeof t ? e.wallet[t] : t && "object" == typeof t && t.address && t.privateKey ? t : e.wallet[t.toLowerCase()]
        };

        function _handleTxType(t) {
            const e = void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas;
            let r;
            if (r = void 0 !== t.type ? o.toHex(t.type) : void 0 === t.type && e ? "0x2" : "0x0", void 0 !== t.gasPrice && ("0x2" === r || e)) throw Error("eip-1559 transactions don't support gasPrice");
            if (("0x1" === r || "0x0" === r) && e) throw Error("pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas");
            return e || t.common && t.common.hardfork && t.common.hardfork.toLowerCase() === u.London || t.hardfork && t.hardfork.toLowerCase() === u.London ? r = "0x2" : (t.accessList || t.common && t.common.hardfork && t.common.hardfork.toLowerCase() === u.Berlin || t.hardfork && t.hardfork.toLowerCase() === u.Berlin) && (r = "0x1"), r
        }

        function _handleTxPricing(t, e) {
            return new Promise((r, n) => {
                try {
                    var i = new l({
                            name: "getBlockByNumber",
                            call: "eth_getBlockByNumber",
                            params: 2,
                            inputFormatter: [function (t) {
                                return t ? o.toHex(t) : "latest"
                            }, function () {
                                return !1
                            }]
                        }).createFunction(t.requestManager),
                        a = new l({
                            name: "getGasPrice",
                            call: "eth_gasPrice",
                            params: 0
                        }).createFunction(t.requestManager);
                    e.type < "0x2" && void 0 !== e.gasPrice ? r({
                        gasPrice: e.gasPrice
                    }) : Promise.all([i(), a()]).then(t => {
                        const [n, i] = t;
                        if ("0x2" === e.type && n && n.baseFeePerGas) {
                            let t, i;
                            e.gasPrice ? (t = e.gasPrice, i = e.gasPrice, delete e.gasPrice) : (t = e.maxPriorityFeePerGas || "0x3B9ACA00", i = e.maxFeePerGas || o.toHex(o.toBN(n.baseFeePerGas).mul(o.toBN(2)).add(o.toBN(t)))), r({
                                maxFeePerGas: i,
                                maxPriorityFeePerGas: t
                            })
                        } else {
                            if (e.maxPriorityFeePerGas || e.maxFeePerGas) throw Error("Network doesn't support eip-1559");
                            r({
                                gasPrice: i
                            })
                        }
                    })
                } catch (t) {
                    n(t)
                }
            })
        }
        l.prototype.buildCall = function () {
            var t = this,
                e = "eth_sendTransaction" === t.call || "eth_sendRawTransaction" === t.call,
                r = "eth_call" === t.call,
                send = function () {
                    var i = a(!e),
                        s = t.toPayload(Array.prototype.slice.call(arguments)),
                        sendTxCallback = function (a, u) {
                            var c;
                            if (t.handleRevert && r && t.abiCoder && (!a && t.isRevertReasonString(u) ? c = u.substring(10) : a && a.data && (c = a.data.substring(10)), c)) {
                                var l = t.abiCoder.decodeParameter("string", "0x" + c);
                                return void o._fireError(n.RevertInstructionError(l, "Error(String)"), i.eventEmitter, i.reject, s.callback, {
                                    reason: l,
                                    signature: "Error(String)"
                                })
                            }
                            try {
                                u = t.formatOutput(u)
                            } catch (t) {
                                a = t
                            }
                            if (u instanceof Error && (a = u), a) return a.error && (a = a.error), o._fireError(a, i.eventEmitter, i.reject, s.callback);
                            s.callback && s.callback(null, u), e ? (i.eventEmitter.emit("transactionHash", u), t._confirmTransaction(i, u, s)) : a || i.resolve(u)
                        },
                        sendSignedTx = function (e) {
                            var r = {
                                ...s,
                                method: "eth_sendRawTransaction",
                                params: [e.rawTransaction]
                            };
                            t.requestManager.send(r, sendTxCallback)
                        },
                        sendRequest = function (t, e) {
                            var r;
                            if (e && e.accounts && e.accounts.wallet && e.accounts.wallet.length)
                                if ("eth_sendTransaction" === t.method) {
                                    var n = t.params[0];
                                    if ((r = getWallet(n && "object" == typeof n ? n.from : null, e.accounts)) && r.privateKey) return delete(n = JSON.parse(JSON.stringify(n))).from, e.defaultChain && !n.chain && (n.chain = e.defaultChain), e.defaultHardfork && !n.hardfork && (n.hardfork = e.defaultHardfork), e.defaultCommon && !n.common && (n.common = e.defaultCommon), void e.accounts.signTransaction(n, r.privateKey).then(sendSignedTx).catch((function (t) {
                                        if ("function" == typeof i.eventEmitter.listeners && i.eventEmitter.listeners("error").length) {
                                            try {
                                                i.eventEmitter.emit("error", t)
                                            } catch (t) {}
                                            i.eventEmitter.removeAllListeners(), i.eventEmitter.catch((function () {}))
                                        }
                                        i.reject(t)
                                    }))
                                } else if ("eth_sign" === t.method) {
                                var o = t.params[1];
                                if ((r = getWallet(t.params[0], e.accounts)) && r.privateKey) {
                                    var a = e.accounts.sign(o, r.privateKey);
                                    return t.callback && t.callback(null, a.signature), void i.resolve(a.signature)
                                }
                            }
                            return e.requestManager.send(t, sendTxCallback)
                        };
                    return e && s.params[0] && "object" == typeof s.params[0] && void 0 === s.params[0].gasPrice && (void 0 === s.params[0].maxPriorityFeePerGas || void 0 === s.params[0].maxFeePerGas) ? (void 0 === s.params[0].type && (s.params[0].type = _handleTxType(s.params[0])), _handleTxPricing(t, s.params[0]).then(r => {
                        void 0 !== r.gasPrice ? s.params[0].gasPrice = r.gasPrice : void 0 !== r.maxPriorityFeePerGas && void 0 !== r.maxFeePerGas && (s.params[0].maxPriorityFeePerGas = r.maxPriorityFeePerGas, s.params[0].maxFeePerGas = r.maxFeePerGas), e && setTimeout(() => {
                            i.eventEmitter.emit("sending", s)
                        }, 0), sendRequest(s, t)
                    })) : (e && setTimeout(() => {
                        i.eventEmitter.emit("sending", s)
                    }, 0), sendRequest(s, t)), e && setTimeout(() => {
                        i.eventEmitter.emit("sent", s)
                    }, 0), i.eventEmitter
                };
            return send.method = t, send.request = this.request.bind(this), send
        }, l.prototype.getRevertReason = function (t, e) {
            var r = this;
            return new Promise((function (n, i) {
                new l({
                    name: "call",
                    call: "eth_call",
                    params: 2,
                    abiCoder: r.abiCoder,
                    handleRevert: !0
                }).createFunction(r.requestManager)(t, o.numberToHex(e)).then((function () {
                    n(!1)
                })).catch((function (t) {
                    t.reason ? n({
                        reason: t.reason,
                        signature: t.signature
                    }) : i(t)
                }))
            }))
        }, l.prototype.isRevertReasonString = function (t) {
            return "string" == typeof t && (t.length - 2) / 2 % 32 == 4 && "0x08c379a0" === t.substring(0, 10)
        }, l.prototype.request = function () {
            var t = this.toPayload(Array.prototype.slice.call(arguments));
            return t.format = this.formatOutput.bind(this), t
        }, t.exports = l
    }, function (t, e, r) {
        var n = e;

        function zero2(t) {
            return 1 === t.length ? "0" + t : t
        }

        function toHex(t) {
            for (var e = "", r = 0; r < t.length; r++) e += zero2(t[r].toString(16));
            return e
        }
        n.toArray = function toArray(t, e) {
            if (Array.isArray(t)) return t.slice();
            if (!t) return [];
            var r = [];
            if ("string" != typeof t) {
                for (var n = 0; n < t.length; n++) r[n] = 0 | t[n];
                return r
            }
            if ("hex" === e) {
                (t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t = "0" + t);
                for (n = 0; n < t.length; n += 2) r.push(parseInt(t[n] + t[n + 1], 16))
            } else
                for (n = 0; n < t.length; n++) {
                    var i = t.charCodeAt(n),
                        o = i >> 8,
                        a = 255 & i;
                    o ? r.push(o, a) : r.push(a)
                }
            return r
        }, n.zero2 = zero2, n.toHex = toHex, n.encode = function encode(t, e) {
            return "hex" === e ? toHex(t) : t
        }
    }, function (t, e, r) {
        var n, i = e,
            o = r(89),
            a = r(275),
            s = r(19).assert;

        function PresetCurve(t) {
            "short" === t.type ? this.curve = new a.short(t) : "edwards" === t.type ? this.curve = new a.edwards(t) : this.curve = new a.mont(t), this.g = this.curve.g, this.n = this.curve.n, this.hash = t.hash, s(this.g.validate(), "Invalid curve"), s(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
        }

        function defineCurve(t, e) {
            Object.defineProperty(i, t, {
                configurable: !0,
                enumerable: !0,
                get: function () {
                    var r = new PresetCurve(e);
                    return Object.defineProperty(i, t, {
                        configurable: !0,
                        enumerable: !0,
                        value: r
                    }), r
                }
            })
        }
        i.PresetCurve = PresetCurve, defineCurve("p192", {
            type: "short",
            prime: "p192",
            p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
            a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
            b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
            n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
            hash: o.sha256,
            gRed: !1,
            g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
        }), defineCurve("p224", {
            type: "short",
            prime: "p224",
            p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
            a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
            b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
            n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
            hash: o.sha256,
            gRed: !1,
            g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
        }), defineCurve("p256", {
            type: "short",
            prime: null,
            p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
            a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
            b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
            n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
            hash: o.sha256,
            gRed: !1,
            g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
        }), defineCurve("p384", {
            type: "short",
            prime: null,
            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
            a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
            b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
            n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
            hash: o.sha384,
            gRed: !1,
            g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
        }), defineCurve("p521", {
            type: "short",
            prime: null,
            p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
            a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
            b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
            n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
            hash: o.sha512,
            gRed: !1,
            g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
        }), defineCurve("curve25519", {
            type: "mont",
            prime: "p25519",
            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
            a: "76d06",
            b: "1",
            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
            hash: o.sha256,
            gRed: !1,
            g: ["9"]
        }), defineCurve("ed25519", {
            type: "edwards",
            prime: "p25519",
            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
            a: "-1",
            c: "1",
            d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
            hash: o.sha256,
            gRed: !1,
            g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
        });
        try {
            n = r(629)
        } catch (t) {
            n = void 0
        }
        defineCurve("secp256k1", {
            type: "short",
            prime: "k256",
            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
            a: "0",
            b: "7",
            n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
            h: "1",
            hash: o.sha256,
            beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
            lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
            basis: [{
                a: "3086d221a7d46bcde86c90e49284eb15",
                b: "-e4437ed6010e88286f547fa90abfe4c3"
            }, {
                a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                b: "3086d221a7d46bcde86c90e49284eb15"
            }],
            gRed: !1,
            g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", n]
        })
    }, function (t, e, r) {
        (function (t) {
            var n = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
                    void 0 === n && (n = r), Object.defineProperty(t, n, {
                        enumerable: !0,
                        get: function () {
                            return e[r]
                        }
                    })
                } : function (t, e, r, n) {
                    void 0 === n && (n = r), t[n] = e[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function (t, e) {
                    Object.defineProperty(t, "default", {
                        enumerable: !0,
                        value: e
                    })
                } : function (t, e) {
                    t.default = e
                }),
                o = this && this.__importStar || function (t) {
                    if (t && t.__esModule) return t;
                    var e = {};
                    if (null != t)
                        for (var r in t) "default" !== r && Object.hasOwnProperty.call(t, r) && n(e, t, r);
                    return i(e, t), e
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.rlphash = e.ripemd160FromArray = e.ripemd160FromString = e.ripemd160 = e.sha256FromArray = e.sha256FromString = e.sha256 = e.keccakFromArray = e.keccakFromHexString = e.keccakFromString = e.keccak256 = e.keccak = void 0;
            var a = r(280),
                s = r(55),
                u = o(r(120)),
                c = r(54),
                l = r(123);
            e.keccak = function (t, e) {
                switch (void 0 === e && (e = 256), l.assertIsBuffer(t), e) {
                    case 224:
                        return a.keccak224(t);
                    case 256:
                        return a.keccak256(t);
                    case 384:
                        return a.keccak384(t);
                    case 512:
                        return a.keccak512(t);
                    default:
                        throw new Error("Invald algorithm: keccak" + e)
                }
            }, e.keccak256 = function (t) {
                return e.keccak(t)
            }, e.keccakFromString = function (r, n) {
                void 0 === n && (n = 256), l.assertIsString(r);
                var i = t.from(r, "utf8");
                return e.keccak(i, n)
            }, e.keccakFromHexString = function (t, r) {
                return void 0 === r && (r = 256), l.assertIsHexString(t), e.keccak(c.toBuffer(t), r)
            }, e.keccakFromArray = function (t, r) {
                return void 0 === r && (r = 256), l.assertIsArray(t), e.keccak(c.toBuffer(t), r)
            };
            var _sha256 = function (t) {
                return t = c.toBuffer(t), s("sha256").update(t).digest()
            };
            e.sha256 = function (t) {
                return l.assertIsBuffer(t), _sha256(t)
            }, e.sha256FromString = function (t) {
                return l.assertIsString(t), _sha256(t)
            }, e.sha256FromArray = function (t) {
                return l.assertIsArray(t), _sha256(t)
            };
            var _ripemd160 = function (t, e) {
                t = c.toBuffer(t);
                var r = s("rmd160").update(t).digest();
                return !0 === e ? c.setLengthLeft(r, 32) : r
            };
            e.ripemd160 = function (t, e) {
                return l.assertIsBuffer(t), _ripemd160(t, e)
            }, e.ripemd160FromString = function (t, e) {
                return l.assertIsString(t), _ripemd160(t, e)
            }, e.ripemd160FromArray = function (t, e) {
                return l.assertIsArray(t), _ripemd160(t, e)
            }, e.rlphash = function (t) {
                return e.keccak(u.encode(t))
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = r(1),
            i = r(281),
            o = r(3).Buffer,
            a = new Array(16);

        function MD5() {
            i.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878
        }

        function rotl(t, e) {
            return t << e | t >>> 32 - e
        }

        function fnF(t, e, r, n, i, o, a) {
            return rotl(t + (e & r | ~e & n) + i + o | 0, a) + e | 0
        }

        function fnG(t, e, r, n, i, o, a) {
            return rotl(t + (e & n | r & ~n) + i + o | 0, a) + e | 0
        }

        function fnH(t, e, r, n, i, o, a) {
            return rotl(t + (e ^ r ^ n) + i + o | 0, a) + e | 0
        }

        function fnI(t, e, r, n, i, o, a) {
            return rotl(t + (r ^ (e | ~n)) + i + o | 0, a) + e | 0
        }
        n(MD5, i), MD5.prototype._update = function () {
            for (var t = a, e = 0; e < 16; ++e) t[e] = this._block.readInt32LE(4 * e);
            var r = this._a,
                n = this._b,
                i = this._c,
                o = this._d;
            r = fnF(r, n, i, o, t[0], 3614090360, 7), o = fnF(o, r, n, i, t[1], 3905402710, 12), i = fnF(i, o, r, n, t[2], 606105819, 17), n = fnF(n, i, o, r, t[3], 3250441966, 22), r = fnF(r, n, i, o, t[4], 4118548399, 7), o = fnF(o, r, n, i, t[5], 1200080426, 12), i = fnF(i, o, r, n, t[6], 2821735955, 17), n = fnF(n, i, o, r, t[7], 4249261313, 22), r = fnF(r, n, i, o, t[8], 1770035416, 7), o = fnF(o, r, n, i, t[9], 2336552879, 12), i = fnF(i, o, r, n, t[10], 4294925233, 17), n = fnF(n, i, o, r, t[11], 2304563134, 22), r = fnF(r, n, i, o, t[12], 1804603682, 7), o = fnF(o, r, n, i, t[13], 4254626195, 12), i = fnF(i, o, r, n, t[14], 2792965006, 17), r = fnG(r, n = fnF(n, i, o, r, t[15], 1236535329, 22), i, o, t[1], 4129170786, 5), o = fnG(o, r, n, i, t[6], 3225465664, 9), i = fnG(i, o, r, n, t[11], 643717713, 14), n = fnG(n, i, o, r, t[0], 3921069994, 20), r = fnG(r, n, i, o, t[5], 3593408605, 5), o = fnG(o, r, n, i, t[10], 38016083, 9), i = fnG(i, o, r, n, t[15], 3634488961, 14), n = fnG(n, i, o, r, t[4], 3889429448, 20), r = fnG(r, n, i, o, t[9], 568446438, 5), o = fnG(o, r, n, i, t[14], 3275163606, 9), i = fnG(i, o, r, n, t[3], 4107603335, 14), n = fnG(n, i, o, r, t[8], 1163531501, 20), r = fnG(r, n, i, o, t[13], 2850285829, 5), o = fnG(o, r, n, i, t[2], 4243563512, 9), i = fnG(i, o, r, n, t[7], 1735328473, 14), r = fnH(r, n = fnG(n, i, o, r, t[12], 2368359562, 20), i, o, t[5], 4294588738, 4), o = fnH(o, r, n, i, t[8], 2272392833, 11), i = fnH(i, o, r, n, t[11], 1839030562, 16), n = fnH(n, i, o, r, t[14], 4259657740, 23), r = fnH(r, n, i, o, t[1], 2763975236, 4), o = fnH(o, r, n, i, t[4], 1272893353, 11), i = fnH(i, o, r, n, t[7], 4139469664, 16), n = fnH(n, i, o, r, t[10], 3200236656, 23), r = fnH(r, n, i, o, t[13], 681279174, 4), o = fnH(o, r, n, i, t[0], 3936430074, 11), i = fnH(i, o, r, n, t[3], 3572445317, 16), n = fnH(n, i, o, r, t[6], 76029189, 23), r = fnH(r, n, i, o, t[9], 3654602809, 4), o = fnH(o, r, n, i, t[12], 3873151461, 11), i = fnH(i, o, r, n, t[15], 530742520, 16), r = fnI(r, n = fnH(n, i, o, r, t[2], 3299628645, 23), i, o, t[0], 4096336452, 6), o = fnI(o, r, n, i, t[7], 1126891415, 10), i = fnI(i, o, r, n, t[14], 2878612391, 15), n = fnI(n, i, o, r, t[5], 4237533241, 21), r = fnI(r, n, i, o, t[12], 1700485571, 6), o = fnI(o, r, n, i, t[3], 2399980690, 10), i = fnI(i, o, r, n, t[10], 4293915773, 15), n = fnI(n, i, o, r, t[1], 2240044497, 21), r = fnI(r, n, i, o, t[8], 1873313359, 6), o = fnI(o, r, n, i, t[15], 4264355552, 10), i = fnI(i, o, r, n, t[6], 2734768916, 15), n = fnI(n, i, o, r, t[13], 1309151649, 21), r = fnI(r, n, i, o, t[4], 4149444226, 6), o = fnI(o, r, n, i, t[11], 3174756917, 10), i = fnI(i, o, r, n, t[2], 718787259, 15), n = fnI(n, i, o, r, t[9], 3951481745, 21), this._a = this._a + r | 0, this._b = this._b + n | 0, this._c = this._c + i | 0, this._d = this._d + o | 0
        }, MD5.prototype._digest = function () {
            this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
            var t = o.allocUnsafe(16);
            return t.writeInt32LE(this._a, 0), t.writeInt32LE(this._b, 4), t.writeInt32LE(this._c, 8), t.writeInt32LE(this._d, 12), t
        }, t.exports = MD5
    }, function (t, e, r) {
        var n = r(0).Buffer,
            i = r(1),
            o = r(281),
            a = new Array(16),
            s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13],
            u = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11],
            c = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6],
            l = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11],
            h = [0, 1518500249, 1859775393, 2400959708, 2840853838],
            d = [1352829926, 1548603684, 1836072691, 2053994217, 0];

        function RIPEMD160() {
            o.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520
        }

        function rotl(t, e) {
            return t << e | t >>> 32 - e
        }

        function fn1(t, e, r, n, i, o, a, s) {
            return rotl(t + (e ^ r ^ n) + o + a | 0, s) + i | 0
        }

        function fn2(t, e, r, n, i, o, a, s) {
            return rotl(t + (e & r | ~e & n) + o + a | 0, s) + i | 0
        }

        function fn3(t, e, r, n, i, o, a, s) {
            return rotl(t + ((e | ~r) ^ n) + o + a | 0, s) + i | 0
        }

        function fn4(t, e, r, n, i, o, a, s) {
            return rotl(t + (e & n | r & ~n) + o + a | 0, s) + i | 0
        }

        function fn5(t, e, r, n, i, o, a, s) {
            return rotl(t + (e ^ (r | ~n)) + o + a | 0, s) + i | 0
        }
        i(RIPEMD160, o), RIPEMD160.prototype._update = function () {
            for (var t = a, e = 0; e < 16; ++e) t[e] = this._block.readInt32LE(4 * e);
            for (var r = 0 | this._a, n = 0 | this._b, i = 0 | this._c, o = 0 | this._d, p = 0 | this._e, m = 0 | this._a, y = 0 | this._b, b = 0 | this._c, g = 0 | this._d, v = 0 | this._e, w = 0; w < 80; w += 1) {
                var M, A;
                w < 16 ? (M = fn1(r, n, i, o, p, t[s[w]], h[0], c[w]), A = fn5(m, y, b, g, v, t[u[w]], d[0], l[w])) : w < 32 ? (M = fn2(r, n, i, o, p, t[s[w]], h[1], c[w]), A = fn4(m, y, b, g, v, t[u[w]], d[1], l[w])) : w < 48 ? (M = fn3(r, n, i, o, p, t[s[w]], h[2], c[w]), A = fn3(m, y, b, g, v, t[u[w]], d[2], l[w])) : w < 64 ? (M = fn4(r, n, i, o, p, t[s[w]], h[3], c[w]), A = fn2(m, y, b, g, v, t[u[w]], d[3], l[w])) : (M = fn5(r, n, i, o, p, t[s[w]], h[4], c[w]), A = fn1(m, y, b, g, v, t[u[w]], d[4], l[w])), r = p, p = o, o = rotl(i, 10), i = n, n = M, m = v, v = g, g = rotl(b, 10), b = y, y = A
            }
            var x = this._b + i + g | 0;
            this._b = this._c + o + v | 0, this._c = this._d + p + m | 0, this._d = this._e + r + y | 0, this._e = this._a + n + b | 0, this._a = x
        }, RIPEMD160.prototype._digest = function () {
            this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
            var t = n.alloc ? n.alloc(20) : new n(20);
            return t.writeInt32LE(this._a, 0), t.writeInt32LE(this._b, 4), t.writeInt32LE(this._c, 8), t.writeInt32LE(this._d, 12), t.writeInt32LE(this._e, 16), t
        }, t.exports = RIPEMD160
    }, function (t, e, r) {
        (e = t.exports = function SHA(t) {
            t = t.toLowerCase();
            var r = e[t];
            if (!r) throw new Error(t + " is not supported (we accept pull requests)");
            return new r
        }).sha = r(648), e.sha1 = r(649), e.sha224 = r(650), e.sha256 = r(282), e.sha384 = r(651), e.sha512 = r(283)
    }, function (t, e, r) {
        (function (t) {
            var n = this && this.__importDefault || function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.toType = e.TypeOutput = e.bnToRlp = e.bnToUnpaddedBuffer = e.bnToHex = void 0;
            var i, o = n(r(53)),
                a = r(20),
                s = r(54);

            function bnToUnpaddedBuffer(e) {
                return s.unpadBuffer(e.toArrayLike(t))
            }
            e.bnToHex = function bnToHex(t) {
                    return "0x" + t.toString(16)
                }, e.bnToUnpaddedBuffer = bnToUnpaddedBuffer, e.bnToRlp = function bnToRlp(t) {
                    return bnToUnpaddedBuffer(t)
                },
                function (t) {
                    t[t.Number = 0] = "Number", t[t.BN = 1] = "BN", t[t.Buffer = 2] = "Buffer", t[t.PrefixedHexString = 3] = "PrefixedHexString"
                }(i = e.TypeOutput || (e.TypeOutput = {})), e.toType = function toType(t, e) {
                    if ("string" == typeof t && !a.isHexString(t)) throw new Error("A string must be provided with a 0x-prefix, given: " + t);
                    if ("number" == typeof t && !Number.isSafeInteger(t)) throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");
                    if (t = s.toBuffer(t), e === i.Buffer) return t;
                    if (e === i.BN) return new o.default(t);
                    if (e === i.Number) {
                        var r = new o.default(t),
                            n = new o.default(Number.MAX_SAFE_INTEGER.toString());
                        if (r.gt(n)) throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)");
                        return r.toNumber()
                    }
                    return "0x" + t.toString("hex")
                }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n, i = e,
            o = r(89),
            a = r(284),
            s = r(21).assert;

        function PresetCurve(t) {
            "short" === t.type ? this.curve = new a.short(t) : "edwards" === t.type ? this.curve = new a.edwards(t) : this.curve = new a.mont(t), this.g = this.curve.g, this.n = this.curve.n, this.hash = t.hash, s(this.g.validate(), "Invalid curve"), s(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O")
        }

        function defineCurve(t, e) {
            Object.defineProperty(i, t, {
                configurable: !0,
                enumerable: !0,
                get: function () {
                    var r = new PresetCurve(e);
                    return Object.defineProperty(i, t, {
                        configurable: !0,
                        enumerable: !0,
                        value: r
                    }), r
                }
            })
        }
        i.PresetCurve = PresetCurve, defineCurve("p192", {
            type: "short",
            prime: "p192",
            p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
            a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
            b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
            n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
            hash: o.sha256,
            gRed: !1,
            g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
        }), defineCurve("p224", {
            type: "short",
            prime: "p224",
            p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
            a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
            b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
            n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
            hash: o.sha256,
            gRed: !1,
            g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
        }), defineCurve("p256", {
            type: "short",
            prime: null,
            p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
            a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
            b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
            n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
            hash: o.sha256,
            gRed: !1,
            g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
        }), defineCurve("p384", {
            type: "short",
            prime: null,
            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
            a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
            b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
            n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
            hash: o.sha384,
            gRed: !1,
            g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
        }), defineCurve("p521", {
            type: "short",
            prime: null,
            p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
            a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
            b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
            n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
            hash: o.sha512,
            gRed: !1,
            g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
        }), defineCurve("curve25519", {
            type: "mont",
            prime: "p25519",
            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
            a: "76d06",
            b: "1",
            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
            hash: o.sha256,
            gRed: !1,
            g: ["9"]
        }), defineCurve("ed25519", {
            type: "edwards",
            prime: "p25519",
            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
            a: "-1",
            c: "1",
            d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
            hash: o.sha256,
            gRed: !1,
            g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
        });
        try {
            n = r(692)
        } catch (t) {
            n = void 0
        }
        defineCurve("secp256k1", {
            type: "short",
            prime: "k256",
            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
            a: "0",
            b: "7",
            n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
            h: "1",
            hash: o.sha256,
            beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
            lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
            basis: [{
                a: "3086d221a7d46bcde86c90e49284eb15",
                b: "-e4437ed6010e88286f547fa90abfe4c3"
            }, {
                a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                b: "3086d221a7d46bcde86c90e49284eb15"
            }],
            gRed: !1,
            g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", n]
        })
    }, function (t, e, r) {
        var n = Object.prototype.hasOwnProperty,
            i = "~";

        function Events() {}

        function EE(t, e, r) {
            this.fn = t, this.context = e, this.once = r || !1
        }

        function addListener(t, e, r, n, o) {
            if ("function" != typeof r) throw new TypeError("The listener must be a function");
            var a = new EE(r, n || t, o),
                s = i ? i + e : e;
            return t._events[s] ? t._events[s].fn ? t._events[s] = [t._events[s], a] : t._events[s].push(a) : (t._events[s] = a, t._eventsCount++), t
        }

        function clearEvent(t, e) {
            0 == --t._eventsCount ? t._events = new Events : delete t._events[e]
        }

        function EventEmitter() {
            this._events = new Events, this._eventsCount = 0
        }
        Object.create && (Events.prototype = Object.create(null), (new Events).__proto__ || (i = !1)), EventEmitter.prototype.eventNames = function eventNames() {
            var t, e, r = [];
            if (0 === this._eventsCount) return r;
            for (e in t = this._events) n.call(t, e) && r.push(i ? e.slice(1) : e);
            return Object.getOwnPropertySymbols ? r.concat(Object.getOwnPropertySymbols(t)) : r
        }, EventEmitter.prototype.listeners = function listeners(t) {
            var e = i ? i + t : t,
                r = this._events[e];
            if (!r) return [];
            if (r.fn) return [r.fn];
            for (var n = 0, o = r.length, a = new Array(o); n < o; n++) a[n] = r[n].fn;
            return a
        }, EventEmitter.prototype.listenerCount = function listenerCount(t) {
            var e = i ? i + t : t,
                r = this._events[e];
            return r ? r.fn ? 1 : r.length : 0
        }, EventEmitter.prototype.emit = function emit(t, e, r, n, o, a) {
            var s = i ? i + t : t;
            if (!this._events[s]) return !1;
            var u, c, l = this._events[s],
                h = arguments.length;
            if (l.fn) {
                switch (l.once && this.removeListener(t, l.fn, void 0, !0), h) {
                    case 1:
                        return l.fn.call(l.context), !0;
                    case 2:
                        return l.fn.call(l.context, e), !0;
                    case 3:
                        return l.fn.call(l.context, e, r), !0;
                    case 4:
                        return l.fn.call(l.context, e, r, n), !0;
                    case 5:
                        return l.fn.call(l.context, e, r, n, o), !0;
                    case 6:
                        return l.fn.call(l.context, e, r, n, o, a), !0
                }
                for (c = 1, u = new Array(h - 1); c < h; c++) u[c - 1] = arguments[c];
                l.fn.apply(l.context, u)
            } else {
                var d, p = l.length;
                for (c = 0; c < p; c++) switch (l[c].once && this.removeListener(t, l[c].fn, void 0, !0), h) {
                    case 1:
                        l[c].fn.call(l[c].context);
                        break;
                    case 2:
                        l[c].fn.call(l[c].context, e);
                        break;
                    case 3:
                        l[c].fn.call(l[c].context, e, r);
                        break;
                    case 4:
                        l[c].fn.call(l[c].context, e, r, n);
                        break;
                    default:
                        if (!u)
                            for (d = 1, u = new Array(h - 1); d < h; d++) u[d - 1] = arguments[d];
                        l[c].fn.apply(l[c].context, u)
                }
            }
            return !0
        }, EventEmitter.prototype.on = function on(t, e, r) {
            return addListener(this, t, e, r, !1)
        }, EventEmitter.prototype.once = function once(t, e, r) {
            return addListener(this, t, e, r, !0)
        }, EventEmitter.prototype.removeListener = function removeListener(t, e, r, n) {
            var o = i ? i + t : t;
            if (!this._events[o]) return this;
            if (!e) return clearEvent(this, o), this;
            var a = this._events[o];
            if (a.fn) a.fn !== e || n && !a.once || r && a.context !== r || clearEvent(this, o);
            else {
                for (var s = 0, u = [], c = a.length; s < c; s++)(a[s].fn !== e || n && !a[s].once || r && a[s].context !== r) && u.push(a[s]);
                u.length ? this._events[o] = 1 === u.length ? u[0] : u : clearEvent(this, o)
            }
            return this
        }, EventEmitter.prototype.removeAllListeners = function removeAllListeners(t) {
            var e;
            return t ? (e = i ? i + t : t, this._events[e] && clearEvent(this, e)) : (this._events = new Events, this._eventsCount = 0), this
        }, EventEmitter.prototype.off = EventEmitter.prototype.removeListener, EventEmitter.prototype.addListener = EventEmitter.prototype.on, EventEmitter.prefixed = i, EventEmitter.EventEmitter = EventEmitter, t.exports = EventEmitter
    }, function (t, e, r) {
        var n = r(713),
            i = function Subscriptions(t) {
                this.name = t.name, this.type = t.type, this.subscriptions = t.subscriptions || {}, this.requestManager = null
            };
        i.prototype.setRequestManager = function (t) {
            this.requestManager = t
        }, i.prototype.attachToObject = function (t) {
            var e = this.buildCall(),
                r = this.name.split(".");
            r.length > 1 ? (t[r[0]] = t[r[0]] || {}, t[r[0]][r[1]] = e) : t[r[0]] = e
        }, i.prototype.buildCall = function () {
            var t = this;
            return function () {
                t.subscriptions[arguments[0]] || console.warn("Subscription " + JSON.stringify(arguments[0]) + " doesn't exist. Subscribing anyway.");
                var e = new n({
                    subscription: t.subscriptions[arguments[0]] || {},
                    requestManager: t.requestManager,
                    type: t.type
                });
                return e.subscribe.apply(e, arguments)
            }
        }, t.exports = {
            subscriptions: i,
            subscription: n
        }
    }, function (t, e, r) {
        var n = Object.prototype.hasOwnProperty,
            i = "~";

        function Events() {}

        function EE(t, e, r) {
            this.fn = t, this.context = e, this.once = r || !1
        }

        function addListener(t, e, r, n, o) {
            if ("function" != typeof r) throw new TypeError("The listener must be a function");
            var a = new EE(r, n || t, o),
                s = i ? i + e : e;
            return t._events[s] ? t._events[s].fn ? t._events[s] = [t._events[s], a] : t._events[s].push(a) : (t._events[s] = a, t._eventsCount++), t
        }

        function clearEvent(t, e) {
            0 == --t._eventsCount ? t._events = new Events : delete t._events[e]
        }

        function EventEmitter() {
            this._events = new Events, this._eventsCount = 0
        }
        Object.create && (Events.prototype = Object.create(null), (new Events).__proto__ || (i = !1)), EventEmitter.prototype.eventNames = function eventNames() {
            var t, e, r = [];
            if (0 === this._eventsCount) return r;
            for (e in t = this._events) n.call(t, e) && r.push(i ? e.slice(1) : e);
            return Object.getOwnPropertySymbols ? r.concat(Object.getOwnPropertySymbols(t)) : r
        }, EventEmitter.prototype.listeners = function listeners(t) {
            var e = i ? i + t : t,
                r = this._events[e];
            if (!r) return [];
            if (r.fn) return [r.fn];
            for (var n = 0, o = r.length, a = new Array(o); n < o; n++) a[n] = r[n].fn;
            return a
        }, EventEmitter.prototype.listenerCount = function listenerCount(t) {
            var e = i ? i + t : t,
                r = this._events[e];
            return r ? r.fn ? 1 : r.length : 0
        }, EventEmitter.prototype.emit = function emit(t, e, r, n, o, a) {
            var s = i ? i + t : t;
            if (!this._events[s]) return !1;
            var u, c, l = this._events[s],
                h = arguments.length;
            if (l.fn) {
                switch (l.once && this.removeListener(t, l.fn, void 0, !0), h) {
                    case 1:
                        return l.fn.call(l.context), !0;
                    case 2:
                        return l.fn.call(l.context, e), !0;
                    case 3:
                        return l.fn.call(l.context, e, r), !0;
                    case 4:
                        return l.fn.call(l.context, e, r, n), !0;
                    case 5:
                        return l.fn.call(l.context, e, r, n, o), !0;
                    case 6:
                        return l.fn.call(l.context, e, r, n, o, a), !0
                }
                for (c = 1, u = new Array(h - 1); c < h; c++) u[c - 1] = arguments[c];
                l.fn.apply(l.context, u)
            } else {
                var d, p = l.length;
                for (c = 0; c < p; c++) switch (l[c].once && this.removeListener(t, l[c].fn, void 0, !0), h) {
                    case 1:
                        l[c].fn.call(l[c].context);
                        break;
                    case 2:
                        l[c].fn.call(l[c].context, e);
                        break;
                    case 3:
                        l[c].fn.call(l[c].context, e, r);
                        break;
                    case 4:
                        l[c].fn.call(l[c].context, e, r, n);
                        break;
                    default:
                        if (!u)
                            for (d = 1, u = new Array(h - 1); d < h; d++) u[d - 1] = arguments[d];
                        l[c].fn.apply(l[c].context, u)
                }
            }
            return !0
        }, EventEmitter.prototype.on = function on(t, e, r) {
            return addListener(this, t, e, r, !1)
        }, EventEmitter.prototype.once = function once(t, e, r) {
            return addListener(this, t, e, r, !0)
        }, EventEmitter.prototype.removeListener = function removeListener(t, e, r, n) {
            var o = i ? i + t : t;
            if (!this._events[o]) return this;
            if (!e) return clearEvent(this, o), this;
            var a = this._events[o];
            if (a.fn) a.fn !== e || n && !a.once || r && a.context !== r || clearEvent(this, o);
            else {
                for (var s = 0, u = [], c = a.length; s < c; s++)(a[s].fn !== e || n && !a[s].once || r && a[s].context !== r) && u.push(a[s]);
                u.length ? this._events[o] = 1 === u.length ? u[0] : u : clearEvent(this, o)
            }
            return this
        }, EventEmitter.prototype.removeAllListeners = function removeAllListeners(t) {
            var e;
            return t ? (e = i ? i + t : t, this._events[e] && clearEvent(this, e)) : (this._events = new Events, this._eventsCount = 0), this
        }, EventEmitter.prototype.off = EventEmitter.prototype.removeListener, EventEmitter.prototype.addListener = EventEmitter.prototype.on, EventEmitter.prefixed = i, EventEmitter.EventEmitter = EventEmitter, t.exports = EventEmitter
    }, function (t, e, r) {
        const {
            Buffer: n
        } = r(0), i = r(752), o = r(93), a = r(758);

        function validate(t) {
            e.decode(t)
        }
        e.names = a.names, e.codes = a.codes, e.defaultLengths = a.defaultLengths, e.toHexString = function toHexString(t) {
            if (!n.isBuffer(t)) throw new Error("must be passed a buffer");
            return t.toString("hex")
        }, e.fromHexString = function fromHexString(t) {
            return n.from(t, "hex")
        }, e.toB58String = function toB58String(t) {
            if (!n.isBuffer(t)) throw new Error("must be passed a buffer");
            return i.encode("base58btc", t).toString().slice(1)
        }, e.fromB58String = function fromB58String(t) {
            let e = t;
            return n.isBuffer(t) && (e = t.toString()), i.decode("z" + e)
        }, e.decode = function decode(t) {
            if (!n.isBuffer(t)) throw new Error("multihash must be a Buffer");
            if (t.length < 2) throw new Error("multihash too short. must be > 2 bytes.");
            const r = o.decode(t);
            if (!e.isValidCode(r)) throw new Error("multihash unknown function code: 0x" + r.toString(16));
            t = t.slice(o.decode.bytes);
            const i = o.decode(t);
            if (i < 0) throw new Error("multihash invalid length: " + i);
            if ((t = t.slice(o.decode.bytes)).length !== i) throw new Error("multihash length inconsistent: 0x" + t.toString("hex"));
            return {
                code: r,
                name: a.codes[r],
                length: i,
                digest: t
            }
        }, e.encode = function encode(t, r, i) {
            if (!t || void 0 === r) throw new Error("multihash encode requires at least two args: digest, code");
            const a = e.coerceCode(r);
            if (!n.isBuffer(t)) throw new Error("digest should be a Buffer");
            if (null == i && (i = t.length), i && t.length !== i) throw new Error("digest length should be equal to specified length.");
            return n.concat([n.from(o.encode(a)), n.from(o.encode(i)), t])
        }, e.coerceCode = function coerceCode(t) {
            let r = t;
            if ("string" == typeof t) {
                if (void 0 === a.names[t]) throw new Error("Unrecognized hash function named: " + t);
                r = a.names[t]
            }
            if ("number" != typeof r) throw new Error("Hash function code should be a number. Got: " + r);
            if (void 0 === a.codes[r] && !e.isAppCode(r)) throw new Error("Unrecognized function code: " + r);
            return r
        }, e.isAppCode = function appCode(t) {
            return t > 0 && t < 16
        }, e.isValidCode = function validCode(t) {
            return !!e.isAppCode(t) || !!a.codes[t]
        }, e.validate = validate, e.prefix = function prefix(t) {
            return validate(t), t.slice(0, 2)
        }
    }, function (t, e, r) {
        var n = Object.prototype.hasOwnProperty,
            i = "~";

        function Events() {}

        function EE(t, e, r) {
            this.fn = t, this.context = e, this.once = r || !1
        }

        function addListener(t, e, r, n, o) {
            if ("function" != typeof r) throw new TypeError("The listener must be a function");
            var a = new EE(r, n || t, o),
                s = i ? i + e : e;
            return t._events[s] ? t._events[s].fn ? t._events[s] = [t._events[s], a] : t._events[s].push(a) : (t._events[s] = a, t._eventsCount++), t
        }

        function clearEvent(t, e) {
            0 == --t._eventsCount ? t._events = new Events : delete t._events[e]
        }

        function EventEmitter() {
            this._events = new Events, this._eventsCount = 0
        }
        Object.create && (Events.prototype = Object.create(null), (new Events).__proto__ || (i = !1)), EventEmitter.prototype.eventNames = function eventNames() {
            var t, e, r = [];
            if (0 === this._eventsCount) return r;
            for (e in t = this._events) n.call(t, e) && r.push(i ? e.slice(1) : e);
            return Object.getOwnPropertySymbols ? r.concat(Object.getOwnPropertySymbols(t)) : r
        }, EventEmitter.prototype.listeners = function listeners(t) {
            var e = i ? i + t : t,
                r = this._events[e];
            if (!r) return [];
            if (r.fn) return [r.fn];
            for (var n = 0, o = r.length, a = new Array(o); n < o; n++) a[n] = r[n].fn;
            return a
        }, EventEmitter.prototype.listenerCount = function listenerCount(t) {
            var e = i ? i + t : t,
                r = this._events[e];
            return r ? r.fn ? 1 : r.length : 0
        }, EventEmitter.prototype.emit = function emit(t, e, r, n, o, a) {
            var s = i ? i + t : t;
            if (!this._events[s]) return !1;
            var u, c, l = this._events[s],
                h = arguments.length;
            if (l.fn) {
                switch (l.once && this.removeListener(t, l.fn, void 0, !0), h) {
                    case 1:
                        return l.fn.call(l.context), !0;
                    case 2:
                        return l.fn.call(l.context, e), !0;
                    case 3:
                        return l.fn.call(l.context, e, r), !0;
                    case 4:
                        return l.fn.call(l.context, e, r, n), !0;
                    case 5:
                        return l.fn.call(l.context, e, r, n, o), !0;
                    case 6:
                        return l.fn.call(l.context, e, r, n, o, a), !0
                }
                for (c = 1, u = new Array(h - 1); c < h; c++) u[c - 1] = arguments[c];
                l.fn.apply(l.context, u)
            } else {
                var d, p = l.length;
                for (c = 0; c < p; c++) switch (l[c].once && this.removeListener(t, l[c].fn, void 0, !0), h) {
                    case 1:
                        l[c].fn.call(l[c].context);
                        break;
                    case 2:
                        l[c].fn.call(l[c].context, e);
                        break;
                    case 3:
                        l[c].fn.call(l[c].context, e, r);
                        break;
                    case 4:
                        l[c].fn.call(l[c].context, e, r, n);
                        break;
                    default:
                        if (!u)
                            for (d = 1, u = new Array(h - 1); d < h; d++) u[d - 1] = arguments[d];
                        l[c].fn.apply(l[c].context, u)
                }
            }
            return !0
        }, EventEmitter.prototype.on = function on(t, e, r) {
            return addListener(this, t, e, r, !1)
        }, EventEmitter.prototype.once = function once(t, e, r) {
            return addListener(this, t, e, r, !0)
        }, EventEmitter.prototype.removeListener = function removeListener(t, e, r, n) {
            var o = i ? i + t : t;
            if (!this._events[o]) return this;
            if (!e) return clearEvent(this, o), this;
            var a = this._events[o];
            if (a.fn) a.fn !== e || n && !a.once || r && a.context !== r || clearEvent(this, o);
            else {
                for (var s = 0, u = [], c = a.length; s < c; s++)(a[s].fn !== e || n && !a[s].once || r && a[s].context !== r) && u.push(a[s]);
                u.length ? this._events[o] = 1 === u.length ? u[0] : u : clearEvent(this, o)
            }
            return this
        }, EventEmitter.prototype.removeAllListeners = function removeAllListeners(t) {
            var e;
            return t ? (e = i ? i + t : t, this._events[e] && clearEvent(this, e)) : (this._events = new Events, this._eventsCount = 0), this
        }, EventEmitter.prototype.off = EventEmitter.prototype.removeListener, EventEmitter.prototype.addListener = EventEmitter.prototype.on, EventEmitter.prefixed = i, EventEmitter.EventEmitter = EventEmitter, t.exports = EventEmitter
    }, function (t, e, r) {
        var n = r(17);

        function Cipher(t) {
            this.options = t, this.type = this.options.type, this.blockSize = 8, this._init(), this.buffer = new Array(this.blockSize), this.bufferOff = 0
        }
        t.exports = Cipher, Cipher.prototype._init = function _init() {}, Cipher.prototype.update = function update(t) {
            return 0 === t.length ? [] : "decrypt" === this.type ? this._updateDecrypt(t) : this._updateEncrypt(t)
        }, Cipher.prototype._buffer = function _buffer(t, e) {
            for (var r = Math.min(this.buffer.length - this.bufferOff, t.length - e), n = 0; n < r; n++) this.buffer[this.bufferOff + n] = t[e + n];
            return this.bufferOff += r, r
        }, Cipher.prototype._flushBuffer = function _flushBuffer(t, e) {
            return this._update(this.buffer, 0, t, e), this.bufferOff = 0, this.blockSize
        }, Cipher.prototype._updateEncrypt = function _updateEncrypt(t) {
            var e = 0,
                r = 0,
                n = (this.bufferOff + t.length) / this.blockSize | 0,
                i = new Array(n * this.blockSize);
            0 !== this.bufferOff && (e += this._buffer(t, e), this.bufferOff === this.buffer.length && (r += this._flushBuffer(i, r)));
            for (var o = t.length - (t.length - e) % this.blockSize; e < o; e += this.blockSize) this._update(t, e, i, r), r += this.blockSize;
            for (; e < t.length; e++, this.bufferOff++) this.buffer[this.bufferOff] = t[e];
            return i
        }, Cipher.prototype._updateDecrypt = function _updateDecrypt(t) {
            for (var e = 0, r = 0, n = Math.ceil((this.bufferOff + t.length) / this.blockSize) - 1, i = new Array(n * this.blockSize); n > 0; n--) e += this._buffer(t, e), r += this._flushBuffer(i, r);
            return e += this._buffer(t, e), i
        }, Cipher.prototype.final = function final(t) {
            var e, r;
            return t && (e = this.update(t)), r = "encrypt" === this.type ? this._finalEncrypt() : this._finalDecrypt(), e ? e.concat(r) : r
        }, Cipher.prototype._pad = function _pad(t, e) {
            if (0 === e) return !1;
            for (; e < t.length;) t[e++] = 0;
            return !0
        }, Cipher.prototype._finalEncrypt = function _finalEncrypt() {
            if (!this._pad(this.buffer, this.bufferOff)) return [];
            var t = new Array(this.blockSize);
            return this._update(this.buffer, 0, t, 0), t
        }, Cipher.prototype._unpad = function _unpad(t) {
            return t
        }, Cipher.prototype._finalDecrypt = function _finalDecrypt() {
            n.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
            var t = new Array(this.blockSize);
            return this._flushBuffer(t, 0), this._unpad(t)
        }
    }, function (t, e, r) {
        var n = r(804),
            i = r(812),
            o = r(316);
        e.createCipher = e.Cipher = n.createCipher, e.createCipheriv = e.Cipheriv = n.createCipheriv, e.createDecipher = e.Decipher = i.createDecipher, e.createDecipheriv = e.Decipheriv = i.createDecipheriv, e.listCiphers = e.getCiphers = function getCiphers() {
            return Object.keys(o)
        }
    }, function (t, e, r) {
        var n = {
                ECB: r(805),
                CBC: r(806),
                CFB: r(807),
                CFB8: r(808),
                CFB1: r(809),
                OFB: r(810),
                CTR: r(314),
                GCM: r(314)
            },
            i = r(316);
        for (var o in i) i[o].module = n[i[o].mode];
        t.exports = i
    }, function (t, e, r) {
        (function (e) {
            var n = r(2),
                i = r(15);

            function crt(t, r) {
                var i = function blind(t) {
                        var e = getr(t);
                        return {
                            blinder: e.toRed(n.mont(t.modulus)).redPow(new n(t.publicExponent)).fromRed(),
                            unblinder: e.invm(t.modulus)
                        }
                    }(r),
                    o = r.modulus.byteLength(),
                    a = (n.mont(r.modulus), new n(t).mul(i.blinder).umod(r.modulus)),
                    s = a.toRed(n.mont(r.prime1)),
                    u = a.toRed(n.mont(r.prime2)),
                    c = r.coefficient,
                    l = r.prime1,
                    h = r.prime2,
                    d = s.redPow(r.exponent1),
                    p = u.redPow(r.exponent2);
                d = d.fromRed(), p = p.fromRed();
                var m = d.isub(p).imul(c).umod(l);
                return m.imul(h), p.iadd(m), new e(p.imul(i.unblinder).umod(r.modulus).toArray(!1, o))
            }

            function getr(t) {
                for (var e = t.modulus.byteLength(), r = new n(i(e)); r.cmp(t.modulus) >= 0 || !r.umod(t.prime1) || !r.umod(t.prime2);) r = new n(i(e));
                return r
            }
            t.exports = crt, crt.getr = getr
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (t) {
            var n = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
                    void 0 === n && (n = r), Object.defineProperty(t, n, {
                        enumerable: !0,
                        get: function () {
                            return e[r]
                        }
                    })
                } : function (t, e, r, n) {
                    void 0 === n && (n = r), t[n] = e[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function (t, e) {
                    Object.defineProperty(t, "default", {
                        enumerable: !0,
                        value: e
                    })
                } : function (t, e) {
                    t.default = e
                }),
                o = this && this.__importStar || function (t) {
                    if (t && t.__esModule) return t;
                    var e = {};
                    if (null != t)
                        for (var r in t) "default" !== r && Object.hasOwnProperty.call(t, r) && n(e, t, r);
                    return i(e, t), e
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.rlphash = e.ripemd160FromArray = e.ripemd160FromString = e.ripemd160 = e.sha256FromArray = e.sha256FromString = e.sha256 = e.keccakFromArray = e.keccakFromHexString = e.keccakFromString = e.keccak256 = e.keccak = void 0;
            var a = r(280),
                s = r(55),
                u = o(r(135)),
                c = r(58),
                l = r(136);
            e.keccak = function (t, e) {
                switch (void 0 === e && (e = 256), l.assertIsBuffer(t), e) {
                    case 224:
                        return a.keccak224(t);
                    case 256:
                        return a.keccak256(t);
                    case 384:
                        return a.keccak384(t);
                    case 512:
                        return a.keccak512(t);
                    default:
                        throw new Error("Invald algorithm: keccak" + e)
                }
            }, e.keccak256 = function (t) {
                return e.keccak(t)
            }, e.keccakFromString = function (r, n) {
                void 0 === n && (n = 256), l.assertIsString(r);
                var i = t.from(r, "utf8");
                return e.keccak(i, n)
            }, e.keccakFromHexString = function (t, r) {
                return void 0 === r && (r = 256), l.assertIsHexString(t), e.keccak(c.toBuffer(t), r)
            }, e.keccakFromArray = function (t, r) {
                return void 0 === r && (r = 256), l.assertIsArray(t), e.keccak(c.toBuffer(t), r)
            };
            var _sha256 = function (t) {
                return t = c.toBuffer(t), s("sha256").update(t).digest()
            };
            e.sha256 = function (t) {
                return l.assertIsBuffer(t), _sha256(t)
            }, e.sha256FromString = function (t) {
                return l.assertIsString(t), _sha256(t)
            }, e.sha256FromArray = function (t) {
                return l.assertIsArray(t), _sha256(t)
            };
            var _ripemd160 = function (t, e) {
                t = c.toBuffer(t);
                var r = s("rmd160").update(t).digest();
                return !0 === e ? c.setLengthLeft(r, 32) : r
            };
            e.ripemd160 = function (t, e) {
                return l.assertIsBuffer(t), _ripemd160(t, e)
            }, e.ripemd160FromString = function (t, e) {
                return l.assertIsString(t), _ripemd160(t, e)
            }, e.ripemd160FromArray = function (t, e) {
                return l.assertIsArray(t), _ripemd160(t, e)
            }, e.rlphash = function (t) {
                return e.keccak(u.encode(t))
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (t) {
            var n = this && this.__importDefault || function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.toType = e.TypeOutput = e.bnToRlp = e.bnToUnpaddedBuffer = e.bnToHex = void 0;
            var i, o = n(r(57)),
                a = r(20),
                s = r(58);

            function bnToUnpaddedBuffer(e) {
                return s.unpadBuffer(e.toArrayLike(t))
            }
            e.bnToHex = function bnToHex(t) {
                    return "0x" + t.toString(16)
                }, e.bnToUnpaddedBuffer = bnToUnpaddedBuffer, e.bnToRlp = function bnToRlp(t) {
                    return bnToUnpaddedBuffer(t)
                },
                function (t) {
                    t[t.Number = 0] = "Number", t[t.BN = 1] = "BN", t[t.Buffer = 2] = "Buffer", t[t.PrefixedHexString = 3] = "PrefixedHexString"
                }(i = e.TypeOutput || (e.TypeOutput = {})), e.toType = function toType(t, e) {
                    if ("string" == typeof t && !a.isHexString(t)) throw new Error("A string must be provided with a 0x-prefix, given: " + t);
                    if ("number" == typeof t && !Number.isSafeInteger(t)) throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");
                    if (t = s.toBuffer(t), e === i.Buffer) return t;
                    if (e === i.BN) return new o.default(t);
                    if (e === i.Number) {
                        var r = new o.default(t),
                            n = new o.default(Number.MAX_SAFE_INTEGER.toString());
                        if (r.gt(n)) throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)");
                        return r.toNumber()
                    }
                    return "0x" + t.toString("hex")
                }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = this && this.__values || function (t) {
                var e = "function" == typeof Symbol && Symbol.iterator,
                    r = e && t[e],
                    n = 0;
                if (r) return r.call(t);
                if (t && "number" == typeof t.length) return {
                    next: function () {
                        return t && n >= t.length && (t = void 0), {
                            value: t && t[n++],
                            done: !t
                        }
                    }
                };
                throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.")
            },
            i = this && this.__read || function (t, e) {
                var r = "function" == typeof Symbol && t[Symbol.iterator];
                if (!r) return t;
                var n, i, o = r.call(t),
                    a = [];
                try {
                    for (;
                        (void 0 === e || e-- > 0) && !(n = o.next()).done;) a.push(n.value)
                } catch (t) {
                    i = {
                        error: t
                    }
                } finally {
                    try {
                        n && !n.done && (r = o.return) && r.call(o)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return a
            },
            o = this && this.__importDefault || function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.BaseTransaction = void 0;
        var a = o(r(41)),
            s = r(56),
            u = r(70),
            c = function () {
                function BaseTransaction(t) {
                    this.activeCapabilities = [], this.DEFAULT_CHAIN = "mainnet", this.DEFAULT_HARDFORK = "istanbul";
                    var e = t.nonce,
                        r = t.gasLimit,
                        n = t.to,
                        i = t.value,
                        o = t.data,
                        a = t.v,
                        u = t.r,
                        c = t.s,
                        l = t.type;
                    this._type = new s.BN(s.toBuffer(l)).toNumber();
                    var h = s.toBuffer("" === n ? "0x" : n),
                        d = s.toBuffer("" === a ? "0x" : a),
                        p = s.toBuffer("" === u ? "0x" : u),
                        m = s.toBuffer("" === c ? "0x" : c);
                    this.nonce = new s.BN(s.toBuffer("" === e ? "0x" : e)), this.gasLimit = new s.BN(s.toBuffer("" === r ? "0x" : r)), this.to = h.length > 0 ? new s.Address(h) : void 0, this.value = new s.BN(s.toBuffer("" === i ? "0x" : i)), this.data = s.toBuffer("" === o ? "0x" : o), this.v = d.length > 0 ? new s.BN(d) : void 0, this.r = p.length > 0 ? new s.BN(p) : void 0, this.s = m.length > 0 ? new s.BN(m) : void 0, this._validateCannotExceedMaxInteger({
                        nonce: this.nonce,
                        gasLimit: this.gasLimit,
                        value: this.value,
                        r: this.r,
                        s: this.s
                    })
                }
                return Object.defineProperty(BaseTransaction.prototype, "transactionType", {
                    get: function () {
                        return this.type
                    },
                    enumerable: !1,
                    configurable: !0
                }), Object.defineProperty(BaseTransaction.prototype, "type", {
                    get: function () {
                        return this._type
                    },
                    enumerable: !1,
                    configurable: !0
                }), BaseTransaction.prototype.supports = function (t) {
                    return this.activeCapabilities.includes(t)
                }, BaseTransaction.prototype.validate = function (t) {
                    void 0 === t && (t = !1);
                    var e = [];
                    return this.getBaseFee().gt(this.gasLimit) && e.push("gasLimit is too low. given " + this.gasLimit + ", need at least " + this.getBaseFee()), this.isSigned() && !this.verifySignature() && e.push("Invalid Signature"), t ? e : 0 === e.length
                }, BaseTransaction.prototype.getBaseFee = function () {
                    var t = this.getDataFee().addn(this.common.param("gasPrices", "tx"));
                    return this.common.gteHardfork("homestead") && this.toCreationAddress() && t.iaddn(this.common.param("gasPrices", "txCreation")), t
                }, BaseTransaction.prototype.getDataFee = function () {
                    for (var t = this.common.param("gasPrices", "txDataZero"), e = this.common.param("gasPrices", "txDataNonZero"), r = 0, n = 0; n < this.data.length; n++) 0 === this.data[n] ? r += t : r += e;
                    return new s.BN(r)
                }, BaseTransaction.prototype.toCreationAddress = function () {
                    return void 0 === this.to || 0 === this.to.buf.length
                }, BaseTransaction.prototype.isSigned = function () {
                    var t = this.v,
                        e = this.r,
                        r = this.s;
                    return 0 === this.type ? !!(t && e && r) : !(void 0 === t || !e || !r)
                }, BaseTransaction.prototype.verifySignature = function () {
                    try {
                        var t = this.getSenderPublicKey();
                        return 0 !== s.unpadBuffer(t).length
                    } catch (t) {
                        return !1
                    }
                }, BaseTransaction.prototype.getSenderAddress = function () {
                    return new s.Address(s.publicToAddress(this.getSenderPublicKey()))
                }, BaseTransaction.prototype.sign = function (t) {
                    if (32 !== t.length) throw new Error("Private key must be 32 bytes in length.");
                    var e = !1;
                    0 === this.type && this.common.gteHardfork("spuriousDragon") && !this.supports(u.Capability.EIP155ReplayProtection) && (this.activeCapabilities.push(u.Capability.EIP155ReplayProtection), e = !0);
                    var r = this.getMessageToSign(!0),
                        n = s.ecsign(r, t),
                        i = n.v,
                        o = n.r,
                        a = n.s,
                        c = this._processSignature(i, o, a);
                    if (e) {
                        var l = this.activeCapabilities.indexOf(u.Capability.EIP155ReplayProtection);
                        l > -1 && this.activeCapabilities.splice(l, 1)
                    }
                    return c
                }, BaseTransaction.prototype._getCommon = function (t, e) {
                    var r;
                    if (e) {
                        var n = new s.BN(s.toBuffer(e));
                        if (t) {
                            if (!t.chainIdBN().eq(n)) throw new Error("The chain ID does not match the chain ID of Common");
                            return t.copy()
                        }
                        return a.default.isSupportedChainId(n) ? new a.default({
                            chain: n,
                            hardfork: this.DEFAULT_HARDFORK
                        }) : a.default.forCustomChain(this.DEFAULT_CHAIN, {
                            name: "custom-chain",
                            networkId: n,
                            chainId: n
                        }, this.DEFAULT_HARDFORK)
                    }
                    return null !== (r = null == t ? void 0 : t.copy()) && void 0 !== r ? r : new a.default({
                        chain: this.DEFAULT_CHAIN,
                        hardfork: this.DEFAULT_HARDFORK
                    })
                }, BaseTransaction.prototype._validateCannotExceedMaxInteger = function (t, e) {
                    var r, o;
                    void 0 === e && (e = 53);
                    try {
                        for (var a = n(Object.entries(t)), u = a.next(); !u.done; u = a.next()) {
                            var c = i(u.value, 2),
                                l = c[0],
                                h = c[1];
                            if (53 === e) {
                                if (null == h ? void 0 : h.gt(s.MAX_INTEGER)) throw new Error(l + " cannot exceed MAX_INTEGER, given " + h)
                            } else {
                                if (256 !== e) throw new Error("unimplemented bits value");
                                if (null == h ? void 0 : h.gte(s.TWO_POW256)) throw new Error(l + " must be less than 2^256, given " + h)
                            }
                        }
                    } catch (t) {
                        r = {
                            error: t
                        }
                    } finally {
                        try {
                            u && !u.done && (o = a.return) && o.call(a)
                        } finally {
                            if (r) throw r.error
                        }
                    }
                }, BaseTransaction
            }();
        e.BaseTransaction = c
    }, function (t, e, r) {
        var n = Object.prototype.hasOwnProperty,
            i = "~";

        function Events() {}

        function EE(t, e, r) {
            this.fn = t, this.context = e, this.once = r || !1
        }

        function addListener(t, e, r, n, o) {
            if ("function" != typeof r) throw new TypeError("The listener must be a function");
            var a = new EE(r, n || t, o),
                s = i ? i + e : e;
            return t._events[s] ? t._events[s].fn ? t._events[s] = [t._events[s], a] : t._events[s].push(a) : (t._events[s] = a, t._eventsCount++), t
        }

        function clearEvent(t, e) {
            0 == --t._eventsCount ? t._events = new Events : delete t._events[e]
        }

        function EventEmitter() {
            this._events = new Events, this._eventsCount = 0
        }
        Object.create && (Events.prototype = Object.create(null), (new Events).__proto__ || (i = !1)), EventEmitter.prototype.eventNames = function eventNames() {
            var t, e, r = [];
            if (0 === this._eventsCount) return r;
            for (e in t = this._events) n.call(t, e) && r.push(i ? e.slice(1) : e);
            return Object.getOwnPropertySymbols ? r.concat(Object.getOwnPropertySymbols(t)) : r
        }, EventEmitter.prototype.listeners = function listeners(t) {
            var e = i ? i + t : t,
                r = this._events[e];
            if (!r) return [];
            if (r.fn) return [r.fn];
            for (var n = 0, o = r.length, a = new Array(o); n < o; n++) a[n] = r[n].fn;
            return a
        }, EventEmitter.prototype.listenerCount = function listenerCount(t) {
            var e = i ? i + t : t,
                r = this._events[e];
            return r ? r.fn ? 1 : r.length : 0
        }, EventEmitter.prototype.emit = function emit(t, e, r, n, o, a) {
            var s = i ? i + t : t;
            if (!this._events[s]) return !1;
            var u, c, l = this._events[s],
                h = arguments.length;
            if (l.fn) {
                switch (l.once && this.removeListener(t, l.fn, void 0, !0), h) {
                    case 1:
                        return l.fn.call(l.context), !0;
                    case 2:
                        return l.fn.call(l.context, e), !0;
                    case 3:
                        return l.fn.call(l.context, e, r), !0;
                    case 4:
                        return l.fn.call(l.context, e, r, n), !0;
                    case 5:
                        return l.fn.call(l.context, e, r, n, o), !0;
                    case 6:
                        return l.fn.call(l.context, e, r, n, o, a), !0
                }
                for (c = 1, u = new Array(h - 1); c < h; c++) u[c - 1] = arguments[c];
                l.fn.apply(l.context, u)
            } else {
                var d, p = l.length;
                for (c = 0; c < p; c++) switch (l[c].once && this.removeListener(t, l[c].fn, void 0, !0), h) {
                    case 1:
                        l[c].fn.call(l[c].context);
                        break;
                    case 2:
                        l[c].fn.call(l[c].context, e);
                        break;
                    case 3:
                        l[c].fn.call(l[c].context, e, r);
                        break;
                    case 4:
                        l[c].fn.call(l[c].context, e, r, n);
                        break;
                    default:
                        if (!u)
                            for (d = 1, u = new Array(h - 1); d < h; d++) u[d - 1] = arguments[d];
                        l[c].fn.apply(l[c].context, u)
                }
            }
            return !0
        }, EventEmitter.prototype.on = function on(t, e, r) {
            return addListener(this, t, e, r, !1)
        }, EventEmitter.prototype.once = function once(t, e, r) {
            return addListener(this, t, e, r, !0)
        }, EventEmitter.prototype.removeListener = function removeListener(t, e, r, n) {
            var o = i ? i + t : t;
            if (!this._events[o]) return this;
            if (!e) return clearEvent(this, o), this;
            var a = this._events[o];
            if (a.fn) a.fn !== e || n && !a.once || r && a.context !== r || clearEvent(this, o);
            else {
                for (var s = 0, u = [], c = a.length; s < c; s++)(a[s].fn !== e || n && !a[s].once || r && a[s].context !== r) && u.push(a[s]);
                u.length ? this._events[o] = 1 === u.length ? u[0] : u : clearEvent(this, o)
            }
            return this
        }, EventEmitter.prototype.removeAllListeners = function removeAllListeners(t) {
            var e;
            return t ? (e = i ? i + t : t, this._events[e] && clearEvent(this, e)) : (this._events = new Events, this._eventsCount = 0), this
        }, EventEmitter.prototype.off = EventEmitter.prototype.removeListener, EventEmitter.prototype.addListener = EventEmitter.prototype.on, EventEmitter.prefixed = i, EventEmitter.EventEmitter = EventEmitter, t.exports = EventEmitter
    }, function (t, e, r) {
        var n = r(32).errors,
            i = r(32).formatters,
            o = r(99),
            a = r(872),
            s = r(339).subscriptions,
            u = r(41).Hardfork,
            c = r(100),
            l = function Method(t) {
                if (!t.call || !t.name) throw new Error('When creating a method you need to provide at least the "name" and "call" property.');
                this.name = t.name, this.call = t.call, this.params = t.params || 0, this.inputFormatter = t.inputFormatter, this.outputFormatter = t.outputFormatter, this.transformPayload = t.transformPayload, this.extraFormatters = t.extraFormatters, this.abiCoder = t.abiCoder, this.requestManager = t.requestManager, this.accounts = t.accounts, this.defaultBlock = t.defaultBlock || "latest", this.defaultAccount = t.defaultAccount || null, this.transactionBlockTimeout = t.transactionBlockTimeout || 50, this.transactionConfirmationBlocks = t.transactionConfirmationBlocks || 24, this.transactionPollingTimeout = t.transactionPollingTimeout || 750, this.defaultCommon = t.defaultCommon, this.defaultChain = t.defaultChain, this.defaultHardfork = t.defaultHardfork, this.handleRevert = t.handleRevert
            };
        l.prototype.setRequestManager = function (t, e) {
            this.requestManager = t, e && (this.accounts = e)
        }, l.prototype.createFunction = function (t, e) {
            var r = this.buildCall();
            return r.call = this.call, this.setRequestManager(t || this.requestManager, e || this.accounts), r
        }, l.prototype.attachToObject = function (t) {
            var e = this.buildCall();
            e.call = this.call;
            var r = this.name.split(".");
            r.length > 1 ? (t[r[0]] = t[r[0]] || {}, t[r[0]][r[1]] = e) : t[r[0]] = e
        }, l.prototype.getCall = function (t) {
            return "function" == typeof this.call ? this.call(t) : this.call
        }, l.prototype.extractCallback = function (t) {
            if ("function" == typeof t[t.length - 1]) return t.pop()
        }, l.prototype.validateArgs = function (t) {
            if (t.length !== this.params) throw n.InvalidNumberOfParams(t.length, this.params, this.name)
        }, l.prototype.formatInput = function (t) {
            var e = this;
            return this.inputFormatter ? this.inputFormatter.map((function (r, n) {
                return r ? r.call(e, t[n]) : t[n]
            })) : t
        }, l.prototype.formatOutput = function (t) {
            var e = this;
            return Array.isArray(t) ? t.map((function (t) {
                return e.outputFormatter && t ? e.outputFormatter(t) : t
            })) : this.outputFormatter && t ? this.outputFormatter(t) : t
        }, l.prototype.toPayload = function (t) {
            var e = this.getCall(t),
                r = this.extractCallback(t),
                n = this.formatInput(t);
            this.validateArgs(n);
            var i = {
                method: e,
                params: n,
                callback: r
            };
            return this.transformPayload && (i = this.transformPayload(i)), i
        }, l.prototype._confirmTransaction = function (t, e, r) {
            var u = this,
                h = !1,
                d = !0,
                p = 0,
                m = 0,
                y = null,
                b = null,
                g = r.params[0] && "object" == typeof r.params[0] && r.params[0].gas ? r.params[0].gas : null,
                v = !!r.params[0] && "object" == typeof r.params[0] && r.params[0].data && r.params[0].from && !r.params[0].to,
                w = v && r.params[0].data.length > 2,
                M = [new l({
                    name: "getBlockByNumber",
                    call: "eth_getBlockByNumber",
                    params: 2,
                    inputFormatter: [i.inputBlockNumberFormatter, function (t) {
                        return !!t
                    }],
                    outputFormatter: i.outputBlockFormatter
                }), new l({
                    name: "getTransactionReceipt",
                    call: "eth_getTransactionReceipt",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: i.outputTransactionReceiptFormatter
                }), new l({
                    name: "getCode",
                    call: "eth_getCode",
                    params: 2,
                    inputFormatter: [i.inputAddressFormatter, i.inputDefaultBlockNumberFormatter]
                }), new l({
                    name: "getTransactionByHash",
                    call: "eth_getTransactionByHash",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: i.outputTransactionFormatter
                }), new s({
                    name: "subscribe",
                    type: "eth",
                    subscriptions: {
                        newBlockHeaders: {
                            subscriptionName: "newHeads",
                            params: 0,
                            outputFormatter: i.outputBlockFormatter
                        }
                    }
                })],
                A = {};
            M.forEach(t => {
                t.attachToObject(A), t.requestManager = u.requestManager
            });
            var checkConfirmation = function (s, l, M, x, B) {
                    if (!M) return B || (B = {
                        unsubscribe: function () {
                            clearInterval(y)
                        }
                    }), (s ? a.resolve(s) : A.getTransactionReceipt(e)).catch((function (e) {
                        B.unsubscribe(), h = !0, o._fireError({
                            message: "Failed to check for transaction receipt:",
                            data: e
                        }, t.eventEmitter, t.reject)
                    })).then((async function (e) {
                        if (!e || !e.blockHash) throw new Error("Receipt missing or blockHash null");
                        if (u.extraFormatters && u.extraFormatters.receiptFormatter && (e = u.extraFormatters.receiptFormatter(e)), t.eventEmitter.listeners("confirmation").length > 0) {
                            var r;
                            if (void 0 === s || 0 !== m) {
                                var n = await A.getBlockByNumber("latest"),
                                    i = n ? n.hash : null;
                                l ? b ? (r = await A.getBlockByNumber(b.number + 1)) && (b = r, t.eventEmitter.emit("confirmation", m, e, i)) : (r = await A.getBlockByNumber(e.blockNumber), b = r, t.eventEmitter.emit("confirmation", m, e, i)) : t.eventEmitter.emit("confirmation", m, e, i)
                            }(l && r || !l) && m++, d = !1, m === u.transactionConfirmationBlocks + 1 && (B.unsubscribe(), t.eventEmitter.removeAllListeners())
                        }
                        return e
                    })).then((async function (e) {
                        if (v && !h) {
                            if (!e.contractAddress) return d && (B.unsubscribe(), h = !0), void o._fireError(n.NoContractAddressFoundError(e), t.eventEmitter, t.reject, null, e);
                            var r;
                            try {
                                r = await A.getCode(e.contractAddress)
                            } catch (t) {}
                            if (!r) return;
                            !0 === e.status && w || r.length > 2 ? (t.eventEmitter.emit("receipt", e), u.extraFormatters && u.extraFormatters.contractDeployFormatter ? t.resolve(u.extraFormatters.contractDeployFormatter(e)) : t.resolve(e), d && t.eventEmitter.removeAllListeners()) : o._fireError(n.ContractCodeNotStoredError(e), t.eventEmitter, t.reject, null, e), d && B.unsubscribe(), h = !0
                        }
                        return e
                    })).then((async function (e) {
                        if (!v && !h) {
                            if (e.outOfGas || g && g === e.gasUsed || !0 !== e.status && "0x1" !== e.status && void 0 !== e.status)
                                if (JSON.stringify(e, null, 2), !1 === e.status || "0x0" === e.status) try {
                                    var a = null;
                                    if (!u.handleRevert || "eth_sendTransaction" !== u.call && "eth_sendRawTransaction" !== u.call) throw !1;
                                    var s = r.params[0];
                                    if ("eth_sendRawTransaction" === u.call) {
                                        var l = r.params[0],
                                            p = c.parse(l);
                                        s = i.inputTransactionFormatter({
                                            data: p.data,
                                            to: p.to,
                                            from: p.from,
                                            gas: p.gasLimit.toHexString(),
                                            gasPrice: p.gasPrice.toHexString(),
                                            value: p.value.toHexString()
                                        })
                                    }
                                    if (!(a = await u.getRevertReason(s, e.blockNumber))) throw !1;
                                    o._fireError(n.TransactionRevertInstructionError(a.reason, a.signature, e), t.eventEmitter, t.reject, null, e)
                                } catch (r) {
                                    o._fireError(n.TransactionRevertedWithoutReasonError(e), t.eventEmitter, t.reject, null, e)
                                } else o._fireError(n.TransactionOutOfGasError(e), t.eventEmitter, t.reject, null, e);
                                else t.eventEmitter.emit("receipt", e), t.resolve(e), d && t.eventEmitter.removeAllListeners();
                            d && B.unsubscribe(), h = !0
                        }
                    })).catch((function () {
                        p++, l ? p - 1 >= u.transactionPollingTimeout && (B.unsubscribe(), h = !0, o._fireError(n.TransactionError("Transaction was not mined within " + u.transactionPollingTimeout + " seconds, please make sure your transaction was properly sent. Be aware that it might still be mined!"), t.eventEmitter, t.reject)) : p - 1 >= u.transactionBlockTimeout && (B.unsubscribe(), h = !0, o._fireError(n.TransactionError("Transaction was not mined within " + u.transactionBlockTimeout + " blocks, please make sure your transaction was properly sent. Be aware that it might still be mined!"), t.eventEmitter, t.reject))
                    }));
                    B.unsubscribe(), h = !0, o._fireError({
                        message: "Failed to subscribe to new newBlockHeaders to confirm the transaction receipts.",
                        data: M
                    }, t.eventEmitter, t.reject)
                },
                x = function (t) {
                    const startInterval = () => {
                        y = setInterval(checkConfirmation.bind(null, t, !0), 1e3)
                    };
                    this.requestManager.provider.on ? A.subscribe("newBlockHeaders", (function (e, r, n) {
                        e || !r ? startInterval() : checkConfirmation(t, !1, e, 0, n)
                    })) : startInterval()
                }.bind(this);
            A.getTransactionReceipt(e).then((function (e) {
                e && e.blockHash ? (t.eventEmitter.listeners("confirmation").length > 0 && x(e), checkConfirmation(e, !1)) : h || x()
            })).catch((function () {
                h || x()
            }))
        };
        var getWallet = function (t, e) {
            return "number" == typeof t ? e.wallet[t] : t && "object" == typeof t && t.address && t.privateKey ? t : e.wallet[t.toLowerCase()]
        };

        function _handleTxType(t) {
            const e = void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas;
            let r;
            if (r = void 0 !== t.type ? o.toHex(t.type) : void 0 === t.type && e ? "0x2" : "0x0", void 0 !== t.gasPrice && ("0x2" === r || e)) throw Error("eip-1559 transactions don't support gasPrice");
            if (("0x1" === r || "0x0" === r) && e) throw Error("pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas");
            return e || t.common && t.common.hardfork && t.common.hardfork.toLowerCase() === u.London || t.hardfork && t.hardfork.toLowerCase() === u.London ? r = "0x2" : (t.accessList || t.common && t.common.hardfork && t.common.hardfork.toLowerCase() === u.Berlin || t.hardfork && t.hardfork.toLowerCase() === u.Berlin) && (r = "0x1"), r
        }

        function _handleTxPricing(t, e) {
            return new Promise((r, n) => {
                try {
                    var i = new l({
                            name: "getBlockByNumber",
                            call: "eth_getBlockByNumber",
                            params: 2,
                            inputFormatter: [function (t) {
                                return t ? o.toHex(t) : "latest"
                            }, function () {
                                return !1
                            }]
                        }).createFunction(t.requestManager),
                        a = new l({
                            name: "getGasPrice",
                            call: "eth_gasPrice",
                            params: 0
                        }).createFunction(t.requestManager);
                    e.type < "0x2" && void 0 !== e.gasPrice ? r({
                        gasPrice: e.gasPrice
                    }) : Promise.all([i(), a()]).then(t => {
                        const [n, i] = t;
                        if ("0x2" === e.type && n && n.baseFeePerGas) {
                            let t, i;
                            e.gasPrice ? (t = e.gasPrice, i = e.gasPrice, delete e.gasPrice) : (t = e.maxPriorityFeePerGas || "0x3B9ACA00", i = e.maxFeePerGas || o.toHex(o.toBN(n.baseFeePerGas).mul(o.toBN(2)).add(o.toBN(t)))), r({
                                maxFeePerGas: i,
                                maxPriorityFeePerGas: t
                            })
                        } else {
                            if (e.maxPriorityFeePerGas || e.maxFeePerGas) throw Error("Network doesn't support eip-1559");
                            r({
                                gasPrice: i
                            })
                        }
                    })
                } catch (t) {
                    n(t)
                }
            })
        }
        l.prototype.buildCall = function () {
            var t = this,
                e = "eth_sendTransaction" === t.call || "eth_sendRawTransaction" === t.call,
                r = "eth_call" === t.call,
                send = function () {
                    var i = a(!e),
                        s = t.toPayload(Array.prototype.slice.call(arguments)),
                        sendTxCallback = function (a, u) {
                            var c;
                            if (t.handleRevert && r && t.abiCoder && (!a && t.isRevertReasonString(u) ? c = u.substring(10) : a && a.data && (c = a.data.substring(10)), c)) {
                                var l = t.abiCoder.decodeParameter("string", "0x" + c);
                                return void o._fireError(n.RevertInstructionError(l, "Error(String)"), i.eventEmitter, i.reject, s.callback, {
                                    reason: l,
                                    signature: "Error(String)"
                                })
                            }
                            try {
                                u = t.formatOutput(u)
                            } catch (t) {
                                a = t
                            }
                            if (u instanceof Error && (a = u), a) return a.error && (a = a.error), o._fireError(a, i.eventEmitter, i.reject, s.callback);
                            s.callback && s.callback(null, u), e ? (i.eventEmitter.emit("transactionHash", u), t._confirmTransaction(i, u, s)) : a || i.resolve(u)
                        },
                        sendSignedTx = function (e) {
                            var r = {
                                ...s,
                                method: "eth_sendRawTransaction",
                                params: [e.rawTransaction]
                            };
                            t.requestManager.send(r, sendTxCallback)
                        },
                        sendRequest = function (t, e) {
                            var r;
                            if (e && e.accounts && e.accounts.wallet && e.accounts.wallet.length)
                                if ("eth_sendTransaction" === t.method) {
                                    var n = t.params[0];
                                    if ((r = getWallet(n && "object" == typeof n ? n.from : null, e.accounts)) && r.privateKey) return delete(n = JSON.parse(JSON.stringify(n))).from, e.defaultChain && !n.chain && (n.chain = e.defaultChain), e.defaultHardfork && !n.hardfork && (n.hardfork = e.defaultHardfork), e.defaultCommon && !n.common && (n.common = e.defaultCommon), void e.accounts.signTransaction(n, r.privateKey).then(sendSignedTx).catch((function (t) {
                                        if ("function" == typeof i.eventEmitter.listeners && i.eventEmitter.listeners("error").length) {
                                            try {
                                                i.eventEmitter.emit("error", t)
                                            } catch (t) {}
                                            i.eventEmitter.removeAllListeners(), i.eventEmitter.catch((function () {}))
                                        }
                                        i.reject(t)
                                    }))
                                } else if ("eth_sign" === t.method) {
                                var o = t.params[1];
                                if ((r = getWallet(t.params[0], e.accounts)) && r.privateKey) {
                                    var a = e.accounts.sign(o, r.privateKey);
                                    return t.callback && t.callback(null, a.signature), void i.resolve(a.signature)
                                }
                            }
                            return e.requestManager.send(t, sendTxCallback)
                        };
                    return e && s.params[0] && "object" == typeof s.params[0] && void 0 === s.params[0].gasPrice && (void 0 === s.params[0].maxPriorityFeePerGas || void 0 === s.params[0].maxFeePerGas) ? (void 0 === s.params[0].type && (s.params[0].type = _handleTxType(s.params[0])), _handleTxPricing(t, s.params[0]).then(r => {
                        void 0 !== r.gasPrice ? s.params[0].gasPrice = r.gasPrice : void 0 !== r.maxPriorityFeePerGas && void 0 !== r.maxFeePerGas && (s.params[0].maxPriorityFeePerGas = r.maxPriorityFeePerGas, s.params[0].maxFeePerGas = r.maxFeePerGas), e && setTimeout(() => {
                            i.eventEmitter.emit("sending", s)
                        }, 0), sendRequest(s, t)
                    })) : (e && setTimeout(() => {
                        i.eventEmitter.emit("sending", s)
                    }, 0), sendRequest(s, t)), e && setTimeout(() => {
                        i.eventEmitter.emit("sent", s)
                    }, 0), i.eventEmitter
                };
            return send.method = t, send.request = this.request.bind(this), send
        }, l.prototype.getRevertReason = function (t, e) {
            var r = this;
            return new Promise((function (n, i) {
                new l({
                    name: "call",
                    call: "eth_call",
                    params: 2,
                    abiCoder: r.abiCoder,
                    handleRevert: !0
                }).createFunction(r.requestManager)(t, o.numberToHex(e)).then((function () {
                    n(!1)
                })).catch((function (t) {
                    t.reason ? n({
                        reason: t.reason,
                        signature: t.signature
                    }) : i(t)
                }))
            }))
        }, l.prototype.isRevertReasonString = function (t) {
            return "string" == typeof t && (t.length - 2) / 2 % 32 == 4 && "0x08c379a0" === t.substring(0, 10)
        }, l.prototype.request = function () {
            var t = this.toPayload(Array.prototype.slice.call(arguments));
            return t.format = this.formatOutput.bind(this), t
        }, t.exports = l
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.debtCeiling = function debtCeiling(t) {
            return s.DAI.rad(t)
        }, e.liquidationPenalty = function liquidationPenalty(t) {
            return new i.default(t.toString()).dividedBy(a.WAD).minus(1).toNumber()
        }, e.liquidationRatio = function liquidationRatio(t) {
            return (0, o.createCurrencyRatio)(s.USD, s.DAI)(new i.default(t.toString()).dividedBy(a.RAY).toString())
        }, e.price = function price(t, e, r, n) {
            e = new i.default(e.toString()).dividedBy(a.RAY), r = new i.default(r.toString()).dividedBy(a.RAY);
            var u = (0, o.createCurrencyRatio)(s.USD, t),
                c = r.times(e).times(n.toNumber());
            return u(c)
        }, e.annualStabilityFee = function annualStabilityFee(t) {
            return t = new i.default(t.toString()).dividedBy(a.RAY), i.default.config({
                POW_PRECISION: 100
            }), t.pow(31536e3).minus(1).toNumber()
        }, e.collateralAmount = function collateralAmount(t, e) {
            return t.wei(e)
        }, e.collateralValue = function collateralValue(t, e) {
            return t.times(e)
        }, e.debtValue = function debtValue(t, e) {
            return (t = s.DAI.wei(t)).times(e).shiftedBy(-27)
        }, e.collateralizationRatio = function collateralizationRatio(t, e) {
            if (e.eq(0)) {
                return (0, o.createCurrencyRatio)(s.USD, s.DAI)(1 / 0)
            }
            return t.div(e)
        }, e.liquidationPrice = function liquidationPrice(t, e, r) {
            if (t.eq(0)) {
                return (0, o.createCurrencyRatio)(s.USD, t.type)(1 / 0)
            }
            return e.times(r).div(t)
        }, e.minSafeCollateralAmount = function minSafeCollateralAmount(t, e, r) {
            return t.times(e).div(r)
        }, e.daiAvailable = function daiAvailable(t, e, r) {
            var n = t.div(r);
            return e.lt(n) ? (0, s.DAI)(n.minus(e)) : (0, s.DAI)(0)
        };
        var i = n(r(40)),
            o = r(110),
            a = r(30),
            s = r(33)
    }, function (t, e) {
        var r = RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");
        t.exports = function hasUnicode(t) {
            return r.test(t)
        }
    }, function (t, e, r) {
        var n = r(899),
            i = r(204),
            o = r(900);
        t.exports = function stringSize(t) {
            return i(t) ? o(t) : n(t)
        }
    }, function (t, e) {
        t.exports = function _arrayLikeToArray(t, e) {
            (null == e || e > t.length) && (e = t.length);
            for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
            return n
        }
    }, function (t, e, r) {
        var n = r(206);
        t.exports = function _unsupportedIterableToArray(t, e) {
            if (t) {
                if ("string" == typeof t) return n(t, e);
                var r = Object.prototype.toString.call(t).slice(8, -1);
                return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? n(t, e) : void 0
            }
        }
    }, function (t, e, r) {
        var n = r(74),
            i = r(102);
        t.exports = function isFunction(t) {
            if (!i(t)) return !1;
            var e = n(t);
            return "[object Function]" == e || "[object GeneratorFunction]" == e || "[object AsyncFunction]" == e || "[object Proxy]" == e
        }
    }, function (t, e, r) {
        (function (e) {
            var r = "object" == typeof e && e && e.Object === Object && e;
            t.exports = r
        }).call(this, r(6))
    }, function (t, e) {
        var r = Function.prototype.toString;
        t.exports = function toSource(t) {
            if (null != t) {
                try {
                    return r.call(t)
                } catch (t) {}
                try {
                    return t + ""
                } catch (t) {}
            }
            return ""
        }
    }, function (t, e, r) {
        var n = r(366),
            i = r(103);
        t.exports = function baseForOwn(t, e) {
            return t && n(t, e, i)
        }
    }, function (t, e) {
        t.exports = function baseTimes(t, e) {
            for (var r = -1, n = Array(t); ++r < t;) n[r] = e(r);
            return n
        }
    }, function (t, e, r) {
        (function (t) {
            var n = r(34),
                i = r(370),
                o = e && !e.nodeType && e,
                a = o && "object" == typeof t && t && !t.nodeType && t,
                s = a && a.exports === o ? n.Buffer : void 0,
                u = (s ? s.isBuffer : void 0) || i;
            t.exports = u
        }).call(this, r(8)(t))
    }, function (t, e) {
        var r = /^(?:0|[1-9]\d*)$/;
        t.exports = function isIndex(t, e) {
            var n = typeof t;
            return !!(e = null == e ? 9007199254740991 : e) && ("number" == n || "symbol" != n && r.test(t)) && t > -1 && t % 1 == 0 && t < e
        }
    }, function (t, e, r) {
        var n = r(371),
            i = r(216),
            o = r(372),
            a = o && o.isTypedArray,
            s = a ? i(a) : n;
        t.exports = s
    }, function (t, e) {
        t.exports = function baseUnary(t) {
            return function (e) {
                return t(e)
            }
        }
    }, function (t, e, r) {
        var n = r(105),
            i = r(384),
            o = r(385),
            a = r(386),
            s = r(387),
            u = r(388);

        function Stack(t) {
            var e = this.__data__ = new n(t);
            this.size = e.size
        }
        Stack.prototype.clear = i, Stack.prototype.delete = o, Stack.prototype.get = a, Stack.prototype.has = s, Stack.prototype.set = u, t.exports = Stack
    }, function (t, e) {
        t.exports = function eq(t, e) {
            return t === e || t != t && e != e
        }
    }, function (t, e, r) {
        var n = r(401),
            i = r(76);
        t.exports = function baseIsEqual(t, e, r, o, a) {
            return t === e || (null == t || null == e || !i(t) && !i(e) ? t != t && e != e : n(t, e, r, o, baseIsEqual, a))
        }
    }, function (t, e, r) {
        var n = r(221),
            i = r(404),
            o = r(222);
        t.exports = function equalArrays(t, e, r, a, s, u) {
            var c = 1 & r,
                l = t.length,
                h = e.length;
            if (l != h && !(c && h > l)) return !1;
            var d = u.get(t);
            if (d && u.get(e)) return d == e;
            var p = -1,
                m = !0,
                y = 2 & r ? new n : void 0;
            for (u.set(t, e), u.set(e, t); ++p < l;) {
                var b = t[p],
                    g = e[p];
                if (a) var v = c ? a(g, b, p, e, t, u) : a(b, g, p, t, e, u);
                if (void 0 !== v) {
                    if (v) continue;
                    m = !1;
                    break
                }
                if (y) {
                    if (!i(e, (function (t, e) {
                            if (!o(y, e) && (b === t || s(b, t, r, a, u))) return y.push(e)
                        }))) {
                        m = !1;
                        break
                    }
                } else if (b !== g && !s(b, g, r, a, u)) {
                    m = !1;
                    break
                }
            }
            return u.delete(t), u.delete(e), m
        }
    }, function (t, e, r) {
        var n = r(146),
            i = r(402),
            o = r(403);

        function SetCache(t) {
            var e = -1,
                r = null == t ? 0 : t.length;
            for (this.__data__ = new n; ++e < r;) this.add(t[e])
        }
        SetCache.prototype.add = SetCache.prototype.push = i, SetCache.prototype.has = o, t.exports = SetCache
    }, function (t, e) {
        t.exports = function cacheHas(t, e) {
            return t.has(e)
        }
    }, function (t, e) {
        t.exports = function arrayPush(t, e) {
            for (var r = -1, n = e.length, i = t.length; ++r < n;) t[i + r] = e[r];
            return t
        }
    }, function (t, e, r) {
        var n = r(44)(r(34), "Set");
        t.exports = n
    }, function (t, e, r) {
        var n = r(102);
        t.exports = function isStrictComparable(t) {
            return t == t && !n(t)
        }
    }, function (t, e) {
        t.exports = function matchesStrictComparable(t, e) {
            return function (r) {
                return null != r && (r[t] === e && (void 0 !== e || t in Object(r)))
            }
        }
    }, function (t, e, r) {
        var n = r(228),
            i = r(109);
        t.exports = function baseGet(t, e) {
            for (var r = 0, o = (e = n(e, t)).length; null != t && r < o;) t = t[i(e[r++])];
            return r && r == o ? t : void 0
        }
    }, function (t, e, r) {
        var n = r(22),
            i = r(148),
            o = r(421),
            a = r(149);
        t.exports = function castPath(t, e) {
            return n(t) ? t : i(t, e) ? [t] : o(a(t))
        }
    }, function (t, e, r) {
        var n = r(75),
            i = r(150),
            o = r(22),
            a = r(77),
            s = n ? n.prototype : void 0,
            u = s ? s.toString : void 0;
        t.exports = function baseToString(t) {
            if ("string" == typeof t) return t;
            if (o(t)) return i(t, baseToString) + "";
            if (a(t)) return u ? u.call(t) : "";
            var e = t + "";
            return "0" == e && 1 / t == -1 / 0 ? "-0" : e
        }
    }, function (t, e, r) {
        var n = r(228),
            i = r(142),
            o = r(22),
            a = r(214),
            s = r(143),
            u = r(109);
        t.exports = function hasPath(t, e, r) {
            for (var c = -1, l = (e = n(e, t)).length, h = !1; ++c < l;) {
                var d = u(e[c]);
                if (!(h = null != t && r(t, d))) break;
                t = t[d]
            }
            return h || ++c != l ? h : !!(l = null == t ? 0 : t.length) && s(l) && a(d, l) && (o(t) || i(t))
        }
    }, function (t, e) {
        t.exports = function baseProperty(t) {
            return function (e) {
                return null == e ? void 0 : e[t]
            }
        }
    }, function (t, e, r) {
        var n = r(211),
            i = r(430)(n);
        t.exports = i
    }, function (t, e, r) {
        var n = r(221),
            i = r(433),
            o = r(438),
            a = r(222),
            s = r(439),
            u = r(147);
        t.exports = function baseUniq(t, e, r) {
            var c = -1,
                l = i,
                h = t.length,
                d = !0,
                p = [],
                m = p;
            if (r) d = !1, l = o;
            else if (h >= 200) {
                var y = e ? null : s(t);
                if (y) return u(y);
                d = !1, l = a, m = new n
            } else m = e ? [] : p;
            t: for (; ++c < h;) {
                var b = t[c],
                    g = e ? e(b) : b;
                if (b = r || 0 !== b ? b : 0, d && g == g) {
                    for (var v = m.length; v--;)
                        if (m[v] === g) continue t;
                    e && m.push(g), p.push(b)
                } else l(m, g, r) || (m !== p && m.push(g), p.push(b))
            }
            return p
        }
    }, function (t, e, r) {
        t.exports = {
            default: r(441),
            __esModule: !0
        }
    }, function (t, e, r) {
        t.exports = !r(39) && !r(62)((function () {
            return 7 != Object.defineProperty(r(236)("div"), "a", {
                get: function () {
                    return 7
                }
            }).a
        }))
    }, function (t, e, r) {
        var n = r(61),
            i = r(37).document,
            o = n(i) && n(i.createElement);
        t.exports = function (t) {
            return o ? i.createElement(t) : {}
        }
    }, function (t, e, r) {
        var n = r(46),
            i = r(63),
            o = r(445)(!1),
            a = r(157)("IE_PROTO");
        t.exports = function (t, e) {
            var r, s = i(t),
                u = 0,
                c = [];
            for (r in s) r != a && n(s, r) && c.push(r);
            for (; e.length > u;) n(s, r = e[u++]) && (~o(c, r) || c.push(r));
            return c
        }
    }, function (t, e, r) {
        var n = r(154);
        t.exports = Object("z").propertyIsEnumerable(0) ? Object : function (t) {
            return "String" == n(t) ? t.split("") : Object(t)
        }
    }, function (t, e, r) {
        var n = r(156),
            i = Math.min;
        t.exports = function (t) {
            return t > 0 ? i(n(t), 9007199254740991) : 0
        }
    }, function (t, e, r) {
        t.exports = {
            default: r(447),
            __esModule: !0
        }
    }, function (t, e, r) {
        var n = r(46),
            i = r(79),
            o = r(157)("IE_PROTO"),
            a = Object.prototype;
        t.exports = Object.getPrototypeOf || function (t) {
            return t = i(t), n(t, o) ? t[o] : "function" == typeof t.constructor && t instanceof t.constructor ? t.constructor.prototype : t instanceof Object ? a : null
        }
    }, function (t, e, r) {
        e.__esModule = !0, e.default = function (t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
        }
    }, function (t, e, r) {
        e.__esModule = !0;
        var n = function _interopRequireDefault(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(r(244));
        e.default = function (t, e) {
            if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !e || "object" !== (void 0 === e ? "undefined" : (0, n.default)(e)) && "function" != typeof e ? t : e
        }
    }, function (t, e, r) {
        e.__esModule = !0;
        var n = _interopRequireDefault(r(450)),
            i = _interopRequireDefault(r(459)),
            o = "function" == typeof i.default && "symbol" == typeof n.default ? function (t) {
                return typeof t
            } : function (t) {
                return t && "function" == typeof i.default && t.constructor === i.default && t !== i.default.prototype ? "symbol" : typeof t
            };

        function _interopRequireDefault(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        e.default = "function" == typeof i.default && "symbol" === o(n.default) ? function (t) {
            return void 0 === t ? "undefined" : o(t)
        } : function (t) {
            return t && "function" == typeof i.default && t.constructor === i.default && t !== i.default.prototype ? "symbol" : void 0 === t ? "undefined" : o(t)
        }
    }, function (t, e, r) {
        var n = r(112),
            i = r(36),
            o = r(246),
            a = r(60),
            s = r(80),
            u = r(453),
            c = r(163),
            l = r(241),
            h = r(27)("iterator"),
            d = !([].keys && "next" in [].keys()),
            returnThis = function () {
                return this
            };
        t.exports = function (t, e, r, p, m, y, b) {
            u(r, e, p);
            var g, v, w, getMethod = function (t) {
                    if (!d && t in B) return B[t];
                    switch (t) {
                        case "keys":
                            return function keys() {
                                return new r(this, t)
                            };
                        case "values":
                            return function values() {
                                return new r(this, t)
                            }
                    }
                    return function entries() {
                        return new r(this, t)
                    }
                },
                M = e + " Iterator",
                A = "values" == m,
                x = !1,
                B = t.prototype,
                E = B[h] || B["@@iterator"] || m && B[m],
                k = E || getMethod(m),
                N = m ? A ? getMethod("entries") : k : void 0,
                T = "Array" == e && B.entries || E;
            if (T && (w = l(T.call(new t))) !== Object.prototype && w.next && (c(w, M, !0), n || "function" == typeof w[h] || a(w, h, returnThis)), A && E && "values" !== E.name && (x = !0, k = function values() {
                    return E.call(this)
                }), n && !b || !d && !x && B[h] || a(B, h, k), s[e] = k, s[M] = returnThis, m)
                if (g = {
                        values: A ? k : getMethod("values"),
                        keys: y ? k : getMethod("keys"),
                        entries: N
                    }, b)
                    for (v in g) v in B || o(B, v, g[v]);
                else i(i.P + i.F * (d || x), e, g);
            return g
        }
    }, function (t, e, r) {
        t.exports = r(60)
    }, function (t, e, r) {
        r(456);
        for (var n = r(37), i = r(60), o = r(80), a = r(27)("toStringTag"), s = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","), u = 0; u < s.length; u++) {
            var c = s[u],
                l = n[c],
                h = l && l.prototype;
            h && !h[a] && i(h, a, c), o[c] = o.Array
        }
    }, function (t, e, r) {
        var n = r(237),
            i = r(159).concat("length", "prototype");
        e.f = Object.getOwnPropertyNames || function getOwnPropertyNames(t) {
            return n(t, i)
        }
    }, function (t, e, r) {
        var n = r(114),
            i = r(78),
            o = r(63),
            a = r(153),
            s = r(46),
            u = r(235),
            c = Object.getOwnPropertyDescriptor;
        e.f = r(39) ? c : function getOwnPropertyDescriptor(t, e) {
            if (t = o(t), e = a(e, !0), u) try {
                return c(t, e)
            } catch (t) {}
            if (s(t, e)) return i(!n.f.call(t, e), t[e])
        }
    }, function (t, e, r) {
        e.__esModule = !0;
        var n = _interopRequireDefault(r(469)),
            i = _interopRequireDefault(r(473)),
            o = _interopRequireDefault(r(244));

        function _interopRequireDefault(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        e.default = function (t, e) {
            if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === e ? "undefined" : (0, o.default)(e)));
            t.prototype = (0, i.default)(e && e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), e && (n.default ? (0, n.default)(t, e) : t.__proto__ = e)
        }
    }, function (t, e, r) {
        var n = r(480),
            i = r(27)("iterator"),
            o = r(80);
        t.exports = r(13).getIteratorMethod = function (t) {
            if (null != t) return t[i] || t["@@iterator"] || o[n(t)]
        }
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"vat_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"ilk","type":"bytes32"},{"indexed":true,"internalType":"address","name":"urn","type":"address"},{"indexed":false,"internalType":"uint256","name":"ink","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"art","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tab","type":"uint256"},{"indexed":false,"internalType":"address","name":"flip","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"}],"name":"Bite","type":"event"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"address","name":"urn","type":"address"}],"name":"bite","outputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"box","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"rad","type":"uint256"}],"name":"claw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"data","type":"address"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"flip","type":"address"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"ilks","outputs":[{"internalType":"address","name":"flip","type":"address"},{"internalType":"uint256","name":"chop","type":"uint256"},{"internalType":"uint256","name":"dunk","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"litter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"live","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vow","outputs":[{"internalType":"contract VowLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"vat_","type":"address"},{"internalType":"bytes32","name":"ilk_","type":"bytes32"},{"internalType":"address","name":"gem_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":false,"inputs":[],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"dec","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"gem","outputs":[{"internalType":"contract GemLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ilk","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"urn","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"join","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"live","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = function standardizeConfig(t, e, r) {
            if (e instanceof Array) return "boolean" == typeof e[0] && r ? [resolveNameForBoolean(t, e[0], r), e[1]] : e;
            var n, o;
            switch ((0, i.default)(e)) {
                case "string":
                case "function":
                    n = e, o = {};
                    break;
                case "object":
                    n = !r || resolveNameForBoolean(t, !0, r), o = e;
                    break;
                case "boolean":
                    n = r ? resolveNameForBoolean(t, e, r) : e, o = {};
                    break;
                default:
                    throw new Error("could not parse settings for ".concat(t, ":"), e)
            }
            return [n, o]
        };
        var i = n(r(47));

        function resolveNameForBoolean(t, e, r) {
            var n, i = r.defaults,
                o = r.disabled;
            if (e) {
                if (!(n = i[t])) throw new Error('The "'.concat(t, '" service has no default'))
            } else if (!(n = o[t])) throw new Error('The "'.concat(t, '" service cannot be disabled'));
            return n
        }
    }, function (t, e, r) {
        var n = r(233);
        t.exports = function uniq(t) {
            return t && t.length ? n(t) : []
        }
    }, function (t, e, r) {
        var n = r(64),
            i = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.orderServices = orderServices, Object.defineProperty(e, "InvalidServiceError", {
            enumerable: !0,
            get: function get() {
                return y.InvalidServiceError
            }
        }), e.ServiceNotFoundError = e.ServiceAlreadyRegisteredError = e.ExtractedServiceError = e.default = void 0;
        var o = i(r(28)),
            a = i(r(29)),
            s = i(r(11)),
            u = i(r(9)),
            c = i(r(24)),
            l = i(r(14)),
            h = i(r(23)),
            d = i(r(168)),
            p = i(r(545)),
            m = i(r(255)),
            y = n(r(169)),
            b = i(r(553)),
            g = function (t) {
                function ServiceAlreadyRegisteredError(t) {
                    return (0, u.default)(this, ServiceAlreadyRegisteredError), (0, c.default)(this, (0, l.default)(ServiceAlreadyRegisteredError).call(this, "Service with name '" + t + "' is already registered with this container."))
                }
                return (0, h.default)(ServiceAlreadyRegisteredError, t), ServiceAlreadyRegisteredError
            }((0, d.default)(Error));
        e.ServiceAlreadyRegisteredError = g;
        var v = function (t) {
            function ServiceNotFoundError(t) {
                return (0, u.default)(this, ServiceNotFoundError), (0, c.default)(this, (0, l.default)(ServiceNotFoundError).call(this, "Service with name '" + t + "' cannot be found in this container."))
            }
            return (0, h.default)(ServiceNotFoundError, t), ServiceNotFoundError
        }((0, d.default)(Error));
        e.ServiceNotFoundError = v;
        var w = function (t) {
            function ExtractedServiceError(t) {
                return (0, u.default)(this, ExtractedServiceError), (0, c.default)(this, (0, l.default)(ExtractedServiceError).call(this, "Service with name '" + t + "' has been extracted from the core dai.js library into a discrete plugin. Please refer to the documentation here to install and add it to your configuration: \n\n https://github.com/makerdao/dai.js/wiki/Basic-Usage-(Plugins) \n\n"))
            }
            return (0, h.default)(ExtractedServiceError, t), ExtractedServiceError
        }((0, d.default)(Error));

        function orderServices(t) {
            var e = [],
                r = [],
                n = !0,
                i = !1,
                o = void 0;
            try {
                for (var a, s = function _loop() {
                        var t = a.value,
                            n = t.manager().name(),
                            i = t.manager().dependencies();
                        0 === i.length ? r.push(n) : i.forEach((function (t) {
                            return e.push([t, n])
                        }))
                    }, u = t[Symbol.iterator](); !(n = (a = u.next()).done); n = !0) s()
            } catch (t) {
                i = !0, o = t
            } finally {
                try {
                    n || null == u.return || u.return()
                } finally {
                    if (i) throw o
                }
            }
            return (0, m.default)((0, b.default)(e).concat(r))
        }
        e.ExtractedServiceError = w;
        var M = function () {
            function Container() {
                (0, u.default)(this, Container), this._services = {}, this.isAuthenticated = !1
            }
            var t;
            return (0, s.default)(Container, [{
                key: "register",
                value: function register(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    if (!y.default.isValidService(t)) throw new y.InvalidServiceError("Service must be an object with manager() method returning a valid ServiceManager");
                    e = e || t.manager().name();
                    var r = this.service(e, !1);
                    if (void 0 !== r && r !== t) throw new g(e);
                    return this._services[e] = t, this
                }
            }, {
                key: "service",
                value: function service(t) {
                    var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                        r = ["exchange"];
                    if (!t) throw new Error("Provide a service name.");
                    if (!this._services[t] && e && r.includes(t)) throw new w(t);
                    if (!this._services[t] && e) throw new v(t);
                    return this._services[t]
                }
            }, {
                key: "getRegisteredServiceNames",
                value: function getRegisteredServiceNames() {
                    return Object.keys(this._services)
                }
            }, {
                key: "injectDependencies",
                value: function injectDependencies() {
                    var t = (0, p.default)(this._services),
                        e = !0,
                        r = !1,
                        n = void 0;
                    try {
                        for (var i, o = t[Symbol.iterator](); !(e = (i = o.next()).done); e = !0) {
                            var a = i.value.manager(),
                                s = !0,
                                u = !1,
                                c = void 0;
                            try {
                                for (var l, h = a.dependencies()[Symbol.iterator](); !(s = (l = h.next()).done); s = !0) {
                                    var d = l.value;
                                    if (!this._services[d]) throw new v(d);
                                    a.inject(d, this._services[d])
                                }
                            } catch (t) {
                                u = !0, c = t
                            } finally {
                                try {
                                    s || null == h.return || h.return()
                                } finally {
                                    if (u) throw c
                                }
                            }
                        }
                    } catch (t) {
                        r = !0, n = t
                    } finally {
                        try {
                            e || null == o.return || o.return()
                        } finally {
                            if (r) throw n
                        }
                    }
                }
            }, {
                key: "initialize",
                value: function initialize() {
                    return this._waitForServices((function (t) {
                        return t.manager().initialize()
                    }))
                }
            }, {
                key: "connect",
                value: function connect() {
                    return this._waitForServices((function (t) {
                        return t.manager().connect()
                    }))
                }
            }, {
                key: "authenticate",
                value: function authenticate() {
                    var t = this;
                    return this._waitForServices((function (t) {
                        return t.manager().authenticate()
                    })).then((function () {
                        t.isAuthenticated = !0
                    }))
                }
            }, {
                key: "_waitForServices",
                value: (t = (0, a.default)(o.default.mark((function _callee(t) {
                    var e, r, n, i, a, s;
                    return o.default.wrap((function _callee$(o) {
                        for (;;) switch (o.prev = o.next) {
                            case 0:
                                this._orderedServiceNames || (this._orderedServiceNames = orderServices((0, p.default)(this._services))), e = !0, r = !1, n = void 0, o.prev = 4, i = this._orderedServiceNames[Symbol.iterator]();
                            case 6:
                                if (e = (a = i.next()).done) {
                                    o.next = 16;
                                    break
                                }
                                if (s = a.value, this._services[s]) {
                                    o.next = 11;
                                    break
                                }
                                throw new Error("No service for ".concat(s));
                            case 11:
                                return o.next = 13, t(this._services[s]);
                            case 13:
                                e = !0, o.next = 6;
                                break;
                            case 16:
                                o.next = 22;
                                break;
                            case 18:
                                o.prev = 18, o.t0 = o.catch(4), r = !0, n = o.t0;
                            case 22:
                                o.prev = 22, o.prev = 23, e || null == i.return || i.return();
                            case 25:
                                if (o.prev = 25, !r) {
                                    o.next = 28;
                                    break
                                }
                                throw n;
                            case 28:
                                return o.finish(25);
                            case 29:
                                return o.finish(22);
                            case 30:
                            case "end":
                                return o.stop()
                        }
                    }), _callee, this, [
                        [4, 18, 22, 30],
                        [23, , 25, 29]
                    ])
                }))), function _waitForServices(e) {
                    return t.apply(this, arguments)
                })
            }]), Container
        }();
        e.default = M
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = e.IllegalStateError = void 0;
        var i = n(r(47)),
            o = n(r(11)),
            a = n(r(9)),
            s = n(r(24)),
            u = n(r(14)),
            c = n(r(23)),
            l = function (t) {
                function IllegalStateError() {
                    return (0, a.default)(this, IllegalStateError), (0, s.default)(this, (0, u.default)(IllegalStateError).apply(this, arguments))
                }
                return (0, c.default)(IllegalStateError, t), IllegalStateError
            }((0, n(r(168)).default)(Error));
        e.IllegalStateError = l;
        var h = function () {
            function StateMachine(t, e) {
                if ((0, a.default)(this, StateMachine), "object" !== (0, i.default)(e)) throw new Error("StateMachine transitions parameter must be an object.");
                if (Object.keys(e).filter((function (t) {
                        return e.hasOwnProperty(t) && !(e[t] instanceof Array)
                    })).length > 0) throw new Error("Illegal StateMachine transition found: not an array.");
                if (Object.keys(e).filter((function (t) {
                        return e.hasOwnProperty(t) && e[t].filter((function (t) {
                            return !e[t]
                        })).length > 0
                    })).length > 0) throw new Error("Illegal StateMachine transition found: target state not in transition map.");
                if (!(e[t] instanceof Array)) throw new Error("Initial state " + t + " is not set in the transitions map.");
                this._state = t, this._nextStates = e, this._stateChangedHandlers = []
            }
            return (0, o.default)(StateMachine, [{
                key: "onStateChanged",
                value: function onStateChanged(t) {
                    this._stateChangedHandlers.push(t)
                }
            }, {
                key: "state",
                value: function state() {
                    return this._state
                }
            }, {
                key: "inState",
                value: function inState(t) {
                    return t instanceof Array || (t = [t]), t.indexOf(this._state) >= 0
                }
            }, {
                key: "assertState",
                value: function assertState(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
                    if (!this.inState(t)) throw new l("Illegal operation for state " + this._state + (e.length > 0 ? ": " + e : ""))
                }
            }, {
                key: "transitionTo",
                value: function transitionTo(t) {
                    if (void 0 === this._nextStates[t]) throw new l("Cannot set illegal state: " + t);
                    if (t !== this._state) {
                        if (this._nextStates[this._state].indexOf(t) < 0) throw new l("Illegal state transition: " + this._state + " to " + t);
                        var e = this._state;
                        this._state = t, this._stateChangedHandlers.forEach((function (r) {
                            return r(e, t)
                        }))
                    }
                    return this
                }
            }]), StateMachine
        }();
        e.default = h
    }, function (t, e) {
        var r = {}.toString;
        t.exports = Array.isArray || function (t) {
            return "[object Array]" == r.call(t)
        }
    }, function (t, e, r) {
        var n = r(260);
        t.exports = function stripHexPrefix(t) {
            return "string" != typeof t ? t : n(t) ? t.slice(2) : t
        }
    }, function (t, e) {
        t.exports = function isHexPrefixed(t) {
            if ("string" != typeof t) throw new Error("[is-hex-prefixed] value must be type 'string', is currently type " + typeof t + ", while checking isHexPrefixed.");
            return "0x" === t.slice(0, 2)
        }
    }, function (t, e, r) {
        (function (e) {
            var n = r(117),
                i = r(49),
                o = r(66),
                a = r(50),
                s = r(67),
                isBN = function (t) {
                    return n.isBN(t)
                },
                isBigNumber = function (t) {
                    return t && t.constructor && "BigNumber" === t.constructor.name
                },
                toBN = function (t) {
                    try {
                        return i.apply(null, arguments)
                    } catch (e) {
                        throw new Error(e + ' Given value: "' + t + '"')
                    }
                },
                isAddress = function (t) {
                    return !!/^(0x)?[0-9a-f]{40}$/i.test(t) && (!(!/^(0x|0X)?[0-9a-f]{40}$/.test(t) && !/^(0x|0X)?[0-9A-F]{40}$/.test(t)) || checkAddressChecksum(t))
                },
                checkAddressChecksum = function (t) {
                    t = t.replace(/^0x/i, "");
                    for (var e = sha3(t.toLowerCase()).replace(/^0x/i, ""), r = 0; r < 40; r++)
                        if (parseInt(e[r], 16) > 7 && t[r].toUpperCase() !== t[r] || parseInt(e[r], 16) <= 7 && t[r].toLowerCase() !== t[r]) return !1;
                    return !0
                },
                utf8ToHex = function (t) {
                    var e = "";
                    t = (t = (t = (t = (t = o.encode(t)).replace(/^(?:\u0000)*/, "")).split("").reverse().join("")).replace(/^(?:\u0000)*/, "")).split("").reverse().join("");
                    for (var r = 0; r < t.length; r++) {
                        var n = t.charCodeAt(r).toString(16);
                        e += n.length < 2 ? "0" + n : n
                    }
                    return "0x" + e
                },
                hexToNumber = function (t) {
                    if (!t) return t;
                    if ("string" == typeof t && !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    return toBN(t).toNumber()
                },
                numberToHex = function (t) {
                    if (null == t) return t;
                    if (!isFinite(t) && !isHexStrict(t)) throw new Error('Given input "' + t + '" is not a number.');
                    var e = toBN(t),
                        r = e.toString(16);
                    return e.lt(new n(0)) ? "-0x" + r.substr(1) : "0x" + r
                },
                hexToBytes = function (t) {
                    if (t = t.toString(16), !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    t = t.replace(/^0x/i, "");
                    for (var e = [], r = 0; r < t.length; r += 2) e.push(parseInt(t.substr(r, 2), 16));
                    return e
                },
                toHex = function (t, r) {
                    if (isAddress(t)) return r ? "address" : "0x" + t.toLowerCase().replace(/^0x/i, "");
                    if ("boolean" == typeof t) return r ? "bool" : t ? "0x01" : "0x00";
                    if (e.isBuffer(t)) return "0x" + t.toString("hex");
                    if ("object" == typeof t && t && !isBigNumber(t) && !isBN(t)) return r ? "string" : utf8ToHex(JSON.stringify(t));
                    if ("string" == typeof t) {
                        if (0 === t.indexOf("-0x") || 0 === t.indexOf("-0X")) return r ? "int256" : numberToHex(t);
                        if (0 === t.indexOf("0x") || 0 === t.indexOf("0X")) return r ? "bytes" : t;
                        if (!isFinite(t)) return r ? "string" : utf8ToHex(t)
                    }
                    return r ? t < 0 ? "int256" : "uint256" : numberToHex(t)
                },
                isHexStrict = function (t) {
                    return ("string" == typeof t || "number" == typeof t) && /^(-)?0x[0-9a-f]*$/i.test(t)
                },
                isHex = function (t) {
                    return ("string" == typeof t || "number" == typeof t) && /^(-0x|0x)?[0-9a-f]*$/i.test(t)
                },
                u = "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                sha3 = function (t) {
                    isBN(t) && (t = t.toString()), isHexStrict(t) && /^0x/i.test(t.toString()) && (t = hexToBytes(t));
                    var e = a.keccak256(t);
                    return e === u ? null : e
                };
            sha3._Hash = a;
            t.exports = {
                BN: n,
                isBN: isBN,
                isBigNumber: isBigNumber,
                toBN: toBN,
                isAddress: isAddress,
                isBloom: function (t) {
                    return s.isBloom(t)
                },
                isUserEthereumAddressInBloom: function (t, e) {
                    return s.isUserEthereumAddressInBloom(t, e)
                },
                isContractAddressInBloom: function (t, e) {
                    return s.isContractAddressInBloom(t, e)
                },
                isTopic: function (t) {
                    return s.isTopic(t)
                },
                isTopicInBloom: function (t, e) {
                    return s.isTopicInBloom(t, e)
                },
                isInBloom: function (t, e) {
                    return s.isInBloom(t, e)
                },
                checkAddressChecksum: checkAddressChecksum,
                utf8ToHex: utf8ToHex,
                hexToUtf8: function (t) {
                    if (!isHexStrict(t)) throw new Error('The parameter "' + t + '" must be a valid HEX string.');
                    for (var e = "", r = 0, n = (t = (t = (t = (t = (t = t.replace(/^0x/i, "")).replace(/^(?:00)*/, "")).split("").reverse().join("")).replace(/^(?:00)*/, "")).split("").reverse().join("")).length, i = 0; i < n; i += 2) r = parseInt(t.substr(i, 2), 16), e += String.fromCharCode(r);
                    return o.decode(e)
                },
                hexToNumber: hexToNumber,
                hexToNumberString: function (t) {
                    if (!t) return t;
                    if ("string" == typeof t && !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    return toBN(t).toString(10)
                },
                numberToHex: numberToHex,
                toHex: toHex,
                hexToBytes: hexToBytes,
                bytesToHex: function (t) {
                    for (var e = [], r = 0; r < t.length; r++) e.push((t[r] >>> 4).toString(16)), e.push((15 & t[r]).toString(16));
                    return "0x" + e.join("")
                },
                isHex: isHex,
                isHexStrict: isHexStrict,
                stripHexPrefix: function (t) {
                    return 0 !== t && isHex(t) ? t.replace(/^(-)?0x/i, "$1") : t
                },
                leftPad: function (t, e, r) {
                    var n = /^0x/i.test(t) || "number" == typeof t,
                        i = e - (t = t.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? e - t.length + 1 : 0;
                    return (n ? "0x" : "") + new Array(i).join(r || "0") + t
                },
                rightPad: function (t, e, r) {
                    var n = /^0x/i.test(t) || "number" == typeof t,
                        i = e - (t = t.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? e - t.length + 1 : 0;
                    return (n ? "0x" : "") + t + new Array(i).join(r || "0")
                },
                toTwosComplement: function (t) {
                    return "0x" + toBN(t).toTwos(256).toString(16, 64)
                },
                sha3: sha3,
                sha3Raw: function (t) {
                    return null === (t = sha3(t)) ? u : t
                },
                toNumber: function (t) {
                    return "number" == typeof t ? t : hexToNumber(toHex(t))
                }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = {
            messageId: 0,
            toPayload: function (t, e) {
                if (!t) throw new Error('JSONRPC method should be specified for params: "' + JSON.stringify(e) + '"!');
                return n.messageId++, {
                    jsonrpc: "2.0",
                    id: n.messageId,
                    method: t,
                    params: e || []
                }
            },
            isValidResponse: function (t) {
                return Array.isArray(t) ? t.every(validateSingleMessage) : validateSingleMessage(t);

                function validateSingleMessage(t) {
                    return !(!t || t.error || "2.0" !== t.jsonrpc || "number" != typeof t.id && "string" != typeof t.id || void 0 === t.result)
                }
            },
            toBatchPayload: function (t) {
                return t.map((function (t) {
                    return n.toPayload(t.method, t.params)
                }))
            }
        };
        t.exports = n
    }, function (t, e, r) {
        (function (t, n) {
            var i;
            ! function (o) {
                e && e.nodeType, t && t.nodeType;
                var a = "object" == typeof n && n;
                a.global !== a && a.window !== a && a.self;
                var s, u = 2147483647,
                    c = /^xn--/,
                    l = /[^\x20-\x7E]/,
                    h = /[\x2E\u3002\uFF0E\uFF61]/g,
                    d = {
                        overflow: "Overflow: input needs wider integers to process",
                        "not-basic": "Illegal input >= 0x80 (not a basic code point)",
                        "invalid-input": "Invalid input"
                    },
                    p = Math.floor,
                    m = String.fromCharCode;

                function error(t) {
                    throw new RangeError(d[t])
                }

                function map(t, e) {
                    for (var r = t.length, n = []; r--;) n[r] = e(t[r]);
                    return n
                }

                function mapDomain(t, e) {
                    var r = t.split("@"),
                        n = "";
                    return r.length > 1 && (n = r[0] + "@", t = r[1]), n + map((t = t.replace(h, ".")).split("."), e).join(".")
                }

                function ucs2decode(t) {
                    for (var e, r, n = [], i = 0, o = t.length; i < o;)(e = t.charCodeAt(i++)) >= 55296 && e <= 56319 && i < o ? 56320 == (64512 & (r = t.charCodeAt(i++))) ? n.push(((1023 & e) << 10) + (1023 & r) + 65536) : (n.push(e), i--) : n.push(e);
                    return n
                }

                function ucs2encode(t) {
                    return map(t, (function (t) {
                        var e = "";
                        return t > 65535 && (e += m((t -= 65536) >>> 10 & 1023 | 55296), t = 56320 | 1023 & t), e += m(t)
                    })).join("")
                }

                function digitToBasic(t, e) {
                    return t + 22 + 75 * (t < 26) - ((0 != e) << 5)
                }

                function adapt(t, e, r) {
                    var n = 0;
                    for (t = r ? p(t / 700) : t >> 1, t += p(t / e); t > 455; n += 36) t = p(t / 35);
                    return p(n + 36 * t / (t + 38))
                }

                function decode(t) {
                    var e, r, n, i, o, a, s, c, l, h, d, m = [],
                        y = t.length,
                        b = 0,
                        g = 128,
                        v = 72;
                    for ((r = t.lastIndexOf("-")) < 0 && (r = 0), n = 0; n < r; ++n) t.charCodeAt(n) >= 128 && error("not-basic"), m.push(t.charCodeAt(n));
                    for (i = r > 0 ? r + 1 : 0; i < y;) {
                        for (o = b, a = 1, s = 36; i >= y && error("invalid-input"), ((c = (d = t.charCodeAt(i++)) - 48 < 10 ? d - 22 : d - 65 < 26 ? d - 65 : d - 97 < 26 ? d - 97 : 36) >= 36 || c > p((u - b) / a)) && error("overflow"), b += c * a, !(c < (l = s <= v ? 1 : s >= v + 26 ? 26 : s - v)); s += 36) a > p(u / (h = 36 - l)) && error("overflow"), a *= h;
                        v = adapt(b - o, e = m.length + 1, 0 == o), p(b / e) > u - g && error("overflow"), g += p(b / e), b %= e, m.splice(b++, 0, g)
                    }
                    return ucs2encode(m)
                }

                function encode(t) {
                    var e, r, n, i, o, a, s, c, l, h, d, y, b, g, v, w = [];
                    for (y = (t = ucs2decode(t)).length, e = 128, r = 0, o = 72, a = 0; a < y; ++a)(d = t[a]) < 128 && w.push(m(d));
                    for (n = i = w.length, i && w.push("-"); n < y;) {
                        for (s = u, a = 0; a < y; ++a)(d = t[a]) >= e && d < s && (s = d);
                        for (s - e > p((u - r) / (b = n + 1)) && error("overflow"), r += (s - e) * b, e = s, a = 0; a < y; ++a)
                            if ((d = t[a]) < e && ++r > u && error("overflow"), d == e) {
                                for (c = r, l = 36; !(c < (h = l <= o ? 1 : l >= o + 26 ? 26 : l - o)); l += 36) v = c - h, g = 36 - h, w.push(m(digitToBasic(h + v % g, 0))), c = p(v / g);
                                w.push(m(digitToBasic(c, 0))), o = adapt(r, b, n == i), r = 0, ++n
                            }++ r, ++e
                    }
                    return w.join("")
                }
                s = {
                    version: "1.4.1",
                    ucs2: {
                        decode: ucs2decode,
                        encode: ucs2encode
                    },
                    decode: decode,
                    encode: encode,
                    toASCII: function toASCII(t) {
                        return mapDomain(t, (function (t) {
                            return l.test(t) ? "xn--" + encode(t) : t
                        }))
                    },
                    toUnicode: function toUnicode(t) {
                        return mapDomain(t, (function (t) {
                            return c.test(t) ? decode(t.slice(4).toLowerCase()) : t
                        }))
                    }
                }, void 0 === (i = function () {
                    return s
                }.call(e, r, e, t)) || (t.exports = i)
            }()
        }).call(this, r(8)(t), r(6))
    }, function (t, e, r) {
        (function (t) {
            e.fetch = isFunction(t.fetch) && isFunction(t.ReadableStream), e.writableStream = isFunction(t.WritableStream), e.abortController = isFunction(t.AbortController), e.blobConstructor = !1;
            try {
                new Blob([new ArrayBuffer(1)]), e.blobConstructor = !0
            } catch (t) {}
            var r;

            function getXHR() {
                if (void 0 !== r) return r;
                if (t.XMLHttpRequest) {
                    r = new t.XMLHttpRequest;
                    try {
                        r.open("GET", t.XDomainRequest ? "/" : "https://example.com")
                    } catch (t) {
                        r = null
                    }
                } else r = null;
                return r
            }

            function checkTypeSupport(t) {
                var e = getXHR();
                if (!e) return !1;
                try {
                    return e.responseType = t, e.responseType === t
                } catch (t) {}
                return !1
            }
            var n = void 0 !== t.ArrayBuffer,
                i = n && isFunction(t.ArrayBuffer.prototype.slice);

            function isFunction(t) {
                return "function" == typeof t
            }
            e.arraybuffer = e.fetch || n && checkTypeSupport("arraybuffer"), e.msstream = !e.fetch && i && checkTypeSupport("ms-stream"), e.mozchunkedarraybuffer = !e.fetch && n && checkTypeSupport("moz-chunked-arraybuffer"), e.overrideMimeType = e.fetch || !!getXHR() && isFunction(getXHR().overrideMimeType), e.vbArray = isFunction(t.VBArray), r = null
        }).call(this, r(6))
    }, function (t, e, r) {
        (function (t, n, i) {
            var o = r(264),
                a = r(1),
                s = r(85),
                u = e.readyStates = {
                    UNSENT: 0,
                    OPENED: 1,
                    HEADERS_RECEIVED: 2,
                    LOADING: 3,
                    DONE: 4
                },
                c = e.IncomingMessage = function (e, r, a, u) {
                    var c = this;
                    if (s.Readable.call(c), c._mode = a, c.headers = {}, c.rawHeaders = [], c.trailers = {}, c.rawTrailers = [], c.on("end", (function () {
                            t.nextTick((function () {
                                c.emit("close")
                            }))
                        })), "fetch" === a) {
                        if (c._fetchResponse = r, c.url = r.url, c.statusCode = r.status, c.statusMessage = r.statusText, r.headers.forEach((function (t, e) {
                                c.headers[e.toLowerCase()] = t, c.rawHeaders.push(e, t)
                            })), o.writableStream) {
                            var l = new WritableStream({
                                write: function (t) {
                                    return new Promise((function (e, r) {
                                        c._destroyed ? r() : c.push(new n(t)) ? e() : c._resumeFetch = e
                                    }))
                                },
                                close: function () {
                                    i.clearTimeout(u), c._destroyed || c.push(null)
                                },
                                abort: function (t) {
                                    c._destroyed || c.emit("error", t)
                                }
                            });
                            try {
                                return void r.body.pipeTo(l).catch((function (t) {
                                    i.clearTimeout(u), c._destroyed || c.emit("error", t)
                                }))
                            } catch (t) {}
                        }
                        var h = r.body.getReader();
                        ! function read() {
                            h.read().then((function (t) {
                                if (!c._destroyed) {
                                    if (t.done) return i.clearTimeout(u), void c.push(null);
                                    c.push(new n(t.value)), read()
                                }
                            })).catch((function (t) {
                                i.clearTimeout(u), c._destroyed || c.emit("error", t)
                            }))
                        }()
                    } else {
                        if (c._xhr = e, c._pos = 0, c.url = e.responseURL, c.statusCode = e.status, c.statusMessage = e.statusText, e.getAllResponseHeaders().split(/\r?\n/).forEach((function (t) {
                                var e = t.match(/^([^:]+):\s*(.*)/);
                                if (e) {
                                    var r = e[1].toLowerCase();
                                    "set-cookie" === r ? (void 0 === c.headers[r] && (c.headers[r] = []), c.headers[r].push(e[2])) : void 0 !== c.headers[r] ? c.headers[r] += ", " + e[2] : c.headers[r] = e[2], c.rawHeaders.push(e[1], e[2])
                                }
                            })), c._charset = "x-user-defined", !o.overrideMimeType) {
                            var d = c.rawHeaders["mime-type"];
                            if (d) {
                                var p = d.match(/;\s*charset=([^;])(;|$)/);
                                p && (c._charset = p[1].toLowerCase())
                            }
                            c._charset || (c._charset = "utf-8")
                        }
                    }
                };
            a(c, s.Readable), c.prototype._read = function () {
                var t = this._resumeFetch;
                t && (this._resumeFetch = null, t())
            }, c.prototype._onXHRProgress = function () {
                var t = this,
                    e = t._xhr,
                    r = null;
                switch (t._mode) {
                    case "text:vbarray":
                        if (e.readyState !== u.DONE) break;
                        try {
                            r = new i.VBArray(e.responseBody).toArray()
                        } catch (t) {}
                        if (null !== r) {
                            t.push(new n(r));
                            break
                        }
                        case "text":
                            try {
                                r = e.responseText
                            } catch (e) {
                                t._mode = "text:vbarray";
                                break
                            }
                            if (r.length > t._pos) {
                                var o = r.substr(t._pos);
                                if ("x-user-defined" === t._charset) {
                                    for (var a = new n(o.length), s = 0; s < o.length; s++) a[s] = 255 & o.charCodeAt(s);
                                    t.push(a)
                                } else t.push(o, t._charset);
                                t._pos = r.length
                            }
                            break;
                        case "arraybuffer":
                            if (e.readyState !== u.DONE || !e.response) break;
                            r = e.response, t.push(new n(new Uint8Array(r)));
                            break;
                        case "moz-chunked-arraybuffer":
                            if (r = e.response, e.readyState !== u.LOADING || !r) break;
                            t.push(new n(new Uint8Array(r)));
                            break;
                        case "ms-stream":
                            if (r = e.response, e.readyState !== u.LOADING) break;
                            var c = new i.MSStreamReader;
                            c.onprogress = function () {
                                c.result.byteLength > t._pos && (t.push(new n(new Uint8Array(c.result.slice(t._pos)))), t._pos = c.result.byteLength)
                            }, c.onload = function () {
                                t.push(null)
                            }, c.readAsArrayBuffer(r)
                }
                t._xhr.readyState === u.DONE && "ms-stream" !== t._mode && t.push(null)
            }
        }).call(this, r(7), r(0).Buffer, r(6))
    }, function (t, e, r) {
        (function (e, n) {
            var i = r(118);
            t.exports = Readable;
            var o, a = r(258);
            Readable.ReadableState = ReadableState;
            r(119).EventEmitter;
            var EElistenerCount = function (t, e) {
                    return t.listeners(e).length
                },
                s = r(267),
                u = r(176).Buffer,
                c = e.Uint8Array || function () {};
            var l = Object.create(r(86));
            l.inherits = r(1);
            var h = r(591),
                d = void 0;
            d = h && h.debuglog ? h.debuglog("stream") : function () {};
            var p, m = r(592),
                y = r(268);
            l.inherits(Readable, s);
            var b = ["error", "close", "destroy", "pause", "resume"];

            function ReadableState(t, e) {
                t = t || {};
                var n = e instanceof(o = o || r(52));
                this.objectMode = !!t.objectMode, n && (this.objectMode = this.objectMode || !!t.readableObjectMode);
                var i = t.highWaterMark,
                    a = t.readableHighWaterMark,
                    s = this.objectMode ? 16 : 16384;
                this.highWaterMark = i || 0 === i ? i : n && (a || 0 === a) ? a : s, this.highWaterMark = Math.floor(this.highWaterMark), this.buffer = new m, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.destroyed = !1, this.defaultEncoding = t.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, t.encoding && (p || (p = r(178).StringDecoder), this.decoder = new p(t.encoding), this.encoding = t.encoding)
            }

            function Readable(t) {
                if (o = o || r(52), !(this instanceof Readable)) return new Readable(t);
                this._readableState = new ReadableState(t, this), this.readable = !0, t && ("function" == typeof t.read && (this._read = t.read), "function" == typeof t.destroy && (this._destroy = t.destroy)), s.call(this)
            }

            function readableAddChunk(t, e, r, n, i) {
                var o, a = t._readableState;
                null === e ? (a.reading = !1, function onEofChunk(t, e) {
                    if (e.ended) return;
                    if (e.decoder) {
                        var r = e.decoder.end();
                        r && r.length && (e.buffer.push(r), e.length += e.objectMode ? 1 : r.length)
                    }
                    e.ended = !0, emitReadable(t)
                }(t, a)) : (i || (o = function chunkInvalid(t, e) {
                    var r;
                    (function _isUint8Array(t) {
                        return u.isBuffer(t) || t instanceof c
                    })(e) || "string" == typeof e || void 0 === e || t.objectMode || (r = new TypeError("Invalid non-string/buffer chunk"));
                    return r
                }(a, e)), o ? t.emit("error", o) : a.objectMode || e && e.length > 0 ? ("string" == typeof e || a.objectMode || Object.getPrototypeOf(e) === u.prototype || (e = function _uint8ArrayToBuffer(t) {
                    return u.from(t)
                }(e)), n ? a.endEmitted ? t.emit("error", new Error("stream.unshift() after end event")) : addChunk(t, a, e, !0) : a.ended ? t.emit("error", new Error("stream.push() after EOF")) : (a.reading = !1, a.decoder && !r ? (e = a.decoder.write(e), a.objectMode || 0 !== e.length ? addChunk(t, a, e, !1) : maybeReadMore(t, a)) : addChunk(t, a, e, !1))) : n || (a.reading = !1));
                return function needMoreData(t) {
                    return !t.ended && (t.needReadable || t.length < t.highWaterMark || 0 === t.length)
                }(a)
            }

            function addChunk(t, e, r, n) {
                e.flowing && 0 === e.length && !e.sync ? (t.emit("data", r), t.read(0)) : (e.length += e.objectMode ? 1 : r.length, n ? e.buffer.unshift(r) : e.buffer.push(r), e.needReadable && emitReadable(t)), maybeReadMore(t, e)
            }
            Object.defineProperty(Readable.prototype, "destroyed", {
                get: function () {
                    return void 0 !== this._readableState && this._readableState.destroyed
                },
                set: function (t) {
                    this._readableState && (this._readableState.destroyed = t)
                }
            }), Readable.prototype.destroy = y.destroy, Readable.prototype._undestroy = y.undestroy, Readable.prototype._destroy = function (t, e) {
                this.push(null), e(t)
            }, Readable.prototype.push = function (t, e) {
                var r, n = this._readableState;
                return n.objectMode ? r = !0 : "string" == typeof t && ((e = e || n.defaultEncoding) !== n.encoding && (t = u.from(t, e), e = ""), r = !0), readableAddChunk(this, t, e, !1, r)
            }, Readable.prototype.unshift = function (t) {
                return readableAddChunk(this, t, null, !0, !1)
            }, Readable.prototype.isPaused = function () {
                return !1 === this._readableState.flowing
            }, Readable.prototype.setEncoding = function (t) {
                return p || (p = r(178).StringDecoder), this._readableState.decoder = new p(t), this._readableState.encoding = t, this
            };

            function howMuchToRead(t, e) {
                return t <= 0 || 0 === e.length && e.ended ? 0 : e.objectMode ? 1 : t != t ? e.flowing && e.length ? e.buffer.head.data.length : e.length : (t > e.highWaterMark && (e.highWaterMark = function computeNewHighWaterMark(t) {
                    return t >= 8388608 ? t = 8388608 : (t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, t |= t >>> 16, t++), t
                }(t)), t <= e.length ? t : e.ended ? e.length : (e.needReadable = !0, 0))
            }

            function emitReadable(t) {
                var e = t._readableState;
                e.needReadable = !1, e.emittedReadable || (d("emitReadable", e.flowing), e.emittedReadable = !0, e.sync ? i.nextTick(emitReadable_, t) : emitReadable_(t))
            }

            function emitReadable_(t) {
                d("emit readable"), t.emit("readable"), flow(t)
            }

            function maybeReadMore(t, e) {
                e.readingMore || (e.readingMore = !0, i.nextTick(maybeReadMore_, t, e))
            }

            function maybeReadMore_(t, e) {
                for (var r = e.length; !e.reading && !e.flowing && !e.ended && e.length < e.highWaterMark && (d("maybeReadMore read 0"), t.read(0), r !== e.length);) r = e.length;
                e.readingMore = !1
            }

            function nReadingNextTick(t) {
                d("readable nexttick read 0"), t.read(0)
            }

            function resume_(t, e) {
                e.reading || (d("resume read 0"), t.read(0)), e.resumeScheduled = !1, e.awaitDrain = 0, t.emit("resume"), flow(t), e.flowing && !e.reading && t.read(0)
            }

            function flow(t) {
                var e = t._readableState;
                for (d("flow", e.flowing); e.flowing && null !== t.read(););
            }

            function fromList(t, e) {
                return 0 === e.length ? null : (e.objectMode ? r = e.buffer.shift() : !t || t >= e.length ? (r = e.decoder ? e.buffer.join("") : 1 === e.buffer.length ? e.buffer.head.data : e.buffer.concat(e.length), e.buffer.clear()) : r = function fromListPartial(t, e, r) {
                    var n;
                    t < e.head.data.length ? (n = e.head.data.slice(0, t), e.head.data = e.head.data.slice(t)) : n = t === e.head.data.length ? e.shift() : r ? function copyFromBufferString(t, e) {
                        var r = e.head,
                            n = 1,
                            i = r.data;
                        t -= i.length;
                        for (; r = r.next;) {
                            var o = r.data,
                                a = t > o.length ? o.length : t;
                            if (a === o.length ? i += o : i += o.slice(0, t), 0 === (t -= a)) {
                                a === o.length ? (++n, r.next ? e.head = r.next : e.head = e.tail = null) : (e.head = r, r.data = o.slice(a));
                                break
                            }++n
                        }
                        return e.length -= n, i
                    }(t, e) : function copyFromBuffer(t, e) {
                        var r = u.allocUnsafe(t),
                            n = e.head,
                            i = 1;
                        n.data.copy(r), t -= n.data.length;
                        for (; n = n.next;) {
                            var o = n.data,
                                a = t > o.length ? o.length : t;
                            if (o.copy(r, r.length - t, 0, a), 0 === (t -= a)) {
                                a === o.length ? (++i, n.next ? e.head = n.next : e.head = e.tail = null) : (e.head = n, n.data = o.slice(a));
                                break
                            }++i
                        }
                        return e.length -= i, r
                    }(t, e);
                    return n
                }(t, e.buffer, e.decoder), r);
                var r
            }

            function endReadable(t) {
                var e = t._readableState;
                if (e.length > 0) throw new Error('"endReadable()" called on non-empty stream');
                e.endEmitted || (e.ended = !0, i.nextTick(endReadableNT, e, t))
            }

            function endReadableNT(t, e) {
                t.endEmitted || 0 !== t.length || (t.endEmitted = !0, e.readable = !1, e.emit("end"))
            }

            function indexOf(t, e) {
                for (var r = 0, n = t.length; r < n; r++)
                    if (t[r] === e) return r;
                return -1
            }
            Readable.prototype.read = function (t) {
                d("read", t), t = parseInt(t, 10);
                var e = this._readableState,
                    r = t;
                if (0 !== t && (e.emittedReadable = !1), 0 === t && e.needReadable && (e.length >= e.highWaterMark || e.ended)) return d("read: emitReadable", e.length, e.ended), 0 === e.length && e.ended ? endReadable(this) : emitReadable(this), null;
                if (0 === (t = howMuchToRead(t, e)) && e.ended) return 0 === e.length && endReadable(this), null;
                var n, i = e.needReadable;
                return d("need readable", i), (0 === e.length || e.length - t < e.highWaterMark) && d("length less than watermark", i = !0), e.ended || e.reading ? d("reading or ended", i = !1) : i && (d("do read"), e.reading = !0, e.sync = !0, 0 === e.length && (e.needReadable = !0), this._read(e.highWaterMark), e.sync = !1, e.reading || (t = howMuchToRead(r, e))), null === (n = t > 0 ? fromList(t, e) : null) ? (e.needReadable = !0, t = 0) : e.length -= t, 0 === e.length && (e.ended || (e.needReadable = !0), r !== t && e.ended && endReadable(this)), null !== n && this.emit("data", n), n
            }, Readable.prototype._read = function (t) {
                this.emit("error", new Error("_read() is not implemented"))
            }, Readable.prototype.pipe = function (t, e) {
                var r = this,
                    o = this._readableState;
                switch (o.pipesCount) {
                    case 0:
                        o.pipes = t;
                        break;
                    case 1:
                        o.pipes = [o.pipes, t];
                        break;
                    default:
                        o.pipes.push(t)
                }
                o.pipesCount += 1, d("pipe count=%d opts=%j", o.pipesCount, e);
                var s = (!e || !1 !== e.end) && t !== n.stdout && t !== n.stderr ? onend : unpipe;

                function onunpipe(e, n) {
                    d("onunpipe"), e === r && n && !1 === n.hasUnpiped && (n.hasUnpiped = !0, function cleanup() {
                        d("cleanup"), t.removeListener("close", onclose), t.removeListener("finish", onfinish), t.removeListener("drain", u), t.removeListener("error", onerror), t.removeListener("unpipe", onunpipe), r.removeListener("end", onend), r.removeListener("end", unpipe), r.removeListener("data", ondata), c = !0, !o.awaitDrain || t._writableState && !t._writableState.needDrain || u()
                    }())
                }

                function onend() {
                    d("onend"), t.end()
                }
                o.endEmitted ? i.nextTick(s) : r.once("end", s), t.on("unpipe", onunpipe);
                var u = function pipeOnDrain(t) {
                    return function () {
                        var e = t._readableState;
                        d("pipeOnDrain", e.awaitDrain), e.awaitDrain && e.awaitDrain--, 0 === e.awaitDrain && EElistenerCount(t, "data") && (e.flowing = !0, flow(t))
                    }
                }(r);
                t.on("drain", u);
                var c = !1;
                var l = !1;

                function ondata(e) {
                    d("ondata"), l = !1, !1 !== t.write(e) || l || ((1 === o.pipesCount && o.pipes === t || o.pipesCount > 1 && -1 !== indexOf(o.pipes, t)) && !c && (d("false write response, pause", r._readableState.awaitDrain), r._readableState.awaitDrain++, l = !0), r.pause())
                }

                function onerror(e) {
                    d("onerror", e), unpipe(), t.removeListener("error", onerror), 0 === EElistenerCount(t, "error") && t.emit("error", e)
                }

                function onclose() {
                    t.removeListener("finish", onfinish), unpipe()
                }

                function onfinish() {
                    d("onfinish"), t.removeListener("close", onclose), unpipe()
                }

                function unpipe() {
                    d("unpipe"), r.unpipe(t)
                }
                return r.on("data", ondata),
                    function prependListener(t, e, r) {
                        if ("function" == typeof t.prependListener) return t.prependListener(e, r);
                        t._events && t._events[e] ? a(t._events[e]) ? t._events[e].unshift(r) : t._events[e] = [r, t._events[e]] : t.on(e, r)
                    }(t, "error", onerror), t.once("close", onclose), t.once("finish", onfinish), t.emit("pipe", r), o.flowing || (d("pipe resume"), r.resume()), t
            }, Readable.prototype.unpipe = function (t) {
                var e = this._readableState,
                    r = {
                        hasUnpiped: !1
                    };
                if (0 === e.pipesCount) return this;
                if (1 === e.pipesCount) return t && t !== e.pipes || (t || (t = e.pipes), e.pipes = null, e.pipesCount = 0, e.flowing = !1, t && t.emit("unpipe", this, r)), this;
                if (!t) {
                    var n = e.pipes,
                        i = e.pipesCount;
                    e.pipes = null, e.pipesCount = 0, e.flowing = !1;
                    for (var o = 0; o < i; o++) n[o].emit("unpipe", this, r);
                    return this
                }
                var a = indexOf(e.pipes, t);
                return -1 === a || (e.pipes.splice(a, 1), e.pipesCount -= 1, 1 === e.pipesCount && (e.pipes = e.pipes[0]), t.emit("unpipe", this, r)), this
            }, Readable.prototype.on = function (t, e) {
                var r = s.prototype.on.call(this, t, e);
                if ("data" === t) !1 !== this._readableState.flowing && this.resume();
                else if ("readable" === t) {
                    var n = this._readableState;
                    n.endEmitted || n.readableListening || (n.readableListening = n.needReadable = !0, n.emittedReadable = !1, n.reading ? n.length && emitReadable(this) : i.nextTick(nReadingNextTick, this))
                }
                return r
            }, Readable.prototype.addListener = Readable.prototype.on, Readable.prototype.resume = function () {
                var t = this._readableState;
                return t.flowing || (d("resume"), t.flowing = !0, function resume(t, e) {
                    e.resumeScheduled || (e.resumeScheduled = !0, i.nextTick(resume_, t, e))
                }(this, t)), this
            }, Readable.prototype.pause = function () {
                return d("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (d("pause"), this._readableState.flowing = !1, this.emit("pause")), this
            }, Readable.prototype.wrap = function (t) {
                var e = this,
                    r = this._readableState,
                    n = !1;
                for (var i in t.on("end", (function () {
                        if (d("wrapped end"), r.decoder && !r.ended) {
                            var t = r.decoder.end();
                            t && t.length && e.push(t)
                        }
                        e.push(null)
                    })), t.on("data", (function (i) {
                        (d("wrapped data"), r.decoder && (i = r.decoder.write(i)), r.objectMode && null == i) || (r.objectMode || i && i.length) && (e.push(i) || (n = !0, t.pause()))
                    })), t) void 0 === this[i] && "function" == typeof t[i] && (this[i] = function (e) {
                    return function () {
                        return t[e].apply(t, arguments)
                    }
                }(i));
                for (var o = 0; o < b.length; o++) t.on(b[o], this.emit.bind(this, b[o]));
                return this._read = function (e) {
                    d("wrapped _read", e), n && (n = !1, t.resume())
                }, this
            }, Object.defineProperty(Readable.prototype, "readableHighWaterMark", {
                enumerable: !1,
                get: function () {
                    return this._readableState.highWaterMark
                }
            }), Readable._fromList = fromList
        }).call(this, r(6), r(7))
    }, function (t, e, r) {
        t.exports = r(119).EventEmitter
    }, function (t, e, r) {
        var n = r(118);

        function emitErrorNT(t, e) {
            t.emit("error", e)
        }
        t.exports = {
            destroy: function destroy(t, e) {
                var r = this,
                    i = this._readableState && this._readableState.destroyed,
                    o = this._writableState && this._writableState.destroyed;
                return i || o ? (e ? e(t) : !t || this._writableState && this._writableState.errorEmitted || n.nextTick(emitErrorNT, this, t), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(t || null, (function (t) {
                    !e && t ? (n.nextTick(emitErrorNT, r, t), r._writableState && (r._writableState.errorEmitted = !0)) : e && e(t)
                })), this)
            },
            undestroy: function undestroy() {
                this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1)
            }
        }
    }, function (t, e, r) {
        (function (t) {
            var n = void 0 !== t && t || "undefined" != typeof self && self || window,
                i = Function.prototype.apply;

            function Timeout(t, e) {
                this._id = t, this._clearFn = e
            }
            e.setTimeout = function () {
                return new Timeout(i.call(setTimeout, n, arguments), clearTimeout)
            }, e.setInterval = function () {
                return new Timeout(i.call(setInterval, n, arguments), clearInterval)
            }, e.clearTimeout = e.clearInterval = function (t) {
                t && t.close()
            }, Timeout.prototype.unref = Timeout.prototype.ref = function () {}, Timeout.prototype.close = function () {
                this._clearFn.call(n, this._id)
            }, e.enroll = function (t, e) {
                clearTimeout(t._idleTimeoutId), t._idleTimeout = e
            }, e.unenroll = function (t) {
                clearTimeout(t._idleTimeoutId), t._idleTimeout = -1
            }, e._unrefActive = e.active = function (t) {
                clearTimeout(t._idleTimeoutId);
                var e = t._idleTimeout;
                e >= 0 && (t._idleTimeoutId = setTimeout((function onTimeout() {
                    t._onTimeout && t._onTimeout()
                }), e))
            }, r(594), e.setImmediate = "undefined" != typeof self && self.setImmediate || void 0 !== t && t.setImmediate || this && this.setImmediate, e.clearImmediate = "undefined" != typeof self && self.clearImmediate || void 0 !== t && t.clearImmediate || this && this.clearImmediate
        }).call(this, r(6))
    }, function (t, e, r) {
        t.exports = Transform;
        var n = r(52),
            i = Object.create(r(86));

        function afterTransform(t, e) {
            var r = this._transformState;
            r.transforming = !1;
            var n = r.writecb;
            if (!n) return this.emit("error", new Error("write callback called multiple times"));
            r.writechunk = null, r.writecb = null, null != e && this.push(e), n(t);
            var i = this._readableState;
            i.reading = !1, (i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark)
        }

        function Transform(t) {
            if (!(this instanceof Transform)) return new Transform(t);
            n.call(this, t), this._transformState = {
                afterTransform: afterTransform.bind(this),
                needTransform: !1,
                transforming: !1,
                writecb: null,
                writechunk: null,
                writeencoding: null
            }, this._readableState.needReadable = !0, this._readableState.sync = !1, t && ("function" == typeof t.transform && (this._transform = t.transform), "function" == typeof t.flush && (this._flush = t.flush)), this.on("prefinish", prefinish)
        }

        function prefinish() {
            var t = this;
            "function" == typeof this._flush ? this._flush((function (e, r) {
                done(t, e, r)
            })) : done(this, null, null)
        }

        function done(t, e, r) {
            if (e) return t.emit("error", e);
            if (null != r && t.push(r), t._writableState.length) throw new Error("Calling transform done when ws.length != 0");
            if (t._transformState.transforming) throw new Error("Calling transform done when still transforming");
            return t.push(null)
        }
        i.inherits = r(1), i.inherits(Transform, n), Transform.prototype.push = function (t, e) {
            return this._transformState.needTransform = !1, n.prototype.push.call(this, t, e)
        }, Transform.prototype._transform = function (t, e, r) {
            throw new Error("_transform() is not implemented")
        }, Transform.prototype._write = function (t, e, r) {
            var n = this._transformState;
            if (n.writecb = r, n.writechunk = t, n.writeencoding = e, !n.transforming) {
                var i = this._readableState;
                (n.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark)
            }
        }, Transform.prototype._read = function (t) {
            var e = this._transformState;
            null !== e.writechunk && e.writecb && !e.transforming ? (e.transforming = !0, this._transform(e.writechunk, e.writeencoding, e.afterTransform)) : e.needTransform = !0
        }, Transform.prototype._destroy = function (t, e) {
            var r = this;
            n.prototype._destroy.call(this, t, (function (t) {
                e(t), r.emit("close")
            }))
        }
    }, function (t, e) {
        t.exports = function extend() {
            for (var t = {}, e = 0; e < arguments.length; e++) {
                var n = arguments[e];
                for (var i in n) r.call(n, i) && (t[i] = n[i])
            }
            return t
        };
        var r = Object.prototype.hasOwnProperty
    }, function (t, e, r) {
        var n = this && this.__importDefault || function (t) {
            return t && t.__esModule ? t : {
                default: t
            }
        };
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.KECCAK256_RLP = e.KECCAK256_RLP_S = e.KECCAK256_RLP_ARRAY = e.KECCAK256_RLP_ARRAY_S = e.KECCAK256_NULL = e.KECCAK256_NULL_S = e.TWO_POW256 = e.MAX_INTEGER = void 0;
        var i = r(0).Buffer,
            o = n(r(53));
        e.MAX_INTEGER = new o.default("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", 16), e.TWO_POW256 = new o.default("10000000000000000000000000000000000000000000000000000000000000000", 16), e.KECCAK256_NULL_S = "c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", e.KECCAK256_NULL = i.from(e.KECCAK256_NULL_S, "hex"), e.KECCAK256_RLP_ARRAY_S = "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347", e.KECCAK256_RLP_ARRAY = i.from(e.KECCAK256_RLP_ARRAY_S, "hex"), e.KECCAK256_RLP_S = "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421", e.KECCAK256_RLP = i.from(e.KECCAK256_RLP_S, "hex")
    }, function (t, e, r) {
        (function (t) {
            var n = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
                    void 0 === n && (n = r), Object.defineProperty(t, n, {
                        enumerable: !0,
                        get: function () {
                            return e[r]
                        }
                    })
                } : function (t, e, r, n) {
                    void 0 === n && (n = r), t[n] = e[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function (t, e) {
                    Object.defineProperty(t, "default", {
                        enumerable: !0,
                        value: e
                    })
                } : function (t, e) {
                    t.default = e
                }),
                o = this && this.__importStar || function (t) {
                    if (t && t.__esModule) return t;
                    var e = {};
                    if (null != t)
                        for (var r in t) "default" !== r && Object.hasOwnProperty.call(t, r) && n(e, t, r);
                    return i(e, t), e
                },
                a = this && this.__read || function (t, e) {
                    var r = "function" == typeof Symbol && t[Symbol.iterator];
                    if (!r) return t;
                    var n, i, o = r.call(t),
                        a = [];
                    try {
                        for (;
                            (void 0 === e || e-- > 0) && !(n = o.next()).done;) a.push(n.value)
                    } catch (t) {
                        i = {
                            error: t
                        }
                    } finally {
                        try {
                            n && !n.done && (r = o.return) && r.call(o)
                        } finally {
                            if (i) throw i.error
                        }
                    }
                    return a
                },
                s = this && this.__importDefault || function (t) {
                    return t && t.__esModule ? t : {
                        default: t
                    }
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.isZeroAddress = e.zeroAddress = e.importPublic = e.privateToAddress = e.privateToPublic = e.publicToAddress = e.pubToAddress = e.isValidPublic = e.isValidPrivate = e.generateAddress2 = e.generateAddress = e.isValidChecksumAddress = e.toChecksumAddress = e.isValidAddress = e.Account = void 0;
            var u = s(r(18)),
                c = s(r(53)),
                l = o(r(120)),
                h = r(121),
                d = r(20),
                p = r(272),
                m = r(54),
                y = r(183),
                b = r(123),
                g = r(187),
                v = function () {
                    function Account(t, e, r, n) {
                        void 0 === t && (t = new c.default(0)), void 0 === e && (e = new c.default(0)), void 0 === r && (r = p.KECCAK256_RLP), void 0 === n && (n = p.KECCAK256_NULL), this.nonce = t, this.balance = e, this.stateRoot = r, this.codeHash = n, this._validate()
                    }
                    return Account.fromAccountData = function (t) {
                        var e = t.nonce,
                            r = t.balance,
                            n = t.stateRoot,
                            i = t.codeHash;
                        return new Account(e ? new c.default(m.toBuffer(e)) : void 0, r ? new c.default(m.toBuffer(r)) : void 0, n ? m.toBuffer(n) : void 0, i ? m.toBuffer(i) : void 0)
                    }, Account.fromRlpSerializedAccount = function (t) {
                        var e = l.decode(t);
                        if (!Array.isArray(e)) throw new Error("Invalid serialized account input. Must be array");
                        return this.fromValuesArray(e)
                    }, Account.fromValuesArray = function (t) {
                        var e = a(t, 4),
                            r = e[0],
                            n = e[1],
                            i = e[2],
                            o = e[3];
                        return new Account(new c.default(r), new c.default(n), i, o)
                    }, Account.prototype._validate = function () {
                        if (this.nonce.lt(new c.default(0))) throw new Error("nonce must be greater than zero");
                        if (this.balance.lt(new c.default(0))) throw new Error("balance must be greater than zero");
                        if (32 !== this.stateRoot.length) throw new Error("stateRoot must have a length of 32");
                        if (32 !== this.codeHash.length) throw new Error("codeHash must have a length of 32")
                    }, Account.prototype.raw = function () {
                        return [g.bnToUnpaddedBuffer(this.nonce), g.bnToUnpaddedBuffer(this.balance), this.stateRoot, this.codeHash]
                    }, Account.prototype.serialize = function () {
                        return l.encode(this.raw())
                    }, Account.prototype.isContract = function () {
                        return !this.codeHash.equals(p.KECCAK256_NULL)
                    }, Account.prototype.isEmpty = function () {
                        return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(p.KECCAK256_NULL)
                    }, Account
                }();
            e.Account = v, e.isValidAddress = function (t) {
                try {
                    b.assertIsString(t)
                } catch (t) {
                    return !1
                }
                return /^0x[0-9a-fA-F]{40}$/.test(t)
            }, e.toChecksumAddress = function (t, e) {
                b.assertIsHexString(t);
                var r = d.stripHexPrefix(t).toLowerCase(),
                    n = "";
                e && (n = g.toType(e, g.TypeOutput.BN).toString() + "0x");
                for (var i = y.keccakFromString(n + r).toString("hex"), o = "0x", a = 0; a < r.length; a++) parseInt(i[a], 16) >= 8 ? o += r[a].toUpperCase() : o += r[a];
                return o
            }, e.isValidChecksumAddress = function (t, r) {
                return e.isValidAddress(t) && e.toChecksumAddress(t, r) === t
            }, e.generateAddress = function (e, r) {
                b.assertIsBuffer(e), b.assertIsBuffer(r);
                var n = new c.default(r);
                return n.isZero() ? y.rlphash([e, null]).slice(-20) : y.rlphash([e, t.from(n.toArray())]).slice(-20)
            }, e.generateAddress2 = function (e, r, n) {
                return b.assertIsBuffer(e), b.assertIsBuffer(r), b.assertIsBuffer(n), u.default(20 === e.length), u.default(32 === r.length), y.keccak256(t.concat([t.from("ff", "hex"), e, r, y.keccak256(n)])).slice(-20)
            }, e.isValidPrivate = function (t) {
                return h.privateKeyVerify(t)
            }, e.isValidPublic = function (e, r) {
                return void 0 === r && (r = !1), b.assertIsBuffer(e), 64 === e.length ? h.publicKeyVerify(t.concat([t.from([4]), e])) : !!r && h.publicKeyVerify(e)
            }, e.pubToAddress = function (e, r) {
                return void 0 === r && (r = !1), b.assertIsBuffer(e), r && 64 !== e.length && (e = t.from(h.publicKeyConvert(e, !1).slice(1))), u.default(64 === e.length), y.keccak(e).slice(-20)
            }, e.publicToAddress = e.pubToAddress, e.privateToPublic = function (e) {
                return b.assertIsBuffer(e), t.from(h.publicKeyCreate(e, !1)).slice(1)
            }, e.privateToAddress = function (t) {
                return e.publicToAddress(e.privateToPublic(t))
            }, e.importPublic = function (e) {
                return b.assertIsBuffer(e), 64 !== e.length && (e = t.from(h.publicKeyConvert(e, !1).slice(1))), e
            }, e.zeroAddress = function () {
                var t = m.zeros(20);
                return m.bufferToHex(t)
            }, e.isZeroAddress = function (t) {
                try {
                    b.assertIsString(t)
                } catch (t) {
                    return !1
                }
                return e.zeroAddress() === t
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        t.exports = r(615)(r(616))
    }, function (t, e, r) {
        var n = e;
        n.base = r(122), n.short = r(620), n.mont = r(621), n.edwards = r(622)
    }, function (t, e, r) {
        var n = r(31).rotr32;

        function ch32(t, e, r) {
            return t & e ^ ~t & r
        }

        function maj32(t, e, r) {
            return t & e ^ t & r ^ e & r
        }

        function p32(t, e, r) {
            return t ^ e ^ r
        }
        e.ft_1 = function ft_1(t, e, r, n) {
            return 0 === t ? ch32(e, r, n) : 1 === t || 3 === t ? p32(e, r, n) : 2 === t ? maj32(e, r, n) : void 0
        }, e.ch32 = ch32, e.maj32 = maj32, e.p32 = p32, e.s0_256 = function s0_256(t) {
            return n(t, 2) ^ n(t, 13) ^ n(t, 22)
        }, e.s1_256 = function s1_256(t) {
            return n(t, 6) ^ n(t, 11) ^ n(t, 25)
        }, e.g0_256 = function g0_256(t) {
            return n(t, 7) ^ n(t, 18) ^ t >>> 3
        }, e.g1_256 = function g1_256(t) {
            return n(t, 17) ^ n(t, 19) ^ t >>> 10
        }
    }, function (t, e, r) {
        var n = r(31),
            i = r(90),
            o = r(276),
            a = r(17),
            s = n.sum32,
            u = n.sum32_4,
            c = n.sum32_5,
            l = o.ch32,
            h = o.maj32,
            d = o.s0_256,
            p = o.s1_256,
            m = o.g0_256,
            y = o.g1_256,
            b = i.BlockHash,
            g = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];

        function SHA256() {
            if (!(this instanceof SHA256)) return new SHA256;
            b.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = g, this.W = new Array(64)
        }
        n.inherits(SHA256, b), t.exports = SHA256, SHA256.blockSize = 512, SHA256.outSize = 256, SHA256.hmacStrength = 192, SHA256.padLength = 64, SHA256.prototype._update = function _update(t, e) {
            for (var r = this.W, n = 0; n < 16; n++) r[n] = t[e + n];
            for (; n < r.length; n++) r[n] = u(y(r[n - 2]), r[n - 7], m(r[n - 15]), r[n - 16]);
            var i = this.h[0],
                o = this.h[1],
                b = this.h[2],
                g = this.h[3],
                v = this.h[4],
                w = this.h[5],
                M = this.h[6],
                A = this.h[7];
            for (a(this.k.length === r.length), n = 0; n < r.length; n++) {
                var x = c(A, p(v), l(v, w, M), this.k[n], r[n]),
                    B = s(d(i), h(i, o, b));
                A = M, M = w, w = v, v = s(g, x), g = b, b = o, o = i, i = s(x, B)
            }
            this.h[0] = s(this.h[0], i), this.h[1] = s(this.h[1], o), this.h[2] = s(this.h[2], b), this.h[3] = s(this.h[3], g), this.h[4] = s(this.h[4], v), this.h[5] = s(this.h[5], w), this.h[6] = s(this.h[6], M), this.h[7] = s(this.h[7], A)
        }, SHA256.prototype._digest = function digest(t) {
            return "hex" === t ? n.toHex32(this.h, "big") : n.split32(this.h, "big")
        }
    }, function (t, e, r) {
        var n = r(31),
            i = r(90),
            o = r(17),
            a = n.rotr64_hi,
            s = n.rotr64_lo,
            u = n.shr64_hi,
            c = n.shr64_lo,
            l = n.sum64,
            h = n.sum64_hi,
            d = n.sum64_lo,
            p = n.sum64_4_hi,
            m = n.sum64_4_lo,
            y = n.sum64_5_hi,
            b = n.sum64_5_lo,
            g = i.BlockHash,
            v = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];

        function SHA512() {
            if (!(this instanceof SHA512)) return new SHA512;
            g.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = v, this.W = new Array(160)
        }

        function ch64_hi(t, e, r, n, i) {
            var o = t & r ^ ~t & i;
            return o < 0 && (o += 4294967296), o
        }

        function ch64_lo(t, e, r, n, i, o) {
            var a = e & n ^ ~e & o;
            return a < 0 && (a += 4294967296), a
        }

        function maj64_hi(t, e, r, n, i) {
            var o = t & r ^ t & i ^ r & i;
            return o < 0 && (o += 4294967296), o
        }

        function maj64_lo(t, e, r, n, i, o) {
            var a = e & n ^ e & o ^ n & o;
            return a < 0 && (a += 4294967296), a
        }

        function s0_512_hi(t, e) {
            var r = a(t, e, 28) ^ a(e, t, 2) ^ a(e, t, 7);
            return r < 0 && (r += 4294967296), r
        }

        function s0_512_lo(t, e) {
            var r = s(t, e, 28) ^ s(e, t, 2) ^ s(e, t, 7);
            return r < 0 && (r += 4294967296), r
        }

        function s1_512_hi(t, e) {
            var r = a(t, e, 14) ^ a(t, e, 18) ^ a(e, t, 9);
            return r < 0 && (r += 4294967296), r
        }

        function s1_512_lo(t, e) {
            var r = s(t, e, 14) ^ s(t, e, 18) ^ s(e, t, 9);
            return r < 0 && (r += 4294967296), r
        }

        function g0_512_hi(t, e) {
            var r = a(t, e, 1) ^ a(t, e, 8) ^ u(t, e, 7);
            return r < 0 && (r += 4294967296), r
        }

        function g0_512_lo(t, e) {
            var r = s(t, e, 1) ^ s(t, e, 8) ^ c(t, e, 7);
            return r < 0 && (r += 4294967296), r
        }

        function g1_512_hi(t, e) {
            var r = a(t, e, 19) ^ a(e, t, 29) ^ u(t, e, 6);
            return r < 0 && (r += 4294967296), r
        }

        function g1_512_lo(t, e) {
            var r = s(t, e, 19) ^ s(e, t, 29) ^ c(t, e, 6);
            return r < 0 && (r += 4294967296), r
        }
        n.inherits(SHA512, g), t.exports = SHA512, SHA512.blockSize = 1024, SHA512.outSize = 512, SHA512.hmacStrength = 192, SHA512.padLength = 128, SHA512.prototype._prepareBlock = function _prepareBlock(t, e) {
            for (var r = this.W, n = 0; n < 32; n++) r[n] = t[e + n];
            for (; n < r.length; n += 2) {
                var i = g1_512_hi(r[n - 4], r[n - 3]),
                    o = g1_512_lo(r[n - 4], r[n - 3]),
                    a = r[n - 14],
                    s = r[n - 13],
                    u = g0_512_hi(r[n - 30], r[n - 29]),
                    c = g0_512_lo(r[n - 30], r[n - 29]),
                    l = r[n - 32],
                    h = r[n - 31];
                r[n] = p(i, o, a, s, u, c, l, h), r[n + 1] = m(i, o, a, s, u, c, l, h)
            }
        }, SHA512.prototype._update = function _update(t, e) {
            this._prepareBlock(t, e);
            var r = this.W,
                n = this.h[0],
                i = this.h[1],
                a = this.h[2],
                s = this.h[3],
                u = this.h[4],
                c = this.h[5],
                p = this.h[6],
                m = this.h[7],
                g = this.h[8],
                v = this.h[9],
                w = this.h[10],
                M = this.h[11],
                A = this.h[12],
                x = this.h[13],
                B = this.h[14],
                E = this.h[15];
            o(this.k.length === r.length);
            for (var k = 0; k < r.length; k += 2) {
                var N = B,
                    T = E,
                    C = s1_512_hi(g, v),
                    P = s1_512_lo(g, v),
                    I = ch64_hi(g, v, w, M, A),
                    O = ch64_lo(g, v, w, M, A, x),
                    D = this.k[k],
                    j = this.k[k + 1],
                    L = r[k],
                    U = r[k + 1],
                    H = y(N, T, C, P, I, O, D, j, L, U),
                    q = b(N, T, C, P, I, O, D, j, L, U);
                N = s0_512_hi(n, i), T = s0_512_lo(n, i), C = maj64_hi(n, i, a, s, u), P = maj64_lo(n, i, a, s, u, c);
                var z = h(N, T, C, P),
                    G = d(N, T, C, P);
                B = A, E = x, A = w, x = M, w = g, M = v, g = h(p, m, H, q), v = d(m, m, H, q), p = u, m = c, u = a, c = s, a = n, s = i, n = h(H, q, z, G), i = d(H, q, z, G)
            }
            l(this.h, 0, n, i), l(this.h, 2, a, s), l(this.h, 4, u, c), l(this.h, 6, p, m), l(this.h, 8, g, v), l(this.h, 10, w, M), l(this.h, 12, A, x), l(this.h, 14, B, E)
        }, SHA512.prototype._digest = function digest(t) {
            return "hex" === t ? n.toHex32(this.h, "big") : n.split32(this.h, "big")
        }
    }, function (t, e, r) {
        var n = r(89),
            i = r(181),
            o = r(17);

        function HmacDRBG(t) {
            if (!(this instanceof HmacDRBG)) return new HmacDRBG(t);
            this.hash = t.hash, this.predResist = !!t.predResist, this.outLen = this.hash.outSize, this.minEntropy = t.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
            var e = i.toArray(t.entropy, t.entropyEnc || "hex"),
                r = i.toArray(t.nonce, t.nonceEnc || "hex"),
                n = i.toArray(t.pers, t.persEnc || "hex");
            o(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e, r, n)
        }
        t.exports = HmacDRBG, HmacDRBG.prototype._init = function init(t, e, r) {
            var n = t.concat(e).concat(r);
            this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
            for (var i = 0; i < this.V.length; i++) this.K[i] = 0, this.V[i] = 1;
            this._update(n), this._reseed = 1, this.reseedInterval = 281474976710656
        }, HmacDRBG.prototype._hmac = function hmac() {
            return new n.hmac(this.hash, this.K)
        }, HmacDRBG.prototype._update = function update(t) {
            var e = this._hmac().update(this.V).update([0]);
            t && (e = e.update(t)), this.K = e.digest(), this.V = this._hmac().update(this.V).digest(), t && (this.K = this._hmac().update(this.V).update([1]).update(t).digest(), this.V = this._hmac().update(this.V).digest())
        }, HmacDRBG.prototype.reseed = function reseed(t, e, r, n) {
            "string" != typeof e && (n = r, r = e, e = null), t = i.toArray(t, e), r = i.toArray(r, n), o(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t.concat(r || [])), this._reseed = 1
        }, HmacDRBG.prototype.generate = function generate(t, e, r, n) {
            if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
            "string" != typeof e && (n = r, r = e, e = null), r && (r = i.toArray(r, n || "hex"), this._update(r));
            for (var o = []; o.length < t;) this.V = this._hmac().update(this.V).digest(), o = o.concat(this.V);
            var a = o.slice(0, t);
            return this._update(r), this._reseed++, i.encode(a, e)
        }
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = r(637),
            i = r(638);
        e.keccak224 = n.createHashFunction((function () {
            return i("keccak224")
        })), e.keccak256 = n.createHashFunction((function () {
            return i("keccak256")
        })), e.keccak384 = n.createHashFunction((function () {
            return i("keccak384")
        })), e.keccak512 = n.createHashFunction((function () {
            return i("keccak512")
        }))
    }, function (t, e, r) {
        var n = r(3).Buffer,
            i = r(91).Transform;

        function HashBase(t) {
            i.call(this), this._block = n.allocUnsafe(t), this._blockSize = t, this._blockOffset = 0, this._length = [0, 0, 0, 0], this._finalized = !1
        }
        r(1)(HashBase, i), HashBase.prototype._transform = function (t, e, r) {
            var n = null;
            try {
                this.update(t, e)
            } catch (t) {
                n = t
            }
            r(n)
        }, HashBase.prototype._flush = function (t) {
            var e = null;
            try {
                this.push(this.digest())
            } catch (t) {
                e = t
            }
            t(e)
        }, HashBase.prototype.update = function (t, e) {
            if (function throwIfNotStringOrBuffer(t, e) {
                    if (!n.isBuffer(t) && "string" != typeof t) throw new TypeError(e + " must be a string or a buffer")
                }(t, "Data"), this._finalized) throw new Error("Digest already called");
            n.isBuffer(t) || (t = n.from(t, e));
            for (var r = this._block, i = 0; this._blockOffset + t.length - i >= this._blockSize;) {
                for (var o = this._blockOffset; o < this._blockSize;) r[o++] = t[i++];
                this._update(), this._blockOffset = 0
            }
            for (; i < t.length;) r[this._blockOffset++] = t[i++];
            for (var a = 0, s = 8 * t.length; s > 0; ++a) this._length[a] += s, (s = this._length[a] / 4294967296 | 0) > 0 && (this._length[a] -= 4294967296 * s);
            return this
        }, HashBase.prototype._update = function () {
            throw new Error("_update is not implemented")
        }, HashBase.prototype.digest = function (t) {
            if (this._finalized) throw new Error("Digest already called");
            this._finalized = !0;
            var e = this._digest();
            void 0 !== t && (e = e.toString(t)), this._block.fill(0), this._blockOffset = 0;
            for (var r = 0; r < 4; ++r) this._length[r] = 0;
            return e
        }, HashBase.prototype._digest = function () {
            throw new Error("_digest is not implemented")
        }, t.exports = HashBase
    }, function (t, e, r) {
        var n = r(1),
            i = r(69),
            o = r(3).Buffer,
            a = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298],
            s = new Array(64);

        function Sha256() {
            this.init(), this._w = s, i.call(this, 64, 56)
        }

        function ch(t, e, r) {
            return r ^ t & (e ^ r)
        }

        function maj(t, e, r) {
            return t & e | r & (t | e)
        }

        function sigma0(t) {
            return (t >>> 2 | t << 30) ^ (t >>> 13 | t << 19) ^ (t >>> 22 | t << 10)
        }

        function sigma1(t) {
            return (t >>> 6 | t << 26) ^ (t >>> 11 | t << 21) ^ (t >>> 25 | t << 7)
        }

        function gamma0(t) {
            return (t >>> 7 | t << 25) ^ (t >>> 18 | t << 14) ^ t >>> 3
        }
        n(Sha256, i), Sha256.prototype.init = function () {
            return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this
        }, Sha256.prototype._update = function (t) {
            for (var e, r = this._w, n = 0 | this._a, i = 0 | this._b, o = 0 | this._c, s = 0 | this._d, u = 0 | this._e, c = 0 | this._f, l = 0 | this._g, h = 0 | this._h, d = 0; d < 16; ++d) r[d] = t.readInt32BE(4 * d);
            for (; d < 64; ++d) r[d] = 0 | (((e = r[d - 2]) >>> 17 | e << 15) ^ (e >>> 19 | e << 13) ^ e >>> 10) + r[d - 7] + gamma0(r[d - 15]) + r[d - 16];
            for (var p = 0; p < 64; ++p) {
                var m = h + sigma1(u) + ch(u, c, l) + a[p] + r[p] | 0,
                    y = sigma0(n) + maj(n, i, o) | 0;
                h = l, l = c, c = u, u = s + m | 0, s = o, o = i, i = n, n = m + y | 0
            }
            this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = o + this._c | 0, this._d = s + this._d | 0, this._e = u + this._e | 0, this._f = c + this._f | 0, this._g = l + this._g | 0, this._h = h + this._h | 0
        }, Sha256.prototype._hash = function () {
            var t = o.allocUnsafe(32);
            return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t.writeInt32BE(this._h, 28), t
        }, t.exports = Sha256
    }, function (t, e, r) {
        var n = r(1),
            i = r(69),
            o = r(3).Buffer,
            a = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591],
            s = new Array(160);

        function Sha512() {
            this.init(), this._w = s, i.call(this, 128, 112)
        }

        function Ch(t, e, r) {
            return r ^ t & (e ^ r)
        }

        function maj(t, e, r) {
            return t & e | r & (t | e)
        }

        function sigma0(t, e) {
            return (t >>> 28 | e << 4) ^ (e >>> 2 | t << 30) ^ (e >>> 7 | t << 25)
        }

        function sigma1(t, e) {
            return (t >>> 14 | e << 18) ^ (t >>> 18 | e << 14) ^ (e >>> 9 | t << 23)
        }

        function Gamma0(t, e) {
            return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ t >>> 7
        }

        function Gamma0l(t, e) {
            return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ (t >>> 7 | e << 25)
        }

        function Gamma1(t, e) {
            return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ t >>> 6
        }

        function Gamma1l(t, e) {
            return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ (t >>> 6 | e << 26)
        }

        function getCarry(t, e) {
            return t >>> 0 < e >>> 0 ? 1 : 0
        }
        n(Sha512, i), Sha512.prototype.init = function () {
            return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this
        }, Sha512.prototype._update = function (t) {
            for (var e = this._w, r = 0 | this._ah, n = 0 | this._bh, i = 0 | this._ch, o = 0 | this._dh, s = 0 | this._eh, u = 0 | this._fh, c = 0 | this._gh, l = 0 | this._hh, h = 0 | this._al, d = 0 | this._bl, p = 0 | this._cl, m = 0 | this._dl, y = 0 | this._el, b = 0 | this._fl, g = 0 | this._gl, v = 0 | this._hl, w = 0; w < 32; w += 2) e[w] = t.readInt32BE(4 * w), e[w + 1] = t.readInt32BE(4 * w + 4);
            for (; w < 160; w += 2) {
                var M = e[w - 30],
                    A = e[w - 30 + 1],
                    x = Gamma0(M, A),
                    B = Gamma0l(A, M),
                    E = Gamma1(M = e[w - 4], A = e[w - 4 + 1]),
                    k = Gamma1l(A, M),
                    N = e[w - 14],
                    T = e[w - 14 + 1],
                    C = e[w - 32],
                    P = e[w - 32 + 1],
                    I = B + T | 0,
                    O = x + N + getCarry(I, B) | 0;
                O = (O = O + E + getCarry(I = I + k | 0, k) | 0) + C + getCarry(I = I + P | 0, P) | 0, e[w] = O, e[w + 1] = I
            }
            for (var D = 0; D < 160; D += 2) {
                O = e[D], I = e[D + 1];
                var j = maj(r, n, i),
                    L = maj(h, d, p),
                    U = sigma0(r, h),
                    H = sigma0(h, r),
                    q = sigma1(s, y),
                    z = sigma1(y, s),
                    G = a[D],
                    V = a[D + 1],
                    J = Ch(s, u, c),
                    W = Ch(y, b, g),
                    Z = v + z | 0,
                    X = l + q + getCarry(Z, v) | 0;
                X = (X = (X = X + J + getCarry(Z = Z + W | 0, W) | 0) + G + getCarry(Z = Z + V | 0, V) | 0) + O + getCarry(Z = Z + I | 0, I) | 0;
                var Y = H + L | 0,
                    $ = U + j + getCarry(Y, H) | 0;
                l = c, v = g, c = u, g = b, u = s, b = y, s = o + X + getCarry(y = m + Z | 0, m) | 0, o = i, m = p, i = n, p = d, n = r, d = h, r = X + $ + getCarry(h = Z + Y | 0, Z) | 0
            }
            this._al = this._al + h | 0, this._bl = this._bl + d | 0, this._cl = this._cl + p | 0, this._dl = this._dl + m | 0, this._el = this._el + y | 0, this._fl = this._fl + b | 0, this._gl = this._gl + g | 0, this._hl = this._hl + v | 0, this._ah = this._ah + r + getCarry(this._al, h) | 0, this._bh = this._bh + n + getCarry(this._bl, d) | 0, this._ch = this._ch + i + getCarry(this._cl, p) | 0, this._dh = this._dh + o + getCarry(this._dl, m) | 0, this._eh = this._eh + s + getCarry(this._el, y) | 0, this._fh = this._fh + u + getCarry(this._fl, b) | 0, this._gh = this._gh + c + getCarry(this._gl, g) | 0, this._hh = this._hh + l + getCarry(this._hl, v) | 0
        }, Sha512.prototype._hash = function () {
            var t = o.allocUnsafe(64);

            function writeInt64BE(e, r, n) {
                t.writeInt32BE(e, n), t.writeInt32BE(r, n + 4)
            }
            return writeInt64BE(this._ah, this._al, 0), writeInt64BE(this._bh, this._bl, 8), writeInt64BE(this._ch, this._cl, 16), writeInt64BE(this._dh, this._dl, 24), writeInt64BE(this._eh, this._el, 32), writeInt64BE(this._fh, this._fl, 40), writeInt64BE(this._gh, this._gl, 48), writeInt64BE(this._hh, this._hl, 56), t
        }, t.exports = Sha512
    }, function (t, e, r) {
        var n = e;
        n.base = r(124), n.short = r(689), n.mont = r(690), n.edwards = r(691)
    }, function (t, e, r) {
        (function (e) {
            var n = r(126),
                i = r(49),
                o = r(66),
                a = r(50),
                s = r(67),
                isBN = function (t) {
                    return n.isBN(t)
                },
                isBigNumber = function (t) {
                    return t && t.constructor && "BigNumber" === t.constructor.name
                },
                toBN = function (t) {
                    try {
                        return i.apply(null, arguments)
                    } catch (e) {
                        throw new Error(e + ' Given value: "' + t + '"')
                    }
                },
                isAddress = function (t) {
                    return !!/^(0x)?[0-9a-f]{40}$/i.test(t) && (!(!/^(0x|0X)?[0-9a-f]{40}$/.test(t) && !/^(0x|0X)?[0-9A-F]{40}$/.test(t)) || checkAddressChecksum(t))
                },
                checkAddressChecksum = function (t) {
                    t = t.replace(/^0x/i, "");
                    for (var e = sha3(t.toLowerCase()).replace(/^0x/i, ""), r = 0; r < 40; r++)
                        if (parseInt(e[r], 16) > 7 && t[r].toUpperCase() !== t[r] || parseInt(e[r], 16) <= 7 && t[r].toLowerCase() !== t[r]) return !1;
                    return !0
                },
                utf8ToHex = function (t) {
                    var e = "";
                    t = (t = (t = (t = (t = o.encode(t)).replace(/^(?:\u0000)*/, "")).split("").reverse().join("")).replace(/^(?:\u0000)*/, "")).split("").reverse().join("");
                    for (var r = 0; r < t.length; r++) {
                        var n = t.charCodeAt(r).toString(16);
                        e += n.length < 2 ? "0" + n : n
                    }
                    return "0x" + e
                },
                hexToNumber = function (t) {
                    if (!t) return t;
                    if ("string" == typeof t && !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    return toBN(t).toNumber()
                },
                numberToHex = function (t) {
                    if (null == t) return t;
                    if (!isFinite(t) && !isHexStrict(t)) throw new Error('Given input "' + t + '" is not a number.');
                    var e = toBN(t),
                        r = e.toString(16);
                    return e.lt(new n(0)) ? "-0x" + r.substr(1) : "0x" + r
                },
                hexToBytes = function (t) {
                    if (t = t.toString(16), !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    t = t.replace(/^0x/i, "");
                    for (var e = [], r = 0; r < t.length; r += 2) e.push(parseInt(t.substr(r, 2), 16));
                    return e
                },
                toHex = function (t, r) {
                    if (isAddress(t)) return r ? "address" : "0x" + t.toLowerCase().replace(/^0x/i, "");
                    if ("boolean" == typeof t) return r ? "bool" : t ? "0x01" : "0x00";
                    if (e.isBuffer(t)) return "0x" + t.toString("hex");
                    if ("object" == typeof t && t && !isBigNumber(t) && !isBN(t)) return r ? "string" : utf8ToHex(JSON.stringify(t));
                    if ("string" == typeof t) {
                        if (0 === t.indexOf("-0x") || 0 === t.indexOf("-0X")) return r ? "int256" : numberToHex(t);
                        if (0 === t.indexOf("0x") || 0 === t.indexOf("0X")) return r ? "bytes" : t;
                        if (!isFinite(t)) return r ? "string" : utf8ToHex(t)
                    }
                    return r ? t < 0 ? "int256" : "uint256" : numberToHex(t)
                },
                isHexStrict = function (t) {
                    return ("string" == typeof t || "number" == typeof t) && /^(-)?0x[0-9a-f]*$/i.test(t)
                },
                isHex = function (t) {
                    return ("string" == typeof t || "number" == typeof t) && /^(-0x|0x)?[0-9a-f]*$/i.test(t)
                },
                u = "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                sha3 = function (t) {
                    isBN(t) && (t = t.toString()), isHexStrict(t) && /^0x/i.test(t.toString()) && (t = hexToBytes(t));
                    var e = a.keccak256(t);
                    return e === u ? null : e
                };
            sha3._Hash = a;
            t.exports = {
                BN: n,
                isBN: isBN,
                isBigNumber: isBigNumber,
                toBN: toBN,
                isAddress: isAddress,
                isBloom: function (t) {
                    return s.isBloom(t)
                },
                isUserEthereumAddressInBloom: function (t, e) {
                    return s.isUserEthereumAddressInBloom(t, e)
                },
                isContractAddressInBloom: function (t, e) {
                    return s.isContractAddressInBloom(t, e)
                },
                isTopic: function (t) {
                    return s.isTopic(t)
                },
                isTopicInBloom: function (t, e) {
                    return s.isTopicInBloom(t, e)
                },
                isInBloom: function (t, e) {
                    return s.isInBloom(t, e)
                },
                checkAddressChecksum: checkAddressChecksum,
                utf8ToHex: utf8ToHex,
                hexToUtf8: function (t) {
                    if (!isHexStrict(t)) throw new Error('The parameter "' + t + '" must be a valid HEX string.');
                    for (var e = "", r = 0, n = (t = (t = (t = (t = (t = t.replace(/^0x/i, "")).replace(/^(?:00)*/, "")).split("").reverse().join("")).replace(/^(?:00)*/, "")).split("").reverse().join("")).length, i = 0; i < n; i += 2) r = parseInt(t.substr(i, 2), 16), e += String.fromCharCode(r);
                    return o.decode(e)
                },
                hexToNumber: hexToNumber,
                hexToNumberString: function (t) {
                    if (!t) return t;
                    if ("string" == typeof t && !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    return toBN(t).toString(10)
                },
                numberToHex: numberToHex,
                toHex: toHex,
                hexToBytes: hexToBytes,
                bytesToHex: function (t) {
                    for (var e = [], r = 0; r < t.length; r++) e.push((t[r] >>> 4).toString(16)), e.push((15 & t[r]).toString(16));
                    return "0x" + e.join("")
                },
                isHex: isHex,
                isHexStrict: isHexStrict,
                stripHexPrefix: function (t) {
                    return 0 !== t && isHex(t) ? t.replace(/^(-)?0x/i, "$1") : t
                },
                leftPad: function (t, e, r) {
                    var n = /^0x/i.test(t) || "number" == typeof t,
                        i = e - (t = t.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? e - t.length + 1 : 0;
                    return (n ? "0x" : "") + new Array(i).join(r || "0") + t
                },
                rightPad: function (t, e, r) {
                    var n = /^0x/i.test(t) || "number" == typeof t,
                        i = e - (t = t.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? e - t.length + 1 : 0;
                    return (n ? "0x" : "") + t + new Array(i).join(r || "0")
                },
                toTwosComplement: function (t) {
                    return "0x" + toBN(t).toTwos(256).toString(16, 64)
                },
                sha3: sha3,
                sha3Raw: function (t) {
                    return null === (t = sha3(t)) ? u : t
                },
                toNumber: function (t) {
                    return "number" == typeof t ? t : hexToNumber(toHex(t))
                }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        const n = r(35),
            i = r(126),
            iso13616Prepare = function (t) {
                const e = "A".charCodeAt(0),
                    r = "Z".charCodeAt(0);
                return (t = (t = t.toUpperCase()).substr(4) + t.substr(0, 4)).split("").map((function (t) {
                    const n = t.charCodeAt(0);
                    return n >= e && n <= r ? n - e + 10 : t
                })).join("")
            },
            mod9710 = function (t) {
                let e, r = t;
                for (; r.length > 2;) e = r.slice(0, 9), r = parseInt(e, 10) % 97 + r.slice(e.length);
                return parseInt(r, 10) % 97
            };
        class Iban {
            constructor(t) {
                this._iban = t
            }
            static toAddress(t) {
                if (!(t = new Iban(t)).isDirect()) throw new Error("IBAN is indirect and can't be converted");
                return t.toAddress()
            }
            static toIban(t) {
                return Iban.fromAddress(t).toString()
            }
            static fromAddress(t) {
                if (!n.isAddress(t)) throw new Error("Provided address is not a valid address: " + t);
                t = t.replace("0x", "").replace("0X", "");
                const e = function (t, e) {
                    let r = t;
                    for (; r.length < 2 * e;) r = "0" + r;
                    return r
                }(new i(t, 16).toString(36), 15);
                return Iban.fromBban(e.toUpperCase())
            }
            static fromBban(t) {
                const e = ("0" + (98 - mod9710(iso13616Prepare("XE00" + t)))).slice(-2);
                return new Iban("XE" + e + t)
            }
            static createIndirect(t) {
                return Iban.fromBban("ETH" + t.institution + t.identifier)
            }
            static isValid(t) {
                return new Iban(t).isValid()
            }
            isValid() {
                return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban) && 1 === mod9710(iso13616Prepare(this._iban))
            }
            isDirect() {
                return 34 === this._iban.length || 35 === this._iban.length
            }
            isIndirect() {
                return 20 === this._iban.length
            }
            checksum() {
                return this._iban.substr(2, 2)
            }
            institution() {
                return this.isIndirect() ? this._iban.substr(7, 4) : ""
            }
            client() {
                return this.isIndirect() ? this._iban.substr(11) : ""
            }
            toAddress() {
                if (this.isDirect()) {
                    const t = this._iban.substr(4),
                        e = new i(t, 36);
                    return n.toChecksumAddress(e.toString(16, 20))
                }
                return ""
            }
            toString() {
                return this._iban
            }
        }
        t.exports = Iban
    }, function (t, e, r) {
        var n = {
            messageId: 0,
            toPayload: function (t, e) {
                if (!t) throw new Error('JSONRPC method should be specified for params: "' + JSON.stringify(e) + '"!');
                return n.messageId++, {
                    jsonrpc: "2.0",
                    id: n.messageId,
                    method: t,
                    params: e || []
                }
            },
            isValidResponse: function (t) {
                return Array.isArray(t) ? t.every(validateSingleMessage) : validateSingleMessage(t);

                function validateSingleMessage(t) {
                    return !(!t || t.error || "2.0" !== t.jsonrpc || "number" != typeof t.id && "string" != typeof t.id || void 0 === t.result)
                }
            },
            toBatchPayload: function (t) {
                return t.map((function (t) {
                    return n.toPayload(t.method, t.params)
                }))
            }
        };
        t.exports = n
    }, function (t, e, r) {
        var n = r(189),
            i = function PromiEvent(t) {
                var e, r, i = new Promise((function () {
                    e = arguments[0], r = arguments[1]
                }));
                if (t) return {
                    resolve: e,
                    reject: r,
                    eventEmitter: i
                };
                var o = new n;
                return i._events = o._events, i.emit = o.emit, i.on = o.on, i.once = o.once, i.off = o.off, i.listeners = o.listeners, i.addListener = o.addListener, i.removeListener = o.removeListener, i.removeAllListeners = o.removeAllListeners, {
                    resolve: e,
                    reject: r,
                    eventEmitter: i
                }
            };
        i.resolve = function (t) {
            var e = i(!0);
            return e.resolve(t), e.eventEmitter
        }, t.exports = i
    }, function (t, e, r) {
        var n = r(125),
            i = r(92),
            o = r(35),
            Net = function () {
                var t = this;
                n.packageInit(this, arguments), [new i({
                    name: "getId",
                    call: "net_version",
                    params: 0,
                    outputFormatter: parseInt
                }), new i({
                    name: "isListening",
                    call: "net_listening",
                    params: 0
                }), new i({
                    name: "getPeerCount",
                    call: "net_peerCount",
                    params: 0,
                    outputFormatter: o.hexToNumber
                })].forEach((function (e) {
                    e.attachToObject(t), e.setRequestManager(t._requestManager)
                }))
            };
        n.addProviders(Net), t.exports = Net
    }, function (t, e, r) {
        t.exports = {
            addresses: {
                main: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                ropsten: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                rinkeby: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
                goerli: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
            },
            interfaceIds: {
                addr: "0x3b3b57de",
                setAddr: "0x3b3b57de",
                pubkey: "0xc8690233",
                setPubkey: "0xc8690233",
                contenthash: "0xbc1c58d1",
                setContenthash: "0xbc1c58d1",
                content: "0xd8389dc5",
                setContent: "0xd8389dc5"
            }
        }
    }, function (t, e, r) {
        (function (e) {
            var n = r(127),
                i = r(49),
                o = r(66),
                a = r(50),
                s = r(67),
                isBN = function (t) {
                    return n.isBN(t)
                },
                isBigNumber = function (t) {
                    return t && t.constructor && "BigNumber" === t.constructor.name
                },
                toBN = function (t) {
                    try {
                        return i.apply(null, arguments)
                    } catch (e) {
                        throw new Error(e + ' Given value: "' + t + '"')
                    }
                },
                isAddress = function (t) {
                    return !!/^(0x)?[0-9a-f]{40}$/i.test(t) && (!(!/^(0x|0X)?[0-9a-f]{40}$/.test(t) && !/^(0x|0X)?[0-9A-F]{40}$/.test(t)) || checkAddressChecksum(t))
                },
                checkAddressChecksum = function (t) {
                    t = t.replace(/^0x/i, "");
                    for (var e = sha3(t.toLowerCase()).replace(/^0x/i, ""), r = 0; r < 40; r++)
                        if (parseInt(e[r], 16) > 7 && t[r].toUpperCase() !== t[r] || parseInt(e[r], 16) <= 7 && t[r].toLowerCase() !== t[r]) return !1;
                    return !0
                },
                utf8ToHex = function (t) {
                    var e = "";
                    t = (t = (t = (t = (t = o.encode(t)).replace(/^(?:\u0000)*/, "")).split("").reverse().join("")).replace(/^(?:\u0000)*/, "")).split("").reverse().join("");
                    for (var r = 0; r < t.length; r++) {
                        var n = t.charCodeAt(r).toString(16);
                        e += n.length < 2 ? "0" + n : n
                    }
                    return "0x" + e
                },
                hexToNumber = function (t) {
                    if (!t) return t;
                    if ("string" == typeof t && !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    return toBN(t).toNumber()
                },
                numberToHex = function (t) {
                    if (null == t) return t;
                    if (!isFinite(t) && !isHexStrict(t)) throw new Error('Given input "' + t + '" is not a number.');
                    var e = toBN(t),
                        r = e.toString(16);
                    return e.lt(new n(0)) ? "-0x" + r.substr(1) : "0x" + r
                },
                hexToBytes = function (t) {
                    if (t = t.toString(16), !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    t = t.replace(/^0x/i, "");
                    for (var e = [], r = 0; r < t.length; r += 2) e.push(parseInt(t.substr(r, 2), 16));
                    return e
                },
                toHex = function (t, r) {
                    if (isAddress(t)) return r ? "address" : "0x" + t.toLowerCase().replace(/^0x/i, "");
                    if ("boolean" == typeof t) return r ? "bool" : t ? "0x01" : "0x00";
                    if (e.isBuffer(t)) return "0x" + t.toString("hex");
                    if ("object" == typeof t && t && !isBigNumber(t) && !isBN(t)) return r ? "string" : utf8ToHex(JSON.stringify(t));
                    if ("string" == typeof t) {
                        if (0 === t.indexOf("-0x") || 0 === t.indexOf("-0X")) return r ? "int256" : numberToHex(t);
                        if (0 === t.indexOf("0x") || 0 === t.indexOf("0X")) return r ? "bytes" : t;
                        if (!isFinite(t)) return r ? "string" : utf8ToHex(t)
                    }
                    return r ? t < 0 ? "int256" : "uint256" : numberToHex(t)
                },
                isHexStrict = function (t) {
                    return ("string" == typeof t || "number" == typeof t) && /^(-)?0x[0-9a-f]*$/i.test(t)
                },
                isHex = function (t) {
                    return ("string" == typeof t || "number" == typeof t) && /^(-0x|0x)?[0-9a-f]*$/i.test(t)
                },
                u = "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                sha3 = function (t) {
                    isBN(t) && (t = t.toString()), isHexStrict(t) && /^0x/i.test(t.toString()) && (t = hexToBytes(t));
                    var e = a.keccak256(t);
                    return e === u ? null : e
                };
            sha3._Hash = a;
            t.exports = {
                BN: n,
                isBN: isBN,
                isBigNumber: isBigNumber,
                toBN: toBN,
                isAddress: isAddress,
                isBloom: function (t) {
                    return s.isBloom(t)
                },
                isUserEthereumAddressInBloom: function (t, e) {
                    return s.isUserEthereumAddressInBloom(t, e)
                },
                isContractAddressInBloom: function (t, e) {
                    return s.isContractAddressInBloom(t, e)
                },
                isTopic: function (t) {
                    return s.isTopic(t)
                },
                isTopicInBloom: function (t, e) {
                    return s.isTopicInBloom(t, e)
                },
                isInBloom: function (t, e) {
                    return s.isInBloom(t, e)
                },
                checkAddressChecksum: checkAddressChecksum,
                utf8ToHex: utf8ToHex,
                hexToUtf8: function (t) {
                    if (!isHexStrict(t)) throw new Error('The parameter "' + t + '" must be a valid HEX string.');
                    for (var e = "", r = 0, n = (t = (t = (t = (t = (t = t.replace(/^0x/i, "")).replace(/^(?:00)*/, "")).split("").reverse().join("")).replace(/^(?:00)*/, "")).split("").reverse().join("")).length, i = 0; i < n; i += 2) r = parseInt(t.substr(i, 2), 16), e += String.fromCharCode(r);
                    return o.decode(e)
                },
                hexToNumber: hexToNumber,
                hexToNumberString: function (t) {
                    if (!t) return t;
                    if ("string" == typeof t && !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    return toBN(t).toString(10)
                },
                numberToHex: numberToHex,
                toHex: toHex,
                hexToBytes: hexToBytes,
                bytesToHex: function (t) {
                    for (var e = [], r = 0; r < t.length; r++) e.push((t[r] >>> 4).toString(16)), e.push((15 & t[r]).toString(16));
                    return "0x" + e.join("")
                },
                isHex: isHex,
                isHexStrict: isHexStrict,
                stripHexPrefix: function (t) {
                    return 0 !== t && isHex(t) ? t.replace(/^(-)?0x/i, "$1") : t
                },
                leftPad: function (t, e, r) {
                    var n = /^0x/i.test(t) || "number" == typeof t,
                        i = e - (t = t.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? e - t.length + 1 : 0;
                    return (n ? "0x" : "") + new Array(i).join(r || "0") + t
                },
                rightPad: function (t, e, r) {
                    var n = /^0x/i.test(t) || "number" == typeof t,
                        i = e - (t = t.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? e - t.length + 1 : 0;
                    return (n ? "0x" : "") + t + new Array(i).join(r || "0")
                },
                toTwosComplement: function (t) {
                    return "0x" + toBN(t).toTwos(256).toString(16, 64)
                },
                sha3: sha3,
                sha3Raw: function (t) {
                    return null === (t = sha3(t)) ? u : t
                },
                toNumber: function (t) {
                    return "number" == typeof t ? t : hexToNumber(toHex(t))
                }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = {
            messageId: 0,
            toPayload: function (t, e) {
                if (!t) throw new Error('JSONRPC method should be specified for params: "' + JSON.stringify(e) + '"!');
                return n.messageId++, {
                    jsonrpc: "2.0",
                    id: n.messageId,
                    method: t,
                    params: e || []
                }
            },
            isValidResponse: function (t) {
                return Array.isArray(t) ? t.every(validateSingleMessage) : validateSingleMessage(t);

                function validateSingleMessage(t) {
                    return !(!t || t.error || "2.0" !== t.jsonrpc || "number" != typeof t.id && "string" != typeof t.id || void 0 === t.result)
                }
            },
            toBatchPayload: function (t) {
                return t.map((function (t) {
                    return n.toPayload(t.method, t.params)
                }))
            }
        };
        t.exports = n
    }, function (t, e, r) {
        var n = r(10).errors,
            i = r(10).formatters,
            o = r(43),
            a = r(128),
            s = r(294).subscriptions,
            u = r(41).Hardfork,
            c = r(100),
            l = function Method(t) {
                if (!t.call || !t.name) throw new Error('When creating a method you need to provide at least the "name" and "call" property.');
                this.name = t.name, this.call = t.call, this.params = t.params || 0, this.inputFormatter = t.inputFormatter, this.outputFormatter = t.outputFormatter, this.transformPayload = t.transformPayload, this.extraFormatters = t.extraFormatters, this.abiCoder = t.abiCoder, this.requestManager = t.requestManager, this.accounts = t.accounts, this.defaultBlock = t.defaultBlock || "latest", this.defaultAccount = t.defaultAccount || null, this.transactionBlockTimeout = t.transactionBlockTimeout || 50, this.transactionConfirmationBlocks = t.transactionConfirmationBlocks || 24, this.transactionPollingTimeout = t.transactionPollingTimeout || 750, this.defaultCommon = t.defaultCommon, this.defaultChain = t.defaultChain, this.defaultHardfork = t.defaultHardfork, this.handleRevert = t.handleRevert
            };
        l.prototype.setRequestManager = function (t, e) {
            this.requestManager = t, e && (this.accounts = e)
        }, l.prototype.createFunction = function (t, e) {
            var r = this.buildCall();
            return r.call = this.call, this.setRequestManager(t || this.requestManager, e || this.accounts), r
        }, l.prototype.attachToObject = function (t) {
            var e = this.buildCall();
            e.call = this.call;
            var r = this.name.split(".");
            r.length > 1 ? (t[r[0]] = t[r[0]] || {}, t[r[0]][r[1]] = e) : t[r[0]] = e
        }, l.prototype.getCall = function (t) {
            return "function" == typeof this.call ? this.call(t) : this.call
        }, l.prototype.extractCallback = function (t) {
            if ("function" == typeof t[t.length - 1]) return t.pop()
        }, l.prototype.validateArgs = function (t) {
            if (t.length !== this.params) throw n.InvalidNumberOfParams(t.length, this.params, this.name)
        }, l.prototype.formatInput = function (t) {
            var e = this;
            return this.inputFormatter ? this.inputFormatter.map((function (r, n) {
                return r ? r.call(e, t[n]) : t[n]
            })) : t
        }, l.prototype.formatOutput = function (t) {
            var e = this;
            return Array.isArray(t) ? t.map((function (t) {
                return e.outputFormatter && t ? e.outputFormatter(t) : t
            })) : this.outputFormatter && t ? this.outputFormatter(t) : t
        }, l.prototype.toPayload = function (t) {
            var e = this.getCall(t),
                r = this.extractCallback(t),
                n = this.formatInput(t);
            this.validateArgs(n);
            var i = {
                method: e,
                params: n,
                callback: r
            };
            return this.transformPayload && (i = this.transformPayload(i)), i
        }, l.prototype._confirmTransaction = function (t, e, r) {
            var u = this,
                h = !1,
                d = !0,
                p = 0,
                m = 0,
                y = null,
                b = null,
                g = r.params[0] && "object" == typeof r.params[0] && r.params[0].gas ? r.params[0].gas : null,
                v = !!r.params[0] && "object" == typeof r.params[0] && r.params[0].data && r.params[0].from && !r.params[0].to,
                w = v && r.params[0].data.length > 2,
                M = [new l({
                    name: "getBlockByNumber",
                    call: "eth_getBlockByNumber",
                    params: 2,
                    inputFormatter: [i.inputBlockNumberFormatter, function (t) {
                        return !!t
                    }],
                    outputFormatter: i.outputBlockFormatter
                }), new l({
                    name: "getTransactionReceipt",
                    call: "eth_getTransactionReceipt",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: i.outputTransactionReceiptFormatter
                }), new l({
                    name: "getCode",
                    call: "eth_getCode",
                    params: 2,
                    inputFormatter: [i.inputAddressFormatter, i.inputDefaultBlockNumberFormatter]
                }), new l({
                    name: "getTransactionByHash",
                    call: "eth_getTransactionByHash",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: i.outputTransactionFormatter
                }), new s({
                    name: "subscribe",
                    type: "eth",
                    subscriptions: {
                        newBlockHeaders: {
                            subscriptionName: "newHeads",
                            params: 0,
                            outputFormatter: i.outputBlockFormatter
                        }
                    }
                })],
                A = {};
            M.forEach(t => {
                t.attachToObject(A), t.requestManager = u.requestManager
            });
            var checkConfirmation = function (s, l, M, x, B) {
                    if (!M) return B || (B = {
                        unsubscribe: function () {
                            clearInterval(y)
                        }
                    }), (s ? a.resolve(s) : A.getTransactionReceipt(e)).catch((function (e) {
                        B.unsubscribe(), h = !0, o._fireError({
                            message: "Failed to check for transaction receipt:",
                            data: e
                        }, t.eventEmitter, t.reject)
                    })).then((async function (e) {
                        if (!e || !e.blockHash) throw new Error("Receipt missing or blockHash null");
                        if (u.extraFormatters && u.extraFormatters.receiptFormatter && (e = u.extraFormatters.receiptFormatter(e)), t.eventEmitter.listeners("confirmation").length > 0) {
                            var r;
                            if (void 0 === s || 0 !== m) {
                                var n = await A.getBlockByNumber("latest"),
                                    i = n ? n.hash : null;
                                l ? b ? (r = await A.getBlockByNumber(b.number + 1)) && (b = r, t.eventEmitter.emit("confirmation", m, e, i)) : (r = await A.getBlockByNumber(e.blockNumber), b = r, t.eventEmitter.emit("confirmation", m, e, i)) : t.eventEmitter.emit("confirmation", m, e, i)
                            }(l && r || !l) && m++, d = !1, m === u.transactionConfirmationBlocks + 1 && (B.unsubscribe(), t.eventEmitter.removeAllListeners())
                        }
                        return e
                    })).then((async function (e) {
                        if (v && !h) {
                            if (!e.contractAddress) return d && (B.unsubscribe(), h = !0), void o._fireError(n.NoContractAddressFoundError(e), t.eventEmitter, t.reject, null, e);
                            var r;
                            try {
                                r = await A.getCode(e.contractAddress)
                            } catch (t) {}
                            if (!r) return;
                            !0 === e.status && w || r.length > 2 ? (t.eventEmitter.emit("receipt", e), u.extraFormatters && u.extraFormatters.contractDeployFormatter ? t.resolve(u.extraFormatters.contractDeployFormatter(e)) : t.resolve(e), d && t.eventEmitter.removeAllListeners()) : o._fireError(n.ContractCodeNotStoredError(e), t.eventEmitter, t.reject, null, e), d && B.unsubscribe(), h = !0
                        }
                        return e
                    })).then((async function (e) {
                        if (!v && !h) {
                            if (e.outOfGas || g && g === e.gasUsed || !0 !== e.status && "0x1" !== e.status && void 0 !== e.status)
                                if (JSON.stringify(e, null, 2), !1 === e.status || "0x0" === e.status) try {
                                    var a = null;
                                    if (!u.handleRevert || "eth_sendTransaction" !== u.call && "eth_sendRawTransaction" !== u.call) throw !1;
                                    var s = r.params[0];
                                    if ("eth_sendRawTransaction" === u.call) {
                                        var l = r.params[0],
                                            p = c.parse(l);
                                        s = i.inputTransactionFormatter({
                                            data: p.data,
                                            to: p.to,
                                            from: p.from,
                                            gas: p.gasLimit.toHexString(),
                                            gasPrice: p.gasPrice.toHexString(),
                                            value: p.value.toHexString()
                                        })
                                    }
                                    if (!(a = await u.getRevertReason(s, e.blockNumber))) throw !1;
                                    o._fireError(n.TransactionRevertInstructionError(a.reason, a.signature, e), t.eventEmitter, t.reject, null, e)
                                } catch (r) {
                                    o._fireError(n.TransactionRevertedWithoutReasonError(e), t.eventEmitter, t.reject, null, e)
                                } else o._fireError(n.TransactionOutOfGasError(e), t.eventEmitter, t.reject, null, e);
                                else t.eventEmitter.emit("receipt", e), t.resolve(e), d && t.eventEmitter.removeAllListeners();
                            d && B.unsubscribe(), h = !0
                        }
                    })).catch((function () {
                        p++, l ? p - 1 >= u.transactionPollingTimeout && (B.unsubscribe(), h = !0, o._fireError(n.TransactionError("Transaction was not mined within " + u.transactionPollingTimeout + " seconds, please make sure your transaction was properly sent. Be aware that it might still be mined!"), t.eventEmitter, t.reject)) : p - 1 >= u.transactionBlockTimeout && (B.unsubscribe(), h = !0, o._fireError(n.TransactionError("Transaction was not mined within " + u.transactionBlockTimeout + " blocks, please make sure your transaction was properly sent. Be aware that it might still be mined!"), t.eventEmitter, t.reject))
                    }));
                    B.unsubscribe(), h = !0, o._fireError({
                        message: "Failed to subscribe to new newBlockHeaders to confirm the transaction receipts.",
                        data: M
                    }, t.eventEmitter, t.reject)
                },
                x = function (t) {
                    const startInterval = () => {
                        y = setInterval(checkConfirmation.bind(null, t, !0), 1e3)
                    };
                    this.requestManager.provider.on ? A.subscribe("newBlockHeaders", (function (e, r, n) {
                        e || !r ? startInterval() : checkConfirmation(t, !1, e, 0, n)
                    })) : startInterval()
                }.bind(this);
            A.getTransactionReceipt(e).then((function (e) {
                e && e.blockHash ? (t.eventEmitter.listeners("confirmation").length > 0 && x(e), checkConfirmation(e, !1)) : h || x()
            })).catch((function () {
                h || x()
            }))
        };
        var getWallet = function (t, e) {
            return "number" == typeof t ? e.wallet[t] : t && "object" == typeof t && t.address && t.privateKey ? t : e.wallet[t.toLowerCase()]
        };

        function _handleTxType(t) {
            const e = void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas;
            let r;
            if (r = void 0 !== t.type ? o.toHex(t.type) : void 0 === t.type && e ? "0x2" : "0x0", void 0 !== t.gasPrice && ("0x2" === r || e)) throw Error("eip-1559 transactions don't support gasPrice");
            if (("0x1" === r || "0x0" === r) && e) throw Error("pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas");
            return e || t.common && t.common.hardfork && t.common.hardfork.toLowerCase() === u.London || t.hardfork && t.hardfork.toLowerCase() === u.London ? r = "0x2" : (t.accessList || t.common && t.common.hardfork && t.common.hardfork.toLowerCase() === u.Berlin || t.hardfork && t.hardfork.toLowerCase() === u.Berlin) && (r = "0x1"), r
        }

        function _handleTxPricing(t, e) {
            return new Promise((r, n) => {
                try {
                    var i = new l({
                            name: "getBlockByNumber",
                            call: "eth_getBlockByNumber",
                            params: 2,
                            inputFormatter: [function (t) {
                                return t ? o.toHex(t) : "latest"
                            }, function () {
                                return !1
                            }]
                        }).createFunction(t.requestManager),
                        a = new l({
                            name: "getGasPrice",
                            call: "eth_gasPrice",
                            params: 0
                        }).createFunction(t.requestManager);
                    e.type < "0x2" && void 0 !== e.gasPrice ? r({
                        gasPrice: e.gasPrice
                    }) : Promise.all([i(), a()]).then(t => {
                        const [n, i] = t;
                        if ("0x2" === e.type && n && n.baseFeePerGas) {
                            let t, i;
                            e.gasPrice ? (t = e.gasPrice, i = e.gasPrice, delete e.gasPrice) : (t = e.maxPriorityFeePerGas || "0x3B9ACA00", i = e.maxFeePerGas || o.toHex(o.toBN(n.baseFeePerGas).mul(o.toBN(2)).add(o.toBN(t)))), r({
                                maxFeePerGas: i,
                                maxPriorityFeePerGas: t
                            })
                        } else {
                            if (e.maxPriorityFeePerGas || e.maxFeePerGas) throw Error("Network doesn't support eip-1559");
                            r({
                                gasPrice: i
                            })
                        }
                    })
                } catch (t) {
                    n(t)
                }
            })
        }
        l.prototype.buildCall = function () {
            var t = this,
                e = "eth_sendTransaction" === t.call || "eth_sendRawTransaction" === t.call,
                r = "eth_call" === t.call,
                send = function () {
                    var i = a(!e),
                        s = t.toPayload(Array.prototype.slice.call(arguments)),
                        sendTxCallback = function (a, u) {
                            var c;
                            if (t.handleRevert && r && t.abiCoder && (!a && t.isRevertReasonString(u) ? c = u.substring(10) : a && a.data && (c = a.data.substring(10)), c)) {
                                var l = t.abiCoder.decodeParameter("string", "0x" + c);
                                return void o._fireError(n.RevertInstructionError(l, "Error(String)"), i.eventEmitter, i.reject, s.callback, {
                                    reason: l,
                                    signature: "Error(String)"
                                })
                            }
                            try {
                                u = t.formatOutput(u)
                            } catch (t) {
                                a = t
                            }
                            if (u instanceof Error && (a = u), a) return a.error && (a = a.error), o._fireError(a, i.eventEmitter, i.reject, s.callback);
                            s.callback && s.callback(null, u), e ? (i.eventEmitter.emit("transactionHash", u), t._confirmTransaction(i, u, s)) : a || i.resolve(u)
                        },
                        sendSignedTx = function (e) {
                            var r = {
                                ...s,
                                method: "eth_sendRawTransaction",
                                params: [e.rawTransaction]
                            };
                            t.requestManager.send(r, sendTxCallback)
                        },
                        sendRequest = function (t, e) {
                            var r;
                            if (e && e.accounts && e.accounts.wallet && e.accounts.wallet.length)
                                if ("eth_sendTransaction" === t.method) {
                                    var n = t.params[0];
                                    if ((r = getWallet(n && "object" == typeof n ? n.from : null, e.accounts)) && r.privateKey) return delete(n = JSON.parse(JSON.stringify(n))).from, e.defaultChain && !n.chain && (n.chain = e.defaultChain), e.defaultHardfork && !n.hardfork && (n.hardfork = e.defaultHardfork), e.defaultCommon && !n.common && (n.common = e.defaultCommon), void e.accounts.signTransaction(n, r.privateKey).then(sendSignedTx).catch((function (t) {
                                        if ("function" == typeof i.eventEmitter.listeners && i.eventEmitter.listeners("error").length) {
                                            try {
                                                i.eventEmitter.emit("error", t)
                                            } catch (t) {}
                                            i.eventEmitter.removeAllListeners(), i.eventEmitter.catch((function () {}))
                                        }
                                        i.reject(t)
                                    }))
                                } else if ("eth_sign" === t.method) {
                                var o = t.params[1];
                                if ((r = getWallet(t.params[0], e.accounts)) && r.privateKey) {
                                    var a = e.accounts.sign(o, r.privateKey);
                                    return t.callback && t.callback(null, a.signature), void i.resolve(a.signature)
                                }
                            }
                            return e.requestManager.send(t, sendTxCallback)
                        };
                    return e && s.params[0] && "object" == typeof s.params[0] && void 0 === s.params[0].gasPrice && (void 0 === s.params[0].maxPriorityFeePerGas || void 0 === s.params[0].maxFeePerGas) ? (void 0 === s.params[0].type && (s.params[0].type = _handleTxType(s.params[0])), _handleTxPricing(t, s.params[0]).then(r => {
                        void 0 !== r.gasPrice ? s.params[0].gasPrice = r.gasPrice : void 0 !== r.maxPriorityFeePerGas && void 0 !== r.maxFeePerGas && (s.params[0].maxPriorityFeePerGas = r.maxPriorityFeePerGas, s.params[0].maxFeePerGas = r.maxFeePerGas), e && setTimeout(() => {
                            i.eventEmitter.emit("sending", s)
                        }, 0), sendRequest(s, t)
                    })) : (e && setTimeout(() => {
                        i.eventEmitter.emit("sending", s)
                    }, 0), sendRequest(s, t)), e && setTimeout(() => {
                        i.eventEmitter.emit("sent", s)
                    }, 0), i.eventEmitter
                };
            return send.method = t, send.request = this.request.bind(this), send
        }, l.prototype.getRevertReason = function (t, e) {
            var r = this;
            return new Promise((function (n, i) {
                new l({
                    name: "call",
                    call: "eth_call",
                    params: 2,
                    abiCoder: r.abiCoder,
                    handleRevert: !0
                }).createFunction(r.requestManager)(t, o.numberToHex(e)).then((function () {
                    n(!1)
                })).catch((function (t) {
                    t.reason ? n({
                        reason: t.reason,
                        signature: t.signature
                    }) : i(t)
                }))
            }))
        }, l.prototype.isRevertReasonString = function (t) {
            return "string" == typeof t && (t.length - 2) / 2 % 32 == 4 && "0x08c379a0" === t.substring(0, 10)
        }, l.prototype.request = function () {
            var t = this.toPayload(Array.prototype.slice.call(arguments));
            return t.format = this.formatOutput.bind(this), t
        }, t.exports = l
    }, function (t, e, r) {
        var n = r(733),
            i = function Subscriptions(t) {
                this.name = t.name, this.type = t.type, this.subscriptions = t.subscriptions || {}, this.requestManager = null
            };
        i.prototype.setRequestManager = function (t) {
            this.requestManager = t
        }, i.prototype.attachToObject = function (t) {
            var e = this.buildCall(),
                r = this.name.split(".");
            r.length > 1 ? (t[r[0]] = t[r[0]] || {}, t[r[0]][r[1]] = e) : t[r[0]] = e
        }, i.prototype.buildCall = function () {
            var t = this;
            return function () {
                t.subscriptions[arguments[0]] || console.warn("Subscription " + JSON.stringify(arguments[0]) + " doesn't exist. Subscribing anyway.");
                var e = new n({
                    subscription: t.subscriptions[arguments[0]] || {},
                    requestManager: t.requestManager,
                    type: t.type
                });
                return e.subscribe.apply(e, arguments)
            }
        }, t.exports = {
            subscriptions: i,
            subscription: n
        }
    }, function (t, e, r) {
        (function (t) {
            var n = r(72).keccak_256,
                i = r(736);

            function normalize(t) {
                return t ? i.toUnicode(t, {
                    useStd3ASCII: !0,
                    transitional: !1
                }) : t
            }
            e.hash = function namehash(e) {
                for (var r = "", i = 0; i < 32; i++) r += "00";
                if (name = normalize(e), name) {
                    var o = name.split(".");
                    for (i = o.length - 1; i >= 0; i--) {
                        var a = n(o[i]);
                        r = n(new t(r + a, "hex"))
                    }
                }
                return "0x" + r
            }, e.normalize = normalize
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (e) {
            const n = r(93);

            function bufferToNumber(t) {
                return parseInt(t.toString("hex"), 16)
            }

            function numberToBuffer(t) {
                let r = t.toString(16);
                return r.length % 2 == 1 && (r = "0" + r), e.from(r, "hex")
            }
            t.exports = {
                numberToBuffer: numberToBuffer,
                bufferToNumber: bufferToNumber,
                varintBufferEncode: function varintBufferEncode(t) {
                    return e.from(n.encode(bufferToNumber(t)))
                },
                varintBufferDecode: function varintBufferDecode(t) {
                    return numberToBuffer(n.decode(t))
                },
                varintEncode: function varintEncode(t) {
                    return e.from(n.encode(t))
                }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        const {
            Buffer: n
        } = r(0), i = r(192), o = r(759), a = r(765), s = r(94), u = r(770), c = r(771);
        class CID {
            constructor(t, e, r, s) {
                if (l.isCID(t)) {
                    const e = t;
                    return this.version = e.version, this.codec = e.codec, this.multihash = n.from(e.multihash), void(this.multibaseName = e.multibaseName || (0 === e.version ? "base58btc" : "base32"))
                }
                if ("string" == typeof t) {
                    const e = o.isEncoded(t);
                    if (e) {
                        const r = o.decode(t);
                        this.version = parseInt(r.slice(0, 1).toString("hex"), 16), this.codec = a.getCodec(r.slice(1)), this.multihash = a.rmPrefix(r.slice(1)), this.multibaseName = e
                    } else this.version = 0, this.codec = "dag-pb", this.multihash = i.fromB58String(t), this.multibaseName = "base58btc";
                    return CID.validateCID(this), void Object.defineProperty(this, "string", {
                        value: t
                    })
                }
                if (n.isBuffer(t)) {
                    const e = t.slice(0, 1),
                        r = parseInt(e.toString("hex"), 16);
                    if (1 === r) {
                        const e = t;
                        this.version = r, this.codec = a.getCodec(e.slice(1)), this.multihash = a.rmPrefix(e.slice(1)), this.multibaseName = "base32"
                    } else this.version = 0, this.codec = "dag-pb", this.multihash = t, this.multibaseName = "base58btc";
                    CID.validateCID(this)
                } else this.version = t, this.codec = e, this.multihash = r, this.multibaseName = s || (0 === t ? "base58btc" : "base32"), CID.validateCID(this)
            }
            get buffer() {
                let t = this._buffer;
                if (!t) {
                    if (0 === this.version) t = this.multihash;
                    else {
                        if (1 !== this.version) throw new Error("unsupported version");
                        t = n.concat([n.from("01", "hex"), a.getCodeVarint(this.codec), this.multihash])
                    }
                    Object.defineProperty(this, "_buffer", {
                        value: t
                    })
                }
                return t
            }
            get prefix() {
                return n.concat([n.from("0" + this.version, "hex"), a.getCodeVarint(this.codec), i.prefix(this.multihash)])
            }
            toV0() {
                if ("dag-pb" !== this.codec) throw new Error("Cannot convert a non dag-pb CID to CIDv0");
                const {
                    name: t,
                    length: e
                } = i.decode(this.multihash);
                if ("sha2-256" !== t) throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
                if (32 !== e) throw new Error("Cannot convert non 32 byte multihash CID to CIDv0");
                return new l(0, this.codec, this.multihash)
            }
            toV1() {
                return new l(1, this.codec, this.multihash)
            }
            toBaseEncodedString(t = this.multibaseName) {
                if (this.string && t === this.multibaseName) return this.string;
                let e = null;
                if (0 === this.version) {
                    if ("base58btc" !== t) throw new Error("not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()");
                    e = i.toB58String(this.multihash)
                } else {
                    if (1 !== this.version) throw new Error("unsupported version");
                    e = o.encode(t, this.buffer).toString()
                }
                return t === this.multibaseName && Object.defineProperty(this, "string", {
                    value: e
                }), e
            } [Symbol.for("nodejs.util.inspect.custom")]() {
                return "CID(" + this.toString() + ")"
            }
            toString(t) {
                return this.toBaseEncodedString(t)
            }
            toJSON() {
                return {
                    codec: this.codec,
                    version: this.version,
                    hash: this.multihash
                }
            }
            equals(t) {
                return this.codec === t.codec && this.version === t.version && this.multihash.equals(t.multihash)
            }
            static validateCID(t) {
                const e = u.checkCIDComponents(t);
                if (e) throw new Error(e)
            }
        }
        const l = c(CID, {
            className: "CID",
            symbolName: "@ipld/js-cid/CID"
        });
        l.codecs = s, t.exports = l
    }, function (t, e, r) {
        var n = r(3).Buffer;
        t.exports = function base(t) {
            if (t.length >= 255) throw new TypeError("Alphabet too long");
            for (var e = new Uint8Array(256), r = 0; r < e.length; r++) e[r] = 255;
            for (var i = 0; i < t.length; i++) {
                var o = t.charAt(i),
                    a = o.charCodeAt(0);
                if (255 !== e[a]) throw new TypeError(o + " is ambiguous");
                e[a] = i
            }
            var s = t.length,
                u = t.charAt(0),
                c = Math.log(s) / Math.log(256),
                l = Math.log(256) / Math.log(s);

            function decodeUnsafe(t) {
                if ("string" != typeof t) throw new TypeError("Expected String");
                if (0 === t.length) return n.alloc(0);
                var r = 0;
                if (" " !== t[r]) {
                    for (var i = 0, o = 0; t[r] === u;) i++, r++;
                    for (var a = (t.length - r) * c + 1 >>> 0, l = new Uint8Array(a); t[r];) {
                        var h = e[t.charCodeAt(r)];
                        if (255 === h) return;
                        for (var d = 0, p = a - 1;
                            (0 !== h || d < o) && -1 !== p; p--, d++) h += s * l[p] >>> 0, l[p] = h % 256 >>> 0, h = h / 256 >>> 0;
                        if (0 !== h) throw new Error("Non-zero carry");
                        o = d, r++
                    }
                    if (" " !== t[r]) {
                        for (var m = a - o; m !== a && 0 === l[m];) m++;
                        var y = n.allocUnsafe(i + (a - m));
                        y.fill(0, 0, i);
                        for (var b = i; m !== a;) y[b++] = l[m++];
                        return y
                    }
                }
            }
            return {
                encode: function encode(e) {
                    if ((Array.isArray(e) || e instanceof Uint8Array) && (e = n.from(e)), !n.isBuffer(e)) throw new TypeError("Expected Buffer");
                    if (0 === e.length) return "";
                    for (var r = 0, i = 0, o = 0, a = e.length; o !== a && 0 === e[o];) o++, r++;
                    for (var c = (a - o) * l + 1 >>> 0, h = new Uint8Array(c); o !== a;) {
                        for (var d = e[o], p = 0, m = c - 1;
                            (0 !== d || p < i) && -1 !== m; m--, p++) d += 256 * h[m] >>> 0, h[m] = d % s >>> 0, d = d / s >>> 0;
                        if (0 !== d) throw new Error("Non-zero carry");
                        i = p, o++
                    }
                    for (var y = c - i; y !== c && 0 === h[y];) y++;
                    for (var b = u.repeat(r); y < c; ++y) b += t.charAt(h[y]);
                    return b
                },
                decodeUnsafe: decodeUnsafe,
                decode: function decode(t) {
                    var e = decodeUnsafe(t);
                    if (e) return e;
                    throw new Error("Non-base" + s + " character")
                }
            }
        }
    }, function (t, e, r) {
        const n = r(93),
            {
                Buffer: i
            } = r(0);

        function bufferToNumber(t) {
            return parseInt(t.toString("hex"), 16)
        }

        function numberToBuffer(t) {
            let e = t.toString(16);
            return e.length % 2 == 1 && (e = "0" + e), i.from(e, "hex")
        }
        t.exports = {
            numberToBuffer: numberToBuffer,
            bufferToNumber: bufferToNumber,
            varintBufferEncode: function varintBufferEncode(t) {
                return i.from(n.encode(bufferToNumber(t)))
            },
            varintBufferDecode: function varintBufferDecode(t) {
                return numberToBuffer(n.decode(t))
            },
            varintEncode: function varintEncode(t) {
                return i.from(n.encode(t))
            }
        }
    }, function (t, e, r) {
        var n = r(0).Buffer,
            i = r(35),
            o = r(140).AbiCoder,
            a = r(140).ParamType,
            s = new o((function (t, e) {
                return !t.match(/^u?int/) || Array.isArray(e) || e && "object" == typeof e && "BN" === e.constructor.name ? e : e.toString()
            }));

        function Result() {}
        var ABICoder = function () {};
        ABICoder.prototype.encodeFunctionSignature = function (t) {
            return ("function" == typeof t || "object" == typeof t && t) && (t = i._jsonInterfaceMethodToString(t)), i.sha3(t).slice(0, 10)
        }, ABICoder.prototype.encodeEventSignature = function (t) {
            return ("function" == typeof t || "object" == typeof t && t) && (t = i._jsonInterfaceMethodToString(t)), i.sha3(t)
        }, ABICoder.prototype.encodeParameter = function (t, e) {
            return this.encodeParameters([t], [e])
        }, ABICoder.prototype.encodeParameters = function (t, e) {
            var r = this;
            return t = r.mapTypes(t), e = e.map((function (e, n) {
                let i = t[n];
                if ("object" == typeof i && i.type && (i = i.type), e = r.formatParam(i, e), "string" == typeof i && i.includes("tuple")) {
                    const t = s._getCoder(a.from(i)),
                        modifyParams = (t, e) => {
                            if ("array" === t.name) return e.map(e => modifyParams(s._getCoder(a.from(t.type.replace("[]", ""))), e));
                            t.coders.forEach((t, n) => {
                                "tuple" === t.name ? modifyParams(t, e[n]) : e[n] = r.formatParam(t.name, e[n])
                            })
                        };
                    modifyParams(t, e)
                }
                return e
            })), s.encode(t, e)
        }, ABICoder.prototype.mapTypes = function (t) {
            var e = this,
                r = [];
            return t.forEach((function (t) {
                if ("object" == typeof t && "function" === t.type && (t = Object.assign({}, t, {
                        type: "bytes24"
                    })), e.isSimplifiedStructFormat(t)) {
                    var n = Object.keys(t)[0];
                    r.push(Object.assign(e.mapStructNameAndType(n), {
                        components: e.mapStructToCoderFormat(t[n])
                    }))
                } else r.push(t)
            })), r
        }, ABICoder.prototype.isSimplifiedStructFormat = function (t) {
            return "object" == typeof t && void 0 === t.components && void 0 === t.name
        }, ABICoder.prototype.mapStructNameAndType = function (t) {
            var e = "tuple";
            return t.indexOf("[]") > -1 && (e = "tuple[]", t = t.slice(0, -2)), {
                type: e,
                name: t
            }
        }, ABICoder.prototype.mapStructToCoderFormat = function (t) {
            var e = this,
                r = [];
            return Object.keys(t).forEach((function (n) {
                "object" != typeof t[n] ? r.push({
                    name: n,
                    type: t[n]
                }) : r.push(Object.assign(e.mapStructNameAndType(n), {
                    components: e.mapStructToCoderFormat(t[n])
                }))
            })), r
        }, ABICoder.prototype.formatParam = function (t, e) {
            const r = new RegExp(/^bytes([0-9]*)$/),
                o = new RegExp(/^bytes([0-9]*)\[\]$/),
                a = new RegExp(/^(u?int)([0-9]*)$/),
                s = new RegExp(/^(u?int)([0-9]*)\[\]$/);
            if (i.isBN(e) || i.isBigNumber(e)) return e.toString(10);
            if (t.match(o) || t.match(s)) return e.map(e => this.formatParam(t.replace("[]", ""), e));
            let u = t.match(a);
            if (u) {
                let t = parseInt(u[2] || "256");
                t / 8 < e.length && (e = i.leftPad(e, t))
            }
            if (u = t.match(r), u) {
                n.isBuffer(e) && (e = i.toHex(e));
                let t = parseInt(u[1]);
                if (t) {
                    let r = 2 * t;
                    "0x" === e.substring(0, 2) && (r += 2), e.length < r && (e = i.rightPad(e, 2 * t))
                }
                e.length % 2 == 1 && (e = "0x0" + e.substring(2))
            }
            return e
        }, ABICoder.prototype.encodeFunctionCall = function (t, e) {
            return this.encodeFunctionSignature(t) + this.encodeParameters(t.inputs, e).replace("0x", "")
        }, ABICoder.prototype.decodeParameter = function (t, e) {
            return this.decodeParameters([t], e)[0]
        }, ABICoder.prototype.decodeParameters = function (t, e) {
            return this.decodeParametersWith(t, e, !1)
        }, ABICoder.prototype.decodeParametersWith = function (t, e, r) {
            if (t.length > 0 && (!e || "0x" === e || "0X" === e)) throw new Error("Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.");
            var n = s.decode(this.mapTypes(t), "0x" + e.replace(/0x/i, ""), r),
                i = new Result;
            return i.__length__ = 0, t.forEach((function (t, e) {
                var r = n[i.__length__];
                r = "0x" === r ? null : r, i[e] = r, ("function" == typeof t || t && "object" == typeof t) && t.name && (i[t.name] = r), i.__length__++
            })), i
        }, ABICoder.prototype.decodeLog = function (t, e, r) {
            var n = this;
            r = Array.isArray(r) ? r : [r], e = e || "";
            var i = [],
                o = [],
                a = 0;
            t.forEach((function (t, e) {
                t.indexed ? (o[e] = ["bool", "int", "uint", "address", "fixed", "ufixed"].find((function (e) {
                    return -1 !== t.type.indexOf(e)
                })) ? n.decodeParameter(t.type, r[a]) : r[a], a++) : i[e] = t
            }));
            var s = e,
                u = s ? this.decodeParametersWith(i, s, !0) : [],
                c = new Result;
            return c.__length__ = 0, t.forEach((function (t, e) {
                c[e] = "string" === t.type ? "" : null, void 0 !== u[e] && (c[e] = u[e]), void 0 !== o[e] && (c[e] = o[e]), t.name && (c[t.name] = c[e]), c.__length__++
            })), c
        };
        var u = new ABICoder;
        t.exports = u
    }, function (t, e, r) {
        (function (e) {
            var n = r(130),
                i = r(49),
                o = r(66),
                a = r(50),
                s = r(67),
                isBN = function (t) {
                    return n.isBN(t)
                },
                isBigNumber = function (t) {
                    return t && t.constructor && "BigNumber" === t.constructor.name
                },
                toBN = function (t) {
                    try {
                        return i.apply(null, arguments)
                    } catch (e) {
                        throw new Error(e + ' Given value: "' + t + '"')
                    }
                },
                isAddress = function (t) {
                    return !!/^(0x)?[0-9a-f]{40}$/i.test(t) && (!(!/^(0x|0X)?[0-9a-f]{40}$/.test(t) && !/^(0x|0X)?[0-9A-F]{40}$/.test(t)) || checkAddressChecksum(t))
                },
                checkAddressChecksum = function (t) {
                    t = t.replace(/^0x/i, "");
                    for (var e = sha3(t.toLowerCase()).replace(/^0x/i, ""), r = 0; r < 40; r++)
                        if (parseInt(e[r], 16) > 7 && t[r].toUpperCase() !== t[r] || parseInt(e[r], 16) <= 7 && t[r].toLowerCase() !== t[r]) return !1;
                    return !0
                },
                utf8ToHex = function (t) {
                    var e = "";
                    t = (t = (t = (t = (t = o.encode(t)).replace(/^(?:\u0000)*/, "")).split("").reverse().join("")).replace(/^(?:\u0000)*/, "")).split("").reverse().join("");
                    for (var r = 0; r < t.length; r++) {
                        var n = t.charCodeAt(r).toString(16);
                        e += n.length < 2 ? "0" + n : n
                    }
                    return "0x" + e
                },
                hexToNumber = function (t) {
                    if (!t) return t;
                    if ("string" == typeof t && !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    return toBN(t).toNumber()
                },
                numberToHex = function (t) {
                    if (null == t) return t;
                    if (!isFinite(t) && !isHexStrict(t)) throw new Error('Given input "' + t + '" is not a number.');
                    var e = toBN(t),
                        r = e.toString(16);
                    return e.lt(new n(0)) ? "-0x" + r.substr(1) : "0x" + r
                },
                hexToBytes = function (t) {
                    if (t = t.toString(16), !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    t = t.replace(/^0x/i, "");
                    for (var e = [], r = 0; r < t.length; r += 2) e.push(parseInt(t.substr(r, 2), 16));
                    return e
                },
                toHex = function (t, r) {
                    if (isAddress(t)) return r ? "address" : "0x" + t.toLowerCase().replace(/^0x/i, "");
                    if ("boolean" == typeof t) return r ? "bool" : t ? "0x01" : "0x00";
                    if (e.isBuffer(t)) return "0x" + t.toString("hex");
                    if ("object" == typeof t && t && !isBigNumber(t) && !isBN(t)) return r ? "string" : utf8ToHex(JSON.stringify(t));
                    if ("string" == typeof t) {
                        if (0 === t.indexOf("-0x") || 0 === t.indexOf("-0X")) return r ? "int256" : numberToHex(t);
                        if (0 === t.indexOf("0x") || 0 === t.indexOf("0X")) return r ? "bytes" : t;
                        if (!isFinite(t)) return r ? "string" : utf8ToHex(t)
                    }
                    return r ? t < 0 ? "int256" : "uint256" : numberToHex(t)
                },
                isHexStrict = function (t) {
                    return ("string" == typeof t || "number" == typeof t) && /^(-)?0x[0-9a-f]*$/i.test(t)
                },
                isHex = function (t) {
                    return ("string" == typeof t || "number" == typeof t) && /^(-0x|0x)?[0-9a-f]*$/i.test(t)
                },
                u = "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                sha3 = function (t) {
                    isBN(t) && (t = t.toString()), isHexStrict(t) && /^0x/i.test(t.toString()) && (t = hexToBytes(t));
                    var e = a.keccak256(t);
                    return e === u ? null : e
                };
            sha3._Hash = a;
            t.exports = {
                BN: n,
                isBN: isBN,
                isBigNumber: isBigNumber,
                toBN: toBN,
                isAddress: isAddress,
                isBloom: function (t) {
                    return s.isBloom(t)
                },
                isUserEthereumAddressInBloom: function (t, e) {
                    return s.isUserEthereumAddressInBloom(t, e)
                },
                isContractAddressInBloom: function (t, e) {
                    return s.isContractAddressInBloom(t, e)
                },
                isTopic: function (t) {
                    return s.isTopic(t)
                },
                isTopicInBloom: function (t, e) {
                    return s.isTopicInBloom(t, e)
                },
                isInBloom: function (t, e) {
                    return s.isInBloom(t, e)
                },
                checkAddressChecksum: checkAddressChecksum,
                utf8ToHex: utf8ToHex,
                hexToUtf8: function (t) {
                    if (!isHexStrict(t)) throw new Error('The parameter "' + t + '" must be a valid HEX string.');
                    for (var e = "", r = 0, n = (t = (t = (t = (t = (t = t.replace(/^0x/i, "")).replace(/^(?:00)*/, "")).split("").reverse().join("")).replace(/^(?:00)*/, "")).split("").reverse().join("")).length, i = 0; i < n; i += 2) r = parseInt(t.substr(i, 2), 16), e += String.fromCharCode(r);
                    return o.decode(e)
                },
                hexToNumber: hexToNumber,
                hexToNumberString: function (t) {
                    if (!t) return t;
                    if ("string" == typeof t && !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    return toBN(t).toString(10)
                },
                numberToHex: numberToHex,
                toHex: toHex,
                hexToBytes: hexToBytes,
                bytesToHex: function (t) {
                    for (var e = [], r = 0; r < t.length; r++) e.push((t[r] >>> 4).toString(16)), e.push((15 & t[r]).toString(16));
                    return "0x" + e.join("")
                },
                isHex: isHex,
                isHexStrict: isHexStrict,
                stripHexPrefix: function (t) {
                    return 0 !== t && isHex(t) ? t.replace(/^(-)?0x/i, "$1") : t
                },
                leftPad: function (t, e, r) {
                    var n = /^0x/i.test(t) || "number" == typeof t,
                        i = e - (t = t.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? e - t.length + 1 : 0;
                    return (n ? "0x" : "") + new Array(i).join(r || "0") + t
                },
                rightPad: function (t, e, r) {
                    var n = /^0x/i.test(t) || "number" == typeof t,
                        i = e - (t = t.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? e - t.length + 1 : 0;
                    return (n ? "0x" : "") + t + new Array(i).join(r || "0")
                },
                toTwosComplement: function (t) {
                    return "0x" + toBN(t).toTwos(256).toString(16, 64)
                },
                sha3: sha3,
                sha3Raw: function (t) {
                    return null === (t = sha3(t)) ? u : t
                },
                toNumber: function (t) {
                    return "number" == typeof t ? t : hexToNumber(toHex(t))
                }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = {
            messageId: 0,
            toPayload: function (t, e) {
                if (!t) throw new Error('JSONRPC method should be specified for params: "' + JSON.stringify(e) + '"!');
                return n.messageId++, {
                    jsonrpc: "2.0",
                    id: n.messageId,
                    method: t,
                    params: e || []
                }
            },
            isValidResponse: function (t) {
                return Array.isArray(t) ? t.every(validateSingleMessage) : validateSingleMessage(t);

                function validateSingleMessage(t) {
                    return !(!t || t.error || "2.0" !== t.jsonrpc || "number" != typeof t.id && "string" != typeof t.id || void 0 === t.result)
                }
            },
            toBatchPayload: function (t) {
                return t.map((function (t) {
                    return n.toPayload(t.method, t.params)
                }))
            }
        };
        t.exports = n
    }, function (t, e, r) {
        var n = r(26).errors,
            i = r(26).formatters,
            o = r(95),
            a = r(791),
            s = r(792).subscriptions,
            u = r(41).Hardfork,
            c = r(100),
            l = function Method(t) {
                if (!t.call || !t.name) throw new Error('When creating a method you need to provide at least the "name" and "call" property.');
                this.name = t.name, this.call = t.call, this.params = t.params || 0, this.inputFormatter = t.inputFormatter, this.outputFormatter = t.outputFormatter, this.transformPayload = t.transformPayload, this.extraFormatters = t.extraFormatters, this.abiCoder = t.abiCoder, this.requestManager = t.requestManager, this.accounts = t.accounts, this.defaultBlock = t.defaultBlock || "latest", this.defaultAccount = t.defaultAccount || null, this.transactionBlockTimeout = t.transactionBlockTimeout || 50, this.transactionConfirmationBlocks = t.transactionConfirmationBlocks || 24, this.transactionPollingTimeout = t.transactionPollingTimeout || 750, this.defaultCommon = t.defaultCommon, this.defaultChain = t.defaultChain, this.defaultHardfork = t.defaultHardfork, this.handleRevert = t.handleRevert
            };
        l.prototype.setRequestManager = function (t, e) {
            this.requestManager = t, e && (this.accounts = e)
        }, l.prototype.createFunction = function (t, e) {
            var r = this.buildCall();
            return r.call = this.call, this.setRequestManager(t || this.requestManager, e || this.accounts), r
        }, l.prototype.attachToObject = function (t) {
            var e = this.buildCall();
            e.call = this.call;
            var r = this.name.split(".");
            r.length > 1 ? (t[r[0]] = t[r[0]] || {}, t[r[0]][r[1]] = e) : t[r[0]] = e
        }, l.prototype.getCall = function (t) {
            return "function" == typeof this.call ? this.call(t) : this.call
        }, l.prototype.extractCallback = function (t) {
            if ("function" == typeof t[t.length - 1]) return t.pop()
        }, l.prototype.validateArgs = function (t) {
            if (t.length !== this.params) throw n.InvalidNumberOfParams(t.length, this.params, this.name)
        }, l.prototype.formatInput = function (t) {
            var e = this;
            return this.inputFormatter ? this.inputFormatter.map((function (r, n) {
                return r ? r.call(e, t[n]) : t[n]
            })) : t
        }, l.prototype.formatOutput = function (t) {
            var e = this;
            return Array.isArray(t) ? t.map((function (t) {
                return e.outputFormatter && t ? e.outputFormatter(t) : t
            })) : this.outputFormatter && t ? this.outputFormatter(t) : t
        }, l.prototype.toPayload = function (t) {
            var e = this.getCall(t),
                r = this.extractCallback(t),
                n = this.formatInput(t);
            this.validateArgs(n);
            var i = {
                method: e,
                params: n,
                callback: r
            };
            return this.transformPayload && (i = this.transformPayload(i)), i
        }, l.prototype._confirmTransaction = function (t, e, r) {
            var u = this,
                h = !1,
                d = !0,
                p = 0,
                m = 0,
                y = null,
                b = null,
                g = r.params[0] && "object" == typeof r.params[0] && r.params[0].gas ? r.params[0].gas : null,
                v = !!r.params[0] && "object" == typeof r.params[0] && r.params[0].data && r.params[0].from && !r.params[0].to,
                w = v && r.params[0].data.length > 2,
                M = [new l({
                    name: "getBlockByNumber",
                    call: "eth_getBlockByNumber",
                    params: 2,
                    inputFormatter: [i.inputBlockNumberFormatter, function (t) {
                        return !!t
                    }],
                    outputFormatter: i.outputBlockFormatter
                }), new l({
                    name: "getTransactionReceipt",
                    call: "eth_getTransactionReceipt",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: i.outputTransactionReceiptFormatter
                }), new l({
                    name: "getCode",
                    call: "eth_getCode",
                    params: 2,
                    inputFormatter: [i.inputAddressFormatter, i.inputDefaultBlockNumberFormatter]
                }), new l({
                    name: "getTransactionByHash",
                    call: "eth_getTransactionByHash",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: i.outputTransactionFormatter
                }), new s({
                    name: "subscribe",
                    type: "eth",
                    subscriptions: {
                        newBlockHeaders: {
                            subscriptionName: "newHeads",
                            params: 0,
                            outputFormatter: i.outputBlockFormatter
                        }
                    }
                })],
                A = {};
            M.forEach(t => {
                t.attachToObject(A), t.requestManager = u.requestManager
            });
            var checkConfirmation = function (s, l, M, x, B) {
                    if (!M) return B || (B = {
                        unsubscribe: function () {
                            clearInterval(y)
                        }
                    }), (s ? a.resolve(s) : A.getTransactionReceipt(e)).catch((function (e) {
                        B.unsubscribe(), h = !0, o._fireError({
                            message: "Failed to check for transaction receipt:",
                            data: e
                        }, t.eventEmitter, t.reject)
                    })).then((async function (e) {
                        if (!e || !e.blockHash) throw new Error("Receipt missing or blockHash null");
                        if (u.extraFormatters && u.extraFormatters.receiptFormatter && (e = u.extraFormatters.receiptFormatter(e)), t.eventEmitter.listeners("confirmation").length > 0) {
                            var r;
                            if (void 0 === s || 0 !== m) {
                                var n = await A.getBlockByNumber("latest"),
                                    i = n ? n.hash : null;
                                l ? b ? (r = await A.getBlockByNumber(b.number + 1)) && (b = r, t.eventEmitter.emit("confirmation", m, e, i)) : (r = await A.getBlockByNumber(e.blockNumber), b = r, t.eventEmitter.emit("confirmation", m, e, i)) : t.eventEmitter.emit("confirmation", m, e, i)
                            }(l && r || !l) && m++, d = !1, m === u.transactionConfirmationBlocks + 1 && (B.unsubscribe(), t.eventEmitter.removeAllListeners())
                        }
                        return e
                    })).then((async function (e) {
                        if (v && !h) {
                            if (!e.contractAddress) return d && (B.unsubscribe(), h = !0), void o._fireError(n.NoContractAddressFoundError(e), t.eventEmitter, t.reject, null, e);
                            var r;
                            try {
                                r = await A.getCode(e.contractAddress)
                            } catch (t) {}
                            if (!r) return;
                            !0 === e.status && w || r.length > 2 ? (t.eventEmitter.emit("receipt", e), u.extraFormatters && u.extraFormatters.contractDeployFormatter ? t.resolve(u.extraFormatters.contractDeployFormatter(e)) : t.resolve(e), d && t.eventEmitter.removeAllListeners()) : o._fireError(n.ContractCodeNotStoredError(e), t.eventEmitter, t.reject, null, e), d && B.unsubscribe(), h = !0
                        }
                        return e
                    })).then((async function (e) {
                        if (!v && !h) {
                            if (e.outOfGas || g && g === e.gasUsed || !0 !== e.status && "0x1" !== e.status && void 0 !== e.status)
                                if (JSON.stringify(e, null, 2), !1 === e.status || "0x0" === e.status) try {
                                    var a = null;
                                    if (!u.handleRevert || "eth_sendTransaction" !== u.call && "eth_sendRawTransaction" !== u.call) throw !1;
                                    var s = r.params[0];
                                    if ("eth_sendRawTransaction" === u.call) {
                                        var l = r.params[0],
                                            p = c.parse(l);
                                        s = i.inputTransactionFormatter({
                                            data: p.data,
                                            to: p.to,
                                            from: p.from,
                                            gas: p.gasLimit.toHexString(),
                                            gasPrice: p.gasPrice.toHexString(),
                                            value: p.value.toHexString()
                                        })
                                    }
                                    if (!(a = await u.getRevertReason(s, e.blockNumber))) throw !1;
                                    o._fireError(n.TransactionRevertInstructionError(a.reason, a.signature, e), t.eventEmitter, t.reject, null, e)
                                } catch (r) {
                                    o._fireError(n.TransactionRevertedWithoutReasonError(e), t.eventEmitter, t.reject, null, e)
                                } else o._fireError(n.TransactionOutOfGasError(e), t.eventEmitter, t.reject, null, e);
                                else t.eventEmitter.emit("receipt", e), t.resolve(e), d && t.eventEmitter.removeAllListeners();
                            d && B.unsubscribe(), h = !0
                        }
                    })).catch((function () {
                        p++, l ? p - 1 >= u.transactionPollingTimeout && (B.unsubscribe(), h = !0, o._fireError(n.TransactionError("Transaction was not mined within " + u.transactionPollingTimeout + " seconds, please make sure your transaction was properly sent. Be aware that it might still be mined!"), t.eventEmitter, t.reject)) : p - 1 >= u.transactionBlockTimeout && (B.unsubscribe(), h = !0, o._fireError(n.TransactionError("Transaction was not mined within " + u.transactionBlockTimeout + " blocks, please make sure your transaction was properly sent. Be aware that it might still be mined!"), t.eventEmitter, t.reject))
                    }));
                    B.unsubscribe(), h = !0, o._fireError({
                        message: "Failed to subscribe to new newBlockHeaders to confirm the transaction receipts.",
                        data: M
                    }, t.eventEmitter, t.reject)
                },
                x = function (t) {
                    const startInterval = () => {
                        y = setInterval(checkConfirmation.bind(null, t, !0), 1e3)
                    };
                    this.requestManager.provider.on ? A.subscribe("newBlockHeaders", (function (e, r, n) {
                        e || !r ? startInterval() : checkConfirmation(t, !1, e, 0, n)
                    })) : startInterval()
                }.bind(this);
            A.getTransactionReceipt(e).then((function (e) {
                e && e.blockHash ? (t.eventEmitter.listeners("confirmation").length > 0 && x(e), checkConfirmation(e, !1)) : h || x()
            })).catch((function () {
                h || x()
            }))
        };
        var getWallet = function (t, e) {
            return "number" == typeof t ? e.wallet[t] : t && "object" == typeof t && t.address && t.privateKey ? t : e.wallet[t.toLowerCase()]
        };

        function _handleTxType(t) {
            const e = void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas;
            let r;
            if (r = void 0 !== t.type ? o.toHex(t.type) : void 0 === t.type && e ? "0x2" : "0x0", void 0 !== t.gasPrice && ("0x2" === r || e)) throw Error("eip-1559 transactions don't support gasPrice");
            if (("0x1" === r || "0x0" === r) && e) throw Error("pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas");
            return e || t.common && t.common.hardfork && t.common.hardfork.toLowerCase() === u.London || t.hardfork && t.hardfork.toLowerCase() === u.London ? r = "0x2" : (t.accessList || t.common && t.common.hardfork && t.common.hardfork.toLowerCase() === u.Berlin || t.hardfork && t.hardfork.toLowerCase() === u.Berlin) && (r = "0x1"), r
        }

        function _handleTxPricing(t, e) {
            return new Promise((r, n) => {
                try {
                    var i = new l({
                            name: "getBlockByNumber",
                            call: "eth_getBlockByNumber",
                            params: 2,
                            inputFormatter: [function (t) {
                                return t ? o.toHex(t) : "latest"
                            }, function () {
                                return !1
                            }]
                        }).createFunction(t.requestManager),
                        a = new l({
                            name: "getGasPrice",
                            call: "eth_gasPrice",
                            params: 0
                        }).createFunction(t.requestManager);
                    e.type < "0x2" && void 0 !== e.gasPrice ? r({
                        gasPrice: e.gasPrice
                    }) : Promise.all([i(), a()]).then(t => {
                        const [n, i] = t;
                        if ("0x2" === e.type && n && n.baseFeePerGas) {
                            let t, i;
                            e.gasPrice ? (t = e.gasPrice, i = e.gasPrice, delete e.gasPrice) : (t = e.maxPriorityFeePerGas || "0x3B9ACA00", i = e.maxFeePerGas || o.toHex(o.toBN(n.baseFeePerGas).mul(o.toBN(2)).add(o.toBN(t)))), r({
                                maxFeePerGas: i,
                                maxPriorityFeePerGas: t
                            })
                        } else {
                            if (e.maxPriorityFeePerGas || e.maxFeePerGas) throw Error("Network doesn't support eip-1559");
                            r({
                                gasPrice: i
                            })
                        }
                    })
                } catch (t) {
                    n(t)
                }
            })
        }
        l.prototype.buildCall = function () {
            var t = this,
                e = "eth_sendTransaction" === t.call || "eth_sendRawTransaction" === t.call,
                r = "eth_call" === t.call,
                send = function () {
                    var i = a(!e),
                        s = t.toPayload(Array.prototype.slice.call(arguments)),
                        sendTxCallback = function (a, u) {
                            var c;
                            if (t.handleRevert && r && t.abiCoder && (!a && t.isRevertReasonString(u) ? c = u.substring(10) : a && a.data && (c = a.data.substring(10)), c)) {
                                var l = t.abiCoder.decodeParameter("string", "0x" + c);
                                return void o._fireError(n.RevertInstructionError(l, "Error(String)"), i.eventEmitter, i.reject, s.callback, {
                                    reason: l,
                                    signature: "Error(String)"
                                })
                            }
                            try {
                                u = t.formatOutput(u)
                            } catch (t) {
                                a = t
                            }
                            if (u instanceof Error && (a = u), a) return a.error && (a = a.error), o._fireError(a, i.eventEmitter, i.reject, s.callback);
                            s.callback && s.callback(null, u), e ? (i.eventEmitter.emit("transactionHash", u), t._confirmTransaction(i, u, s)) : a || i.resolve(u)
                        },
                        sendSignedTx = function (e) {
                            var r = {
                                ...s,
                                method: "eth_sendRawTransaction",
                                params: [e.rawTransaction]
                            };
                            t.requestManager.send(r, sendTxCallback)
                        },
                        sendRequest = function (t, e) {
                            var r;
                            if (e && e.accounts && e.accounts.wallet && e.accounts.wallet.length)
                                if ("eth_sendTransaction" === t.method) {
                                    var n = t.params[0];
                                    if ((r = getWallet(n && "object" == typeof n ? n.from : null, e.accounts)) && r.privateKey) return delete(n = JSON.parse(JSON.stringify(n))).from, e.defaultChain && !n.chain && (n.chain = e.defaultChain), e.defaultHardfork && !n.hardfork && (n.hardfork = e.defaultHardfork), e.defaultCommon && !n.common && (n.common = e.defaultCommon), void e.accounts.signTransaction(n, r.privateKey).then(sendSignedTx).catch((function (t) {
                                        if ("function" == typeof i.eventEmitter.listeners && i.eventEmitter.listeners("error").length) {
                                            try {
                                                i.eventEmitter.emit("error", t)
                                            } catch (t) {}
                                            i.eventEmitter.removeAllListeners(), i.eventEmitter.catch((function () {}))
                                        }
                                        i.reject(t)
                                    }))
                                } else if ("eth_sign" === t.method) {
                                var o = t.params[1];
                                if ((r = getWallet(t.params[0], e.accounts)) && r.privateKey) {
                                    var a = e.accounts.sign(o, r.privateKey);
                                    return t.callback && t.callback(null, a.signature), void i.resolve(a.signature)
                                }
                            }
                            return e.requestManager.send(t, sendTxCallback)
                        };
                    return e && s.params[0] && "object" == typeof s.params[0] && void 0 === s.params[0].gasPrice && (void 0 === s.params[0].maxPriorityFeePerGas || void 0 === s.params[0].maxFeePerGas) ? (void 0 === s.params[0].type && (s.params[0].type = _handleTxType(s.params[0])), _handleTxPricing(t, s.params[0]).then(r => {
                        void 0 !== r.gasPrice ? s.params[0].gasPrice = r.gasPrice : void 0 !== r.maxPriorityFeePerGas && void 0 !== r.maxFeePerGas && (s.params[0].maxPriorityFeePerGas = r.maxPriorityFeePerGas, s.params[0].maxFeePerGas = r.maxFeePerGas), e && setTimeout(() => {
                            i.eventEmitter.emit("sending", s)
                        }, 0), sendRequest(s, t)
                    })) : (e && setTimeout(() => {
                        i.eventEmitter.emit("sending", s)
                    }, 0), sendRequest(s, t)), e && setTimeout(() => {
                        i.eventEmitter.emit("sent", s)
                    }, 0), i.eventEmitter
                };
            return send.method = t, send.request = this.request.bind(this), send
        }, l.prototype.getRevertReason = function (t, e) {
            var r = this;
            return new Promise((function (n, i) {
                new l({
                    name: "call",
                    call: "eth_call",
                    params: 2,
                    abiCoder: r.abiCoder,
                    handleRevert: !0
                }).createFunction(r.requestManager)(t, o.numberToHex(e)).then((function () {
                    n(!1)
                })).catch((function (t) {
                    t.reason ? n({
                        reason: t.reason,
                        signature: t.signature
                    }) : i(t)
                }))
            }))
        }, l.prototype.isRevertReasonString = function (t) {
            return "string" == typeof t && (t.length - 2) / 2 % 32 == 4 && "0x08c379a0" === t.substring(0, 10)
        }, l.prototype.request = function () {
            var t = this.toPayload(Array.prototype.slice.call(arguments));
            return t.format = this.formatOutput.bind(this), t
        }, t.exports = l
    }, function (t, e, r) {
        r(795);
        const at = (t, e) => parseInt(t.slice(2 * e + 2, 2 * e + 4), 16),
            length = t => (t.length - 2) / 2,
            pad = (t, e) => e.length === 2 * t + 2 ? e : pad(t, "0x0" + e.slice(2)),
            padRight = (t, e) => e.length === 2 * t + 2 ? e : padRight(t, e + "0"),
            toArray = t => {
                let e = [];
                for (let r = 2, n = t.length; r < n; r += 2) e.push(parseInt(t.slice(r, r + 2), 16));
                return e
            },
            fromArray = t => {
                let e = "0x";
                for (let r = 0, n = t.length; r < n; ++r) {
                    let n = t[r];
                    e += (n < 16 ? "0" : "") + n.toString(16)
                }
                return e
            };
        t.exports = {
            random: t => {
                let e;
                e = "undefined" != typeof window && window.crypto && window.crypto.getRandomValues ? window.crypto.getRandomValues(new Uint8Array(t)) : r(131).randomBytes(t);
                let n = "0x";
                for (let r = 0; r < t; ++r) n += ("00" + e[r].toString(16)).slice(-2);
                return n
            },
            length: length,
            concat: (t, e) => t.concat(e.slice(2)),
            flatten: t => "0x" + t.reduce((t, e) => t + e.slice(2), ""),
            slice: (t, e, r) => "0x" + r.slice(2 * t + 2, 2 * e + 2),
            reverse: t => {
                let e = "0x";
                for (let r = 0, n = length(t); r < n; ++r) e += t.slice(2 * (n - r), 2 * (n - r + 1));
                return e
            },
            pad: pad,
            padRight: padRight,
            fromAscii: t => {
                let e = "0x";
                for (let r = 0; r < t.length; ++r) e += ("00" + t.charCodeAt(r).toString(16)).slice(-2);
                return e
            },
            toAscii: t => {
                let e = "";
                for (let r = 2; r < t.length; r += 2) e += String.fromCharCode(parseInt(t.slice(r, r + 2), 16));
                return e
            },
            fromString: t => {
                const makeByte = t => {
                    const e = t.toString(16);
                    return e.length < 2 ? "0" + e : e
                };
                let e = "0x";
                for (let r = 0; r != t.length; r++) {
                    let n = t.charCodeAt(r);
                    if (n < 128) e += makeByte(n);
                    else {
                        if (n < 2048) e += makeByte(n >> 6 | 192);
                        else {
                            if (n > 55295 && n < 56320) {
                                if (++r == t.length) return null;
                                let i = t.charCodeAt(r);
                                if (i < 56320 || i > 57343) return null;
                                n = 65536 + ((1023 & n) << 10) + (1023 & i), e += makeByte(n >> 18 | 240), e += makeByte(n >> 12 & 63 | 128)
                            } else e += makeByte(n >> 12 | 224);
                            e += makeByte(n >> 6 & 63 | 128)
                        }
                        e += makeByte(63 & n | 128)
                    }
                }
                return e
            },
            toString: t => {
                let e = "",
                    r = 0,
                    n = length(t);
                for (; r < n;) {
                    let i = at(t, r++);
                    if (i > 127) {
                        if (i > 191 && i < 224) {
                            if (r >= n) return null;
                            i = (31 & i) << 6 | 63 & at(t, r)
                        } else if (i > 223 && i < 240) {
                            if (r + 1 >= n) return null;
                            i = (15 & i) << 12 | (63 & at(t, r)) << 6 | 63 & at(t, ++r)
                        } else {
                            if (!(i > 239 && i < 248)) return null;
                            if (r + 2 >= n) return null;
                            i = (7 & i) << 18 | (63 & at(t, r)) << 12 | (63 & at(t, ++r)) << 6 | 63 & at(t, ++r)
                        }++r
                    }
                    if (i <= 65535) e += String.fromCharCode(i);
                    else {
                        if (!(i <= 1114111)) return null;
                        i -= 65536, e += String.fromCharCode(i >> 10 | 55296), e += String.fromCharCode(1023 & i | 56320)
                    }
                }
                return e
            },
            fromNumber: t => {
                let e = t.toString(16);
                return e.length % 2 == 0 ? "0x" + e : "0x0" + e
            },
            toNumber: t => parseInt(t.slice(2), 16),
            fromNat: t => "0x0" === t ? "0x" : t.length % 2 == 0 ? t : "0x0" + t.slice(2),
            toNat: t => "0" === t[2] ? "0x" + t.slice(3) : t,
            fromArray: fromArray,
            toArray: toArray,
            fromUint8Array: t => fromArray([].slice.call(t, 0)),
            toUint8Array: t => new Uint8Array(toArray(t))
        }
    }, function (t, e, r) {
        var n = r(1),
            i = r(796),
            o = r(42),
            a = r(3).Buffer,
            s = r(306),
            u = r(185),
            c = r(186),
            l = a.alloc(128);

        function Hmac(t, e) {
            o.call(this, "digest"), "string" == typeof e && (e = a.from(e));
            var r = "sha512" === t || "sha384" === t ? 128 : 64;
            (this._alg = t, this._key = e, e.length > r) ? e = ("rmd160" === t ? new u : c(t)).update(e).digest(): e.length < r && (e = a.concat([e, l], r));
            for (var n = this._ipad = a.allocUnsafe(r), i = this._opad = a.allocUnsafe(r), s = 0; s < r; s++) n[s] = 54 ^ e[s], i[s] = 92 ^ e[s];
            this._hash = "rmd160" === t ? new u : c(t), this._hash.update(n)
        }
        n(Hmac, o), Hmac.prototype._update = function (t) {
            this._hash.update(t)
        }, Hmac.prototype._final = function () {
            var t = this._hash.digest();
            return ("rmd160" === this._alg ? new u : c(this._alg)).update(this._opad).update(t).digest()
        }, t.exports = function createHmac(t, e) {
            return "rmd160" === (t = t.toLowerCase()) || "ripemd160" === t ? new Hmac("rmd160", e) : "md5" === t ? new i(s, e) : new Hmac(t, e)
        }
    }, function (t, e, r) {
        var n = r(184);
        t.exports = function (t) {
            return (new n).update(t).digest()
        }
    }, function (t) {
        t.exports = JSON.parse('{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}')
    }, function (t, e, r) {
        e.pbkdf2 = r(798), e.pbkdf2Sync = r(311)
    }, function (t, e, r) {
        (function (e) {
            var r = Math.pow(2, 30) - 1;

            function checkBuffer(t, r) {
                if ("string" != typeof t && !e.isBuffer(t)) throw new TypeError(r + " must be a buffer or string")
            }
            t.exports = function (t, e, n, i) {
                if (checkBuffer(t, "Password"), checkBuffer(e, "Salt"), "number" != typeof n) throw new TypeError("Iterations not a number");
                if (n < 0) throw new TypeError("Bad iterations");
                if ("number" != typeof i) throw new TypeError("Key length not a number");
                if (i < 0 || i > r || i != i) throw new TypeError("Bad key length")
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (e) {
            var r;
            e.browser ? r = "utf-8" : r = parseInt(e.version.split(".")[0].slice(1), 10) >= 6 ? "utf-8" : "binary";
            t.exports = r
        }).call(this, r(7))
    }, function (t, e, r) {
        var n = r(306),
            i = r(185),
            o = r(186),
            a = r(309),
            s = r(310),
            u = r(3).Buffer,
            c = u.alloc(128),
            l = {
                md5: 16,
                sha1: 20,
                sha224: 28,
                sha256: 32,
                sha384: 48,
                sha512: 64,
                rmd160: 20,
                ripemd160: 20
            };

        function Hmac(t, e, r) {
            var a = function getDigest(t) {
                    function shaFunc(e) {
                        return o(t).update(e).digest()
                    }
                    return "rmd160" === t || "ripemd160" === t ? function rmd160Func(t) {
                        return (new i).update(t).digest()
                    } : "md5" === t ? n : shaFunc
                }(t),
                s = "sha512" === t || "sha384" === t ? 128 : 64;
            e.length > s ? e = a(e) : e.length < s && (e = u.concat([e, c], s));
            for (var h = u.allocUnsafe(s + l[t]), d = u.allocUnsafe(s + l[t]), p = 0; p < s; p++) h[p] = 54 ^ e[p], d[p] = 92 ^ e[p];
            var m = u.allocUnsafe(s + r + 4);
            h.copy(m, 0, 0, s), this.ipad1 = m, this.ipad2 = h, this.opad = d, this.alg = t, this.blocksize = s, this.hash = a, this.size = l[t]
        }
        Hmac.prototype.run = function (t, e) {
            return t.copy(e, this.blocksize), this.hash(e).copy(this.opad, this.blocksize), this.hash(this.opad)
        }, t.exports = function pbkdf2(t, e, r, n, i) {
            a(t, e, r, n), u.isBuffer(t) || (t = u.from(t, s)), u.isBuffer(e) || (e = u.from(e, s));
            var o = new Hmac(i = i || "sha1", t, e.length),
                c = u.allocUnsafe(n),
                h = u.allocUnsafe(e.length + 4);
            e.copy(h, 0, 0, e.length);
            for (var d = 0, p = l[i], m = Math.ceil(n / p), y = 1; y <= m; y++) {
                h.writeUInt32BE(y, e.length);
                for (var b = o.run(h, o.ipad1), g = b, v = 1; v < r; v++) {
                    g = o.run(g, o.ipad2);
                    for (var w = 0; w < p; w++) b[w] ^= g[w]
                }
                b.copy(c, d), d += p
            }
            return c
        }
    }, function (t, e, r) {
        e.readUInt32BE = function readUInt32BE(t, e) {
            return (t[0 + e] << 24 | t[1 + e] << 16 | t[2 + e] << 8 | t[3 + e]) >>> 0
        }, e.writeUInt32BE = function writeUInt32BE(t, e, r) {
            t[0 + r] = e >>> 24, t[1 + r] = e >>> 16 & 255, t[2 + r] = e >>> 8 & 255, t[3 + r] = 255 & e
        }, e.ip = function ip(t, e, r, n) {
            for (var i = 0, o = 0, a = 6; a >= 0; a -= 2) {
                for (var s = 0; s <= 24; s += 8) i <<= 1, i |= e >>> s + a & 1;
                for (s = 0; s <= 24; s += 8) i <<= 1, i |= t >>> s + a & 1
            }
            for (a = 6; a >= 0; a -= 2) {
                for (s = 1; s <= 25; s += 8) o <<= 1, o |= e >>> s + a & 1;
                for (s = 1; s <= 25; s += 8) o <<= 1, o |= t >>> s + a & 1
            }
            r[n + 0] = i >>> 0, r[n + 1] = o >>> 0
        }, e.rip = function rip(t, e, r, n) {
            for (var i = 0, o = 0, a = 0; a < 4; a++)
                for (var s = 24; s >= 0; s -= 8) i <<= 1, i |= e >>> s + a & 1, i <<= 1, i |= t >>> s + a & 1;
            for (a = 4; a < 8; a++)
                for (s = 24; s >= 0; s -= 8) o <<= 1, o |= e >>> s + a & 1, o <<= 1, o |= t >>> s + a & 1;
            r[n + 0] = i >>> 0, r[n + 1] = o >>> 0
        }, e.pc1 = function pc1(t, e, r, n) {
            for (var i = 0, o = 0, a = 7; a >= 5; a--) {
                for (var s = 0; s <= 24; s += 8) i <<= 1, i |= e >> s + a & 1;
                for (s = 0; s <= 24; s += 8) i <<= 1, i |= t >> s + a & 1
            }
            for (s = 0; s <= 24; s += 8) i <<= 1, i |= e >> s + a & 1;
            for (a = 1; a <= 3; a++) {
                for (s = 0; s <= 24; s += 8) o <<= 1, o |= e >> s + a & 1;
                for (s = 0; s <= 24; s += 8) o <<= 1, o |= t >> s + a & 1
            }
            for (s = 0; s <= 24; s += 8) o <<= 1, o |= t >> s + a & 1;
            r[n + 0] = i >>> 0, r[n + 1] = o >>> 0
        }, e.r28shl = function r28shl(t, e) {
            return t << e & 268435455 | t >>> 28 - e
        };
        var n = [14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];
        e.pc2 = function pc2(t, e, r, i) {
            for (var o = 0, a = 0, s = n.length >>> 1, u = 0; u < s; u++) o <<= 1, o |= t >>> n[u] & 1;
            for (u = s; u < n.length; u++) a <<= 1, a |= e >>> n[u] & 1;
            r[i + 0] = o >>> 0, r[i + 1] = a >>> 0
        }, e.expand = function expand(t, e, r) {
            var n = 0,
                i = 0;
            n = (1 & t) << 5 | t >>> 27;
            for (var o = 23; o >= 15; o -= 4) n <<= 6, n |= t >>> o & 63;
            for (o = 11; o >= 3; o -= 4) i |= t >>> o & 63, i <<= 6;
            i |= (31 & t) << 1 | t >>> 31, e[r + 0] = n >>> 0, e[r + 1] = i >>> 0
        };
        var i = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];
        e.substitute = function substitute(t, e) {
            for (var r = 0, n = 0; n < 4; n++) {
                r <<= 4, r |= i[64 * n + (t >>> 18 - 6 * n & 63)]
            }
            for (n = 0; n < 4; n++) {
                r <<= 4, r |= i[256 + 64 * n + (e >>> 18 - 6 * n & 63)]
            }
            return r >>> 0
        };
        var o = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];
        e.permute = function permute(t) {
            for (var e = 0, r = 0; r < o.length; r++) e <<= 1, e |= t >>> o[r] & 1;
            return e >>> 0
        }, e.padSplit = function padSplit(t, e, r) {
            for (var n = t.toString(2); n.length < e;) n = "0" + n;
            for (var i = [], o = 0; o < e; o += r) i.push(n.slice(o, o + r));
            return i.join(" ")
        }
    }, function (t, e, r) {
        var n = r(17),
            i = r(1),
            o = r(312),
            a = r(194);

        function DESState() {
            this.tmp = new Array(2), this.keys = null
        }

        function DES(t) {
            a.call(this, t);
            var e = new DESState;
            this._desState = e, this.deriveKeys(e, t.key)
        }
        i(DES, a), t.exports = DES, DES.create = function create(t) {
            return new DES(t)
        };
        var s = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
        DES.prototype.deriveKeys = function deriveKeys(t, e) {
            t.keys = new Array(32), n.equal(e.length, this.blockSize, "Invalid key length");
            var r = o.readUInt32BE(e, 0),
                i = o.readUInt32BE(e, 4);
            o.pc1(r, i, t.tmp, 0), r = t.tmp[0], i = t.tmp[1];
            for (var a = 0; a < t.keys.length; a += 2) {
                var u = s[a >>> 1];
                r = o.r28shl(r, u), i = o.r28shl(i, u), o.pc2(r, i, t.keys, a)
            }
        }, DES.prototype._update = function _update(t, e, r, n) {
            var i = this._desState,
                a = o.readUInt32BE(t, e),
                s = o.readUInt32BE(t, e + 4);
            o.ip(a, s, i.tmp, 0), a = i.tmp[0], s = i.tmp[1], "encrypt" === this.type ? this._encrypt(i, a, s, i.tmp, 0) : this._decrypt(i, a, s, i.tmp, 0), a = i.tmp[0], s = i.tmp[1], o.writeUInt32BE(r, a, n), o.writeUInt32BE(r, s, n + 4)
        }, DES.prototype._pad = function _pad(t, e) {
            for (var r = t.length - e, n = e; n < t.length; n++) t[n] = r;
            return !0
        }, DES.prototype._unpad = function _unpad(t) {
            for (var e = t[t.length - 1], r = t.length - e; r < t.length; r++) n.equal(t[r], e);
            return t.slice(0, t.length - e)
        }, DES.prototype._encrypt = function _encrypt(t, e, r, n, i) {
            for (var a = e, s = r, u = 0; u < t.keys.length; u += 2) {
                var c = t.keys[u],
                    l = t.keys[u + 1];
                o.expand(s, t.tmp, 0), c ^= t.tmp[0], l ^= t.tmp[1];
                var h = o.substitute(c, l),
                    d = s;
                s = (a ^ o.permute(h)) >>> 0, a = d
            }
            o.rip(s, a, n, i)
        }, DES.prototype._decrypt = function _decrypt(t, e, r, n, i) {
            for (var a = r, s = e, u = t.keys.length - 2; u >= 0; u -= 2) {
                var c = t.keys[u],
                    l = t.keys[u + 1];
                o.expand(a, t.tmp, 0), c ^= t.tmp[0], l ^= t.tmp[1];
                var h = o.substitute(c, l),
                    d = a;
                a = (s ^ o.permute(h)) >>> 0, s = d
            }
            o.rip(a, s, n, i)
        }
    }, function (t, e, r) {
        var n = r(96),
            i = r(3).Buffer,
            o = r(315);

        function getBlock(t) {
            var e = t._cipher.encryptBlockRaw(t._prev);
            return o(t._prev), e
        }
        e.encrypt = function (t, e) {
            var r = Math.ceil(e.length / 16),
                o = t._cache.length;
            t._cache = i.concat([t._cache, i.allocUnsafe(16 * r)]);
            for (var a = 0; a < r; a++) {
                var s = getBlock(t),
                    u = o + 16 * a;
                t._cache.writeUInt32BE(s[0], u + 0), t._cache.writeUInt32BE(s[1], u + 4), t._cache.writeUInt32BE(s[2], u + 8), t._cache.writeUInt32BE(s[3], u + 12)
            }
            var c = t._cache.slice(0, e.length);
            return t._cache = t._cache.slice(e.length), n(e, c)
        }
    }, function (t, e) {
        t.exports = function incr32(t) {
            for (var e, r = t.length; r--;) {
                if (255 !== (e = t.readUInt8(r))) {
                    e++, t.writeUInt8(e, r);
                    break
                }
                t.writeUInt8(0, r)
            }
        }
    }, function (t) {
        t.exports = JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}')
    }, function (t, e, r) {
        var n = r(132),
            i = r(3).Buffer,
            o = r(42),
            a = r(1),
            s = r(811),
            u = r(96),
            c = r(315);

        function StreamCipher(t, e, r, a) {
            o.call(this);
            var u = i.alloc(4, 0);
            this._cipher = new n.AES(e);
            var l = this._cipher.encryptBlock(u);
            this._ghash = new s(l), r = function calcIv(t, e, r) {
                if (12 === e.length) return t._finID = i.concat([e, i.from([0, 0, 0, 1])]), i.concat([e, i.from([0, 0, 0, 2])]);
                var n = new s(r),
                    o = e.length,
                    a = o % 16;
                n.update(e), a && (a = 16 - a, n.update(i.alloc(a, 0))), n.update(i.alloc(8, 0));
                var u = 8 * o,
                    l = i.alloc(8);
                l.writeUIntBE(u, 0, 8), n.update(l), t._finID = n.state;
                var h = i.from(t._finID);
                return c(h), h
            }(this, r, l), this._prev = i.from(r), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = a, this._alen = 0, this._len = 0, this._mode = t, this._authTag = null, this._called = !1
        }
        a(StreamCipher, o), StreamCipher.prototype._update = function (t) {
            if (!this._called && this._alen) {
                var e = 16 - this._alen % 16;
                e < 16 && (e = i.alloc(e, 0), this._ghash.update(e))
            }
            this._called = !0;
            var r = this._mode.encrypt(this, t);
            return this._decrypt ? this._ghash.update(t) : this._ghash.update(r), this._len += t.length, r
        }, StreamCipher.prototype._final = function () {
            if (this._decrypt && !this._authTag) throw new Error("Unsupported state or unable to authenticate data");
            var t = u(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
            if (this._decrypt && function xorTest(t, e) {
                    var r = 0;
                    t.length !== e.length && r++;
                    for (var n = Math.min(t.length, e.length), i = 0; i < n; ++i) r += t[i] ^ e[i];
                    return r
                }(t, this._authTag)) throw new Error("Unsupported state or unable to authenticate data");
            this._authTag = t, this._cipher.scrub()
        }, StreamCipher.prototype.getAuthTag = function getAuthTag() {
            if (this._decrypt || !i.isBuffer(this._authTag)) throw new Error("Attempting to get auth tag in unsupported state");
            return this._authTag
        }, StreamCipher.prototype.setAuthTag = function setAuthTag(t) {
            if (!this._decrypt) throw new Error("Attempting to set auth tag in unsupported state");
            this._authTag = t
        }, StreamCipher.prototype.setAAD = function setAAD(t) {
            if (this._called) throw new Error("Attempting to set AAD in unsupported state");
            this._ghash.update(t), this._alen += t.length
        }, t.exports = StreamCipher
    }, function (t, e, r) {
        var n = r(132),
            i = r(3).Buffer,
            o = r(42);

        function StreamCipher(t, e, r, a) {
            o.call(this), this._cipher = new n.AES(e), this._prev = i.from(r), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = a, this._mode = t
        }
        r(1)(StreamCipher, o), StreamCipher.prototype._update = function (t) {
            return this._mode.encrypt(this, t, this._decrypt)
        }, StreamCipher.prototype._final = function () {
            this._cipher.scrub()
        }, t.exports = StreamCipher
    }, function (t, e, r) {
        var n = r(15);
        t.exports = findPrime, findPrime.simpleSieve = simpleSieve, findPrime.fermatTest = fermatTest;
        var i = r(2),
            o = new i(24),
            a = new(r(320)),
            s = new i(1),
            u = new i(2),
            c = new i(5),
            l = (new i(16), new i(8), new i(10)),
            h = new i(3),
            d = (new i(7), new i(11)),
            p = new i(4),
            m = (new i(12), null);

        function _getPrimes() {
            if (null !== m) return m;
            var t = [];
            t[0] = 2;
            for (var e = 1, r = 3; r < 1048576; r += 2) {
                for (var n = Math.ceil(Math.sqrt(r)), i = 0; i < e && t[i] <= n && r % t[i] != 0; i++);
                e !== i && t[i] <= n || (t[e++] = r)
            }
            return m = t, t
        }

        function simpleSieve(t) {
            for (var e = _getPrimes(), r = 0; r < e.length; r++)
                if (0 === t.modn(e[r])) return 0 === t.cmpn(e[r]);
            return !0
        }

        function fermatTest(t) {
            var e = i.mont(t);
            return 0 === u.toRed(e).redPow(t.subn(1)).fromRed().cmpn(1)
        }

        function findPrime(t, e) {
            if (t < 16) return new i(2 === e || 5 === e ? [140, 123] : [140, 39]);
            var r, m;
            for (e = new i(e);;) {
                for (r = new i(n(Math.ceil(t / 8))); r.bitLength() > t;) r.ishrn(1);
                if (r.isEven() && r.iadd(s), r.testn(1) || r.iadd(u), e.cmp(u)) {
                    if (!e.cmp(c))
                        for (; r.mod(l).cmp(h);) r.iadd(p)
                } else
                    for (; r.mod(o).cmp(d);) r.iadd(p);
                if (simpleSieve(m = r.shrn(1)) && simpleSieve(r) && fermatTest(m) && fermatTest(r) && a.test(m) && a.test(r)) return r
            }
        }
    }, function (t, e, r) {
        var n = r(2),
            i = r(88);

        function MillerRabin(t) {
            this.rand = t || new i.Rand
        }
        t.exports = MillerRabin, MillerRabin.create = function create(t) {
            return new MillerRabin(t)
        }, MillerRabin.prototype._randbelow = function _randbelow(t) {
            var e = t.bitLength(),
                r = Math.ceil(e / 8);
            do {
                var i = new n(this.rand.generate(r))
            } while (i.cmp(t) >= 0);
            return i
        }, MillerRabin.prototype._randrange = function _randrange(t, e) {
            var r = e.sub(t);
            return t.add(this._randbelow(r))
        }, MillerRabin.prototype.test = function test(t, e, r) {
            var i = t.bitLength(),
                o = n.mont(t),
                a = new n(1).toRed(o);
            e || (e = Math.max(1, i / 48 | 0));
            for (var s = t.subn(1), u = 0; !s.testn(u); u++);
            for (var c = t.shrn(u), l = s.toRed(o); e > 0; e--) {
                var h = this._randrange(new n(2), s);
                r && r(h);
                var d = h.toRed(o).redPow(c);
                if (0 !== d.cmp(a) && 0 !== d.cmp(l)) {
                    for (var p = 1; p < u; p++) {
                        if (0 === (d = d.redSqr()).cmp(a)) return !1;
                        if (0 === d.cmp(l)) break
                    }
                    if (p === u) return !1
                }
            }
            return !0
        }, MillerRabin.prototype.getDivisor = function getDivisor(t, e) {
            var r = t.bitLength(),
                i = n.mont(t),
                o = new n(1).toRed(i);
            e || (e = Math.max(1, r / 48 | 0));
            for (var a = t.subn(1), s = 0; !a.testn(s); s++);
            for (var u = t.shrn(s), c = a.toRed(i); e > 0; e--) {
                var l = this._randrange(new n(2), a),
                    h = t.gcd(l);
                if (0 !== h.cmpn(1)) return h;
                var d = l.toRed(i).redPow(u);
                if (0 !== d.cmp(o) && 0 !== d.cmp(c)) {
                    for (var p = 1; p < s; p++) {
                        if (0 === (d = d.redSqr()).cmp(o)) return d.fromRed().subn(1).gcd(t);
                        if (0 === d.cmp(c)) break
                    }
                    if (p === s) return (d = d.redSqr()).fromRed().subn(1).gcd(t)
                }
            }
            return !1
        }
    }, function (t, e, r) {
        var n = r(1),
            i = r(98).Reporter,
            o = r(0).Buffer;

        function DecoderBuffer(t, e) {
            i.call(this, e), o.isBuffer(t) ? (this.base = t, this.offset = 0, this.length = t.length) : this.error("Input not Buffer")
        }

        function EncoderBuffer(t, e) {
            if (Array.isArray(t)) this.length = 0, this.value = t.map((function (t) {
                return t instanceof EncoderBuffer || (t = new EncoderBuffer(t, e)), this.length += t.length, t
            }), this);
            else if ("number" == typeof t) {
                if (!(0 <= t && t <= 255)) return e.error("non-byte EncoderBuffer value");
                this.value = t, this.length = 1
            } else if ("string" == typeof t) this.value = t, this.length = o.byteLength(t);
            else {
                if (!o.isBuffer(t)) return e.error("Unsupported type: " + typeof t);
                this.value = t, this.length = t.length
            }
        }
        n(DecoderBuffer, i), e.DecoderBuffer = DecoderBuffer, DecoderBuffer.prototype.save = function save() {
            return {
                offset: this.offset,
                reporter: i.prototype.save.call(this)
            }
        }, DecoderBuffer.prototype.restore = function restore(t) {
            var e = new DecoderBuffer(this.base);
            return e.offset = t.offset, e.length = this.offset, this.offset = t.offset, i.prototype.restore.call(this, t.reporter), e
        }, DecoderBuffer.prototype.isEmpty = function isEmpty() {
            return this.offset === this.length
        }, DecoderBuffer.prototype.readUInt8 = function readUInt8(t) {
            return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, !0) : this.error(t || "DecoderBuffer overrun")
        }, DecoderBuffer.prototype.skip = function skip(t, e) {
            if (!(this.offset + t <= this.length)) return this.error(e || "DecoderBuffer overrun");
            var r = new DecoderBuffer(this.base);
            return r._reporterState = this._reporterState, r.offset = this.offset, r.length = this.offset + t, this.offset += t, r
        }, DecoderBuffer.prototype.raw = function raw(t) {
            return this.base.slice(t ? t.offset : this.offset, this.length)
        }, e.EncoderBuffer = EncoderBuffer, EncoderBuffer.prototype.join = function join(t, e) {
            return t || (t = new o(this.length)), e || (e = 0), 0 === this.length || (Array.isArray(this.value) ? this.value.forEach((function (r) {
                r.join(t, e), e += r.length
            })) : ("number" == typeof this.value ? t[e] = this.value : "string" == typeof this.value ? t.write(this.value, e) : o.isBuffer(this.value) && this.value.copy(t, e), e += this.length)), t
        }
    }, function (t, e, r) {
        var n = e;
        n._reverse = function reverse(t) {
            var e = {};
            return Object.keys(t).forEach((function (r) {
                (0 | r) == r && (r |= 0);
                var n = t[r];
                e[n] = r
            })), e
        }, n.der = r(824)
    }, function (t, e, r) {
        var n = r(1),
            i = r(97),
            o = i.base,
            a = i.bignum,
            s = i.constants.der;

        function DERDecoder(t) {
            this.enc = "der", this.name = t.name, this.entity = t, this.tree = new DERNode, this.tree._init(t.body)
        }

        function DERNode(t) {
            o.Node.call(this, "der", t)
        }

        function derDecodeTag(t, e) {
            var r = t.readUInt8(e);
            if (t.isError(r)) return r;
            var n = s.tagClass[r >> 6],
                i = 0 == (32 & r);
            if (31 == (31 & r)) {
                var o = r;
                for (r = 0; 128 == (128 & o);) {
                    if (o = t.readUInt8(e), t.isError(o)) return o;
                    r <<= 7, r |= 127 & o
                }
            } else r &= 31;
            return {
                cls: n,
                primitive: i,
                tag: r,
                tagStr: s.tag[r]
            }
        }

        function derDecodeLen(t, e, r) {
            var n = t.readUInt8(r);
            if (t.isError(n)) return n;
            if (!e && 128 === n) return null;
            if (0 == (128 & n)) return n;
            var i = 127 & n;
            if (i > 4) return t.error("length octect is too long");
            n = 0;
            for (var o = 0; o < i; o++) {
                n <<= 8;
                var a = t.readUInt8(r);
                if (t.isError(a)) return a;
                n |= a
            }
            return n
        }
        t.exports = DERDecoder, DERDecoder.prototype.decode = function decode(t, e) {
            return t instanceof o.DecoderBuffer || (t = new o.DecoderBuffer(t, e)), this.tree._decode(t, e)
        }, n(DERNode, o.Node), DERNode.prototype._peekTag = function peekTag(t, e, r) {
            if (t.isEmpty()) return !1;
            var n = t.save(),
                i = derDecodeTag(t, 'Failed to peek tag: "' + e + '"');
            return t.isError(i) ? i : (t.restore(n), i.tag === e || i.tagStr === e || i.tagStr + "of" === e || r)
        }, DERNode.prototype._decodeTag = function decodeTag(t, e, r) {
            var n = derDecodeTag(t, 'Failed to decode tag of "' + e + '"');
            if (t.isError(n)) return n;
            var i = derDecodeLen(t, n.primitive, 'Failed to get length of "' + e + '"');
            if (t.isError(i)) return i;
            if (!r && n.tag !== e && n.tagStr !== e && n.tagStr + "of" !== e) return t.error('Failed to match tag: "' + e + '"');
            if (n.primitive || null !== i) return t.skip(i, 'Failed to match body of: "' + e + '"');
            var o = t.save(),
                a = this._skipUntilEnd(t, 'Failed to skip indefinite length body: "' + this.tag + '"');
            return t.isError(a) ? a : (i = t.offset - o.offset, t.restore(o), t.skip(i, 'Failed to match body of: "' + e + '"'))
        }, DERNode.prototype._skipUntilEnd = function skipUntilEnd(t, e) {
            for (;;) {
                var r = derDecodeTag(t, e);
                if (t.isError(r)) return r;
                var n, i = derDecodeLen(t, r.primitive, e);
                if (t.isError(i)) return i;
                if (n = r.primitive || null !== i ? t.skip(i) : this._skipUntilEnd(t, e), t.isError(n)) return n;
                if ("end" === r.tagStr) break
            }
        }, DERNode.prototype._decodeList = function decodeList(t, e, r, n) {
            for (var i = []; !t.isEmpty();) {
                var o = this._peekTag(t, "end");
                if (t.isError(o)) return o;
                var a = r.decode(t, "der", n);
                if (t.isError(a) && o) break;
                i.push(a)
            }
            return i
        }, DERNode.prototype._decodeStr = function decodeStr(t, e) {
            if ("bitstr" === e) {
                var r = t.readUInt8();
                return t.isError(r) ? r : {
                    unused: r,
                    data: t.raw()
                }
            }
            if ("bmpstr" === e) {
                var n = t.raw();
                if (n.length % 2 == 1) return t.error("Decoding of string type: bmpstr length mismatch");
                for (var i = "", o = 0; o < n.length / 2; o++) i += String.fromCharCode(n.readUInt16BE(2 * o));
                return i
            }
            if ("numstr" === e) {
                var a = t.raw().toString("ascii");
                return this._isNumstr(a) ? a : t.error("Decoding of string type: numstr unsupported characters")
            }
            if ("octstr" === e) return t.raw();
            if ("objDesc" === e) return t.raw();
            if ("printstr" === e) {
                var s = t.raw().toString("ascii");
                return this._isPrintstr(s) ? s : t.error("Decoding of string type: printstr unsupported characters")
            }
            return /str$/.test(e) ? t.raw().toString() : t.error("Decoding of string type: " + e + " unsupported")
        }, DERNode.prototype._decodeObjid = function decodeObjid(t, e, r) {
            for (var n, i = [], o = 0; !t.isEmpty();) {
                var a = t.readUInt8();
                o <<= 7, o |= 127 & a, 0 == (128 & a) && (i.push(o), o = 0)
            }
            128 & a && i.push(o);
            var s = i[0] / 40 | 0,
                u = i[0] % 40;
            if (n = r ? i : [s, u].concat(i.slice(1)), e) {
                var c = e[n.join(" ")];
                void 0 === c && (c = e[n.join(".")]), void 0 !== c && (n = c)
            }
            return n
        }, DERNode.prototype._decodeTime = function decodeTime(t, e) {
            var r = t.raw().toString();
            if ("gentime" === e) var n = 0 | r.slice(0, 4),
                i = 0 | r.slice(4, 6),
                o = 0 | r.slice(6, 8),
                a = 0 | r.slice(8, 10),
                s = 0 | r.slice(10, 12),
                u = 0 | r.slice(12, 14);
            else {
                if ("utctime" !== e) return t.error("Decoding " + e + " time is not supported yet");
                n = 0 | r.slice(0, 2), i = 0 | r.slice(2, 4), o = 0 | r.slice(4, 6), a = 0 | r.slice(6, 8), s = 0 | r.slice(8, 10), u = 0 | r.slice(10, 12);
                n = n < 70 ? 2e3 + n : 1900 + n
            }
            return Date.UTC(n, i - 1, o, a, s, u, 0)
        }, DERNode.prototype._decodeNull = function decodeNull(t) {
            return null
        }, DERNode.prototype._decodeBool = function decodeBool(t) {
            var e = t.readUInt8();
            return t.isError(e) ? e : 0 !== e
        }, DERNode.prototype._decodeInt = function decodeInt(t, e) {
            var r = t.raw(),
                n = new a(r);
            return e && (n = e[n.toString(10)] || n), n
        }, DERNode.prototype._use = function use(t, e) {
            return "function" == typeof t && (t = t(e)), t._getDecoder("der").tree
        }
    }, function (t, e, r) {
        var n = r(1),
            i = r(0).Buffer,
            o = r(97),
            a = o.base,
            s = o.constants.der;

        function DEREncoder(t) {
            this.enc = "der", this.name = t.name, this.entity = t, this.tree = new DERNode, this.tree._init(t.body)
        }

        function DERNode(t) {
            a.Node.call(this, "der", t)
        }

        function two(t) {
            return t < 10 ? "0" + t : t
        }
        t.exports = DEREncoder, DEREncoder.prototype.encode = function encode(t, e) {
            return this.tree._encode(t, e).join()
        }, n(DERNode, a.Node), DERNode.prototype._encodeComposite = function encodeComposite(t, e, r, n) {
            var o, a = function encodeTag(t, e, r, n) {
                var i;
                "seqof" === t ? t = "seq" : "setof" === t && (t = "set");
                if (s.tagByName.hasOwnProperty(t)) i = s.tagByName[t];
                else {
                    if ("number" != typeof t || (0 | t) !== t) return n.error("Unknown tag: " + t);
                    i = t
                }
                if (i >= 31) return n.error("Multi-octet tag encoding unsupported");
                e || (i |= 32);
                return i |= s.tagClassByName[r || "universal"] << 6
            }(t, e, r, this.reporter);
            if (n.length < 128) return (o = new i(2))[0] = a, o[1] = n.length, this._createEncoderBuffer([o, n]);
            for (var u = 1, c = n.length; c >= 256; c >>= 8) u++;
            (o = new i(2 + u))[0] = a, o[1] = 128 | u;
            c = 1 + u;
            for (var l = n.length; l > 0; c--, l >>= 8) o[c] = 255 & l;
            return this._createEncoderBuffer([o, n])
        }, DERNode.prototype._encodeStr = function encodeStr(t, e) {
            if ("bitstr" === e) return this._createEncoderBuffer([0 | t.unused, t.data]);
            if ("bmpstr" === e) {
                for (var r = new i(2 * t.length), n = 0; n < t.length; n++) r.writeUInt16BE(t.charCodeAt(n), 2 * n);
                return this._createEncoderBuffer(r)
            }
            return "numstr" === e ? this._isNumstr(t) ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : "printstr" === e ? this._isPrintstr(t) ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(e) || "objDesc" === e ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: " + e + " unsupported")
        }, DERNode.prototype._encodeObjid = function encodeObjid(t, e, r) {
            if ("string" == typeof t) {
                if (!e) return this.reporter.error("string objid given, but no values map found");
                if (!e.hasOwnProperty(t)) return this.reporter.error("objid not found in values map");
                t = e[t].split(/[\s\.]+/g);
                for (var n = 0; n < t.length; n++) t[n] |= 0
            } else if (Array.isArray(t)) {
                t = t.slice();
                for (n = 0; n < t.length; n++) t[n] |= 0
            }
            if (!Array.isArray(t)) return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(t));
            if (!r) {
                if (t[1] >= 40) return this.reporter.error("Second objid identifier OOB");
                t.splice(0, 2, 40 * t[0] + t[1])
            }
            var o = 0;
            for (n = 0; n < t.length; n++) {
                var a = t[n];
                for (o++; a >= 128; a >>= 7) o++
            }
            var s = new i(o),
                u = s.length - 1;
            for (n = t.length - 1; n >= 0; n--) {
                a = t[n];
                for (s[u--] = 127 & a;
                    (a >>= 7) > 0;) s[u--] = 128 | 127 & a
            }
            return this._createEncoderBuffer(s)
        }, DERNode.prototype._encodeTime = function encodeTime(t, e) {
            var r, n = new Date(t);
            return "gentime" === e ? r = [two(n.getFullYear()), two(n.getUTCMonth() + 1), two(n.getUTCDate()), two(n.getUTCHours()), two(n.getUTCMinutes()), two(n.getUTCSeconds()), "Z"].join("") : "utctime" === e ? r = [two(n.getFullYear() % 100), two(n.getUTCMonth() + 1), two(n.getUTCDate()), two(n.getUTCHours()), two(n.getUTCMinutes()), two(n.getUTCSeconds()), "Z"].join("") : this.reporter.error("Encoding " + e + " time is not supported yet"), this._encodeStr(r, "octstr")
        }, DERNode.prototype._encodeNull = function encodeNull() {
            return this._createEncoderBuffer("")
        }, DERNode.prototype._encodeInt = function encodeInt(t, e) {
            if ("string" == typeof t) {
                if (!e) return this.reporter.error("String int or enum given, but no values map");
                if (!e.hasOwnProperty(t)) return this.reporter.error("Values map doesn't contain: " + JSON.stringify(t));
                t = e[t]
            }
            if ("number" != typeof t && !i.isBuffer(t)) {
                var r = t.toArray();
                !t.sign && 128 & r[0] && r.unshift(0), t = new i(r)
            }
            if (i.isBuffer(t)) {
                var n = t.length;
                0 === t.length && n++;
                var o = new i(n);
                return t.copy(o), 0 === t.length && (o[0] = 0), this._createEncoderBuffer(o)
            }
            if (t < 128) return this._createEncoderBuffer(t);
            if (t < 256) return this._createEncoderBuffer([0, t]);
            n = 1;
            for (var a = t; a >= 256; a >>= 8) n++;
            for (a = (o = new Array(n)).length - 1; a >= 0; a--) o[a] = 255 & t, t >>= 8;
            return 128 & o[0] && o.unshift(0), this._createEncoderBuffer(new i(o))
        }, DERNode.prototype._encodeBool = function encodeBool(t) {
            return this._createEncoderBuffer(t ? 255 : 0)
        }, DERNode.prototype._use = function use(t, e) {
            return "function" == typeof t && (t = t(e)), t._getEncoder("der").tree
        }, DERNode.prototype._skipDefault = function skipDefault(t, e, r) {
            var n, i = this._baseState;
            if (null === i.default) return !1;
            var o = t.join();
            if (void 0 === i.defaultBuffer && (i.defaultBuffer = this._encodeValue(i.default, e, r).join()), o.length !== i.defaultBuffer.length) return !1;
            for (n = 0; n < o.length; n++)
                if (o[n] !== i.defaultBuffer[n]) return !1;
            return !0
        }
    }, function (t) {
        t.exports = JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}')
    }, function (t, e, r) {
        var n = r(55),
            i = r(3).Buffer;

        function i2ops(t) {
            var e = i.allocUnsafe(4);
            return e.writeUInt32BE(t, 0), e
        }
        t.exports = function (t, e) {
            for (var r, o = i.alloc(0), a = 0; o.length < e;) r = i2ops(a++), o = i.concat([o, n("sha1").update(t).update(r).digest()]);
            return o.slice(0, e)
        }
    }, function (t, e) {
        t.exports = function xor(t, e) {
            for (var r = t.length, n = -1; ++n < r;) t[n] ^= e[n];
            return t
        }
    }, function (t, e, r) {
        var n = r(2),
            i = r(3).Buffer;
        t.exports = function withPublic(t, e) {
            return i.from(t.toRed(n.mont(e.modulus)).redPow(new n(e.publicExponent)).fromRed().toArray())
        }
    }, function (t, e) {
        var r = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof window.msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto);
        if (r) {
            var n = new Uint8Array(16);
            t.exports = function whatwgRNG() {
                return r(n), n
            }
        } else {
            var i = new Array(16);
            t.exports = function mathRNG() {
                for (var t, e = 0; e < 16; e++) 0 == (3 & e) && (t = 4294967296 * Math.random()), i[e] = t >>> ((3 & e) << 3) & 255;
                return i
            }
        }
    }, function (t, e) {
        for (var r = [], n = 0; n < 256; ++n) r[n] = (n + 256).toString(16).substr(1);
        t.exports = function bytesToUuid(t, e) {
            var n = e || 0,
                i = r;
            return [i[t[n++]], i[t[n++]], i[t[n++]], i[t[n++]], "-", i[t[n++]], i[t[n++]], "-", i[t[n++]], i[t[n++]], "-", i[t[n++]], i[t[n++]], "-", i[t[n++]], i[t[n++]], i[t[n++]], i[t[n++]], i[t[n++]], i[t[n++]]].join("")
        }
    }, function (t, e, r) {
        var n = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
                void 0 === n && (n = r), Object.defineProperty(t, n, {
                    enumerable: !0,
                    get: function () {
                        return e[r]
                    }
                })
            } : function (t, e, r, n) {
                void 0 === n && (n = r), t[n] = e[r]
            }),
            i = this && this.__exportStar || function (t, e) {
                for (var r in t) "default" === r || e.hasOwnProperty(r) || n(e, t, r)
            };
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = r(844);
        Object.defineProperty(e, "Transaction", {
            enumerable: !0,
            get: function () {
                return o.default
            }
        });
        var a = r(852);
        Object.defineProperty(e, "AccessListEIP2930Transaction", {
            enumerable: !0,
            get: function () {
                return a.default
            }
        });
        var s = r(853);
        Object.defineProperty(e, "TransactionFactory", {
            enumerable: !0,
            get: function () {
                return s.default
            }
        });
        var u = r(854);
        Object.defineProperty(e, "FeeMarketEIP1559Transaction", {
            enumerable: !0,
            get: function () {
                return u.default
            }
        }), i(r(70), e)
    }, function (t, e, r) {
        var n = this && this.__importDefault || function (t) {
            return t && t.__esModule ? t : {
                default: t
            }
        };
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.KECCAK256_RLP = e.KECCAK256_RLP_S = e.KECCAK256_RLP_ARRAY = e.KECCAK256_RLP_ARRAY_S = e.KECCAK256_NULL = e.KECCAK256_NULL_S = e.TWO_POW256 = e.MAX_INTEGER = void 0;
        var i = r(0).Buffer,
            o = n(r(57));
        e.MAX_INTEGER = new o.default("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", 16), e.TWO_POW256 = new o.default("10000000000000000000000000000000000000000000000000000000000000000", 16), e.KECCAK256_NULL_S = "c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", e.KECCAK256_NULL = i.from(e.KECCAK256_NULL_S, "hex"), e.KECCAK256_RLP_ARRAY_S = "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347", e.KECCAK256_RLP_ARRAY = i.from(e.KECCAK256_RLP_ARRAY_S, "hex"), e.KECCAK256_RLP_S = "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421", e.KECCAK256_RLP = i.from(e.KECCAK256_RLP_S, "hex")
    }, function (t, e, r) {
        (function (t) {
            var n = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
                    void 0 === n && (n = r), Object.defineProperty(t, n, {
                        enumerable: !0,
                        get: function () {
                            return e[r]
                        }
                    })
                } : function (t, e, r, n) {
                    void 0 === n && (n = r), t[n] = e[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function (t, e) {
                    Object.defineProperty(t, "default", {
                        enumerable: !0,
                        value: e
                    })
                } : function (t, e) {
                    t.default = e
                }),
                o = this && this.__importStar || function (t) {
                    if (t && t.__esModule) return t;
                    var e = {};
                    if (null != t)
                        for (var r in t) "default" !== r && Object.hasOwnProperty.call(t, r) && n(e, t, r);
                    return i(e, t), e
                },
                a = this && this.__read || function (t, e) {
                    var r = "function" == typeof Symbol && t[Symbol.iterator];
                    if (!r) return t;
                    var n, i, o = r.call(t),
                        a = [];
                    try {
                        for (;
                            (void 0 === e || e-- > 0) && !(n = o.next()).done;) a.push(n.value)
                    } catch (t) {
                        i = {
                            error: t
                        }
                    } finally {
                        try {
                            n && !n.done && (r = o.return) && r.call(o)
                        } finally {
                            if (i) throw i.error
                        }
                    }
                    return a
                },
                s = this && this.__importDefault || function (t) {
                    return t && t.__esModule ? t : {
                        default: t
                    }
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.isZeroAddress = e.zeroAddress = e.importPublic = e.privateToAddress = e.privateToPublic = e.publicToAddress = e.pubToAddress = e.isValidPublic = e.isValidPrivate = e.generateAddress2 = e.generateAddress = e.isValidChecksumAddress = e.toChecksumAddress = e.isValidAddress = e.Account = void 0;
            var u = s(r(18)),
                c = s(r(57)),
                l = o(r(135)),
                h = r(121),
                d = r(20),
                p = r(332),
                m = r(58),
                y = r(198),
                b = r(136),
                g = r(199),
                v = function () {
                    function Account(t, e, r, n) {
                        void 0 === t && (t = new c.default(0)), void 0 === e && (e = new c.default(0)), void 0 === r && (r = p.KECCAK256_RLP), void 0 === n && (n = p.KECCAK256_NULL), this.nonce = t, this.balance = e, this.stateRoot = r, this.codeHash = n, this._validate()
                    }
                    return Account.fromAccountData = function (t) {
                        var e = t.nonce,
                            r = t.balance,
                            n = t.stateRoot,
                            i = t.codeHash;
                        return new Account(e ? new c.default(m.toBuffer(e)) : void 0, r ? new c.default(m.toBuffer(r)) : void 0, n ? m.toBuffer(n) : void 0, i ? m.toBuffer(i) : void 0)
                    }, Account.fromRlpSerializedAccount = function (t) {
                        var e = l.decode(t);
                        if (!Array.isArray(e)) throw new Error("Invalid serialized account input. Must be array");
                        return this.fromValuesArray(e)
                    }, Account.fromValuesArray = function (t) {
                        var e = a(t, 4),
                            r = e[0],
                            n = e[1],
                            i = e[2],
                            o = e[3];
                        return new Account(new c.default(r), new c.default(n), i, o)
                    }, Account.prototype._validate = function () {
                        if (this.nonce.lt(new c.default(0))) throw new Error("nonce must be greater than zero");
                        if (this.balance.lt(new c.default(0))) throw new Error("balance must be greater than zero");
                        if (32 !== this.stateRoot.length) throw new Error("stateRoot must have a length of 32");
                        if (32 !== this.codeHash.length) throw new Error("codeHash must have a length of 32")
                    }, Account.prototype.raw = function () {
                        return [g.bnToUnpaddedBuffer(this.nonce), g.bnToUnpaddedBuffer(this.balance), this.stateRoot, this.codeHash]
                    }, Account.prototype.serialize = function () {
                        return l.encode(this.raw())
                    }, Account.prototype.isContract = function () {
                        return !this.codeHash.equals(p.KECCAK256_NULL)
                    }, Account.prototype.isEmpty = function () {
                        return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(p.KECCAK256_NULL)
                    }, Account
                }();
            e.Account = v, e.isValidAddress = function (t) {
                try {
                    b.assertIsString(t)
                } catch (t) {
                    return !1
                }
                return /^0x[0-9a-fA-F]{40}$/.test(t)
            }, e.toChecksumAddress = function (t, e) {
                b.assertIsHexString(t);
                var r = d.stripHexPrefix(t).toLowerCase(),
                    n = "";
                e && (n = g.toType(e, g.TypeOutput.BN).toString() + "0x");
                for (var i = y.keccakFromString(n + r).toString("hex"), o = "0x", a = 0; a < r.length; a++) parseInt(i[a], 16) >= 8 ? o += r[a].toUpperCase() : o += r[a];
                return o
            }, e.isValidChecksumAddress = function (t, r) {
                return e.isValidAddress(t) && e.toChecksumAddress(t, r) === t
            }, e.generateAddress = function (e, r) {
                b.assertIsBuffer(e), b.assertIsBuffer(r);
                var n = new c.default(r);
                return n.isZero() ? y.rlphash([e, null]).slice(-20) : y.rlphash([e, t.from(n.toArray())]).slice(-20)
            }, e.generateAddress2 = function (e, r, n) {
                return b.assertIsBuffer(e), b.assertIsBuffer(r), b.assertIsBuffer(n), u.default(20 === e.length), u.default(32 === r.length), y.keccak256(t.concat([t.from("ff", "hex"), e, r, y.keccak256(n)])).slice(-20)
            }, e.isValidPrivate = function (t) {
                return h.privateKeyVerify(t)
            }, e.isValidPublic = function (e, r) {
                return void 0 === r && (r = !1), b.assertIsBuffer(e), 64 === e.length ? h.publicKeyVerify(t.concat([t.from([4]), e])) : !!r && h.publicKeyVerify(e)
            }, e.pubToAddress = function (e, r) {
                return void 0 === r && (r = !1), b.assertIsBuffer(e), r && 64 !== e.length && (e = t.from(h.publicKeyConvert(e, !1).slice(1))), u.default(64 === e.length), y.keccak(e).slice(-20)
            }, e.publicToAddress = e.pubToAddress, e.privateToPublic = function (e) {
                return b.assertIsBuffer(e), t.from(h.publicKeyCreate(e, !1)).slice(1)
            }, e.privateToAddress = function (t) {
                return e.publicToAddress(e.privateToPublic(t))
            }, e.importPublic = function (e) {
                return b.assertIsBuffer(e), 64 !== e.length && (e = t.from(h.publicKeyConvert(e, !1).slice(1))), e
            }, e.zeroAddress = function () {
                var t = m.zeros(20);
                return m.bufferToHex(t)
            }, e.isZeroAddress = function (t) {
                try {
                    b.assertIsString(t)
                } catch (t) {
                    return !1
                }
                return e.zeroAddress() === t
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.AccessLists = void 0;
        var n = r(56),
            i = r(70),
            o = function () {
                function AccessLists() {}
                return AccessLists.getAccessListData = function (t) {
                    var e, r;
                    if (t && i.isAccessList(t)) {
                        e = t;
                        for (var o = [], a = 0; a < t.length; a++) {
                            for (var s = t[a], u = n.toBuffer(s.address), c = [], l = 0; l < s.storageKeys.length; l++) c.push(n.toBuffer(s.storageKeys[l]));
                            o.push([u, c])
                        }
                        r = o
                    } else {
                        r = null != t ? t : [];
                        var h = [];
                        for (a = 0; a < r.length; a++) {
                            var d = r[a],
                                p = n.bufferToHex(d[0]),
                                m = [];
                            for (s = 0; s < d[1].length; s++) m.push(n.bufferToHex(d[1][s]));
                            var y = {
                                address: p,
                                storageKeys: m
                            };
                            h.push(y)
                        }
                        e = h
                    }
                    return {
                        AccessListJSON: e,
                        accessList: r
                    }
                }, AccessLists.verifyAccessList = function (t) {
                    for (var e = 0; e < t.length; e++) {
                        var r = t[e],
                            n = r[0],
                            i = r[1];
                        if (void 0 !== r[2]) throw new Error("Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.");
                        if (20 != n.length) throw new Error("Invalid EIP-2930 transaction: address length should be 20 bytes");
                        for (var o = 0; o < i.length; o++)
                            if (32 != i[o].length) throw new Error("Invalid EIP-2930 transaction: storage slot length should be 32 bytes")
                    }
                }, AccessLists.getAccessListJSON = function (t) {
                    for (var e = [], r = 0; r < t.length; r++) {
                        for (var i = t[r], o = {
                                address: "0x" + n.setLengthLeft(i[0], 20).toString("hex"),
                                storageKeys: []
                            }, a = i[1], s = 0; s < a.length; s++) {
                            var u = a[s];
                            o.storageKeys.push("0x" + n.setLengthLeft(u, 32).toString("hex"))
                        }
                        e.push(o)
                    }
                    return e
                }, AccessLists.getDataFeeEIP2930 = function (t, e) {
                    for (var r = e.param("gasPrices", "accessListStorageKeyCost"), n = e.param("gasPrices", "accessListAddressCost"), i = 0, o = 0; o < t.length; o++) {
                        i += t[o][1].length
                    }
                    return t.length * n + i * r
                }, AccessLists
            }();
        e.AccessLists = o
    }, function (t, e, r) {
        var n = r(174),
            i = r(180),
            o = r(48),
            Net = function () {
                var t = this;
                n.packageInit(this, arguments), [new i({
                    name: "getId",
                    call: "net_version",
                    params: 0,
                    outputFormatter: parseInt
                }), new i({
                    name: "isListening",
                    call: "net_listening",
                    params: 0
                }), new i({
                    name: "getPeerCount",
                    call: "net_peerCount",
                    params: 0,
                    outputFormatter: o.hexToNumber
                })].forEach((function (e) {
                    e.attachToObject(t), e.setRequestManager(t._requestManager)
                }))
            };
        n.addProviders(Net), t.exports = Net
    }, function (t, e, r) {
        const n = r(858),
            i = r(871);
        t.exports = {
            packageInit: (t, e) => {
                if (e = Array.prototype.slice.call(e), !t) throw new Error('You need to instantiate using the "new" keyword.');
                Object.defineProperty(t, "currentProvider", {
                    get: () => t._provider,
                    set: e => t.setProvider(e),
                    enumerable: !0,
                    configurable: !0
                }), e[0] && e[0]._requestManager ? t._requestManager = e[0]._requestManager : t._requestManager = new n.Manager(e[0], e[1]), t.givenProvider = n.Manager.givenProvider, t.providers = n.Manager.providers, t._provider = t._requestManager.provider, t.setProvider || (t.setProvider = (e, r) => (t._requestManager.setProvider(e, r), t._provider = t._requestManager.provider, !0)), t.setRequestManager = e => {
                    t._requestManager = e, t._provider = e.provider
                }, t.BatchRequest = n.BatchManager.bind(null, t._requestManager), t.extend = i(t)
            },
            addProviders: t => {
                t.givenProvider = n.Manager.givenProvider, t.providers = n.Manager.providers
            }
        }
    }, function (t, e, r) {
        (function (e) {
            var n = r(137),
                i = r(49),
                o = r(66),
                a = r(50),
                s = r(67),
                isBN = function (t) {
                    return n.isBN(t)
                },
                isBigNumber = function (t) {
                    return t && t.constructor && "BigNumber" === t.constructor.name
                },
                toBN = function (t) {
                    try {
                        return i.apply(null, arguments)
                    } catch (e) {
                        throw new Error(e + ' Given value: "' + t + '"')
                    }
                },
                isAddress = function (t) {
                    return !!/^(0x)?[0-9a-f]{40}$/i.test(t) && (!(!/^(0x|0X)?[0-9a-f]{40}$/.test(t) && !/^(0x|0X)?[0-9A-F]{40}$/.test(t)) || checkAddressChecksum(t))
                },
                checkAddressChecksum = function (t) {
                    t = t.replace(/^0x/i, "");
                    for (var e = sha3(t.toLowerCase()).replace(/^0x/i, ""), r = 0; r < 40; r++)
                        if (parseInt(e[r], 16) > 7 && t[r].toUpperCase() !== t[r] || parseInt(e[r], 16) <= 7 && t[r].toLowerCase() !== t[r]) return !1;
                    return !0
                },
                utf8ToHex = function (t) {
                    var e = "";
                    t = (t = (t = (t = (t = o.encode(t)).replace(/^(?:\u0000)*/, "")).split("").reverse().join("")).replace(/^(?:\u0000)*/, "")).split("").reverse().join("");
                    for (var r = 0; r < t.length; r++) {
                        var n = t.charCodeAt(r).toString(16);
                        e += n.length < 2 ? "0" + n : n
                    }
                    return "0x" + e
                },
                hexToNumber = function (t) {
                    if (!t) return t;
                    if ("string" == typeof t && !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    return toBN(t).toNumber()
                },
                numberToHex = function (t) {
                    if (null == t) return t;
                    if (!isFinite(t) && !isHexStrict(t)) throw new Error('Given input "' + t + '" is not a number.');
                    var e = toBN(t),
                        r = e.toString(16);
                    return e.lt(new n(0)) ? "-0x" + r.substr(1) : "0x" + r
                },
                hexToBytes = function (t) {
                    if (t = t.toString(16), !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    t = t.replace(/^0x/i, "");
                    for (var e = [], r = 0; r < t.length; r += 2) e.push(parseInt(t.substr(r, 2), 16));
                    return e
                },
                toHex = function (t, r) {
                    if (isAddress(t)) return r ? "address" : "0x" + t.toLowerCase().replace(/^0x/i, "");
                    if ("boolean" == typeof t) return r ? "bool" : t ? "0x01" : "0x00";
                    if (e.isBuffer(t)) return "0x" + t.toString("hex");
                    if ("object" == typeof t && t && !isBigNumber(t) && !isBN(t)) return r ? "string" : utf8ToHex(JSON.stringify(t));
                    if ("string" == typeof t) {
                        if (0 === t.indexOf("-0x") || 0 === t.indexOf("-0X")) return r ? "int256" : numberToHex(t);
                        if (0 === t.indexOf("0x") || 0 === t.indexOf("0X")) return r ? "bytes" : t;
                        if (!isFinite(t)) return r ? "string" : utf8ToHex(t)
                    }
                    return r ? t < 0 ? "int256" : "uint256" : numberToHex(t)
                },
                isHexStrict = function (t) {
                    return ("string" == typeof t || "number" == typeof t) && /^(-)?0x[0-9a-f]*$/i.test(t)
                },
                isHex = function (t) {
                    return ("string" == typeof t || "number" == typeof t) && /^(-0x|0x)?[0-9a-f]*$/i.test(t)
                },
                u = "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                sha3 = function (t) {
                    isBN(t) && (t = t.toString()), isHexStrict(t) && /^0x/i.test(t.toString()) && (t = hexToBytes(t));
                    var e = a.keccak256(t);
                    return e === u ? null : e
                };
            sha3._Hash = a;
            t.exports = {
                BN: n,
                isBN: isBN,
                isBigNumber: isBigNumber,
                toBN: toBN,
                isAddress: isAddress,
                isBloom: function (t) {
                    return s.isBloom(t)
                },
                isUserEthereumAddressInBloom: function (t, e) {
                    return s.isUserEthereumAddressInBloom(t, e)
                },
                isContractAddressInBloom: function (t, e) {
                    return s.isContractAddressInBloom(t, e)
                },
                isTopic: function (t) {
                    return s.isTopic(t)
                },
                isTopicInBloom: function (t, e) {
                    return s.isTopicInBloom(t, e)
                },
                isInBloom: function (t, e) {
                    return s.isInBloom(t, e)
                },
                checkAddressChecksum: checkAddressChecksum,
                utf8ToHex: utf8ToHex,
                hexToUtf8: function (t) {
                    if (!isHexStrict(t)) throw new Error('The parameter "' + t + '" must be a valid HEX string.');
                    for (var e = "", r = 0, n = (t = (t = (t = (t = (t = t.replace(/^0x/i, "")).replace(/^(?:00)*/, "")).split("").reverse().join("")).replace(/^(?:00)*/, "")).split("").reverse().join("")).length, i = 0; i < n; i += 2) r = parseInt(t.substr(i, 2), 16), e += String.fromCharCode(r);
                    return o.decode(e)
                },
                hexToNumber: hexToNumber,
                hexToNumberString: function (t) {
                    if (!t) return t;
                    if ("string" == typeof t && !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    return toBN(t).toString(10)
                },
                numberToHex: numberToHex,
                toHex: toHex,
                hexToBytes: hexToBytes,
                bytesToHex: function (t) {
                    for (var e = [], r = 0; r < t.length; r++) e.push((t[r] >>> 4).toString(16)), e.push((15 & t[r]).toString(16));
                    return "0x" + e.join("")
                },
                isHex: isHex,
                isHexStrict: isHexStrict,
                stripHexPrefix: function (t) {
                    return 0 !== t && isHex(t) ? t.replace(/^(-)?0x/i, "$1") : t
                },
                leftPad: function (t, e, r) {
                    var n = /^0x/i.test(t) || "number" == typeof t,
                        i = e - (t = t.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? e - t.length + 1 : 0;
                    return (n ? "0x" : "") + new Array(i).join(r || "0") + t
                },
                rightPad: function (t, e, r) {
                    var n = /^0x/i.test(t) || "number" == typeof t,
                        i = e - (t = t.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? e - t.length + 1 : 0;
                    return (n ? "0x" : "") + t + new Array(i).join(r || "0")
                },
                toTwosComplement: function (t) {
                    return "0x" + toBN(t).toTwos(256).toString(16, 64)
                },
                sha3: sha3,
                sha3Raw: function (t) {
                    return null === (t = sha3(t)) ? u : t
                },
                toNumber: function (t) {
                    return "number" == typeof t ? t : hexToNumber(toHex(t))
                }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = {
            messageId: 0,
            toPayload: function (t, e) {
                if (!t) throw new Error('JSONRPC method should be specified for params: "' + JSON.stringify(e) + '"!');
                return n.messageId++, {
                    jsonrpc: "2.0",
                    id: n.messageId,
                    method: t,
                    params: e || []
                }
            },
            isValidResponse: function (t) {
                return Array.isArray(t) ? t.every(validateSingleMessage) : validateSingleMessage(t);

                function validateSingleMessage(t) {
                    return !(!t || t.error || "2.0" !== t.jsonrpc || "number" != typeof t.id && "string" != typeof t.id || void 0 === t.result)
                }
            },
            toBatchPayload: function (t) {
                return t.map((function (t) {
                    return n.toPayload(t.method, t.params)
                }))
            }
        };
        t.exports = n
    }, function (t, e, r) {
        var n = r(873),
            i = function Subscriptions(t) {
                this.name = t.name, this.type = t.type, this.subscriptions = t.subscriptions || {}, this.requestManager = null
            };
        i.prototype.setRequestManager = function (t) {
            this.requestManager = t
        }, i.prototype.attachToObject = function (t) {
            var e = this.buildCall(),
                r = this.name.split(".");
            r.length > 1 ? (t[r[0]] = t[r[0]] || {}, t[r[0]][r[1]] = e) : t[r[0]] = e
        }, i.prototype.buildCall = function () {
            var t = this;
            return function () {
                t.subscriptions[arguments[0]] || console.warn("Subscription " + JSON.stringify(arguments[0]) + " doesn't exist. Subscribing anyway.");
                var e = new n({
                    subscription: t.subscriptions[arguments[0]] || {},
                    requestManager: t.requestManager,
                    type: t.type
                });
                return e.subscribe.apply(e, arguments)
            }
        }, t.exports = {
            subscriptions: i,
            subscription: n
        }
    }, function (t, e, r) {
        r(889);
        var n = function at(t, e) {
                return parseInt(t.slice(2 * e + 2, 2 * e + 4), 16)
            },
            i = function length(t) {
                return (t.length - 2) / 2
            },
            o = function toArray(t) {
                for (var e = [], r = 2, n = t.length; r < n; r += 2) e.push(parseInt(t.slice(r, r + 2), 16));
                return e
            },
            a = function fromArray(t) {
                for (var e = "0x", r = 0, n = t.length; r < n; ++r) {
                    var i = t[r];
                    e += (i < 16 ? "0" : "") + i.toString(16)
                }
                return e
            };
        t.exports = {
            random: function random(t) {
                var e = void 0;
                e = "undefined" != typeof window && window.crypto && window.crypto.getRandomValues ? window.crypto.getRandomValues(new Uint8Array(t)) : r(131).randomBytes(t);
                for (var n = "0x", i = 0; i < t; ++i) n += ("00" + e[i].toString(16)).slice(-2);
                return n
            },
            length: i,
            concat: function concat(t, e) {
                return t.concat(e.slice(2))
            },
            flatten: function flatten(t) {
                return "0x" + t.reduce((function (t, e) {
                    return t + e.slice(2)
                }), "")
            },
            slice: function slice(t, e, r) {
                return "0x" + r.slice(2 * t + 2, 2 * e + 2)
            },
            reverse: function reverse(t) {
                for (var e = "0x", r = 0, n = i(t); r < n; ++r) e += t.slice(2 * (n - r), 2 * (n - r + 1));
                return e
            },
            pad: function pad(t, e) {
                return e.length === 2 * t + 2 ? e : pad(t, "0x0" + e.slice(2))
            },
            padRight: function padRight(t, e) {
                return e.length === 2 * t + 2 ? e : padRight(t, e + "0")
            },
            fromAscii: function fromAscii(t) {
                for (var e = "0x", r = 0; r < t.length; ++r) e += ("00" + t.charCodeAt(r).toString(16)).slice(-2);
                return e
            },
            toAscii: function toAscii(t) {
                for (var e = "", r = 2; r < t.length; r += 2) e += String.fromCharCode(parseInt(t.slice(r, r + 2), 16));
                return e
            },
            fromString: function fromString(t) {
                for (var e = function makeByte(t) {
                        var e = t.toString(16);
                        return e.length < 2 ? "0" + e : e
                    }, r = "0x", n = 0; n != t.length; n++) {
                    var i = t.charCodeAt(n);
                    if (i < 128) r += e(i);
                    else {
                        if (i < 2048) r += e(i >> 6 | 192);
                        else {
                            if (i > 55295 && i < 56320) {
                                if (++n == t.length) return null;
                                var o = t.charCodeAt(n);
                                if (o < 56320 || o > 57343) return null;
                                r += e((i = 65536 + ((1023 & i) << 10) + (1023 & o)) >> 18 | 240), r += e(i >> 12 & 63 | 128)
                            } else r += e(i >> 12 | 224);
                            r += e(i >> 6 & 63 | 128)
                        }
                        r += e(63 & i | 128)
                    }
                }
                return r
            },
            toString: function toString(t) {
                for (var e = "", r = 0, o = i(t); r < o;) {
                    var a = n(t, r++);
                    if (a > 127) {
                        if (a > 191 && a < 224) {
                            if (r >= o) return null;
                            a = (31 & a) << 6 | 63 & n(t, r)
                        } else if (a > 223 && a < 240) {
                            if (r + 1 >= o) return null;
                            a = (15 & a) << 12 | (63 & n(t, r)) << 6 | 63 & n(t, ++r)
                        } else {
                            if (!(a > 239 && a < 248)) return null;
                            if (r + 2 >= o) return null;
                            a = (7 & a) << 18 | (63 & n(t, r)) << 12 | (63 & n(t, ++r)) << 6 | 63 & n(t, ++r)
                        }++r
                    }
                    if (a <= 65535) e += String.fromCharCode(a);
                    else {
                        if (!(a <= 1114111)) return null;
                        a -= 65536, e += String.fromCharCode(a >> 10 | 55296), e += String.fromCharCode(1023 & a | 56320)
                    }
                }
                return e
            },
            fromNumber: function fromNumber(t) {
                var e = t.toString(16);
                return e.length % 2 == 0 ? "0x" + e : "0x0" + e
            },
            toNumber: function toNumber(t) {
                return parseInt(t.slice(2), 16)
            },
            fromNat: function fromNat(t) {
                return "0x0" === t ? "0x" : t.length % 2 == 0 ? t : "0x0" + t.slice(2)
            },
            toNat: function toNat(t) {
                return "0" === t[2] ? "0x" + t.slice(3) : t
            },
            fromArray: a,
            toArray: o,
            fromUint8Array: function fromUint8Array(t) {
                return a([].slice.call(t, 0))
            },
            toUint8Array: function toUint8Array(t) {
                return new Uint8Array(o(t))
            }
        }
    }, function (t, e, r) {
        var n = r(342),
            i = r(205),
            o = r(173),
            a = r(149);
        t.exports = function padStart(t, e, r) {
            t = a(t);
            var s = (e = o(e)) ? i(t) : 0;
            return e && s < e ? n(e - s, r) + t : t
        }
    }, function (t, e, r) {
        var n = r(896),
            i = r(229),
            o = r(897),
            a = r(204),
            s = r(205),
            u = r(901),
            c = Math.ceil;
        t.exports = function createPadding(t, e) {
            var r = (e = void 0 === e ? " " : i(e)).length;
            if (r < 2) return r ? n(e, t) : e;
            var l = n(e, c(t / s(e)));
            return a(e) ? o(u(l), 0, t).join("") : l.slice(0, t)
        }
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = function getEventHistory(t, e, r) {
            return _getEventHistory.apply(this, arguments)
        }, e.getDsrEventHistory = function getDsrEventHistory(t, e, r) {
            return _getDsrEventHistory.apply(this, arguments)
        };
        var i = n(r(28)),
            o = n(r(101)),
            a = n(r(115)),
            s = n(r(29)),
            u = n(r(904)),
            c = n(r(341)),
            l = n(r(914)),
            h = n(r(915)),
            d = n(r(921)),
            p = n(r(40)),
            m = r(116),
            y = function formatAddress(t) {
                return "0x" + t.slice(26).toLowerCase()
            },
            b = function funcSigTopic(t) {
                return (0, l.default)(u.default.encodeFunctionSignature(t), 66, "0")
            },
            g = b("give(uint256,address)"),
            v = b("exit(address,uint256)"),
            w = b("join(address,uint256)"),
            M = b("join(uint256)"),
            A = b("exit(uint256)"),
            x = b("frob(bytes32,address,address,address,int256,int256)"),
            B = b("frob(uint256,int256,int256)"),
            E = b("move(uint256,address,uint256)"),
            k = function decodeManagerFrob(t) {
                var e = u.default.encodeFunctionSignature("frob(uint256,int256,int256)").slice(2),
                    r = u.default.decodeParameters(["uint256", "int256", "int256"], "0x" + t.replace(new RegExp("^.+?" + e), ""));
                return {
                    id: r[0].toString(),
                    dink: r[1],
                    dart: r[2]
                }
            },
            N = function decodeVatFrob(t) {
                var e = u.default.encodeFunctionSignature("frob(bytes32,address,address,address,int256,int256)").slice(2),
                    r = u.default.decodeParameters(["bytes32", "address", "address", "address", "int256", "int256"], "0x" + t.replace(new RegExp("^.+?" + e), ""));
                return {
                    ilk: (0, m.bytesToString)(r[0].toString()),
                    urnHandler: r[1].toString(),
                    dink: r[4].toString(),
                    dart: r[5].toString()
                }
            };

        function _getEventHistory() {
            return (_getEventHistory = (0, s.default)(i.default.mark((function _callee5(t, e, r) {
                var n, l, b, M, A, T, C, P, I, O, D, j, L, U, H, q, z, G, V, J, W, Z, X, Y;
                return i.default.wrap((function _callee5$($) {
                    for (;;) switch ($.prev = $.next) {
                        case 0:
                            if (n = t.get("smartContract").getContractAddress("MCD_JOIN_DAI"), l = t.get("smartContract").getContractAddress("MCD_JOIN_SAI"), b = t.get("smartContract").getContractAddress("CDP_MANAGER"), M = t.get("smartContract").getContractAddress("MIGRATION"), A = t.get("smartContract").getContractAddress("MCD_VAT"), T = t.get("smartContract").getContractAddress("MCD_CAT"), C = t.get("smartContract").getContractAddress("OLD_MCD_CAT"), P = e.id, !r[P]) {
                                $.next = 10;
                                break
                            }
                            return $.abrupt("return", r[P]);
                        case 10:
                            return I = t.get("web3"), O = I._web3.utils, D = [1, 42].includes(I.network) ? 86e5 : 1, j = {}, L = function getBlockTimestamp(t) {
                                return j[t] || (j[t] = I.getBlock(t, !1)), j[t]
                            }, $.next = 17, t.getUrn(P);
                        case 17:
                            return U = $.sent.toLowerCase(), H = e.ilk, q = t.get("smartContract").getContract("CDP_MANAGER").interface.events.NewCdp, z = t.get("smartContract").getContract("MCD_CAT").interface.events.Bite, G = {
                                request: I.getPastLogs({
                                    address: b,
                                    topics: [O.keccak256(O.toHex(q.signature)), null, null, "0x" + (0, c.default)(P.toString(16), 64, "0")],
                                    fromBlock: D
                                }),
                                result: function result(t) {
                                    return t.map((function (t) {
                                        return {
                                            type: "OPEN",
                                            order: 0,
                                            block: t.blockNumber,
                                            txHash: t.transactionHash,
                                            id: P,
                                            ilk: H
                                        }
                                    }))
                                }
                            }, V = {
                                request: I.getPastLogs({
                                    address: b,
                                    topics: [B, null, "0x" + (0, c.default)(P.toString(16), 64, "0")],
                                    fromBlock: D
                                }),
                                result: function () {
                                    var t = (0, s.default)(i.default.mark((function _callee2(t) {
                                        return i.default.wrap((function _callee2$(e) {
                                            for (;;) switch (e.prev = e.next) {
                                                case 0:
                                                    return e.abrupt("return", t.reduce(function () {
                                                        var t = (0, s.default)(i.default.mark((function _callee(t, e) {
                                                            var r, s, u, h, d, g, M, A, x, B, N, T;
                                                            return i.default.wrap((function _callee$(i) {
                                                                for (;;) switch (i.prev = i.next) {
                                                                    case 0:
                                                                        return r = e.blockNumber, s = e.data, u = e.topics, h = k(s), d = h.dart, i.next = 4, t;
                                                                    case 4:
                                                                        if (t = i.sent, !(d = new p.default(d)).lt(0) && !d.gt(0)) {
                                                                            i.next = 16;
                                                                            break
                                                                        }
                                                                        return M = u[1], i.next = 10, Promise.all([I.getPastLogs({
                                                                            address: [n, l],
                                                                            topics: [d.lt(0) ? w : v, M],
                                                                            fromBlock: r,
                                                                            toBlock: r
                                                                        }), I.getPastLogs({
                                                                            address: b,
                                                                            topics: [E, M, "0x" + (0, c.default)(P.toString(16), 64, "0")],
                                                                            fromBlock: r,
                                                                            toBlock: r
                                                                        })]);
                                                                    case 10:
                                                                        A = i.sent, x = (0, a.default)(A, 2), B = x[0], N = x[1], T = B.filter((function (t) {
                                                                            return N.some((function (e) {
                                                                                return e.transactionHash === t.transactionHash
                                                                            }))
                                                                        })), (g = t).push.apply(g, (0, o.default)(T.map((function (t) {
                                                                            var e = t.address,
                                                                                r = t.blockNumber,
                                                                                n = t.transactionHash,
                                                                                i = t.topics;
                                                                            return {
                                                                                type: d.lt(0) ? "PAY_BACK" : "GENERATE",
                                                                                order: 2,
                                                                                block: r,
                                                                                txHash: n,
                                                                                id: P,
                                                                                ilk: H,
                                                                                adapter: e.toLowerCase(),
                                                                                proxy: y(i[1]),
                                                                                recipient: y(i[2]),
                                                                                amount: (0, m.parseWeiNumeric)(i[3])
                                                                            }
                                                                        }))));
                                                                    case 16:
                                                                        return i.abrupt("return", t);
                                                                    case 17:
                                                                    case "end":
                                                                        return i.stop()
                                                                }
                                                            }), _callee)
                                                        })));
                                                        return function (e, r) {
                                                            return t.apply(this, arguments)
                                                        }
                                                    }(), []));
                                                case 1:
                                                case "end":
                                                    return e.stop()
                                            }
                                        }), _callee2)
                                    })));
                                    return function result(e) {
                                        return t.apply(this, arguments)
                                    }
                                }()
                            }, J = {
                                request: I.getPastLogs({
                                    address: A,
                                    topics: [x, null, "0x" + (0, c.default)(U.slice(2), 64, "0")],
                                    fromBlock: D
                                }),
                                result: function result(t) {
                                    return t.map((function (t) {
                                        var r = t.address,
                                            n = t.blockNumber,
                                            i = t.transactionHash,
                                            o = t.data,
                                            a = t.topics,
                                            s = t.transactionLogIndex,
                                            u = N(o),
                                            c = u.ilk,
                                            l = u.dink,
                                            h = u.urnHandler;
                                        l = new p.default(l);
                                        var d = y(a[2]) === h.toLowerCase() && y(a[3]) == h.toLowerCase() && 1 === parseInt(s, 16);
                                        return l.lt(0) || l.gt(0) ? {
                                            type: l.lt(0) ? "WITHDRAW" : d ? "RECLAIM" : "DEPOSIT",
                                            order: l.lt(0) ? 3 : 1,
                                            block: n,
                                            txHash: i,
                                            id: P,
                                            ilk: c,
                                            gem: e.currency.symbol,
                                            adapter: r.toLowerCase(),
                                            amount: Math.abs((0, m.parseWeiNumeric)(l)).toString()
                                        } : null
                                    }))
                                }
                            }, W = {
                                request: I.getPastLogs({
                                    address: b,
                                    topics: [g, null, "0x" + (0, c.default)(P.toString(16), 64, "0")],
                                    fromBlock: D
                                }),
                                result: function result(t) {
                                    return t.map((function (t) {
                                        var e = t.blockNumber,
                                            r = t.transactionHash,
                                            n = t.topics,
                                            i = y(n[1]);
                                        return {
                                            type: i === M ? "MIGRATE" : "GIVE",
                                            order: 1,
                                            block: e,
                                            txHash: r,
                                            prevOwner: i,
                                            id: (0, m.numberFromNumeric)(n[2]),
                                            newOwner: y(n[3])
                                        }
                                    }))
                                }
                            }, Z = function catBite(t, r, n) {
                                return {
                                    request: I.getPastLogs({
                                        address: t,
                                        topics: [O.keccak256(O.toHex(z.signature)), null, "0x" + (0, c.default)(U.slice(2), 64, "0")],
                                        fromBlock: r,
                                        toBlock: n
                                    }),
                                    result: function result(t) {
                                        return t.map((function (t) {
                                            var r = t.topics,
                                                n = t.data,
                                                i = t.blockNumber,
                                                a = t.transactionHash,
                                                s = z.inputs.names.reduceRight((function (t, e, r) {
                                                    return ["ilk", "urn"].some((function (t) {
                                                        return t === e
                                                    })) ? t : [{
                                                        type: z.inputs.types[r],
                                                        name: e
                                                    }].concat((0, o.default)(t))
                                                }), []),
                                                c = u.default.decodeLog(s, n, r),
                                                l = c.id,
                                                h = c.ink;
                                            return {
                                                type: "BITE",
                                                auctionId: (0, m.numberFromNumeric)(l),
                                                amount: new p.default(h).shiftedBy(-18),
                                                gem: e.currency.symbol,
                                                block: i,
                                                txHash: a
                                            }
                                        }))
                                    }
                                }
                            }, X = [1, 42].includes(I.network) ? 10769102 : 1, Y = [G, V, J, W, Z(T, X), Z(C, D, X)], r[P] = (0, s.default)(i.default.mark((function _callee4() {
                                var t;
                                return i.default.wrap((function _callee4$(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, Promise.all(Y.map((function (t) {
                                                return t.request
                                            })));
                                        case 2:
                                            return t = e.sent, e.t0 = h.default, e.t1 = Promise, e.t2 = d.default, e.next = 8, Promise.all(t.map((function (t, e) {
                                                return Y[e].result(t)
                                            })));
                                        case 8:
                                            return e.t3 = e.sent, e.t4 = (0, e.t2)(e.t3).filter((function (t) {
                                                return null !== t
                                            })).map(function () {
                                                var t = (0, s.default)(i.default.mark((function _callee3(t) {
                                                    return i.default.wrap((function _callee3$(e) {
                                                        for (;;) switch (e.prev = e.next) {
                                                            case 0:
                                                                return e.next = 2, L(t.block);
                                                            case 2:
                                                                return t.timestamp = e.sent.timestamp, e.abrupt("return", t);
                                                            case 4:
                                                            case "end":
                                                                return e.stop()
                                                        }
                                                    }), _callee3)
                                                })));
                                                return function (e) {
                                                    return t.apply(this, arguments)
                                                }
                                            }()), e.next = 12, e.t1.all.call(e.t1, e.t4);
                                        case 12:
                                            return e.t5 = e.sent, e.t6 = ["block", "order"], e.t7 = ["desc", "desc"], e.abrupt("return", (0, e.t0)(e.t5, e.t6, e.t7).map((function (t) {
                                                return delete t.order, t
                                            })));
                                        case 16:
                                        case "end":
                                            return e.stop()
                                    }
                                }), _callee4)
                            })))(), $.abrupt("return", r[P]);
                        case 30:
                        case "end":
                            return $.stop()
                    }
                }), _callee5)
            })))).apply(this, arguments)
        }

        function _getDsrEventHistory() {
            return (_getDsrEventHistory = (0, s.default)(i.default.mark((function _callee12(t, e, r) {
                var n, o, u, l, p, y, b;
                return i.default.wrap((function _callee12$(g) {
                    for (;;) switch (g.prev = g.next) {
                        case 0:
                            if (n = t.get("smartContract").getContractAddress("MCD_JOIN_DAI"), o = t.get("smartContract").getContractAddress("MCD_POT"), e = e.toLowerCase(), !r[e]) {
                                g.next = 5;
                                break
                            }
                            return g.abrupt("return", r[e]);
                        case 5:
                            return u = t.get("web3"), l = [1, 42].includes(u.network) ? 86e5 : 1, p = {}, y = function getBlockTimestamp(t) {
                                return p[t] || (p[t] = u.getBlock(t, !1)), p[t]
                            }, b = [{
                                request: u.getPastLogs({
                                    address: o,
                                    topics: [M, "0x" + (0, c.default)(e.slice(2), 64, "0")],
                                    fromBlock: l
                                }),
                                result: function () {
                                    var t = (0, s.default)(i.default.mark((function _callee7(t) {
                                        return i.default.wrap((function _callee7$(r) {
                                            for (;;) switch (r.prev = r.next) {
                                                case 0:
                                                    return r.abrupt("return", t.reduce(function () {
                                                        var t = (0, s.default)(i.default.mark((function _callee6(t, r) {
                                                            var o, s, h, d, p, y;
                                                            return i.default.wrap((function _callee6$(i) {
                                                                for (;;) switch (i.prev = i.next) {
                                                                    case 0:
                                                                        return o = r.blockNumber, s = r.transactionHash, i.next = 3, t;
                                                                    case 3:
                                                                        return t = i.sent, i.next = 6, u.getPastLogs({
                                                                            address: n,
                                                                            topics: [w, "0x" + (0, c.default)(e.slice(2), 64, "0")],
                                                                            fromBlock: l
                                                                        });
                                                                    case 6:
                                                                        return h = i.sent, d = h.filter((function (t) {
                                                                            return t.transactionHash === s
                                                                        })), p = (0, a.default)(d, 1), y = p[0].topics, t.push({
                                                                            type: "DSR_DEPOSIT",
                                                                            order: 0,
                                                                            block: o,
                                                                            txHash: s,
                                                                            amount: (0, m.parseWeiNumeric)(y[3]),
                                                                            gem: "DAI"
                                                                        }), i.abrupt("return", t);
                                                                    case 10:
                                                                    case "end":
                                                                        return i.stop()
                                                                }
                                                            }), _callee6)
                                                        })));
                                                        return function (e, r) {
                                                            return t.apply(this, arguments)
                                                        }
                                                    }(), []));
                                                case 1:
                                                case "end":
                                                    return r.stop()
                                            }
                                        }), _callee7)
                                    })));
                                    return function result(e) {
                                        return t.apply(this, arguments)
                                    }
                                }()
                            }, {
                                request: u.getPastLogs({
                                    address: o,
                                    topics: [A, "0x" + (0, c.default)(e.slice(2), 64, "0")],
                                    fromBlock: l
                                }),
                                result: function () {
                                    var t = (0, s.default)(i.default.mark((function _callee9(t) {
                                        return i.default.wrap((function _callee9$(r) {
                                            for (;;) switch (r.prev = r.next) {
                                                case 0:
                                                    return r.abrupt("return", t.reduce(function () {
                                                        var t = (0, s.default)(i.default.mark((function _callee8(t, r) {
                                                            var o, s, h, d, p, y;
                                                            return i.default.wrap((function _callee8$(i) {
                                                                for (;;) switch (i.prev = i.next) {
                                                                    case 0:
                                                                        return o = r.blockNumber, s = r.transactionHash, i.next = 3, t;
                                                                    case 3:
                                                                        return t = i.sent, i.next = 6, u.getPastLogs({
                                                                            address: n,
                                                                            topics: [v, "0x" + (0, c.default)(e.slice(2), 64, "0")],
                                                                            fromBlock: l
                                                                        });
                                                                    case 6:
                                                                        return h = i.sent, d = h.filter((function (t) {
                                                                            return t.transactionHash === s
                                                                        })), p = (0, a.default)(d, 1), y = p[0].topics, t.push({
                                                                            type: "DSR_WITHDRAW",
                                                                            order: 0,
                                                                            block: o,
                                                                            txHash: s,
                                                                            amount: (0, m.parseWeiNumeric)(y[3]),
                                                                            gem: "DAI"
                                                                        }), i.abrupt("return", t);
                                                                    case 10:
                                                                    case "end":
                                                                        return i.stop()
                                                                }
                                                            }), _callee8)
                                                        })));
                                                        return function (e, r) {
                                                            return t.apply(this, arguments)
                                                        }
                                                    }(), []));
                                                case 1:
                                                case "end":
                                                    return r.stop()
                                            }
                                        }), _callee9)
                                    })));
                                    return function result(e) {
                                        return t.apply(this, arguments)
                                    }
                                }()
                            }], r[e] = (0, s.default)(i.default.mark((function _callee11() {
                                var t;
                                return i.default.wrap((function _callee11$(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            return e.next = 2, Promise.all(b.map((function (t) {
                                                return t.request
                                            })));
                                        case 2:
                                            return t = e.sent, e.t0 = h.default, e.t1 = Promise, e.t2 = d.default, e.next = 8, Promise.all(t.map((function (t, e) {
                                                return b[e].result(t)
                                            })));
                                        case 8:
                                            return e.t3 = e.sent, e.t4 = (0, e.t2)(e.t3).filter((function (t) {
                                                return null !== t
                                            })).map(function () {
                                                var t = (0, s.default)(i.default.mark((function _callee10(t) {
                                                    return i.default.wrap((function _callee10$(e) {
                                                        for (;;) switch (e.prev = e.next) {
                                                            case 0:
                                                                return e.next = 2, y(t.block);
                                                            case 2:
                                                                return t.timestamp = e.sent.timestamp, e.abrupt("return", t);
                                                            case 4:
                                                            case "end":
                                                                return e.stop()
                                                        }
                                                    }), _callee10)
                                                })));
                                                return function (e) {
                                                    return t.apply(this, arguments)
                                                }
                                            }()), e.next = 12, e.t1.all.call(e.t1, e.t4);
                                        case 12:
                                            return e.t5 = e.sent, e.t6 = ["block", "order"], e.t7 = ["desc", "desc"], e.abrupt("return", (0, e.t0)(e.t5, e.t6, e.t7).map((function (t) {
                                                return delete t.order, t
                                            })));
                                        case 16:
                                        case "end":
                                            return e.stop()
                                    }
                                }), _callee11)
                            })))(), g.abrupt("return", r[e]);
                        case 12:
                        case "end":
                            return g.stop()
                    }
                }), _callee12)
            })))).apply(this, arguments)
        }
    }, function (t, e, r) {
        (function (e) {
            var n = r(138),
                i = r(2),
                o = r(49),
                a = r(66),
                s = r(906),
                u = r(67),
                isBN = function (t) {
                    return i.isBN(t)
                },
                isBigNumber = function (t) {
                    return t && t.constructor && "BigNumber" === t.constructor.name
                },
                toBN = function (t) {
                    try {
                        return o.apply(null, arguments)
                    } catch (e) {
                        throw new Error(e + ' Given value: "' + t + '"')
                    }
                },
                isAddress = function (t) {
                    return !!/^(0x)?[0-9a-f]{40}$/i.test(t) && (!(!/^(0x|0X)?[0-9a-f]{40}$/.test(t) && !/^(0x|0X)?[0-9A-F]{40}$/.test(t)) || checkAddressChecksum(t))
                },
                checkAddressChecksum = function (t) {
                    t = t.replace(/^0x/i, "");
                    for (var e = sha3(t.toLowerCase()).replace(/^0x/i, ""), r = 0; r < 40; r++)
                        if (parseInt(e[r], 16) > 7 && t[r].toUpperCase() !== t[r] || parseInt(e[r], 16) <= 7 && t[r].toLowerCase() !== t[r]) return !1;
                    return !0
                },
                utf8ToHex = function (t) {
                    var e = "";
                    t = (t = (t = (t = (t = a.encode(t)).replace(/^(?:\u0000)*/, "")).split("").reverse().join("")).replace(/^(?:\u0000)*/, "")).split("").reverse().join("");
                    for (var r = 0; r < t.length; r++) {
                        var n = t.charCodeAt(r).toString(16);
                        e += n.length < 2 ? "0" + n : n
                    }
                    return "0x" + e
                },
                numberToHex = function (t) {
                    if (n.isNull(t) || n.isUndefined(t)) return t;
                    if (!isFinite(t) && !isHexStrict(t)) throw new Error('Given input "' + t + '" is not a number.');
                    var e = toBN(t),
                        r = e.toString(16);
                    return e.lt(new i(0)) ? "-0x" + r.substr(1) : "0x" + r
                },
                hexToBytes = function (t) {
                    if (t = t.toString(16), !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    t = t.replace(/^0x/i, "");
                    for (var e = [], r = 0; r < t.length; r += 2) e.push(parseInt(t.substr(r, 2), 16));
                    return e
                },
                isHexStrict = function (t) {
                    return (n.isString(t) || n.isNumber(t)) && /^(-)?0x[0-9a-f]*$/i.test(t)
                },
                c = "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                sha3 = function (t) {
                    isBN(t) && (t = t.toString()), isHexStrict(t) && /^0x/i.test(t.toString()) && (t = hexToBytes(t));
                    var e = s.keccak256(t);
                    return e === c ? null : e
                };
            sha3._Hash = s;
            t.exports = {
                BN: i,
                isBN: isBN,
                isBigNumber: isBigNumber,
                toBN: toBN,
                isAddress: isAddress,
                isBloom: function (t) {
                    return u.isBloom(t)
                },
                isUserEthereumAddressInBloom: function (t, e) {
                    return u.isUserEthereumAddressInBloom(t, e)
                },
                isContractAddressInBloom: function (t, e) {
                    return u.isContractAddressInBloom(t, e)
                },
                isTopic: function (t) {
                    return u.isTopic(t)
                },
                isTopicInBloom: function (t, e) {
                    return u.isTopicInBloom(t, e)
                },
                isInBloom: function (t, e) {
                    return u.isInBloom(t, e)
                },
                checkAddressChecksum: checkAddressChecksum,
                utf8ToHex: utf8ToHex,
                hexToUtf8: function (t) {
                    if (!isHexStrict(t)) throw new Error('The parameter "' + t + '" must be a valid HEX string.');
                    for (var e = "", r = 0, n = (t = (t = (t = (t = (t = t.replace(/^0x/i, "")).replace(/^(?:00)*/, "")).split("").reverse().join("")).replace(/^(?:00)*/, "")).split("").reverse().join("")).length, i = 0; i < n; i += 2) r = parseInt(t.substr(i, 2), 16), e += String.fromCharCode(r);
                    return a.decode(e)
                },
                hexToNumber: function (t) {
                    if (!t) return t;
                    if (n.isString(t) && !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    return toBN(t).toNumber()
                },
                hexToNumberString: function (t) {
                    if (!t) return t;
                    if (n.isString(t) && !isHexStrict(t)) throw new Error('Given value "' + t + '" is not a valid hex string.');
                    return toBN(t).toString(10)
                },
                numberToHex: numberToHex,
                toHex: function (t, r) {
                    if (isAddress(t)) return r ? "address" : "0x" + t.toLowerCase().replace(/^0x/i, "");
                    if (n.isBoolean(t)) return r ? "bool" : t ? "0x01" : "0x00";
                    if (e.isBuffer(t)) return "0x" + t.toString("hex");
                    if (n.isObject(t) && !isBigNumber(t) && !isBN(t)) return r ? "string" : utf8ToHex(JSON.stringify(t));
                    if (n.isString(t)) {
                        if (0 === t.indexOf("-0x") || 0 === t.indexOf("-0X")) return r ? "int256" : numberToHex(t);
                        if (0 === t.indexOf("0x") || 0 === t.indexOf("0X")) return r ? "bytes" : t;
                        if (!isFinite(t)) return r ? "string" : utf8ToHex(t)
                    }
                    return r ? t < 0 ? "int256" : "uint256" : numberToHex(t)
                },
                hexToBytes: hexToBytes,
                bytesToHex: function (t) {
                    for (var e = [], r = 0; r < t.length; r++) e.push((t[r] >>> 4).toString(16)), e.push((15 & t[r]).toString(16));
                    return "0x" + e.join("")
                },
                isHex: function (t) {
                    return (n.isString(t) || n.isNumber(t)) && /^(-0x|0x)?[0-9a-f]*$/i.test(t)
                },
                isHexStrict: isHexStrict,
                leftPad: function (t, e, r) {
                    var n = /^0x/i.test(t) || "number" == typeof t,
                        i = e - (t = t.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? e - t.length + 1 : 0;
                    return (n ? "0x" : "") + new Array(i).join(r || "0") + t
                },
                rightPad: function (t, e, r) {
                    var n = /^0x/i.test(t) || "number" == typeof t,
                        i = e - (t = t.toString(16).replace(/^0x/i, "")).length + 1 >= 0 ? e - t.length + 1 : 0;
                    return (n ? "0x" : "") + t + new Array(i).join(r || "0")
                },
                toTwosComplement: function (t) {
                    return "0x" + toBN(t).toTwos(256).toString(16, 64)
                },
                sha3: sha3,
                sha3Raw: function (t) {
                    return null === (t = sha3(t)) ? c : t
                }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = function n() {};
        e.BigNumber = n;
        var i = function i() {};
        e.Indexed = i;
        var o = function o() {};
        e.MinimalProvider = o;
        var a = function a() {};
        e.Signer = a;
        var s = function s() {};
        e.HDNode = s
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.defineReadOnly = function defineReadOnly(t, e, r) {
            Object.defineProperty(t, e, {
                enumerable: !0,
                value: r,
                writable: !1
            })
        }, e.defineFrozen = function defineFrozen(t, e, r) {
            var n = JSON.stringify(r);
            Object.defineProperty(t, e, {
                enumerable: !0,
                get: function () {
                    return JSON.parse(n)
                }
            })
        }, e.resolveProperties = function resolveProperties(t) {
            var e = {},
                r = [];
            return Object.keys(t).forEach((function (n) {
                var i = t[n];
                i instanceof Promise ? r.push(i.then((function (t) {
                    return e[n] = t, null
                }))) : e[n] = i
            })), Promise.all(r).then((function () {
                return e
            }))
        }, e.shallowCopy = function shallowCopy(t) {
            var e = {};
            for (var r in t) e[r] = t[r];
            return e
        }, e.jsonCopy = function jsonCopy(t) {
            return JSON.parse(JSON.stringify(t))
        }
    }, function (t, e, r) {
        var n = e;
        n.version = r(688).version, n.utils = r(21), n.rand = r(88), n.curve = r(284), n.curves = r(188), n.ec = r(693), n.eddsa = r(696)
    }, function (t, e, r) {
        (function (t) {
            ! function (t, e) {
                function assert(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }

                function inherits(t, e) {
                    t.super_ = e;
                    var TempCtor = function () {};
                    TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
                }

                function BN(t, e, r) {
                    if (BN.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                var n;
                "object" == typeof t ? t.exports = BN : e.BN = BN, BN.BN = BN, BN.wordSize = 26;
                try {
                    n = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : r(735).Buffer
                } catch (t) {}

                function parseHex4Bits(t, e) {
                    var r = t.charCodeAt(e);
                    return r >= 65 && r <= 70 ? r - 55 : r >= 97 && r <= 102 ? r - 87 : r - 48 & 15
                }

                function parseHexByte(t, e, r) {
                    var n = parseHex4Bits(t, r);
                    return r - 1 >= e && (n |= parseHex4Bits(t, r - 1) << 4), n
                }

                function parseBase(t, e, r, n) {
                    for (var i = 0, o = Math.min(t.length, r), a = e; a < o; a++) {
                        var s = t.charCodeAt(a) - 48;
                        i *= n, i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s
                    }
                    return i
                }
                BN.isBN = function isBN(t) {
                    return t instanceof BN || null !== t && "object" == typeof t && t.constructor.wordSize === BN.wordSize && Array.isArray(t.words)
                }, BN.max = function max(t, e) {
                    return t.cmp(e) > 0 ? t : e
                }, BN.min = function min(t, e) {
                    return t.cmp(e) < 0 ? t : e
                }, BN.prototype._init = function init(t, e, r) {
                    if ("number" == typeof t) return this._initNumber(t, e, r);
                    if ("object" == typeof t) return this._initArray(t, e, r);
                    "hex" === e && (e = 16), assert(e === (0 | e) && e >= 2 && e <= 36);
                    var n = 0;
                    "-" === (t = t.toString().replace(/\s+/g, ""))[0] && (n++, this.negative = 1), n < t.length && (16 === e ? this._parseHex(t, n, r) : (this._parseBase(t, e, n), "le" === r && this._initArray(this.toArray(), e, r)))
                }, BN.prototype._initNumber = function _initNumber(t, e, r) {
                    t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (assert(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initArray = function _initArray(t, e, r) {
                    if (assert("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                    this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o, a = 0;
                    if ("be" === r)
                        for (n = t.length - 1, i = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    else if ("le" === r)
                        for (n = 0, i = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    return this.strip()
                }, BN.prototype._parseHex = function _parseHex(t, e, r) {
                    this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o = 0,
                        a = 0;
                    if ("be" === r)
                        for (n = t.length - 1; n >= e; n -= 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                    else
                        for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) i = parseHexByte(t, e, n) << o, this.words[a] |= 67108863 & i, o >= 18 ? (o -= 18, a += 1, this.words[a] |= i >>> 26) : o += 8;
                    this.strip()
                }, BN.prototype._parseBase = function _parseBase(t, e, r) {
                    this.words = [0], this.length = 1;
                    for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                    n--, i = i / e | 0;
                    for (var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n) u = parseBase(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== a) {
                        var l = 1;
                        for (u = parseBase(t, c, t.length, e), c = 0; c < a; c++) l *= e;
                        this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                    this.strip()
                }, BN.prototype.copy = function copy(t) {
                    t.words = new Array(this.length);
                    for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                    t.length = this.length, t.negative = this.negative, t.red = this.red
                }, BN.prototype.clone = function clone() {
                    var t = new BN(null);
                    return this.copy(t), t
                }, BN.prototype._expand = function _expand(t) {
                    for (; this.length < t;) this.words[this.length++] = 0;
                    return this
                }, BN.prototype.strip = function strip() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                    return this._normSign()
                }, BN.prototype._normSign = function _normSign() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                }, BN.prototype.inspect = function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                };
                var i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    o = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    a = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function smallMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, d = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= d; p++) {
                            var m = c - p | 0;
                            l += (a = (i = 0 | t.words[m]) * (o = 0 | e.words[p]) + h) / 67108864 | 0, h = 67108863 & a
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r.strip()
                }
                BN.prototype.toString = function toString(t, e) {
                    var r;
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var n = 0, s = 0, u = 0; u < this.length; u++) {
                            var c = this.words[u],
                                l = (16777215 & (c << n | s)).toString(16);
                            r = 0 !== (s = c >>> 24 - n & 16777215) || u !== this.length - 1 ? i[6 - l.length] + l + r : l + r, (n += 2) >= 26 && (n -= 26, u--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var h = o[t],
                            d = a[t];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero();) {
                            var m = p.modn(d).toString(t);
                            r = (p = p.idivn(d)).isZero() ? m + r : i[h - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    assert(!1, "Base should be between 2 and 36")
                }, BN.prototype.toNumber = function toNumber() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, BN.prototype.toJSON = function toJSON() {
                    return this.toString(16)
                }, BN.prototype.toBuffer = function toBuffer(t, e) {
                    return assert(void 0 !== n), this.toArrayLike(n, t, e)
                }, BN.prototype.toArray = function toArray(t, e) {
                    return this.toArrayLike(Array, t, e)
                }, BN.prototype.toArrayLike = function toArrayLike(t, e, r) {
                    var n = this.byteLength(),
                        i = r || Math.max(1, n);
                    assert(n <= i, "byte array longer than desired length"), assert(i > 0, "Requested array length <= 0"), this.strip();
                    var o, a, s = "le" === e,
                        u = new t(i),
                        c = this.clone();
                    if (s) {
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[a] = o;
                        for (; a < i; a++) u[a] = 0
                    } else {
                        for (a = 0; a < i - n; a++) u[a] = 0;
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[i - a - 1] = o
                    }
                    return u
                }, Math.clz32 ? BN.prototype._countBits = function _countBits(t) {
                    return 32 - Math.clz32(t)
                } : BN.prototype._countBits = function _countBits(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, BN.prototype._zeroBits = function _zeroBits(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r
                }, BN.prototype.bitLength = function bitLength() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return 26 * (this.length - 1) + e
                }, BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8)
                }, BN.prototype.toTwos = function toTwos(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, BN.prototype.fromTwos = function fromTwos(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, BN.prototype.isNeg = function isNeg() {
                    return 0 !== this.negative
                }, BN.prototype.neg = function neg() {
                    return this.clone().ineg()
                }, BN.prototype.ineg = function ineg() {
                    return this.isZero() || (this.negative ^= 1), this
                }, BN.prototype.iuor = function iuor(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this.strip()
                }, BN.prototype.ior = function ior(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuor(t)
                }, BN.prototype.or = function or(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, BN.prototype.uor = function uor(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, BN.prototype.iuand = function iuand(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this.strip()
                }, BN.prototype.iand = function iand(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuand(t)
                }, BN.prototype.and = function and(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, BN.prototype.uand = function uand(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, BN.prototype.iuxor = function iuxor(t) {
                    var e, r;
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this.strip()
                }, BN.prototype.ixor = function ixor(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuxor(t)
                }, BN.prototype.xor = function xor(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, BN.prototype.uxor = function uxor(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, BN.prototype.inotn = function inotn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip()
                }, BN.prototype.notn = function notn(t) {
                    return this.clone().inotn(t)
                }, BN.prototype.setn = function setn(t, e) {
                    assert("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        n = t % 26;
                    return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip()
                }, BN.prototype.iadd = function iadd(t) {
                    var e, r, n;
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, BN.prototype.add = function add(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, BN.prototype.isub = function isub(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e = this.iadd(t);
                        return t.negative = 1, e._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var r, n, i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (r = this, n = t) : (r = t, n = this);
                    for (var o = 0, a = 0; a < n.length; a++) o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    for (; 0 !== o && a < r.length; a++) o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    if (0 === o && a < r.length && r !== this)
                        for (; a < r.length; a++) this.words[a] = r.words[a];
                    return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this.strip()
                }, BN.prototype.sub = function sub(t) {
                    return this.clone().isub(t)
                };
                var s = function comb10MulTo(t, e, r) {
                    var n, i, o, a = t.words,
                        s = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        h = 8191 & l,
                        d = l >>> 13,
                        p = 0 | a[1],
                        m = 8191 & p,
                        y = p >>> 13,
                        b = 0 | a[2],
                        g = 8191 & b,
                        v = b >>> 13,
                        w = 0 | a[3],
                        M = 8191 & w,
                        A = w >>> 13,
                        x = 0 | a[4],
                        B = 8191 & x,
                        E = x >>> 13,
                        k = 0 | a[5],
                        N = 8191 & k,
                        T = k >>> 13,
                        C = 0 | a[6],
                        P = 8191 & C,
                        I = C >>> 13,
                        O = 0 | a[7],
                        D = 8191 & O,
                        j = O >>> 13,
                        L = 0 | a[8],
                        U = 8191 & L,
                        H = L >>> 13,
                        q = 0 | a[9],
                        z = 8191 & q,
                        G = q >>> 13,
                        V = 0 | s[0],
                        J = 8191 & V,
                        W = V >>> 13,
                        Z = 0 | s[1],
                        X = 8191 & Z,
                        Y = Z >>> 13,
                        $ = 0 | s[2],
                        Q = 8191 & $,
                        tt = $ >>> 13,
                        et = 0 | s[3],
                        rt = 8191 & et,
                        nt = et >>> 13,
                        it = 0 | s[4],
                        ot = 8191 & it,
                        st = it >>> 13,
                        ut = 0 | s[5],
                        ct = 8191 & ut,
                        ht = ut >>> 13,
                        dt = 0 | s[6],
                        pt = 8191 & dt,
                        mt = dt >>> 13,
                        yt = 0 | s[7],
                        bt = 8191 & yt,
                        vt = yt >>> 13,
                        wt = 0 | s[8],
                        Mt = 8191 & wt,
                        _t = wt >>> 13,
                        At = 0 | s[9],
                        xt = 8191 & At,
                        Bt = At >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var Et = (c + (n = Math.imul(h, J)) | 0) + ((8191 & (i = (i = Math.imul(h, W)) + Math.imul(d, J) | 0)) << 13) | 0;
                    c = ((o = Math.imul(d, W)) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(m, J), i = (i = Math.imul(m, W)) + Math.imul(y, J) | 0, o = Math.imul(y, W);
                    var kt = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(d, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Y) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(g, J), i = (i = Math.imul(g, W)) + Math.imul(v, J) | 0, o = Math.imul(v, W), n = n + Math.imul(m, X) | 0, i = (i = i + Math.imul(m, Y) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, Y) | 0;
                    var Nt = (c + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, tt) | 0) + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(M, J), i = (i = Math.imul(M, W)) + Math.imul(A, J) | 0, o = Math.imul(A, W), n = n + Math.imul(g, X) | 0, i = (i = i + Math.imul(g, Y) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, Y) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0;
                    var St = (c + (n = n + Math.imul(h, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, nt) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, nt) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(B, J), i = (i = Math.imul(B, W)) + Math.imul(E, J) | 0, o = Math.imul(E, W), n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(g, Q) | 0, i = (i = i + Math.imul(g, tt) | 0) + Math.imul(v, Q) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                    var Tt = (c + (n = n + Math.imul(h, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, st) | 0) + Math.imul(d, ot) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, st) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(N, J), i = (i = Math.imul(N, W)) + Math.imul(T, J) | 0, o = Math.imul(T, W), n = n + Math.imul(B, X) | 0, i = (i = i + Math.imul(B, Y) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(g, rt) | 0, i = (i = i + Math.imul(g, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                    var Ct = (c + (n = n + Math.imul(h, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ht) | 0) + Math.imul(d, ct) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, ht) | 0) + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(P, J), i = (i = Math.imul(P, W)) + Math.imul(I, J) | 0, o = Math.imul(I, W), n = n + Math.imul(N, X) | 0, i = (i = i + Math.imul(N, Y) | 0) + Math.imul(T, X) | 0, o = o + Math.imul(T, Y) | 0, n = n + Math.imul(B, Q) | 0, i = (i = i + Math.imul(B, tt) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(M, rt) | 0, i = (i = i + Math.imul(M, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(g, ot) | 0, i = (i = i + Math.imul(g, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(m, ct) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, ht) | 0;
                    var Pt = (c + (n = n + Math.imul(h, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, mt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, mt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(D, J), i = (i = Math.imul(D, W)) + Math.imul(j, J) | 0, o = Math.imul(j, W), n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(N, Q) | 0, i = (i = i + Math.imul(N, tt) | 0) + Math.imul(T, Q) | 0, o = o + Math.imul(T, tt) | 0, n = n + Math.imul(B, rt) | 0, i = (i = i + Math.imul(B, nt) | 0) + Math.imul(E, rt) | 0, o = o + Math.imul(E, nt) | 0, n = n + Math.imul(M, ot) | 0, i = (i = i + Math.imul(M, st) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(g, ct) | 0, i = (i = i + Math.imul(g, ht) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(m, pt) | 0, i = (i = i + Math.imul(m, mt) | 0) + Math.imul(y, pt) | 0, o = o + Math.imul(y, mt) | 0;
                    var It = (c + (n = n + Math.imul(h, bt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, vt) | 0) + Math.imul(d, bt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, vt) | 0) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(U, J), i = (i = Math.imul(U, W)) + Math.imul(H, J) | 0, o = Math.imul(H, W), n = n + Math.imul(D, X) | 0, i = (i = i + Math.imul(D, Y) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, tt) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = (i = i + Math.imul(N, nt) | 0) + Math.imul(T, rt) | 0, o = o + Math.imul(T, nt) | 0, n = n + Math.imul(B, ot) | 0, i = (i = i + Math.imul(B, st) | 0) + Math.imul(E, ot) | 0, o = o + Math.imul(E, st) | 0, n = n + Math.imul(M, ct) | 0, i = (i = i + Math.imul(M, ht) | 0) + Math.imul(A, ct) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(g, pt) | 0, i = (i = i + Math.imul(g, mt) | 0) + Math.imul(v, pt) | 0, o = o + Math.imul(v, mt) | 0, n = n + Math.imul(m, bt) | 0, i = (i = i + Math.imul(m, vt) | 0) + Math.imul(y, bt) | 0, o = o + Math.imul(y, vt) | 0;
                    var Ot = (c + (n = n + Math.imul(h, Mt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, _t) | 0) + Math.imul(d, Mt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, _t) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(z, J), i = (i = Math.imul(z, W)) + Math.imul(G, J) | 0, o = Math.imul(G, W), n = n + Math.imul(U, X) | 0, i = (i = i + Math.imul(U, Y) | 0) + Math.imul(H, X) | 0, o = o + Math.imul(H, Y) | 0, n = n + Math.imul(D, Q) | 0, i = (i = i + Math.imul(D, tt) | 0) + Math.imul(j, Q) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(P, rt) | 0, i = (i = i + Math.imul(P, nt) | 0) + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = (i = i + Math.imul(N, st) | 0) + Math.imul(T, ot) | 0, o = o + Math.imul(T, st) | 0, n = n + Math.imul(B, ct) | 0, i = (i = i + Math.imul(B, ht) | 0) + Math.imul(E, ct) | 0, o = o + Math.imul(E, ht) | 0, n = n + Math.imul(M, pt) | 0, i = (i = i + Math.imul(M, mt) | 0) + Math.imul(A, pt) | 0, o = o + Math.imul(A, mt) | 0, n = n + Math.imul(g, bt) | 0, i = (i = i + Math.imul(g, vt) | 0) + Math.imul(v, bt) | 0, o = o + Math.imul(v, vt) | 0, n = n + Math.imul(m, Mt) | 0, i = (i = i + Math.imul(m, _t) | 0) + Math.imul(y, Mt) | 0, o = o + Math.imul(y, _t) | 0;
                    var Rt = (c + (n = n + Math.imul(h, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Bt) | 0) + Math.imul(d, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Bt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(z, X), i = (i = Math.imul(z, Y)) + Math.imul(G, X) | 0, o = Math.imul(G, Y), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, tt) | 0) + Math.imul(H, Q) | 0, o = o + Math.imul(H, tt) | 0, n = n + Math.imul(D, rt) | 0, i = (i = i + Math.imul(D, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(P, ot) | 0, i = (i = i + Math.imul(P, st) | 0) + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ct) | 0, i = (i = i + Math.imul(N, ht) | 0) + Math.imul(T, ct) | 0, o = o + Math.imul(T, ht) | 0, n = n + Math.imul(B, pt) | 0, i = (i = i + Math.imul(B, mt) | 0) + Math.imul(E, pt) | 0, o = o + Math.imul(E, mt) | 0, n = n + Math.imul(M, bt) | 0, i = (i = i + Math.imul(M, vt) | 0) + Math.imul(A, bt) | 0, o = o + Math.imul(A, vt) | 0, n = n + Math.imul(g, Mt) | 0, i = (i = i + Math.imul(g, _t) | 0) + Math.imul(v, Mt) | 0, o = o + Math.imul(v, _t) | 0;
                    var Ft = (c + (n = n + Math.imul(m, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, Bt) | 0) + Math.imul(y, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, Bt) | 0) + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(z, Q), i = (i = Math.imul(z, tt)) + Math.imul(G, Q) | 0, o = Math.imul(G, tt), n = n + Math.imul(U, rt) | 0, i = (i = i + Math.imul(U, nt) | 0) + Math.imul(H, rt) | 0, o = o + Math.imul(H, nt) | 0, n = n + Math.imul(D, ot) | 0, i = (i = i + Math.imul(D, st) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, st) | 0, n = n + Math.imul(P, ct) | 0, i = (i = i + Math.imul(P, ht) | 0) + Math.imul(I, ct) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, pt) | 0, i = (i = i + Math.imul(N, mt) | 0) + Math.imul(T, pt) | 0, o = o + Math.imul(T, mt) | 0, n = n + Math.imul(B, bt) | 0, i = (i = i + Math.imul(B, vt) | 0) + Math.imul(E, bt) | 0, o = o + Math.imul(E, vt) | 0, n = n + Math.imul(M, Mt) | 0, i = (i = i + Math.imul(M, _t) | 0) + Math.imul(A, Mt) | 0, o = o + Math.imul(A, _t) | 0;
                    var Dt = (c + (n = n + Math.imul(g, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(g, Bt) | 0) + Math.imul(v, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(v, Bt) | 0) + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(z, rt), i = (i = Math.imul(z, nt)) + Math.imul(G, rt) | 0, o = Math.imul(G, nt), n = n + Math.imul(U, ot) | 0, i = (i = i + Math.imul(U, st) | 0) + Math.imul(H, ot) | 0, o = o + Math.imul(H, st) | 0, n = n + Math.imul(D, ct) | 0, i = (i = i + Math.imul(D, ht) | 0) + Math.imul(j, ct) | 0, o = o + Math.imul(j, ht) | 0, n = n + Math.imul(P, pt) | 0, i = (i = i + Math.imul(P, mt) | 0) + Math.imul(I, pt) | 0, o = o + Math.imul(I, mt) | 0, n = n + Math.imul(N, bt) | 0, i = (i = i + Math.imul(N, vt) | 0) + Math.imul(T, bt) | 0, o = o + Math.imul(T, vt) | 0, n = n + Math.imul(B, Mt) | 0, i = (i = i + Math.imul(B, _t) | 0) + Math.imul(E, Mt) | 0, o = o + Math.imul(E, _t) | 0;
                    var jt = (c + (n = n + Math.imul(M, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, Bt) | 0) + Math.imul(A, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, Bt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(z, ot), i = (i = Math.imul(z, st)) + Math.imul(G, ot) | 0, o = Math.imul(G, st), n = n + Math.imul(U, ct) | 0, i = (i = i + Math.imul(U, ht) | 0) + Math.imul(H, ct) | 0, o = o + Math.imul(H, ht) | 0, n = n + Math.imul(D, pt) | 0, i = (i = i + Math.imul(D, mt) | 0) + Math.imul(j, pt) | 0, o = o + Math.imul(j, mt) | 0, n = n + Math.imul(P, bt) | 0, i = (i = i + Math.imul(P, vt) | 0) + Math.imul(I, bt) | 0, o = o + Math.imul(I, vt) | 0, n = n + Math.imul(N, Mt) | 0, i = (i = i + Math.imul(N, _t) | 0) + Math.imul(T, Mt) | 0, o = o + Math.imul(T, _t) | 0;
                    var Lt = (c + (n = n + Math.imul(B, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, Bt) | 0) + Math.imul(E, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, Bt) | 0) + (i >>> 13) | 0) + (Lt >>> 26) | 0, Lt &= 67108863, n = Math.imul(z, ct), i = (i = Math.imul(z, ht)) + Math.imul(G, ct) | 0, o = Math.imul(G, ht), n = n + Math.imul(U, pt) | 0, i = (i = i + Math.imul(U, mt) | 0) + Math.imul(H, pt) | 0, o = o + Math.imul(H, mt) | 0, n = n + Math.imul(D, bt) | 0, i = (i = i + Math.imul(D, vt) | 0) + Math.imul(j, bt) | 0, o = o + Math.imul(j, vt) | 0, n = n + Math.imul(P, Mt) | 0, i = (i = i + Math.imul(P, _t) | 0) + Math.imul(I, Mt) | 0, o = o + Math.imul(I, _t) | 0;
                    var Ut = (c + (n = n + Math.imul(N, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(N, Bt) | 0) + Math.imul(T, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(T, Bt) | 0) + (i >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, n = Math.imul(z, pt), i = (i = Math.imul(z, mt)) + Math.imul(G, pt) | 0, o = Math.imul(G, mt), n = n + Math.imul(U, bt) | 0, i = (i = i + Math.imul(U, vt) | 0) + Math.imul(H, bt) | 0, o = o + Math.imul(H, vt) | 0, n = n + Math.imul(D, Mt) | 0, i = (i = i + Math.imul(D, _t) | 0) + Math.imul(j, Mt) | 0, o = o + Math.imul(j, _t) | 0;
                    var Ht = (c + (n = n + Math.imul(P, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, Bt) | 0) + Math.imul(I, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, Bt) | 0) + (i >>> 13) | 0) + (Ht >>> 26) | 0, Ht &= 67108863, n = Math.imul(z, bt), i = (i = Math.imul(z, vt)) + Math.imul(G, bt) | 0, o = Math.imul(G, vt), n = n + Math.imul(U, Mt) | 0, i = (i = i + Math.imul(U, _t) | 0) + Math.imul(H, Mt) | 0, o = o + Math.imul(H, _t) | 0;
                    var qt = (c + (n = n + Math.imul(D, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(D, Bt) | 0) + Math.imul(j, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, Bt) | 0) + (i >>> 13) | 0) + (qt >>> 26) | 0, qt &= 67108863, n = Math.imul(z, Mt), i = (i = Math.imul(z, _t)) + Math.imul(G, Mt) | 0, o = Math.imul(G, _t);
                    var zt = (c + (n = n + Math.imul(U, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, Bt) | 0) + Math.imul(H, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(H, Bt) | 0) + (i >>> 13) | 0) + (zt >>> 26) | 0, zt &= 67108863;
                    var Gt = (c + (n = Math.imul(z, xt)) | 0) + ((8191 & (i = (i = Math.imul(z, Bt)) + Math.imul(G, xt) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(G, Bt)) + (i >>> 13) | 0) + (Gt >>> 26) | 0, Gt &= 67108863, u[0] = Et, u[1] = kt, u[2] = Nt, u[3] = St, u[4] = Tt, u[5] = Ct, u[6] = Pt, u[7] = It, u[8] = Ot, u[9] = Rt, u[10] = Ft, u[11] = Dt, u[12] = jt, u[13] = Lt, u[14] = Ut, u[15] = Ht, u[16] = qt, u[17] = zt, u[18] = Gt, 0 !== c && (u[19] = c, r.length++), r
                };

                function jumboMulTo(t, e, r) {
                    return (new FFTM).mulp(t, e, r)
                }

                function FFTM(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (s = smallMulTo), BN.prototype.mulTo = function mulTo(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? s(this, t, e) : r < 63 ? smallMulTo(this, t, e) : r < 1024 ? function bigMulTo(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var a = i;
                            i = 0;
                            for (var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                                var l = o - c,
                                    h = (0 | t.words[l]) * (0 | e.words[c]),
                                    d = 67108863 & h;
                                s = 67108863 & (d = d + s | 0), i += (a = (a = a + (h / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863
                            }
                            r.words[o] = s, n = a, a = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }(this, t, e) : jumboMulTo(this, t, e)
                }, FFTM.prototype.makeRBT = function makeRBT(t) {
                    for (var e = new Array(t), r = BN.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, FFTM.prototype.revBin = function revBin(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, FFTM.prototype.permute = function permute(t, e, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = e[t[a]], i[a] = r[t[a]]
                }, FFTM.prototype.transform = function transform(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var h = u, d = c, p = 0; p < a; p++) {
                                var m = r[l + p],
                                    y = n[l + p],
                                    b = r[l + p + a],
                                    g = n[l + p + a],
                                    v = h * b - d * g;
                                g = h * g + d * b, b = v, r[l + p] = m + b, n[l + p] = y + g, r[l + p + a] = m - b, n[l + p + a] = y - g, p !== s && (v = u * h - c * d, d = u * d + c * h, h = v)
                            }
                }, FFTM.prototype.guessLen13b = function guessLen13b(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, FFTM.prototype.conjugate = function conjugate(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, FFTM.prototype.normalize13b = function normalize13b(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, FFTM.prototype.convert13b = function convert13b(t, e, r, n) {
                    for (var i = 0, o = 0; o < e; o++) i += 0 | t[o], r[2 * o] = 8191 & i, i >>>= 13, r[2 * o + 1] = 8191 & i, i >>>= 13;
                    for (o = 2 * e; o < n; ++o) r[o] = 0;
                    assert(0 === i), assert(0 == (-8192 & i))
                }, FFTM.prototype.stub = function stub(t) {
                    for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, FFTM.prototype.mulp = function mulp(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = new Array(n),
                        s = new Array(n),
                        u = new Array(n),
                        c = new Array(n),
                        l = new Array(n),
                        h = new Array(n),
                        d = r.words;
                    d.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var p = 0; p < n; p++) {
                        var m = s[p] * l[p] - u[p] * h[p];
                        u[p] = s[p] * h[p] + u[p] * l[p], s[p] = m
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, d, o, n, i), this.conjugate(d, o, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                }, BN.prototype.mul = function mul(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                }, BN.prototype.mulf = function mulf(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), jumboMulTo(this, t, e)
                }, BN.prototype.imul = function imul(t) {
                    return this.clone().mulTo(t, this)
                }, BN.prototype.imuln = function imuln(t) {
                    assert("number" == typeof t), assert(t < 67108864);
                    for (var e = 0, r = 0; r < this.length; r++) {
                        var n = (0 | this.words[r]) * t,
                            i = (67108863 & n) + (67108863 & e);
                        e >>= 26, e += n / 67108864 | 0, e += i >>> 26, this.words[r] = 67108863 & i
                    }
                    return 0 !== e && (this.words[r] = e, this.length++), this
                }, BN.prototype.muln = function muln(t) {
                    return this.clone().imuln(t)
                }, BN.prototype.sqr = function sqr() {
                    return this.mul(this)
                }, BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone())
                }, BN.prototype.pow = function pow(t) {
                    var e = function toBitArray(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }(t);
                    if (0 === e.length) return new BN(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, BN.prototype.iushln = function iushln(t) {
                    assert("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        n = (t - r) / 26,
                        i = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & i,
                                s = (0 | this.words[e]) - a << r;
                            this.words[e] = s | o, o = a >>> 26 - r
                        }
                        o && (this.words[e] = o, this.length++)
                    }
                    if (0 !== n) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                        for (e = 0; e < n; e++) this.words[e] = 0;
                        this.length += n
                    }
                    return this.strip()
                }, BN.prototype.ishln = function ishln(t) {
                    return assert(0 === this.negative), this.iushln(t)
                }, BN.prototype.iushrn = function iushrn(t, e, r) {
                    var n;
                    assert("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                    var i = t % 26,
                        o = Math.min((t - i) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> i << i,
                        s = r;
                    if (n -= o, n = Math.max(0, n), s) {
                        for (var u = 0; u < o; u++) s.words[u] = this.words[u];
                        s.length = o
                    }
                    if (0 === o);
                    else if (this.length > o)
                        for (this.length -= o, u = 0; u < this.length; u++) this.words[u] = this.words[u + o];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= n); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - i | l >>> i, c = l & a
                    }
                    return s && 0 !== c && (s.words[s.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                }, BN.prototype.ishrn = function ishrn(t, e, r) {
                    return assert(0 === this.negative), this.iushrn(t, e, r)
                }, BN.prototype.shln = function shln(t) {
                    return this.clone().ishln(t)
                }, BN.prototype.ushln = function ushln(t) {
                    return this.clone().iushln(t)
                }, BN.prototype.shrn = function shrn(t) {
                    return this.clone().ishrn(t)
                }, BN.prototype.ushrn = function ushrn(t) {
                    return this.clone().iushrn(t)
                }, BN.prototype.testn = function testn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }, BN.prototype.imaskn = function imaskn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var n = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= n
                    }
                    return this.strip()
                }, BN.prototype.maskn = function maskn(t) {
                    return this.clone().imaskn(t)
                }, BN.prototype.iaddn = function iaddn(t) {
                    return assert("number" == typeof t), assert(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                }, BN.prototype._iaddn = function _iaddn(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, BN.prototype.isubn = function isubn(t) {
                    if (assert("number" == typeof t), assert(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this.strip()
                }, BN.prototype.addn = function addn(t) {
                    return this.clone().iaddn(t)
                }, BN.prototype.subn = function subn(t) {
                    return this.clone().isubn(t)
                }, BN.prototype.iabs = function iabs() {
                    return this.negative = 0, this
                }, BN.prototype.abs = function abs() {
                    return this.clone().iabs()
                }, BN.prototype._ishlnsubmul = function _ishlnsubmul(t, e, r) {
                    var n, i, o = t.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < t.length; n++) {
                        i = (0 | this.words[n + r]) + a;
                        var s = (0 | t.words[n]) * e;
                        a = ((i -= 67108863 & s) >> 26) - (s / 67108864 | 0), this.words[n + r] = 67108863 & i
                    }
                    for (; n < this.length - r; n++) a = (i = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & i;
                    if (0 === a) return this.strip();
                    for (assert(-1 === a), a = 0, n = 0; n < this.length; n++) a = (i = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & i;
                    return this.negative = 1, this.strip()
                }, BN.prototype._wordDiv = function _wordDiv(t, e) {
                    var r = (this.length, t.length),
                        n = this.clone(),
                        i = t,
                        o = 0 | i.words[i.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                    var a, s = n.length - i.length;
                    if ("mod" !== e) {
                        (a = new BN(null)).length = s + 1, a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++) a.words[u] = 0
                    }
                    var c = n.clone()._ishlnsubmul(i, 1, s);
                    0 === c.negative && (n = c, a && (a.words[s] = 1));
                    for (var l = s - 1; l >= 0; l--) {
                        var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                        for (h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;) h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                        a && (a.words[l] = h)
                    }
                    return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                        div: a || null,
                        mod: n
                    }
                }, BN.prototype.divmod = function divmod(t, e, r) {
                    return assert(!t.isZero()), this.isZero() ? {
                        div: new BN(0),
                        mod: new BN(0)
                    } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), "mod" !== e && (n = o.div.neg()), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(t)), {
                        div: n,
                        mod: i
                    }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), "mod" !== e && (n = o.div.neg()), {
                        div: n,
                        mod: o.mod
                    }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(t)), {
                        div: o.div,
                        mod: i
                    }) : t.length > this.length || this.cmp(t) < 0 ? {
                        div: new BN(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new BN(this.modn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new BN(this.modn(t.words[0]))
                    } : this._wordDiv(t, e);
                    var n, i, o
                }, BN.prototype.div = function div(t) {
                    return this.divmod(t, "div", !1).div
                }, BN.prototype.mod = function mod(t) {
                    return this.divmod(t, "mod", !1).mod
                }, BN.prototype.umod = function umod(t) {
                    return this.divmod(t, "mod", !0).mod
                }, BN.prototype.divRound = function divRound(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, BN.prototype.modn = function modn(t) {
                    assert(t <= 67108863);
                    for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) r = (e * r + (0 | this.words[n])) % t;
                    return r
                }, BN.prototype.idivn = function idivn(t) {
                    assert(t <= 67108863);
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = (0 | this.words[r]) + 67108864 * e;
                        this.words[r] = n / t | 0, e = n % t
                    }
                    return this.strip()
                }, BN.prototype.divn = function divn(t) {
                    return this.clone().idivn(t)
                }, BN.prototype.egcd = function egcd(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n = new BN(1), i = new BN(0), o = new BN(0), a = new BN(1), s = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++s;
                    for (var u = r.clone(), c = e.clone(); !e.isZero();) {
                        for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                        if (l > 0)
                            for (e.iushrn(l); l-- > 0;)(n.isOdd() || i.isOdd()) && (n.iadd(u), i.isub(c)), n.iushrn(1), i.iushrn(1);
                        for (var d = 0, p = 1; 0 == (r.words[0] & p) && d < 26; ++d, p <<= 1);
                        if (d > 0)
                            for (r.iushrn(d); d-- > 0;)(o.isOdd() || a.isOdd()) && (o.iadd(u), a.isub(c)), o.iushrn(1), a.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), n.isub(o), i.isub(a)) : (r.isub(e), o.isub(n), a.isub(i))
                    }
                    return {
                        a: o,
                        b: a,
                        gcd: r.iushln(s)
                    }
                }, BN.prototype._invmp = function _invmp(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n, i = new BN(1), o = new BN(0), a = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var s = 0, u = 1; 0 == (e.words[0] & u) && s < 26; ++s, u <<= 1);
                        if (s > 0)
                            for (e.iushrn(s); s-- > 0;) i.isOdd() && i.iadd(a), i.iushrn(1);
                        for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(a), o.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(o)) : (r.isub(e), o.isub(i))
                    }
                    return (n = 0 === e.cmpn(1) ? i : o).cmpn(0) < 0 && n.iadd(t), n
                }, BN.prototype.gcd = function gcd(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, BN.prototype.invm = function invm(t) {
                    return this.egcd(t).a.umod(t)
                }, BN.prototype.isEven = function isEven() {
                    return 0 == (1 & this.words[0])
                }, BN.prototype.isOdd = function isOdd() {
                    return 1 == (1 & this.words[0])
                }, BN.prototype.andln = function andln(t) {
                    return this.words[0] & t
                }, BN.prototype.bincn = function bincn(t) {
                    assert("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                    for (var i = n, o = r; 0 !== i && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        i = (a += i) >>> 26, a &= 67108863, this.words[o] = a
                    }
                    return 0 !== i && (this.words[o] = i, this.length++), this
                }, BN.prototype.isZero = function isZero() {
                    return 1 === this.length && 0 === this.words[0]
                }, BN.prototype.cmpn = function cmpn(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this.strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), assert(t <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        e = n === t ? 0 : n < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.cmp = function cmp(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.ucmp = function ucmp(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, BN.prototype.gtn = function gtn(t) {
                    return 1 === this.cmpn(t)
                }, BN.prototype.gt = function gt(t) {
                    return 1 === this.cmp(t)
                }, BN.prototype.gten = function gten(t) {
                    return this.cmpn(t) >= 0
                }, BN.prototype.gte = function gte(t) {
                    return this.cmp(t) >= 0
                }, BN.prototype.ltn = function ltn(t) {
                    return -1 === this.cmpn(t)
                }, BN.prototype.lt = function lt(t) {
                    return -1 === this.cmp(t)
                }, BN.prototype.lten = function lten(t) {
                    return this.cmpn(t) <= 0
                }, BN.prototype.lte = function lte(t) {
                    return this.cmp(t) <= 0
                }, BN.prototype.eqn = function eqn(t) {
                    return 0 === this.cmpn(t)
                }, BN.prototype.eq = function eq(t) {
                    return 0 === this.cmp(t)
                }, BN.red = function red(t) {
                    return new Red(t)
                }, BN.prototype.toRed = function toRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, BN.prototype.fromRed = function fromRed() {
                    return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, BN.prototype._forceRed = function _forceRed(t) {
                    return this.red = t, this
                }, BN.prototype.forceRed = function forceRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, BN.prototype.redAdd = function redAdd(t) {
                    return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, BN.prototype.redIAdd = function redIAdd(t) {
                    return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, BN.prototype.redSub = function redSub(t) {
                    return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, BN.prototype.redISub = function redISub(t) {
                    return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, BN.prototype.redShl = function redShl(t) {
                    return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, BN.prototype.redMul = function redMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, BN.prototype.redIMul = function redIMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, BN.prototype.redSqr = function redSqr() {
                    return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, BN.prototype.redISqr = function redISqr() {
                    return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, BN.prototype.redSqrt = function redSqrt() {
                    return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, BN.prototype.redInvm = function redInvm() {
                    return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, BN.prototype.redNeg = function redNeg() {
                    return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, BN.prototype.redPow = function redPow(t) {
                    return assert(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var u = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function MPrime(t, e) {
                    this.name = t, this.p = new BN(e, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function Red(t) {
                    if ("string" == typeof t) {
                        var e = BN._prime(t);
                        this.m = e.p, this.prime = e
                    } else assert(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function Mont(t) {
                    Red.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                MPrime.prototype._tmp = function _tmp() {
                    var t = new BN(null);
                    return t.words = new Array(Math.ceil(this.n / 13)), t
                }, MPrime.prototype.ireduce = function ireduce(t) {
                    var e, r = t;
                    do {
                        this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : void 0 !== r.strip ? r.strip() : r._strip(), r
                }, MPrime.prototype.split = function split(t, e) {
                    t.iushrn(this.n, 0, e)
                }, MPrime.prototype.imulK = function imulK(t) {
                    return t.imul(this.k)
                }, inherits(K256, MPrime), K256.prototype.split = function split(t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++) e.words[n] = t.words[n];
                    if (e.length = r, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                    var i = t.words[9];
                    for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, K256.prototype.imulK = function imulK(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function imulK(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 19 * (0 | t.words[r]) + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, BN._prime = function prime(t) {
                    if (u[t]) return u[t];
                    var prime;
                    if ("k256" === t) prime = new K256;
                    else if ("p224" === t) prime = new P224;
                    else if ("p192" === t) prime = new P192;
                    else {
                        if ("p25519" !== t) throw new Error("Unknown prime " + t);
                        prime = new P25519
                    }
                    return u[t] = prime, prime
                }, Red.prototype._verify1 = function _verify1(t) {
                    assert(0 === t.negative, "red works only with positives"), assert(t.red, "red works only with red numbers")
                }, Red.prototype._verify2 = function _verify2(t, e) {
                    assert(0 == (t.negative | e.negative), "red works only with positives"), assert(t.red && t.red === e.red, "red works only with red numbers")
                }, Red.prototype.imod = function imod(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                }, Red.prototype.neg = function neg(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, Red.prototype.add = function add(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, Red.prototype.iadd = function iadd(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, Red.prototype.sub = function sub(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                }, Red.prototype.isub = function isub(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r
                }, Red.prototype.shl = function shl(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, Red.prototype.imul = function imul(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, Red.prototype.mul = function mul(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, Red.prototype.isqr = function isqr(t) {
                    return this.imul(t, t.clone())
                }, Red.prototype.sqr = function sqr(t) {
                    return this.mul(t, t)
                }, Red.prototype.sqrt = function sqrt(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (assert(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var n = this.m.subn(1), i = 0; !n.isZero() && 0 === n.andln(1);) i++, n.iushrn(1);
                    assert(!n.isZero());
                    var o = new BN(1).toRed(this),
                        a = o.redNeg(),
                        s = this.m.subn(1).iushrn(1),
                        u = this.m.bitLength();
                    for (u = new BN(2 * u * u).toRed(this); 0 !== this.pow(u, s).cmp(a);) u.redIAdd(a);
                    for (var c = this.pow(u, n), l = this.pow(t, n.addn(1).iushrn(1)), h = this.pow(t, n), d = i; 0 !== h.cmp(o);) {
                        for (var p = h, m = 0; 0 !== p.cmp(o); m++) p = p.redSqr();
                        assert(m < d);
                        var y = this.pow(c, new BN(1).iushln(d - m - 1));
                        l = l.redMul(y), c = y.redSqr(), h = h.redMul(c), d = m
                    }
                    return l
                }, Red.prototype.invm = function invm(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, Red.prototype.pow = function pow(t, e) {
                    if (e.isZero()) return new BN(1).toRed(this);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = new Array(16);
                    r[0] = new BN(1).toRed(this), r[1] = t;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], t);
                    var i = r[0],
                        o = 0,
                        a = 0,
                        s = e.bitLength() % 26;
                    for (0 === s && (s = 26), n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = s - 1; c >= 0; c--) {
                            var l = u >> c & 1;
                            i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 === ++a || 0 === n && 0 === c) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0
                        }
                        s = 26
                    }
                    return i
                }, Red.prototype.convertTo = function convertTo(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, Red.prototype.convertFrom = function convertFrom(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, BN.mont = function mont(t) {
                    return new Mont(t)
                }, inherits(Mont, Red), Mont.prototype.convertTo = function convertTo(t) {
                    return this.imod(t.ushln(this.shift))
                }, Mont.prototype.convertFrom = function convertFrom(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, Mont.prototype.imul = function imul(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.mul = function mul(t, e) {
                    if (t.isZero() || e.isZero()) return new BN(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.invm = function invm(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t, this)
        }).call(this, r(8)(t))
    }, , function (t, e, r) {
        t.exports = r(33)
    }, function (t, e) {
        t.exports = function _defineProperty(t, e, r) {
            return e in t ? Object.defineProperty(t, e, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : t[e] = r, t
        }
    }, function (t, e, r) {
        var n = r(206);
        t.exports = function _arrayWithoutHoles(t) {
            if (Array.isArray(t)) return n(t)
        }
    }, function (t, e) {
        t.exports = function _iterableToArray(t) {
            if ("undefined" != typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t)
        }
    }, function (t, e) {
        t.exports = function _nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
    }, function (t, e) {
        t.exports = function isBuffer(t) {
            return t && "object" == typeof t && "function" == typeof t.copy && "function" == typeof t.fill && "function" == typeof t.readUInt8
        }
    }, function (t, e) {
        "function" == typeof Object.create ? t.exports = function inherits(t, e) {
            t.super_ = e, t.prototype = Object.create(e.prototype, {
                constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            })
        } : t.exports = function inherits(t, e) {
            t.super_ = e;
            var TempCtor = function () {};
            TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
        }
    }, function (t, e, r) {
        var n = r(358),
            i = r(211),
            o = r(104);
        t.exports = function mapValues(t, e) {
            var r = {};
            return e = o(e, 3), i(t, (function (t, i, o) {
                n(r, i, e(t, i, o))
            })), r
        }
    }, function (t, e, r) {
        var n = r(359);
        t.exports = function baseAssignValue(t, e, r) {
            "__proto__" == e && n ? n(t, e, {
                configurable: !0,
                enumerable: !0,
                value: r,
                writable: !0
            }) : t[e] = r
        }
    }, function (t, e, r) {
        var n = r(44),
            i = function () {
                try {
                    var t = n(Object, "defineProperty");
                    return t({}, "", {}), t
                } catch (t) {}
            }();
        t.exports = i
    }, function (t, e, r) {
        var n = r(208),
            i = r(363),
            o = r(102),
            a = r(210),
            s = /^\[object .+?Constructor\]$/,
            u = Function.prototype,
            c = Object.prototype,
            l = u.toString,
            h = c.hasOwnProperty,
            d = RegExp("^" + l.call(h).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
        t.exports = function baseIsNative(t) {
            return !(!o(t) || i(t)) && (n(t) ? d : s).test(a(t))
        }
    }, function (t, e, r) {
        var n = r(75),
            i = Object.prototype,
            o = i.hasOwnProperty,
            a = i.toString,
            s = n ? n.toStringTag : void 0;
        t.exports = function getRawTag(t) {
            var e = o.call(t, s),
                r = t[s];
            try {
                t[s] = void 0;
                var n = !0
            } catch (t) {}
            var i = a.call(t);
            return n && (e ? t[s] = r : delete t[s]), i
        }
    }, function (t, e) {
        var r = Object.prototype.toString;
        t.exports = function objectToString(t) {
            return r.call(t)
        }
    }, function (t, e, r) {
        var n, i = r(364),
            o = (n = /[^.]+$/.exec(i && i.keys && i.keys.IE_PROTO || "")) ? "Symbol(src)_1." + n : "";
        t.exports = function isMasked(t) {
            return !!o && o in t
        }
    }, function (t, e, r) {
        var n = r(34)["__core-js_shared__"];
        t.exports = n
    }, function (t, e) {
        t.exports = function getValue(t, e) {
            return null == t ? void 0 : t[e]
        }
    }, function (t, e, r) {
        var n = r(367)();
        t.exports = n
    }, function (t, e) {
        t.exports = function createBaseFor(t) {
            return function (e, r, n) {
                for (var i = -1, o = Object(e), a = n(e), s = a.length; s--;) {
                    var u = a[t ? s : ++i];
                    if (!1 === r(o[u], u, o)) break
                }
                return e
            }
        }
    }, function (t, e, r) {
        var n = r(212),
            i = r(142),
            o = r(22),
            a = r(213),
            s = r(214),
            u = r(215),
            c = Object.prototype.hasOwnProperty;
        t.exports = function arrayLikeKeys(t, e) {
            var r = o(t),
                l = !r && i(t),
                h = !r && !l && a(t),
                d = !r && !l && !h && u(t),
                p = r || l || h || d,
                m = p ? n(t.length, String) : [],
                y = m.length;
            for (var b in t) !e && !c.call(t, b) || p && ("length" == b || h && ("offset" == b || "parent" == b) || d && ("buffer" == b || "byteLength" == b || "byteOffset" == b) || s(b, y)) || m.push(b);
            return m
        }
    }, function (t, e, r) {
        var n = r(74),
            i = r(76);
        t.exports = function baseIsArguments(t) {
            return i(t) && "[object Arguments]" == n(t)
        }
    }, function (t, e) {
        t.exports = function stubFalse() {
            return !1
        }
    }, function (t, e, r) {
        var n = r(74),
            i = r(143),
            o = r(76),
            a = {};
        a["[object Float32Array]"] = a["[object Float64Array]"] = a["[object Int8Array]"] = a["[object Int16Array]"] = a["[object Int32Array]"] = a["[object Uint8Array]"] = a["[object Uint8ClampedArray]"] = a["[object Uint16Array]"] = a["[object Uint32Array]"] = !0, a["[object Arguments]"] = a["[object Array]"] = a["[object ArrayBuffer]"] = a["[object Boolean]"] = a["[object DataView]"] = a["[object Date]"] = a["[object Error]"] = a["[object Function]"] = a["[object Map]"] = a["[object Number]"] = a["[object Object]"] = a["[object RegExp]"] = a["[object Set]"] = a["[object String]"] = a["[object WeakMap]"] = !1, t.exports = function baseIsTypedArray(t) {
            return o(t) && i(t.length) && !!a[n(t)]
        }
    }, function (t, e, r) {
        (function (t) {
            var n = r(209),
                i = e && !e.nodeType && e,
                o = i && "object" == typeof t && t && !t.nodeType && t,
                a = o && o.exports === i && n.process,
                s = function () {
                    try {
                        var t = o && o.require && o.require("util").types;
                        return t || a && a.binding && a.binding("util")
                    } catch (t) {}
                }();
            t.exports = s
        }).call(this, r(8)(t))
    }, function (t, e, r) {
        var n = r(374),
            i = r(375),
            o = Object.prototype.hasOwnProperty;
        t.exports = function baseKeys(t) {
            if (!n(t)) return i(t);
            var e = [];
            for (var r in Object(t)) o.call(t, r) && "constructor" != r && e.push(r);
            return e
        }
    }, function (t, e) {
        var r = Object.prototype;
        t.exports = function isPrototype(t) {
            var e = t && t.constructor;
            return t === ("function" == typeof e && e.prototype || r)
        }
    }, function (t, e, r) {
        var n = r(376)(Object.keys, Object);
        t.exports = n
    }, function (t, e) {
        t.exports = function overArg(t, e) {
            return function (r) {
                return t(e(r))
            }
        }
    }, function (t, e, r) {
        var n = r(378),
            i = r(418),
            o = r(226);
        t.exports = function baseMatches(t) {
            var e = i(t);
            return 1 == e.length && e[0][2] ? o(e[0][0], e[0][1]) : function (r) {
                return r === t || n(r, t, e)
            }
        }
    }, function (t, e, r) {
        var n = r(217),
            i = r(219);
        t.exports = function baseIsMatch(t, e, r, o) {
            var a = r.length,
                s = a,
                u = !o;
            if (null == t) return !s;
            for (t = Object(t); a--;) {
                var c = r[a];
                if (u && c[2] ? c[1] !== t[c[0]] : !(c[0] in t)) return !1
            }
            for (; ++a < s;) {
                var l = (c = r[a])[0],
                    h = t[l],
                    d = c[1];
                if (u && c[2]) {
                    if (void 0 === h && !(l in t)) return !1
                } else {
                    var p = new n;
                    if (o) var m = o(h, d, l, t, e, p);
                    if (!(void 0 === m ? i(d, h, 3, o, p) : m)) return !1
                }
            }
            return !0
        }
    }, function (t, e) {
        t.exports = function listCacheClear() {
            this.__data__ = [], this.size = 0
        }
    }, function (t, e, r) {
        var n = r(106),
            i = Array.prototype.splice;
        t.exports = function listCacheDelete(t) {
            var e = this.__data__,
                r = n(e, t);
            return !(r < 0) && (r == e.length - 1 ? e.pop() : i.call(e, r, 1), --this.size, !0)
        }
    }, function (t, e, r) {
        var n = r(106);
        t.exports = function listCacheGet(t) {
            var e = this.__data__,
                r = n(e, t);
            return r < 0 ? void 0 : e[r][1]
        }
    }, function (t, e, r) {
        var n = r(106);
        t.exports = function listCacheHas(t) {
            return n(this.__data__, t) > -1
        }
    }, function (t, e, r) {
        var n = r(106);
        t.exports = function listCacheSet(t, e) {
            var r = this.__data__,
                i = n(r, t);
            return i < 0 ? (++this.size, r.push([t, e])) : r[i][1] = e, this
        }
    }, function (t, e, r) {
        var n = r(105);
        t.exports = function stackClear() {
            this.__data__ = new n, this.size = 0
        }
    }, function (t, e) {
        t.exports = function stackDelete(t) {
            var e = this.__data__,
                r = e.delete(t);
            return this.size = e.size, r
        }
    }, function (t, e) {
        t.exports = function stackGet(t) {
            return this.__data__.get(t)
        }
    }, function (t, e) {
        t.exports = function stackHas(t) {
            return this.__data__.has(t)
        }
    }, function (t, e, r) {
        var n = r(105),
            i = r(145),
            o = r(146);
        t.exports = function stackSet(t, e) {
            var r = this.__data__;
            if (r instanceof n) {
                var a = r.__data__;
                if (!i || a.length < 199) return a.push([t, e]), this.size = ++r.size, this;
                r = this.__data__ = new o(a)
            }
            return r.set(t, e), this.size = r.size, this
        }
    }, function (t, e, r) {
        var n = r(390),
            i = r(105),
            o = r(145);
        t.exports = function mapCacheClear() {
            this.size = 0, this.__data__ = {
                hash: new n,
                map: new(o || i),
                string: new n
            }
        }
    }, function (t, e, r) {
        var n = r(391),
            i = r(392),
            o = r(393),
            a = r(394),
            s = r(395);

        function Hash(t) {
            var e = -1,
                r = null == t ? 0 : t.length;
            for (this.clear(); ++e < r;) {
                var n = t[e];
                this.set(n[0], n[1])
            }
        }
        Hash.prototype.clear = n, Hash.prototype.delete = i, Hash.prototype.get = o, Hash.prototype.has = a, Hash.prototype.set = s, t.exports = Hash
    }, function (t, e, r) {
        var n = r(107);
        t.exports = function hashClear() {
            this.__data__ = n ? n(null) : {}, this.size = 0
        }
    }, function (t, e) {
        t.exports = function hashDelete(t) {
            var e = this.has(t) && delete this.__data__[t];
            return this.size -= e ? 1 : 0, e
        }
    }, function (t, e, r) {
        var n = r(107),
            i = Object.prototype.hasOwnProperty;
        t.exports = function hashGet(t) {
            var e = this.__data__;
            if (n) {
                var r = e[t];
                return "__lodash_hash_undefined__" === r ? void 0 : r
            }
            return i.call(e, t) ? e[t] : void 0
        }
    }, function (t, e, r) {
        var n = r(107),
            i = Object.prototype.hasOwnProperty;
        t.exports = function hashHas(t) {
            var e = this.__data__;
            return n ? void 0 !== e[t] : i.call(e, t)
        }
    }, function (t, e, r) {
        var n = r(107);
        t.exports = function hashSet(t, e) {
            var r = this.__data__;
            return this.size += this.has(t) ? 0 : 1, r[t] = n && void 0 === e ? "__lodash_hash_undefined__" : e, this
        }
    }, function (t, e, r) {
        var n = r(108);
        t.exports = function mapCacheDelete(t) {
            var e = n(this, t).delete(t);
            return this.size -= e ? 1 : 0, e
        }
    }, function (t, e) {
        t.exports = function isKeyable(t) {
            var e = typeof t;
            return "string" == e || "number" == e || "symbol" == e || "boolean" == e ? "__proto__" !== t : null === t
        }
    }, function (t, e, r) {
        var n = r(108);
        t.exports = function mapCacheGet(t) {
            return n(this, t).get(t)
        }
    }, function (t, e, r) {
        var n = r(108);
        t.exports = function mapCacheHas(t) {
            return n(this, t).has(t)
        }
    }, function (t, e, r) {
        var n = r(108);
        t.exports = function mapCacheSet(t, e) {
            var r = n(this, t),
                i = r.size;
            return r.set(t, e), this.size += r.size == i ? 0 : 1, this
        }
    }, function (t, e, r) {
        var n = r(217),
            i = r(220),
            o = r(405),
            a = r(408),
            s = r(414),
            u = r(22),
            c = r(213),
            l = r(215),
            h = "[object Object]",
            d = Object.prototype.hasOwnProperty;
        t.exports = function baseIsEqualDeep(t, e, r, p, m, y) {
            var b = u(t),
                g = u(e),
                v = b ? "[object Array]" : s(t),
                w = g ? "[object Array]" : s(e),
                M = (v = "[object Arguments]" == v ? h : v) == h,
                A = (w = "[object Arguments]" == w ? h : w) == h,
                x = v == w;
            if (x && c(t)) {
                if (!c(e)) return !1;
                b = !0, M = !1
            }
            if (x && !M) return y || (y = new n), b || l(t) ? i(t, e, r, p, m, y) : o(t, e, v, r, p, m, y);
            if (!(1 & r)) {
                var B = M && d.call(t, "__wrapped__"),
                    E = A && d.call(e, "__wrapped__");
                if (B || E) {
                    var k = B ? t.value() : t,
                        N = E ? e.value() : e;
                    return y || (y = new n), m(k, N, r, p, y)
                }
            }
            return !!x && (y || (y = new n), a(t, e, r, p, m, y))
        }
    }, function (t, e) {
        t.exports = function setCacheAdd(t) {
            return this.__data__.set(t, "__lodash_hash_undefined__"), this
        }
    }, function (t, e) {
        t.exports = function setCacheHas(t) {
            return this.__data__.has(t)
        }
    }, function (t, e) {
        t.exports = function arraySome(t, e) {
            for (var r = -1, n = null == t ? 0 : t.length; ++r < n;)
                if (e(t[r], r, t)) return !0;
            return !1
        }
    }, function (t, e, r) {
        var n = r(75),
            i = r(406),
            o = r(218),
            a = r(220),
            s = r(407),
            u = r(147),
            c = n ? n.prototype : void 0,
            l = c ? c.valueOf : void 0;
        t.exports = function equalByTag(t, e, r, n, c, h, d) {
            switch (r) {
                case "[object DataView]":
                    if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset) return !1;
                    t = t.buffer, e = e.buffer;
                case "[object ArrayBuffer]":
                    return !(t.byteLength != e.byteLength || !h(new i(t), new i(e)));
                case "[object Boolean]":
                case "[object Date]":
                case "[object Number]":
                    return o(+t, +e);
                case "[object Error]":
                    return t.name == e.name && t.message == e.message;
                case "[object RegExp]":
                case "[object String]":
                    return t == e + "";
                case "[object Map]":
                    var p = s;
                case "[object Set]":
                    var m = 1 & n;
                    if (p || (p = u), t.size != e.size && !m) return !1;
                    var y = d.get(t);
                    if (y) return y == e;
                    n |= 2, d.set(t, e);
                    var b = a(p(t), p(e), n, c, h, d);
                    return d.delete(t), b;
                case "[object Symbol]":
                    if (l) return l.call(t) == l.call(e)
            }
            return !1
        }
    }, function (t, e, r) {
        var n = r(34).Uint8Array;
        t.exports = n
    }, function (t, e) {
        t.exports = function mapToArray(t) {
            var e = -1,
                r = Array(t.size);
            return t.forEach((function (t, n) {
                r[++e] = [n, t]
            })), r
        }
    }, function (t, e, r) {
        var n = r(409),
            i = Object.prototype.hasOwnProperty;
        t.exports = function equalObjects(t, e, r, o, a, s) {
            var u = 1 & r,
                c = n(t),
                l = c.length;
            if (l != n(e).length && !u) return !1;
            for (var h = l; h--;) {
                var d = c[h];
                if (!(u ? d in e : i.call(e, d))) return !1
            }
            var p = s.get(t);
            if (p && s.get(e)) return p == e;
            var m = !0;
            s.set(t, e), s.set(e, t);
            for (var y = u; ++h < l;) {
                var b = t[d = c[h]],
                    g = e[d];
                if (o) var v = u ? o(g, b, d, e, t, s) : o(b, g, d, t, e, s);
                if (!(void 0 === v ? b === g || a(b, g, r, o, s) : v)) {
                    m = !1;
                    break
                }
                y || (y = "constructor" == d)
            }
            if (m && !y) {
                var w = t.constructor,
                    M = e.constructor;
                w == M || !("constructor" in t) || !("constructor" in e) || "function" == typeof w && w instanceof w && "function" == typeof M && M instanceof M || (m = !1)
            }
            return s.delete(t), s.delete(e), m
        }
    }, function (t, e, r) {
        var n = r(410),
            i = r(411),
            o = r(103);
        t.exports = function getAllKeys(t) {
            return n(t, o, i)
        }
    }, function (t, e, r) {
        var n = r(223),
            i = r(22);
        t.exports = function baseGetAllKeys(t, e, r) {
            var o = e(t);
            return i(t) ? o : n(o, r(t))
        }
    }, function (t, e, r) {
        var n = r(412),
            i = r(413),
            o = Object.prototype.propertyIsEnumerable,
            a = Object.getOwnPropertySymbols,
            s = a ? function (t) {
                return null == t ? [] : (t = Object(t), n(a(t), (function (e) {
                    return o.call(t, e)
                })))
            } : i;
        t.exports = s
    }, function (t, e) {
        t.exports = function arrayFilter(t, e) {
            for (var r = -1, n = null == t ? 0 : t.length, i = 0, o = []; ++r < n;) {
                var a = t[r];
                e(a, r, t) && (o[i++] = a)
            }
            return o
        }
    }, function (t, e) {
        t.exports = function stubArray() {
            return []
        }
    }, function (t, e, r) {
        var n = r(415),
            i = r(145),
            o = r(416),
            a = r(224),
            s = r(417),
            u = r(74),
            c = r(210),
            l = c(n),
            h = c(i),
            d = c(o),
            p = c(a),
            m = c(s),
            y = u;
        (n && "[object DataView]" != y(new n(new ArrayBuffer(1))) || i && "[object Map]" != y(new i) || o && "[object Promise]" != y(o.resolve()) || a && "[object Set]" != y(new a) || s && "[object WeakMap]" != y(new s)) && (y = function (t) {
            var e = u(t),
                r = "[object Object]" == e ? t.constructor : void 0,
                n = r ? c(r) : "";
            if (n) switch (n) {
                case l:
                    return "[object DataView]";
                case h:
                    return "[object Map]";
                case d:
                    return "[object Promise]";
                case p:
                    return "[object Set]";
                case m:
                    return "[object WeakMap]"
            }
            return e
        }), t.exports = y
    }, function (t, e, r) {
        var n = r(44)(r(34), "DataView");
        t.exports = n
    }, function (t, e, r) {
        var n = r(44)(r(34), "Promise");
        t.exports = n
    }, function (t, e, r) {
        var n = r(44)(r(34), "WeakMap");
        t.exports = n
    }, function (t, e, r) {
        var n = r(225),
            i = r(103);
        t.exports = function getMatchData(t) {
            for (var e = i(t), r = e.length; r--;) {
                var o = e[r],
                    a = t[o];
                e[r] = [o, a, n(a)]
            }
            return e
        }
    }, function (t, e, r) {
        var n = r(219),
            i = r(420),
            o = r(424),
            a = r(148),
            s = r(225),
            u = r(226),
            c = r(109);
        t.exports = function baseMatchesProperty(t, e) {
            return a(t) && s(e) ? u(c(t), e) : function (r) {
                var a = i(r, t);
                return void 0 === a && a === e ? o(r, t) : n(e, a, 3)
            }
        }
    }, function (t, e, r) {
        var n = r(227);
        t.exports = function get(t, e, r) {
            var i = null == t ? void 0 : n(t, e);
            return void 0 === i ? r : i
        }
    }, function (t, e, r) {
        var n = r(422),
            i = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
            o = /\\(\\)?/g,
            a = n((function (t) {
                var e = [];
                return 46 === t.charCodeAt(0) && e.push(""), t.replace(i, (function (t, r, n, i) {
                    e.push(n ? i.replace(o, "$1") : r || t)
                })), e
            }));
        t.exports = a
    }, function (t, e, r) {
        var n = r(423);
        t.exports = function memoizeCapped(t) {
            var e = n(t, (function (t) {
                    return 500 === r.size && r.clear(), t
                })),
                r = e.cache;
            return e
        }
    }, function (t, e, r) {
        var n = r(146);

        function memoize(t, e) {
            if ("function" != typeof t || null != e && "function" != typeof e) throw new TypeError("Expected a function");
            var memoized = function () {
                var r = arguments,
                    n = e ? e.apply(this, r) : r[0],
                    i = memoized.cache;
                if (i.has(n)) return i.get(n);
                var o = t.apply(this, r);
                return memoized.cache = i.set(n, o) || i, o
            };
            return memoized.cache = new(memoize.Cache || n), memoized
        }
        memoize.Cache = n, t.exports = memoize
    }, function (t, e, r) {
        var n = r(425),
            i = r(230);
        t.exports = function hasIn(t, e) {
            return null != t && i(t, e, n)
        }
    }, function (t, e) {
        t.exports = function baseHasIn(t, e) {
            return null != t && e in Object(t)
        }
    }, function (t, e, r) {
        var n = r(231),
            i = r(427),
            o = r(148),
            a = r(109);
        t.exports = function property(t) {
            return o(t) ? n(a(t)) : i(t)
        }
    }, function (t, e, r) {
        var n = r(227);
        t.exports = function basePropertyDeep(t) {
            return function (e) {
                return n(e, t)
            }
        }
    }, function (t, e, r) {
        var n = r(429),
            i = r(232),
            o = r(104),
            a = r(431),
            s = r(22);
        t.exports = function reduce(t, e, r) {
            var u = s(t) ? n : a,
                c = arguments.length < 3;
            return u(t, o(e, 4), r, c, i)
        }
    }, function (t, e) {
        t.exports = function arrayReduce(t, e, r, n) {
            var i = -1,
                o = null == t ? 0 : t.length;
            for (n && o && (r = t[++i]); ++i < o;) r = e(r, t[i], i, t);
            return r
        }
    }, function (t, e, r) {
        var n = r(144);
        t.exports = function createBaseEach(t, e) {
            return function (r, i) {
                if (null == r) return r;
                if (!n(r)) return t(r, i);
                for (var o = r.length, a = e ? o : -1, s = Object(r);
                    (e ? a-- : ++a < o) && !1 !== i(s[a], a, s););
                return r
            }
        }
    }, function (t, e) {
        t.exports = function baseReduce(t, e, r, n, i) {
            return i(t, (function (t, i, o) {
                r = n ? (n = !1, t) : e(r, t, i, o)
            })), r
        }
    }, function (t, e, r) {
        var n = r(104),
            i = r(233);
        t.exports = function uniqBy(t, e) {
            return t && t.length ? i(t, n(e, 2)) : []
        }
    }, function (t, e, r) {
        var n = r(434);
        t.exports = function arrayIncludes(t, e) {
            return !!(null == t ? 0 : t.length) && n(t, e, 0) > -1
        }
    }, function (t, e, r) {
        var n = r(435),
            i = r(436),
            o = r(437);
        t.exports = function baseIndexOf(t, e, r) {
            return e == e ? o(t, e, r) : n(t, i, r)
        }
    }, function (t, e) {
        t.exports = function baseFindIndex(t, e, r, n) {
            for (var i = t.length, o = r + (n ? 1 : -1); n ? o-- : ++o < i;)
                if (e(t[o], o, t)) return o;
            return -1
        }
    }, function (t, e) {
        t.exports = function baseIsNaN(t) {
            return t != t
        }
    }, function (t, e) {
        t.exports = function strictIndexOf(t, e, r) {
            for (var n = r - 1, i = t.length; ++n < i;)
                if (t[n] === e) return n;
            return -1
        }
    }, function (t, e) {
        t.exports = function arrayIncludesWith(t, e, r) {
            for (var n = -1, i = null == t ? 0 : t.length; ++n < i;)
                if (r(e, t[n])) return !0;
            return !1
        }
    }, function (t, e, r) {
        var n = r(224),
            i = r(440),
            o = r(147),
            a = n && 1 / o(new n([, -0]))[1] == 1 / 0 ? function (t) {
                return new n(t)
            } : i;
        t.exports = a
    }, function (t, e) {
        t.exports = function noop() {}
    }, function (t, e, r) {
        r(442), t.exports = r(13).Object.assign
    }, function (t, e, r) {
        var n = r(36);
        n(n.S + n.F, "Object", {
            assign: r(444)
        })
    }, function (t, e) {
        t.exports = function (t) {
            if ("function" != typeof t) throw TypeError(t + " is not a function!");
            return t
        }
    }, function (t, e, r) {
        var n = r(39),
            i = r(111),
            o = r(160),
            a = r(114),
            s = r(79),
            u = r(238),
            c = Object.assign;
        t.exports = !c || r(62)((function () {
            var t = {},
                e = {},
                r = Symbol(),
                n = "abcdefghijklmnopqrst";
            return t[r] = 7, n.split("").forEach((function (t) {
                e[t] = t
            })), 7 != c({}, t)[r] || Object.keys(c({}, e)).join("") != n
        })) ? function assign(t, e) {
            for (var r = s(t), c = arguments.length, l = 1, h = o.f, d = a.f; c > l;)
                for (var p, m = u(arguments[l++]), y = h ? i(m).concat(h(m)) : i(m), b = y.length, g = 0; b > g;) p = y[g++], n && !d.call(m, p) || (r[p] = m[p]);
            return r
        } : c
    }, function (t, e, r) {
        var n = r(63),
            i = r(239),
            o = r(446);
        t.exports = function (t) {
            return function (e, r, a) {
                var s, u = n(e),
                    c = i(u.length),
                    l = o(a, c);
                if (t && r != r) {
                    for (; c > l;)
                        if ((s = u[l++]) != s) return !0
                } else
                    for (; c > l; l++)
                        if ((t || l in u) && u[l] === r) return t || l || 0;
                return !t && -1
            }
        }
    }, function (t, e, r) {
        var n = r(156),
            i = Math.max,
            o = Math.min;
        t.exports = function (t, e) {
            return (t = n(t)) < 0 ? i(t + e, 0) : o(t, e)
        }
    }, function (t, e, r) {
        r(448), t.exports = r(13).Object.getPrototypeOf
    }, function (t, e, r) {
        var n = r(79),
            i = r(241);
        r(449)("getPrototypeOf", (function () {
            return function getPrototypeOf(t) {
                return i(n(t))
            }
        }))
    }, function (t, e, r) {
        var n = r(36),
            i = r(13),
            o = r(62);
        t.exports = function (t, e) {
            var r = (i.Object || {})[t] || Object[t],
                a = {};
            a[t] = e(r), n(n.S + n.F * o((function () {
                r(1)
            })), "Object", a)
        }
    }, function (t, e, r) {
        t.exports = {
            default: r(451),
            __esModule: !0
        }
    }, function (t, e, r) {
        r(161), r(247), t.exports = r(164).f("iterator")
    }, function (t, e, r) {
        var n = r(156),
            i = r(155);
        t.exports = function (t) {
            return function (e, r) {
                var o, a, s = String(i(e)),
                    u = n(r),
                    c = s.length;
                return u < 0 || u >= c ? t ? "" : void 0 : (o = s.charCodeAt(u)) < 55296 || o > 56319 || u + 1 === c || (a = s.charCodeAt(u + 1)) < 56320 || a > 57343 ? t ? s.charAt(u) : o : t ? s.slice(u, u + 2) : a - 56320 + (o - 55296 << 10) + 65536
            }
        }
    }, function (t, e, r) {
        var n = r(162),
            i = r(78),
            o = r(163),
            a = {};
        r(60)(a, r(27)("iterator"), (function () {
            return this
        })), t.exports = function (t, e, r) {
            t.prototype = n(a, {
                next: i(1, r)
            }), o(t, e + " Iterator")
        }
    }, function (t, e, r) {
        var n = r(38),
            i = r(45),
            o = r(111);
        t.exports = r(39) ? Object.defineProperties : function defineProperties(t, e) {
            i(t);
            for (var r, a = o(e), s = a.length, u = 0; s > u;) n.f(t, r = a[u++], e[r]);
            return t
        }
    }, function (t, e, r) {
        var n = r(37).document;
        t.exports = n && n.documentElement
    }, function (t, e, r) {
        var n = r(457),
            i = r(458),
            o = r(80),
            a = r(63);
        t.exports = r(245)(Array, "Array", (function (t, e) {
            this._t = a(t), this._i = 0, this._k = e
        }), (function () {
            var t = this._t,
                e = this._k,
                r = this._i++;
            return !t || r >= t.length ? (this._t = void 0, i(1)) : i(0, "keys" == e ? r : "values" == e ? t[r] : [r, t[r]])
        }), "values"), o.Arguments = o.Array, n("keys"), n("values"), n("entries")
    }, function (t, e) {
        t.exports = function () {}
    }, function (t, e) {
        t.exports = function (t, e) {
            return {
                value: e,
                done: !!t
            }
        }
    }, function (t, e, r) {
        t.exports = {
            default: r(460),
            __esModule: !0
        }
    }, function (t, e, r) {
        r(461), r(466), r(467), r(468), t.exports = r(13).Symbol
    }, function (t, e, r) {
        var n = r(37),
            i = r(46),
            o = r(39),
            a = r(36),
            s = r(246),
            u = r(462).KEY,
            c = r(62),
            l = r(158),
            h = r(163),
            d = r(113),
            p = r(27),
            m = r(164),
            y = r(165),
            b = r(463),
            g = r(464),
            v = r(45),
            w = r(61),
            M = r(79),
            A = r(63),
            x = r(153),
            B = r(78),
            E = r(162),
            k = r(465),
            N = r(249),
            T = r(160),
            C = r(38),
            P = r(111),
            I = N.f,
            O = C.f,
            D = k.f,
            j = n.Symbol,
            L = n.JSON,
            U = L && L.stringify,
            H = p("_hidden"),
            q = p("toPrimitive"),
            z = {}.propertyIsEnumerable,
            G = l("symbol-registry"),
            V = l("symbols"),
            J = l("op-symbols"),
            W = Object.prototype,
            Z = "function" == typeof j && !!T.f,
            X = n.QObject,
            Y = !X || !X.prototype || !X.prototype.findChild,
            $ = o && c((function () {
                return 7 != E(O({}, "a", {
                    get: function () {
                        return O(this, "a", {
                            value: 7
                        }).a
                    }
                })).a
            })) ? function (t, e, r) {
                var n = I(W, e);
                n && delete W[e], O(t, e, r), n && t !== W && O(W, e, n)
            } : O,
            wrap = function (t) {
                var e = V[t] = E(j.prototype);
                return e._k = t, e
            },
            Q = Z && "symbol" == typeof j.iterator ? function (t) {
                return "symbol" == typeof t
            } : function (t) {
                return t instanceof j
            },
            tt = function defineProperty(t, e, r) {
                return t === W && tt(J, e, r), v(t), e = x(e, !0), v(r), i(V, e) ? (r.enumerable ? (i(t, H) && t[H][e] && (t[H][e] = !1), r = E(r, {
                    enumerable: B(0, !1)
                })) : (i(t, H) || O(t, H, B(1, {})), t[H][e] = !0), $(t, e, r)) : O(t, e, r)
            },
            et = function defineProperties(t, e) {
                v(t);
                for (var r, n = b(e = A(e)), i = 0, o = n.length; o > i;) tt(t, r = n[i++], e[r]);
                return t
            },
            rt = function propertyIsEnumerable(t) {
                var e = z.call(this, t = x(t, !0));
                return !(this === W && i(V, t) && !i(J, t)) && (!(e || !i(this, t) || !i(V, t) || i(this, H) && this[H][t]) || e)
            },
            nt = function getOwnPropertyDescriptor(t, e) {
                if (t = A(t), e = x(e, !0), t !== W || !i(V, e) || i(J, e)) {
                    var r = I(t, e);
                    return !r || !i(V, e) || i(t, H) && t[H][e] || (r.enumerable = !0), r
                }
            },
            it = function getOwnPropertyNames(t) {
                for (var e, r = D(A(t)), n = [], o = 0; r.length > o;) i(V, e = r[o++]) || e == H || e == u || n.push(e);
                return n
            },
            ot = function getOwnPropertySymbols(t) {
                for (var e, r = t === W, n = D(r ? J : A(t)), o = [], a = 0; n.length > a;) !i(V, e = n[a++]) || r && !i(W, e) || o.push(V[e]);
                return o
            };
        Z || (s((j = function Symbol() {
            if (this instanceof j) throw TypeError("Symbol is not a constructor!");
            var t = d(arguments.length > 0 ? arguments[0] : void 0),
                $set = function (e) {
                    this === W && $set.call(J, e), i(this, H) && i(this[H], t) && (this[H][t] = !1), $(this, t, B(1, e))
                };
            return o && Y && $(W, t, {
                configurable: !0,
                set: $set
            }), wrap(t)
        }).prototype, "toString", (function toString() {
            return this._k
        })), N.f = nt, C.f = tt, r(248).f = k.f = it, r(114).f = rt, T.f = ot, o && !r(112) && s(W, "propertyIsEnumerable", rt, !0), m.f = function (t) {
            return wrap(p(t))
        }), a(a.G + a.W + a.F * !Z, {
            Symbol: j
        });
        for (var st = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), ut = 0; st.length > ut;) p(st[ut++]);
        for (var ct = P(p.store), ht = 0; ct.length > ht;) y(ct[ht++]);
        a(a.S + a.F * !Z, "Symbol", {
            for: function (t) {
                return i(G, t += "") ? G[t] : G[t] = j(t)
            },
            keyFor: function keyFor(t) {
                if (!Q(t)) throw TypeError(t + " is not a symbol!");
                for (var e in G)
                    if (G[e] === t) return e
            },
            useSetter: function () {
                Y = !0
            },
            useSimple: function () {
                Y = !1
            }
        }), a(a.S + a.F * !Z, "Object", {
            create: function create(t, e) {
                return void 0 === e ? E(t) : et(E(t), e)
            },
            defineProperty: tt,
            defineProperties: et,
            getOwnPropertyDescriptor: nt,
            getOwnPropertyNames: it,
            getOwnPropertySymbols: ot
        });
        var dt = c((function () {
            T.f(1)
        }));
        a(a.S + a.F * dt, "Object", {
            getOwnPropertySymbols: function getOwnPropertySymbols(t) {
                return T.f(M(t))
            }
        }), L && a(a.S + a.F * (!Z || c((function () {
            var t = j();
            return "[null]" != U([t]) || "{}" != U({
                a: t
            }) || "{}" != U(Object(t))
        }))), "JSON", {
            stringify: function stringify(t) {
                for (var e, r, n = [t], i = 1; arguments.length > i;) n.push(arguments[i++]);
                if (r = e = n[1], (w(e) || void 0 !== t) && !Q(t)) return g(e) || (e = function (t, e) {
                    if ("function" == typeof r && (e = r.call(this, t, e)), !Q(e)) return e
                }), n[1] = e, U.apply(L, n)
            }
        }), j.prototype[q] || r(60)(j.prototype, q, j.prototype.valueOf), h(j, "Symbol"), h(Math, "Math", !0), h(n.JSON, "JSON", !0)
    }, function (t, e, r) {
        var n = r(113)("meta"),
            i = r(61),
            o = r(46),
            a = r(38).f,
            s = 0,
            u = Object.isExtensible || function () {
                return !0
            },
            c = !r(62)((function () {
                return u(Object.preventExtensions({}))
            })),
            setMeta = function (t) {
                a(t, n, {
                    value: {
                        i: "O" + ++s,
                        w: {}
                    }
                })
            },
            l = t.exports = {
                KEY: n,
                NEED: !1,
                fastKey: function (t, e) {
                    if (!i(t)) return "symbol" == typeof t ? t : ("string" == typeof t ? "S" : "P") + t;
                    if (!o(t, n)) {
                        if (!u(t)) return "F";
                        if (!e) return "E";
                        setMeta(t)
                    }
                    return t[n].i
                },
                getWeak: function (t, e) {
                    if (!o(t, n)) {
                        if (!u(t)) return !0;
                        if (!e) return !1;
                        setMeta(t)
                    }
                    return t[n].w
                },
                onFreeze: function (t) {
                    return c && l.NEED && u(t) && !o(t, n) && setMeta(t), t
                }
            }
    }, function (t, e, r) {
        var n = r(111),
            i = r(160),
            o = r(114);
        t.exports = function (t) {
            var e = n(t),
                r = i.f;
            if (r)
                for (var a, s = r(t), u = o.f, c = 0; s.length > c;) u.call(t, a = s[c++]) && e.push(a);
            return e
        }
    }, function (t, e, r) {
        var n = r(154);
        t.exports = Array.isArray || function isArray(t) {
            return "Array" == n(t)
        }
    }, function (t, e, r) {
        var n = r(63),
            i = r(248).f,
            o = {}.toString,
            a = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
        t.exports.f = function getOwnPropertyNames(t) {
            return a && "[object Window]" == o.call(t) ? function (t) {
                try {
                    return i(t)
                } catch (t) {
                    return a.slice()
                }
            }(t) : i(n(t))
        }
    }, function (t, e) {}, function (t, e, r) {
        r(165)("asyncIterator")
    }, function (t, e, r) {
        r(165)("observable")
    }, function (t, e, r) {
        t.exports = {
            default: r(470),
            __esModule: !0
        }
    }, function (t, e, r) {
        r(471), t.exports = r(13).Object.setPrototypeOf
    }, function (t, e, r) {
        var n = r(36);
        n(n.S, "Object", {
            setPrototypeOf: r(472).set
        })
    }, function (t, e, r) {
        var n = r(61),
            i = r(45),
            check = function (t, e) {
                if (i(t), !n(e) && null !== e) throw TypeError(e + ": can't set as prototype!")
            };
        t.exports = {
            set: Object.setPrototypeOf || ("__proto__" in {} ? function (t, e, n) {
                try {
                    (n = r(152)(Function.call, r(249).f(Object.prototype, "__proto__").set, 2))(t, []), e = !(t instanceof Array)
                } catch (t) {
                    e = !0
                }
                return function setPrototypeOf(t, r) {
                    return check(t, r), e ? t.__proto__ = r : n(t, r), t
                }
            }({}, !1) : void 0),
            check: check
        }
    }, function (t, e, r) {
        t.exports = {
            default: r(474),
            __esModule: !0
        }
    }, function (t, e, r) {
        r(475);
        var n = r(13).Object;
        t.exports = function create(t, e) {
            return n.create(t, e)
        }
    }, function (t, e, r) {
        var n = r(36);
        n(n.S, "Object", {
            create: r(162)
        })
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.CurrencyRatio = e.Currency = void 0;
        var n = _interopRequireDefault(r(477)),
            i = _interopRequireDefault(r(481)),
            o = _interopRequireDefault(r(234)),
            a = _interopRequireDefault(r(240)),
            s = _interopRequireDefault(r(243)),
            u = _interopRequireDefault(r(250)),
            c = _interopRequireDefault(r(242)),
            l = _interopRequireDefault(r(489)),
            h = _interopRequireDefault(r(493));

        function _interopRequireDefault(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }

        function amountToBigNumber(t) {
            if (t instanceof d || "function" == typeof t.toBigNumber) return t.toBigNumber();
            var e = (0, h.default)(t);
            if (e.isNaN()) throw new Error('amount "' + t + '" is not a number');
            return e
        }
        var d = e.Currency = function () {
                function Currency(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    (0, c.default)(this, Currency), "wei" === e && (e = -18), "ray" === e && (e = -27), "rad" === e && (e = -45), this._amount = e ? amountToBigNumber(t).shiftedBy(e) : amountToBigNumber(t), this.symbol = "???"
                }
                return (0, l.default)(Currency, [{
                    key: "isEqual",
                    value: function isEqual(t) {
                        return this._amount.eq(t._amount) && this.symbol == t.symbol
                    }
                }, {
                    key: "toString",
                    value: function toString() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                        return this._amount.toFixed(t) + " " + this.symbol
                    }
                }, {
                    key: "toBigNumber",
                    value: function toBigNumber() {
                        return this._amount
                    }
                }, {
                    key: "toNumber",
                    value: function toNumber() {
                        return this._amount.toNumber()
                    }
                }, {
                    key: "toFixed",
                    value: function toFixed() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                        return "wei" === t && (t = 18), "ray" === t && (t = 27), "rad" === t && (t = 45), this._amount.shiftedBy(t).integerValue(h.default.ROUND_DOWN).toFixed()
                    }
                }, {
                    key: "isSameType",
                    value: function isSameType(t) {
                        return this.symbol === t.symbol
                    }
                }]), Currency
            }(),
            p = e.CurrencyRatio = function (t) {
                function CurrencyRatio(t, e, r, n) {
                    (0, c.default)(this, CurrencyRatio);
                    var i = (0, s.default)(this, (CurrencyRatio.__proto__ || (0, a.default)(CurrencyRatio)).call(this, t, n));
                    return i.numerator = e, i.denominator = r, i.symbol = e.symbol + "/" + r.symbol, i
                }
                return (0, u.default)(CurrencyRatio, t), CurrencyRatio
            }(d);

        function bigNumberFnWrapper(t, e) {
            return function (r) {
                ! function assertValidOperation(t, e, r) {
                    if (!r && 0 !== r) throw new Error("Invalid operation: " + e.symbol + " " + t + " with no right operand");
                    if (r instanceof d && !e.isSameType(r)) {
                        if (r instanceof p) switch (t) {
                            case "times":
                                if (e.isSameType(r.denominator)) return;
                                break;
                            case "div":
                                if (e.isSameType(r.numerator)) return
                        } else switch (t) {
                            case "div":
                                return
                        }
                        throw new Error("Invalid operation: " + e.symbol + " " + t + " " + r.symbol)
                    }
                }(t, this, r);
                var n = r instanceof d ? r.toBigNumber() : r,
                    i = this.toBigNumber()[t](n);
                return e ? i : function bigNumberFnResult(t, e, r, n) {
                    if (r instanceof p) switch (t) {
                        case "times":
                            return new r.numerator(n);
                        case "div":
                            return new r.denominator(n)
                    }
                    return r instanceof d && !e.isSameType(r) ? new p(n, e.constructor, r.constructor) : e instanceof p ? new e.constructor(n, e.numerator, e.denominator, e.shift) : new e.constructor(n)
                }(t, this, r, i)
            }
        }(0, o.default)(d.prototype, [
            ["plus", "add"],
            ["minus", "sub"],
            ["times", "multipliedBy", "mul"],
            ["div", "dividedBy"],
            ["shiftedBy"]
        ].reduce((function (t, e) {
            var r = (0, i.default)(e),
                o = r[0],
                a = r.slice(1);
            t[o] = bigNumberFnWrapper(o);
            var s = !0,
                u = !1,
                c = void 0;
            try {
                for (var l, h = (0, n.default)(a); !(s = (l = h.next()).done); s = !0) {
                    t[l.value] = t[o]
                }
            } catch (t) {
                u = !0, c = t
            } finally {
                try {
                    !s && h.return && h.return()
                } finally {
                    if (u) throw c
                }
            }
            return t
        }), {}), [
            ["isLessThan", "lt"],
            ["isLessThanOrEqualTo", "lte"],
            ["isGreaterThan", "gt"],
            ["isGreaterThanOrEqualTo", "gte"],
            ["eq"]
        ].reduce((function (t, e) {
            var r = (0, i.default)(e),
                o = r[0],
                a = r.slice(1);
            t[o] = bigNumberFnWrapper(o, !0);
            var s = !0,
                u = !1,
                c = void 0;
            try {
                for (var l, h = (0, n.default)(a); !(s = (l = h.next()).done); s = !0) {
                    t[l.value] = t[o]
                }
            } catch (t) {
                u = !0, c = t
            } finally {
                try {
                    !s && h.return && h.return()
                } finally {
                    if (u) throw c
                }
            }
            return t
        }), {}))
    }, function (t, e, r) {
        t.exports = {
            default: r(478),
            __esModule: !0
        }
    }, function (t, e, r) {
        r(247), r(161), t.exports = r(479)
    }, function (t, e, r) {
        var n = r(45),
            i = r(251);
        t.exports = r(13).getIterator = function (t) {
            var e = i(t);
            if ("function" != typeof e) throw TypeError(t + " is not iterable!");
            return n(e.call(t))
        }
    }, function (t, e, r) {
        var n = r(154),
            i = r(27)("toStringTag"),
            o = "Arguments" == n(function () {
                return arguments
            }());
        t.exports = function (t) {
            var e, r, a;
            return void 0 === t ? "Undefined" : null === t ? "Null" : "string" == typeof (r = function (t, e) {
                try {
                    return t[e]
                } catch (t) {}
            }(e = Object(t), i)) ? r : o ? n(e) : "Object" == (a = n(e)) && "function" == typeof e.callee ? "Arguments" : a
        }
    }, function (t, e, r) {
        e.__esModule = !0;
        var n = function _interopRequireDefault(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(r(482));
        e.default = function (t) {
            return Array.isArray(t) ? t : (0, n.default)(t)
        }
    }, function (t, e, r) {
        t.exports = {
            default: r(483),
            __esModule: !0
        }
    }, function (t, e, r) {
        r(161), r(484), t.exports = r(13).Array.from
    }, function (t, e, r) {
        var n = r(152),
            i = r(36),
            o = r(79),
            a = r(485),
            s = r(486),
            u = r(239),
            c = r(487),
            l = r(251);
        i(i.S + i.F * !r(488)((function (t) {
            Array.from(t)
        })), "Array", {
            from: function from(t) {
                var e, r, i, h, d = o(t),
                    p = "function" == typeof this ? this : Array,
                    m = arguments.length,
                    y = m > 1 ? arguments[1] : void 0,
                    b = void 0 !== y,
                    g = 0,
                    v = l(d);
                if (b && (y = n(y, m > 2 ? arguments[2] : void 0, 2)), null == v || p == Array && s(v))
                    for (r = new p(e = u(d.length)); e > g; g++) c(r, g, b ? y(d[g], g) : d[g]);
                else
                    for (h = v.call(d), r = new p; !(i = h.next()).done; g++) c(r, g, b ? a(h, y, [i.value, g], !0) : i.value);
                return r.length = g, r
            }
        })
    }, function (t, e, r) {
        var n = r(45);
        t.exports = function (t, e, r, i) {
            try {
                return i ? e(n(r)[0], r[1]) : e(r)
            } catch (e) {
                var o = t.return;
                throw void 0 !== o && n(o.call(t)), e
            }
        }
    }, function (t, e, r) {
        var n = r(80),
            i = r(27)("iterator"),
            o = Array.prototype;
        t.exports = function (t) {
            return void 0 !== t && (n.Array === t || o[i] === t)
        }
    }, function (t, e, r) {
        var n = r(38),
            i = r(78);
        t.exports = function (t, e, r) {
            e in t ? n.f(t, e, i(0, r)) : t[e] = r
        }
    }, function (t, e, r) {
        var n = r(27)("iterator"),
            i = !1;
        try {
            var o = [7][n]();
            o.return = function () {
                i = !0
            }, Array.from(o, (function () {
                throw 2
            }))
        } catch (t) {}
        t.exports = function (t, e) {
            if (!e && !i) return !1;
            var r = !1;
            try {
                var o = [7],
                    a = o[n]();
                a.next = function () {
                    return {
                        done: r = !0
                    }
                }, o[n] = function () {
                    return a
                }, t(o)
            } catch (t) {}
            return r
        }
    }, function (t, e, r) {
        e.__esModule = !0;
        var n = function _interopRequireDefault(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }(r(490));
        e.default = function () {
            function defineProperties(t, e) {
                for (var r = 0; r < e.length; r++) {
                    var i = e[r];
                    i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), (0, n.default)(t, i.key, i)
                }
            }
            return function (t, e, r) {
                return e && defineProperties(t.prototype, e), r && defineProperties(t, r), t
            }
        }()
    }, function (t, e, r) {
        t.exports = {
            default: r(491),
            __esModule: !0
        }
    }, function (t, e, r) {
        r(492);
        var n = r(13).Object;
        t.exports = function defineProperty(t, e, r) {
            return n.defineProperty(t, e, r)
        }
    }, function (t, e, r) {
        var n = r(36);
        n(n.S + n.F * !r(39), "Object", {
            defineProperty: r(38).f
        })
    }, function (t, e, r) {
        var n;
        ! function (i) {
            var o, a = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
                s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator,
                u = Math.ceil,
                c = Math.floor,
                l = "[BigNumber Error] ",
                h = l + "Number primitive has more than 15 significant digits: ",
                d = 1e14,
                p = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
                m = 1e9;

            function bitFloor(t) {
                var e = 0 | t;
                return t > 0 || t === e ? e : e - 1
            }

            function coeffToString(t) {
                for (var e, r, n = 1, i = t.length, o = t[0] + ""; n < i;) {
                    for (r = 14 - (e = t[n++] + "").length; r--; e = "0" + e);
                    o += e
                }
                for (i = o.length; 48 === o.charCodeAt(--i););
                return o.slice(0, i + 1 || 1)
            }

            function compare(t, e) {
                var r, n, i = t.c,
                    o = e.c,
                    a = t.s,
                    s = e.s,
                    u = t.e,
                    c = e.e;
                if (!a || !s) return null;
                if (r = i && !i[0], n = o && !o[0], r || n) return r ? n ? 0 : -s : a;
                if (a != s) return a;
                if (r = a < 0, n = u == c, !i || !o) return n ? 0 : !i ^ r ? 1 : -1;
                if (!n) return u > c ^ r ? 1 : -1;
                for (s = (u = i.length) < (c = o.length) ? u : c, a = 0; a < s; a++)
                    if (i[a] != o[a]) return i[a] > o[a] ^ r ? 1 : -1;
                return u == c ? 0 : u > c ^ r ? 1 : -1
            }

            function intCheck(t, e, r, n) {
                if (t < e || t > r || t !== c(t)) throw Error(l + (n || "Argument") + ("number" == typeof t ? t < e || t > r ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(t))
            }

            function isOdd(t) {
                var e = t.c.length - 1;
                return bitFloor(t.e / 14) == e && t.c[e] % 2 != 0
            }

            function toExponential(t, e) {
                return (t.length > 1 ? t.charAt(0) + "." + t.slice(1) : t) + (e < 0 ? "e" : "e+") + e
            }

            function toFixedPoint(t, e, r) {
                var n, i;
                if (e < 0) {
                    for (i = r + "."; ++e; i += r);
                    t = i + t
                } else if (++e > (n = t.length)) {
                    for (i = r, e -= n; --e; i += r);
                    t += i
                } else e < n && (t = t.slice(0, e) + "." + t.slice(e));
                return t
            }(o = function clone(t) {
                var e, r, n, i, o, y, b, g, v, w = BigNumber.prototype = {
                        constructor: BigNumber,
                        toString: null,
                        valueOf: null
                    },
                    M = new BigNumber(1),
                    A = 20,
                    x = 4,
                    B = -7,
                    E = 21,
                    k = -1e7,
                    N = 1e7,
                    T = !1,
                    C = 1,
                    P = 0,
                    I = {
                        prefix: "",
                        groupSize: 3,
                        secondaryGroupSize: 0,
                        groupSeparator: ",",
                        decimalSeparator: ".",
                        fractionGroupSize: 0,
                        fractionGroupSeparator: " ",
                        suffix: ""
                    },
                    O = "0123456789abcdefghijklmnopqrstuvwxyz";

                function BigNumber(t, e) {
                    var i, o, s, u, l, d, p, m, y = this;
                    if (!(y instanceof BigNumber)) return new BigNumber(t, e);
                    if (null == e) {
                        if (t && !0 === t._isBigNumber) return y.s = t.s, void(!t.c || t.e > N ? y.c = y.e = null : t.e < k ? y.c = [y.e = 0] : (y.e = t.e, y.c = t.c.slice()));
                        if ((d = "number" == typeof t) && 0 * t == 0) {
                            if (y.s = 1 / t < 0 ? (t = -t, -1) : 1, t === ~~t) {
                                for (u = 0, l = t; l >= 10; l /= 10, u++);
                                return void(u > N ? y.c = y.e = null : (y.e = u, y.c = [t]))
                            }
                            m = String(t)
                        } else {
                            if (!a.test(m = String(t))) return n(y, m, d);
                            y.s = 45 == m.charCodeAt(0) ? (m = m.slice(1), -1) : 1
                        }(u = m.indexOf(".")) > -1 && (m = m.replace(".", "")), (l = m.search(/e/i)) > 0 ? (u < 0 && (u = l), u += +m.slice(l + 1), m = m.substring(0, l)) : u < 0 && (u = m.length)
                    } else {
                        if (intCheck(e, 2, O.length, "Base"), 10 == e) return round(y = new BigNumber(t), A + y.e + 1, x);
                        if (m = String(t), d = "number" == typeof t) {
                            if (0 * t != 0) return n(y, m, d, e);
                            if (y.s = 1 / t < 0 ? (m = m.slice(1), -1) : 1, BigNumber.DEBUG && m.replace(/^0\.0*|\./, "").length > 15) throw Error(h + t)
                        } else y.s = 45 === m.charCodeAt(0) ? (m = m.slice(1), -1) : 1;
                        for (i = O.slice(0, e), u = l = 0, p = m.length; l < p; l++)
                            if (i.indexOf(o = m.charAt(l)) < 0) {
                                if ("." == o) {
                                    if (l > u) {
                                        u = p;
                                        continue
                                    }
                                } else if (!s && (m == m.toUpperCase() && (m = m.toLowerCase()) || m == m.toLowerCase() && (m = m.toUpperCase()))) {
                                    s = !0, l = -1, u = 0;
                                    continue
                                }
                                return n(y, String(t), d, e)
                            } d = !1, (u = (m = r(m, e, 10, y.s)).indexOf(".")) > -1 ? m = m.replace(".", "") : u = m.length
                    }
                    for (l = 0; 48 === m.charCodeAt(l); l++);
                    for (p = m.length; 48 === m.charCodeAt(--p););
                    if (m = m.slice(l, ++p)) {
                        if (p -= l, d && BigNumber.DEBUG && p > 15 && (t > 9007199254740991 || t !== c(t))) throw Error(h + y.s * t);
                        if ((u = u - l - 1) > N) y.c = y.e = null;
                        else if (u < k) y.c = [y.e = 0];
                        else {
                            if (y.e = u, y.c = [], l = (u + 1) % 14, u < 0 && (l += 14), l < p) {
                                for (l && y.c.push(+m.slice(0, l)), p -= 14; l < p;) y.c.push(+m.slice(l, l += 14));
                                l = 14 - (m = m.slice(l)).length
                            } else l -= p;
                            for (; l--; m += "0");
                            y.c.push(+m)
                        }
                    } else y.c = [y.e = 0]
                }

                function format(t, e, r, n) {
                    var i, o, a, s, u;
                    if (null == r ? r = x : intCheck(r, 0, 8), !t.c) return t.toString();
                    if (i = t.c[0], a = t.e, null == e) u = coeffToString(t.c), u = 1 == n || 2 == n && (a <= B || a >= E) ? toExponential(u, a) : toFixedPoint(u, a, "0");
                    else if (o = (t = round(new BigNumber(t), e, r)).e, s = (u = coeffToString(t.c)).length, 1 == n || 2 == n && (e <= o || o <= B)) {
                        for (; s < e; u += "0", s++);
                        u = toExponential(u, o)
                    } else if (e -= a, u = toFixedPoint(u, o, "0"), o + 1 > s) {
                        if (--e > 0)
                            for (u += "."; e--; u += "0");
                    } else if ((e += o - s) > 0)
                        for (o + 1 == s && (u += "."); e--; u += "0");
                    return t.s < 0 && i ? "-" + u : u
                }

                function maxOrMin(t, e) {
                    for (var r, n = 1, i = new BigNumber(t[0]); n < t.length; n++) {
                        if (!(r = new BigNumber(t[n])).s) {
                            i = r;
                            break
                        }
                        e.call(i, r) && (i = r)
                    }
                    return i
                }

                function normalise(t, e, r) {
                    for (var n = 1, i = e.length; !e[--i]; e.pop());
                    for (i = e[0]; i >= 10; i /= 10, n++);
                    return (r = n + 14 * r - 1) > N ? t.c = t.e = null : r < k ? t.c = [t.e = 0] : (t.e = r, t.c = e), t
                }

                function round(t, e, r, n) {
                    var i, o, a, s, l, h, m, y = t.c,
                        b = p;
                    if (y) {
                        t: {
                            for (i = 1, s = y[0]; s >= 10; s /= 10, i++);
                            if ((o = e - i) < 0) o += 14,
                            a = e,
                            m = (l = y[h = 0]) / b[i - a - 1] % 10 | 0;
                            else if ((h = u((o + 1) / 14)) >= y.length) {
                                if (!n) break t;
                                for (; y.length <= h; y.push(0));
                                l = m = 0, i = 1, a = (o %= 14) - 14 + 1
                            } else {
                                for (l = s = y[h], i = 1; s >= 10; s /= 10, i++);
                                m = (a = (o %= 14) - 14 + i) < 0 ? 0 : l / b[i - a - 1] % 10 | 0
                            }
                            if (n = n || e < 0 || null != y[h + 1] || (a < 0 ? l : l % b[i - a - 1]), n = r < 4 ? (m || n) && (0 == r || r == (t.s < 0 ? 3 : 2)) : m > 5 || 5 == m && (4 == r || n || 6 == r && (o > 0 ? a > 0 ? l / b[i - a] : 0 : y[h - 1]) % 10 & 1 || r == (t.s < 0 ? 8 : 7)), e < 1 || !y[0]) return y.length = 0,
                            n ? (e -= t.e + 1, y[0] = b[(14 - e % 14) % 14], t.e = -e || 0) : y[0] = t.e = 0,
                            t;
                            if (0 == o ? (y.length = h, s = 1, h--) : (y.length = h + 1, s = b[14 - o], y[h] = a > 0 ? c(l / b[i - a] % b[a]) * s : 0), n)
                                for (;;) {
                                    if (0 == h) {
                                        for (o = 1, a = y[0]; a >= 10; a /= 10, o++);
                                        for (a = y[0] += s, s = 1; a >= 10; a /= 10, s++);
                                        o != s && (t.e++, y[0] == d && (y[0] = 1));
                                        break
                                    }
                                    if (y[h] += s, y[h] != d) break;
                                    y[h--] = 0, s = 1
                                }
                            for (o = y.length; 0 === y[--o]; y.pop());
                        }
                        t.e > N ? t.c = t.e = null : t.e < k && (t.c = [t.e = 0])
                    }
                    return t
                }

                function valueOf(t) {
                    var e, r = t.e;
                    return null === r ? t.toString() : (e = coeffToString(t.c), e = r <= B || r >= E ? toExponential(e, r) : toFixedPoint(e, r, "0"), t.s < 0 ? "-" + e : e)
                }
                return BigNumber.clone = clone, BigNumber.ROUND_UP = 0, BigNumber.ROUND_DOWN = 1, BigNumber.ROUND_CEIL = 2, BigNumber.ROUND_FLOOR = 3, BigNumber.ROUND_HALF_UP = 4, BigNumber.ROUND_HALF_DOWN = 5, BigNumber.ROUND_HALF_EVEN = 6, BigNumber.ROUND_HALF_CEIL = 7, BigNumber.ROUND_HALF_FLOOR = 8, BigNumber.EUCLID = 9, BigNumber.config = BigNumber.set = function (t) {
                    var e, r;
                    if (null != t) {
                        if ("object" != typeof t) throw Error(l + "Object expected: " + t);
                        if (t.hasOwnProperty(e = "DECIMAL_PLACES") && (intCheck(r = t[e], 0, m, e), A = r), t.hasOwnProperty(e = "ROUNDING_MODE") && (intCheck(r = t[e], 0, 8, e), x = r), t.hasOwnProperty(e = "EXPONENTIAL_AT") && ((r = t[e]) && r.pop ? (intCheck(r[0], -m, 0, e), intCheck(r[1], 0, m, e), B = r[0], E = r[1]) : (intCheck(r, -m, m, e), B = -(E = r < 0 ? -r : r))), t.hasOwnProperty(e = "RANGE"))
                            if ((r = t[e]) && r.pop) intCheck(r[0], -m, -1, e), intCheck(r[1], 1, m, e), k = r[0], N = r[1];
                            else {
                                if (intCheck(r, -m, m, e), !r) throw Error(l + e + " cannot be zero: " + r);
                                k = -(N = r < 0 ? -r : r)
                            } if (t.hasOwnProperty(e = "CRYPTO")) {
                            if ((r = t[e]) !== !!r) throw Error(l + e + " not true or false: " + r);
                            if (r) {
                                if ("undefined" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw T = !r, Error(l + "crypto unavailable");
                                T = r
                            } else T = r
                        }
                        if (t.hasOwnProperty(e = "MODULO_MODE") && (intCheck(r = t[e], 0, 9, e), C = r), t.hasOwnProperty(e = "POW_PRECISION") && (intCheck(r = t[e], 0, m, e), P = r), t.hasOwnProperty(e = "FORMAT")) {
                            if ("object" != typeof (r = t[e])) throw Error(l + e + " not an object: " + r);
                            I = r
                        }
                        if (t.hasOwnProperty(e = "ALPHABET")) {
                            if ("string" != typeof (r = t[e]) || /^.$|[+-.\s]|(.).*\1/.test(r)) throw Error(l + e + " invalid: " + r);
                            O = r
                        }
                    }
                    return {
                        DECIMAL_PLACES: A,
                        ROUNDING_MODE: x,
                        EXPONENTIAL_AT: [B, E],
                        RANGE: [k, N],
                        CRYPTO: T,
                        MODULO_MODE: C,
                        POW_PRECISION: P,
                        FORMAT: I,
                        ALPHABET: O
                    }
                }, BigNumber.isBigNumber = function (t) {
                    if (!t || !0 !== t._isBigNumber) return !1;
                    if (!BigNumber.DEBUG) return !0;
                    var e, r, n = t.c,
                        i = t.e,
                        o = t.s;
                    t: if ("[object Array]" == {}.toString.call(n)) {
                        if ((1 === o || -1 === o) && i >= -m && i <= m && i === c(i)) {
                            if (0 === n[0]) {
                                if (0 === i && 1 === n.length) return !0;
                                break t
                            }
                            if ((e = (i + 1) % 14) < 1 && (e += 14), String(n[0]).length == e) {
                                for (e = 0; e < n.length; e++)
                                    if ((r = n[e]) < 0 || r >= d || r !== c(r)) break t;
                                if (0 !== r) return !0
                            }
                        }
                    } else if (null === n && null === i && (null === o || 1 === o || -1 === o)) return !0;
                    throw Error(l + "Invalid BigNumber: " + t)
                }, BigNumber.maximum = BigNumber.max = function () {
                    return maxOrMin(arguments, w.lt)
                }, BigNumber.minimum = BigNumber.min = function () {
                    return maxOrMin(arguments, w.gt)
                }, BigNumber.random = (i = 9007199254740992 * Math.random() & 2097151 ? function () {
                    return c(9007199254740992 * Math.random())
                } : function () {
                    return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0)
                }, function (t) {
                    var e, r, n, o, a, s = 0,
                        h = [],
                        d = new BigNumber(M);
                    if (null == t ? t = A : intCheck(t, 0, m), o = u(t / 14), T)
                        if (crypto.getRandomValues) {
                            for (e = crypto.getRandomValues(new Uint32Array(o *= 2)); s < o;)(a = 131072 * e[s] + (e[s + 1] >>> 11)) >= 9e15 ? (r = crypto.getRandomValues(new Uint32Array(2)), e[s] = r[0], e[s + 1] = r[1]) : (h.push(a % 1e14), s += 2);
                            s = o / 2
                        } else {
                            if (!crypto.randomBytes) throw T = !1, Error(l + "crypto unavailable");
                            for (e = crypto.randomBytes(o *= 7); s < o;)(a = 281474976710656 * (31 & e[s]) + 1099511627776 * e[s + 1] + 4294967296 * e[s + 2] + 16777216 * e[s + 3] + (e[s + 4] << 16) + (e[s + 5] << 8) + e[s + 6]) >= 9e15 ? crypto.randomBytes(7).copy(e, s) : (h.push(a % 1e14), s += 7);
                            s = o / 7
                        } if (!T)
                        for (; s < o;)(a = i()) < 9e15 && (h[s++] = a % 1e14);
                    for (t %= 14, (o = h[--s]) && t && (a = p[14 - t], h[s] = c(o / a) * a); 0 === h[s]; h.pop(), s--);
                    if (s < 0) h = [n = 0];
                    else {
                        for (n = -1; 0 === h[0]; h.splice(0, 1), n -= 14);
                        for (s = 1, a = h[0]; a >= 10; a /= 10, s++);
                        s < 14 && (n -= 14 - s)
                    }
                    return d.e = n, d.c = h, d
                }), BigNumber.sum = function () {
                    for (var t = 1, e = arguments, r = new BigNumber(e[0]); t < e.length;) r = r.plus(e[t++]);
                    return r
                }, r = function () {
                    function toBaseOut(t, e, r, n) {
                        for (var i, o, a = [0], s = 0, u = t.length; s < u;) {
                            for (o = a.length; o--; a[o] *= e);
                            for (a[0] += n.indexOf(t.charAt(s++)), i = 0; i < a.length; i++) a[i] > r - 1 && (null == a[i + 1] && (a[i + 1] = 0), a[i + 1] += a[i] / r | 0, a[i] %= r)
                        }
                        return a.reverse()
                    }
                    return function (t, r, n, i, o) {
                        var a, s, u, c, l, h, d, p, m = t.indexOf("."),
                            y = A,
                            b = x;
                        for (m >= 0 && (c = P, P = 0, t = t.replace(".", ""), h = (p = new BigNumber(r)).pow(t.length - m), P = c, p.c = toBaseOut(toFixedPoint(coeffToString(h.c), h.e, "0"), 10, n, "0123456789"), p.e = p.c.length), u = c = (d = toBaseOut(t, r, n, o ? (a = O, "0123456789") : (a = "0123456789", O))).length; 0 == d[--c]; d.pop());
                        if (!d[0]) return a.charAt(0);
                        if (m < 0 ? --u : (h.c = d, h.e = u, h.s = i, d = (h = e(h, p, y, b, n)).c, l = h.r, u = h.e), m = d[s = u + y + 1], c = n / 2, l = l || s < 0 || null != d[s + 1], l = b < 4 ? (null != m || l) && (0 == b || b == (h.s < 0 ? 3 : 2)) : m > c || m == c && (4 == b || l || 6 == b && 1 & d[s - 1] || b == (h.s < 0 ? 8 : 7)), s < 1 || !d[0]) t = l ? toFixedPoint(a.charAt(1), -y, a.charAt(0)) : a.charAt(0);
                        else {
                            if (d.length = s, l)
                                for (--n; ++d[--s] > n;) d[s] = 0, s || (++u, d = [1].concat(d));
                            for (c = d.length; !d[--c];);
                            for (m = 0, t = ""; m <= c; t += a.charAt(d[m++]));
                            t = toFixedPoint(t, u, a.charAt(0))
                        }
                        return t
                    }
                }(), e = function () {
                    function multiply(t, e, r) {
                        var n, i, o, a, s = 0,
                            u = t.length,
                            c = e % 1e7,
                            l = e / 1e7 | 0;
                        for (t = t.slice(); u--;) s = ((i = c * (o = t[u] % 1e7) + (n = l * o + (a = t[u] / 1e7 | 0) * c) % 1e7 * 1e7 + s) / r | 0) + (n / 1e7 | 0) + l * a, t[u] = i % r;
                        return s && (t = [s].concat(t)), t
                    }

                    function compare(t, e, r, n) {
                        var i, o;
                        if (r != n) o = r > n ? 1 : -1;
                        else
                            for (i = o = 0; i < r; i++)
                                if (t[i] != e[i]) {
                                    o = t[i] > e[i] ? 1 : -1;
                                    break
                                } return o
                    }

                    function subtract(t, e, r, n) {
                        for (var i = 0; r--;) t[r] -= i, i = t[r] < e[r] ? 1 : 0, t[r] = i * n + t[r] - e[r];
                        for (; !t[0] && t.length > 1; t.splice(0, 1));
                    }
                    return function (t, e, r, n, i) {
                        var o, a, s, u, l, h, p, m, y, b, g, v, w, M, A, x, B, E = t.s == e.s ? 1 : -1,
                            k = t.c,
                            N = e.c;
                        if (!(k && k[0] && N && N[0])) return new BigNumber(t.s && e.s && (k ? !N || k[0] != N[0] : N) ? k && 0 == k[0] || !N ? 0 * E : E / 0 : NaN);
                        for (y = (m = new BigNumber(E)).c = [], E = r + (a = t.e - e.e) + 1, i || (i = d, a = bitFloor(t.e / 14) - bitFloor(e.e / 14), E = E / 14 | 0), s = 0; N[s] == (k[s] || 0); s++);
                        if (N[s] > (k[s] || 0) && a--, E < 0) y.push(1), u = !0;
                        else {
                            for (M = k.length, x = N.length, s = 0, E += 2, (l = c(i / (N[0] + 1))) > 1 && (N = multiply(N, l, i), k = multiply(k, l, i), x = N.length, M = k.length), w = x, g = (b = k.slice(0, x)).length; g < x; b[g++] = 0);
                            B = N.slice(), B = [0].concat(B), A = N[0], N[1] >= i / 2 && A++;
                            do {
                                if (l = 0, (o = compare(N, b, x, g)) < 0) {
                                    if (v = b[0], x != g && (v = v * i + (b[1] || 0)), (l = c(v / A)) > 1)
                                        for (l >= i && (l = i - 1), p = (h = multiply(N, l, i)).length, g = b.length; 1 == compare(h, b, p, g);) l--, subtract(h, x < p ? B : N, p, i), p = h.length, o = 1;
                                    else 0 == l && (o = l = 1), p = (h = N.slice()).length;
                                    if (p < g && (h = [0].concat(h)), subtract(b, h, g, i), g = b.length, -1 == o)
                                        for (; compare(N, b, x, g) < 1;) l++, subtract(b, x < g ? B : N, g, i), g = b.length
                                } else 0 === o && (l++, b = [0]);
                                y[s++] = l, b[0] ? b[g++] = k[w] || 0 : (b = [k[w]], g = 1)
                            } while ((w++ < M || null != b[0]) && E--);
                            u = null != b[0], y[0] || y.splice(0, 1)
                        }
                        if (i == d) {
                            for (s = 1, E = y[0]; E >= 10; E /= 10, s++);
                            round(m, r + (m.e = s + 14 * a - 1) + 1, n, u)
                        } else m.e = a, m.r = +u;
                        return m
                    }
                }(), o = /^(-?)0([xbo])(?=\w[\w.]*$)/i, y = /^([^.]+)\.$/, b = /^\.([^.]+)$/, g = /^-?(Infinity|NaN)$/, v = /^\s*\+(?=[\w.])|^\s+|\s+$/g, n = function (t, e, r, n) {
                    var i, a = r ? e : e.replace(v, "");
                    if (g.test(a)) t.s = isNaN(a) ? null : a < 0 ? -1 : 1;
                    else {
                        if (!r && (a = a.replace(o, (function (t, e, r) {
                                return i = "x" == (r = r.toLowerCase()) ? 16 : "b" == r ? 2 : 8, n && n != i ? t : e
                            })), n && (i = n, a = a.replace(y, "$1").replace(b, "0.$1")), e != a)) return new BigNumber(a, i);
                        if (BigNumber.DEBUG) throw Error(l + "Not a" + (n ? " base " + n : "") + " number: " + e);
                        t.s = null
                    }
                    t.c = t.e = null
                }, w.absoluteValue = w.abs = function () {
                    var t = new BigNumber(this);
                    return t.s < 0 && (t.s = 1), t
                }, w.comparedTo = function (t, e) {
                    return compare(this, new BigNumber(t, e))
                }, w.decimalPlaces = w.dp = function (t, e) {
                    var r, n, i, o = this;
                    if (null != t) return intCheck(t, 0, m), null == e ? e = x : intCheck(e, 0, 8), round(new BigNumber(o), t + o.e + 1, e);
                    if (!(r = o.c)) return null;
                    if (n = 14 * ((i = r.length - 1) - bitFloor(this.e / 14)), i = r[i])
                        for (; i % 10 == 0; i /= 10, n--);
                    return n < 0 && (n = 0), n
                }, w.dividedBy = w.div = function (t, r) {
                    return e(this, new BigNumber(t, r), A, x)
                }, w.dividedToIntegerBy = w.idiv = function (t, r) {
                    return e(this, new BigNumber(t, r), 0, 1)
                }, w.exponentiatedBy = w.pow = function (t, e) {
                    var r, n, i, o, a, s, h, d, p = this;
                    if ((t = new BigNumber(t)).c && !t.isInteger()) throw Error(l + "Exponent not an integer: " + valueOf(t));
                    if (null != e && (e = new BigNumber(e)), a = t.e > 14, !p.c || !p.c[0] || 1 == p.c[0] && !p.e && 1 == p.c.length || !t.c || !t.c[0]) return d = new BigNumber(Math.pow(+valueOf(p), a ? 2 - isOdd(t) : +valueOf(t))), e ? d.mod(e) : d;
                    if (s = t.s < 0, e) {
                        if (e.c ? !e.c[0] : !e.s) return new BigNumber(NaN);
                        (n = !s && p.isInteger() && e.isInteger()) && (p = p.mod(e))
                    } else {
                        if (t.e > 9 && (p.e > 0 || p.e < -1 || (0 == p.e ? p.c[0] > 1 || a && p.c[1] >= 24e7 : p.c[0] < 8e13 || a && p.c[0] <= 9999975e7))) return o = p.s < 0 && isOdd(t) ? -0 : 0, p.e > -1 && (o = 1 / o), new BigNumber(s ? 1 / o : o);
                        P && (o = u(P / 14 + 2))
                    }
                    for (a ? (r = new BigNumber(.5), s && (t.s = 1), h = isOdd(t)) : h = (i = Math.abs(+valueOf(t))) % 2, d = new BigNumber(M);;) {
                        if (h) {
                            if (!(d = d.times(p)).c) break;
                            o ? d.c.length > o && (d.c.length = o) : n && (d = d.mod(e))
                        }
                        if (i) {
                            if (0 === (i = c(i / 2))) break;
                            h = i % 2
                        } else if (round(t = t.times(r), t.e + 1, 1), t.e > 14) h = isOdd(t);
                        else {
                            if (0 === (i = +valueOf(t))) break;
                            h = i % 2
                        }
                        p = p.times(p), o ? p.c && p.c.length > o && (p.c.length = o) : n && (p = p.mod(e))
                    }
                    return n ? d : (s && (d = M.div(d)), e ? d.mod(e) : o ? round(d, P, x, void 0) : d)
                }, w.integerValue = function (t) {
                    var e = new BigNumber(this);
                    return null == t ? t = x : intCheck(t, 0, 8), round(e, e.e + 1, t)
                }, w.isEqualTo = w.eq = function (t, e) {
                    return 0 === compare(this, new BigNumber(t, e))
                }, w.isFinite = function () {
                    return !!this.c
                }, w.isGreaterThan = w.gt = function (t, e) {
                    return compare(this, new BigNumber(t, e)) > 0
                }, w.isGreaterThanOrEqualTo = w.gte = function (t, e) {
                    return 1 === (e = compare(this, new BigNumber(t, e))) || 0 === e
                }, w.isInteger = function () {
                    return !!this.c && bitFloor(this.e / 14) > this.c.length - 2
                }, w.isLessThan = w.lt = function (t, e) {
                    return compare(this, new BigNumber(t, e)) < 0
                }, w.isLessThanOrEqualTo = w.lte = function (t, e) {
                    return -1 === (e = compare(this, new BigNumber(t, e))) || 0 === e
                }, w.isNaN = function () {
                    return !this.s
                }, w.isNegative = function () {
                    return this.s < 0
                }, w.isPositive = function () {
                    return this.s > 0
                }, w.isZero = function () {
                    return !!this.c && 0 == this.c[0]
                }, w.minus = function (t, e) {
                    var r, n, i, o, a = this,
                        s = a.s;
                    if (e = (t = new BigNumber(t, e)).s, !s || !e) return new BigNumber(NaN);
                    if (s != e) return t.s = -e, a.plus(t);
                    var u = a.e / 14,
                        c = t.e / 14,
                        l = a.c,
                        h = t.c;
                    if (!u || !c) {
                        if (!l || !h) return l ? (t.s = -e, t) : new BigNumber(h ? a : NaN);
                        if (!l[0] || !h[0]) return h[0] ? (t.s = -e, t) : new BigNumber(l[0] ? a : 3 == x ? -0 : 0)
                    }
                    if (u = bitFloor(u), c = bitFloor(c), l = l.slice(), s = u - c) {
                        for ((o = s < 0) ? (s = -s, i = l) : (c = u, i = h), i.reverse(), e = s; e--; i.push(0));
                        i.reverse()
                    } else
                        for (n = (o = (s = l.length) < (e = h.length)) ? s : e, s = e = 0; e < n; e++)
                            if (l[e] != h[e]) {
                                o = l[e] < h[e];
                                break
                            } if (o && (i = l, l = h, h = i, t.s = -t.s), (e = (n = h.length) - (r = l.length)) > 0)
                        for (; e--; l[r++] = 0);
                    for (e = d - 1; n > s;) {
                        if (l[--n] < h[n]) {
                            for (r = n; r && !l[--r]; l[r] = e);
                            --l[r], l[n] += d
                        }
                        l[n] -= h[n]
                    }
                    for (; 0 == l[0]; l.splice(0, 1), --c);
                    return l[0] ? normalise(t, l, c) : (t.s = 3 == x ? -1 : 1, t.c = [t.e = 0], t)
                }, w.modulo = w.mod = function (t, r) {
                    var n, i, o = this;
                    return t = new BigNumber(t, r), !o.c || !t.s || t.c && !t.c[0] ? new BigNumber(NaN) : !t.c || o.c && !o.c[0] ? new BigNumber(o) : (9 == C ? (i = t.s, t.s = 1, n = e(o, t, 0, 3), t.s = i, n.s *= i) : n = e(o, t, 0, C), (t = o.minus(n.times(t))).c[0] || 1 != C || (t.s = o.s), t)
                }, w.multipliedBy = w.times = function (t, e) {
                    var r, n, i, o, a, s, u, c, l, h, p, m, y, b, g = this,
                        v = g.c,
                        w = (t = new BigNumber(t, e)).c;
                    if (!(v && w && v[0] && w[0])) return !g.s || !t.s || v && !v[0] && !w || w && !w[0] && !v ? t.c = t.e = t.s = null : (t.s *= g.s, v && w ? (t.c = [0], t.e = 0) : t.c = t.e = null), t;
                    for (n = bitFloor(g.e / 14) + bitFloor(t.e / 14), t.s *= g.s, (u = v.length) < (h = w.length) && (y = v, v = w, w = y, i = u, u = h, h = i), i = u + h, y = []; i--; y.push(0));
                    for (b = d, 1e7, i = h; --i >= 0;) {
                        for (r = 0, p = w[i] % 1e7, m = w[i] / 1e7 | 0, o = i + (a = u); o > i;) r = ((c = p * (c = v[--a] % 1e7) + (s = m * c + (l = v[a] / 1e7 | 0) * p) % 1e7 * 1e7 + y[o] + r) / b | 0) + (s / 1e7 | 0) + m * l, y[o--] = c % b;
                        y[o] = r
                    }
                    return r ? ++n : y.splice(0, 1), normalise(t, y, n)
                }, w.negated = function () {
                    var t = new BigNumber(this);
                    return t.s = -t.s || null, t
                }, w.plus = function (t, e) {
                    var r, n = this,
                        i = n.s;
                    if (e = (t = new BigNumber(t, e)).s, !i || !e) return new BigNumber(NaN);
                    if (i != e) return t.s = -e, n.minus(t);
                    var o = n.e / 14,
                        a = t.e / 14,
                        s = n.c,
                        u = t.c;
                    if (!o || !a) {
                        if (!s || !u) return new BigNumber(i / 0);
                        if (!s[0] || !u[0]) return u[0] ? t : new BigNumber(s[0] ? n : 0 * i)
                    }
                    if (o = bitFloor(o), a = bitFloor(a), s = s.slice(), i = o - a) {
                        for (i > 0 ? (a = o, r = u) : (i = -i, r = s), r.reverse(); i--; r.push(0));
                        r.reverse()
                    }
                    for ((i = s.length) - (e = u.length) < 0 && (r = u, u = s, s = r, e = i), i = 0; e;) i = (s[--e] = s[e] + u[e] + i) / d | 0, s[e] = d === s[e] ? 0 : s[e] % d;
                    return i && (s = [i].concat(s), ++a), normalise(t, s, a)
                }, w.precision = w.sd = function (t, e) {
                    var r, n, i, o = this;
                    if (null != t && t !== !!t) return intCheck(t, 1, m), null == e ? e = x : intCheck(e, 0, 8), round(new BigNumber(o), t, e);
                    if (!(r = o.c)) return null;
                    if (n = 14 * (i = r.length - 1) + 1, i = r[i]) {
                        for (; i % 10 == 0; i /= 10, n--);
                        for (i = r[0]; i >= 10; i /= 10, n++);
                    }
                    return t && o.e + 1 > n && (n = o.e + 1), n
                }, w.shiftedBy = function (t) {
                    return intCheck(t, -9007199254740991, 9007199254740991), this.times("1e" + t)
                }, w.squareRoot = w.sqrt = function () {
                    var t, r, n, i, o, a = this,
                        s = a.c,
                        u = a.s,
                        c = a.e,
                        l = A + 4,
                        h = new BigNumber("0.5");
                    if (1 !== u || !s || !s[0]) return new BigNumber(!u || u < 0 && (!s || s[0]) ? NaN : s ? a : 1 / 0);
                    if (0 == (u = Math.sqrt(+valueOf(a))) || u == 1 / 0 ? (((r = coeffToString(s)).length + c) % 2 == 0 && (r += "0"), u = Math.sqrt(+r), c = bitFloor((c + 1) / 2) - (c < 0 || c % 2), n = new BigNumber(r = u == 1 / 0 ? "1e" + c : (r = u.toExponential()).slice(0, r.indexOf("e") + 1) + c)) : n = new BigNumber(u + ""), n.c[0])
                        for ((u = (c = n.e) + l) < 3 && (u = 0);;)
                            if (o = n, n = h.times(o.plus(e(a, o, l, 1))), coeffToString(o.c).slice(0, u) === (r = coeffToString(n.c)).slice(0, u)) {
                                if (n.e < c && --u, "9999" != (r = r.slice(u - 3, u + 1)) && (i || "4999" != r)) {
                                    +r && (+r.slice(1) || "5" != r.charAt(0)) || (round(n, n.e + A + 2, 1), t = !n.times(n).eq(a));
                                    break
                                }
                                if (!i && (round(o, o.e + A + 2, 0), o.times(o).eq(a))) {
                                    n = o;
                                    break
                                }
                                l += 4, u += 4, i = 1
                            } return round(n, n.e + A + 1, x, t)
                }, w.toExponential = function (t, e) {
                    return null != t && (intCheck(t, 0, m), t++), format(this, t, e, 1)
                }, w.toFixed = function (t, e) {
                    return null != t && (intCheck(t, 0, m), t = t + this.e + 1), format(this, t, e)
                }, w.toFormat = function (t, e, r) {
                    var n, i = this;
                    if (null == r) null != t && e && "object" == typeof e ? (r = e, e = null) : t && "object" == typeof t ? (r = t, t = e = null) : r = I;
                    else if ("object" != typeof r) throw Error(l + "Argument not an object: " + r);
                    if (n = i.toFixed(t, e), i.c) {
                        var o, a = n.split("."),
                            s = +r.groupSize,
                            u = +r.secondaryGroupSize,
                            c = r.groupSeparator || "",
                            h = a[0],
                            d = a[1],
                            p = i.s < 0,
                            m = p ? h.slice(1) : h,
                            y = m.length;
                        if (u && (o = s, s = u, u = o, y -= o), s > 0 && y > 0) {
                            for (o = y % s || s, h = m.substr(0, o); o < y; o += s) h += c + m.substr(o, s);
                            u > 0 && (h += c + m.slice(o)), p && (h = "-" + h)
                        }
                        n = d ? h + (r.decimalSeparator || "") + ((u = +r.fractionGroupSize) ? d.replace(new RegExp("\\d{" + u + "}\\B", "g"), "$&" + (r.fractionGroupSeparator || "")) : d) : h
                    }
                    return (r.prefix || "") + n + (r.suffix || "")
                }, w.toFraction = function (t) {
                    var r, n, i, o, a, s, u, c, h, d, m, y, b = this,
                        g = b.c;
                    if (null != t && (!(u = new BigNumber(t)).isInteger() && (u.c || 1 !== u.s) || u.lt(M))) throw Error(l + "Argument " + (u.isInteger() ? "out of range: " : "not an integer: ") + valueOf(u));
                    if (!g) return new BigNumber(b);
                    for (r = new BigNumber(M), h = n = new BigNumber(M), i = c = new BigNumber(M), y = coeffToString(g), a = r.e = y.length - b.e - 1, r.c[0] = p[(s = a % 14) < 0 ? 14 + s : s], t = !t || u.comparedTo(r) > 0 ? a > 0 ? r : h : u, s = N, N = 1 / 0, u = new BigNumber(y), c.c[0] = 0; d = e(u, r, 0, 1), 1 != (o = n.plus(d.times(i))).comparedTo(t);) n = i, i = o, h = c.plus(d.times(o = h)), c = o, r = u.minus(d.times(o = r)), u = o;
                    return o = e(t.minus(n), i, 0, 1), c = c.plus(o.times(h)), n = n.plus(o.times(i)), c.s = h.s = b.s, m = e(h, i, a *= 2, x).minus(b).abs().comparedTo(e(c, n, a, x).minus(b).abs()) < 1 ? [h, i] : [c, n], N = s, m
                }, w.toNumber = function () {
                    return +valueOf(this)
                }, w.toPrecision = function (t, e) {
                    return null != t && intCheck(t, 1, m), format(this, t, e, 2)
                }, w.toString = function (t) {
                    var e, n = this,
                        i = n.s,
                        o = n.e;
                    return null === o ? i ? (e = "Infinity", i < 0 && (e = "-" + e)) : e = "NaN" : (null == t ? e = o <= B || o >= E ? toExponential(coeffToString(n.c), o) : toFixedPoint(coeffToString(n.c), o, "0") : 10 === t ? e = toFixedPoint(coeffToString((n = round(new BigNumber(n), A + o + 1, x)).c), n.e, "0") : (intCheck(t, 2, O.length, "Base"), e = r(toFixedPoint(coeffToString(n.c), o, "0"), 10, t, i, !0)), i < 0 && n.c[0] && (e = "-" + e)), e
                }, w.valueOf = w.toJSON = function () {
                    return valueOf(this)
                }, w._isBigNumber = !0, s && (w[Symbol.toStringTag] = "BigNumber", w[Symbol.for("nodejs.util.inspect.custom")] = w.valueOf), null != t && BigNumber.set(t), BigNumber
            }()).default = o.BigNumber = o, void 0 === (n = function () {
                return o
            }.call(e, r, e, t)) || (t.exports = n)
        }()
    }, function (t) {
        t.exports = JSON.parse('{"AAVE":"0x00ED8CcEF5351aF14aa6214e6153c39a5e1d1528","BAL":"0xe543f18a82bCEEEA6e0B19C15196582483b76a6d","BAT":"0x6B09a5b5Dc17eaa7D0B65bA898F58005A70736B5","CDP_MANAGER":"0x17c7D82597A3a07AEd1FDF1db560B7502AeB3ADf","CLIPPER_MOM":"0xaAE899cFDf60585F361135A55c954a3D52800533","COMP":"0x1Ed553FF89645FCDd55409Ae02462f1239f92511","DEPLOYER":"0x16Fb96a5fa0427Af0C8F7cF1eB4870231c8154B6","DGD":"0x6C0604d4b3EBB76DBA48cC0B5a54Bd0f260d962c","DSR_MANAGER":"0x23b8aD8B5B26351fD2C304aE23c8679Da03B9155","ETH":"0x7ba25F791FA76C3ef40AC98ed42634a8bC24c238","FAUCET":"0x50289fDAf1C8FE16E14fc28642a77C1A70943245","FLIPPER_MOM":"0x39028A393b3195262E54aA17928fa46f3FcCE58c","GET_CDPS":"0x70465b57f4948198330DF49e80cB0b7b4A8563e9","GNT":"0xdf3B1A36FF07CCCf5E61a60690Fc0170e238f499","GUSD":"0xBE0fe36494219EE23e42BFaaE77A5b48cF8c6E1C","ILK_REGISTRY":"0x14f7e74A26a0e6791523451d85129babf01cFd44","KNC":"0x061a2B2662AC2C1AAfe9b39Fc6e4c6730e01bE5E","LINK":"0x391e0c5B8bc5e2b7ABC12d330523C1D3e3F86ECE","LRC":"0x28DD44319c5a159f06AB5C5EE781760ee3200848","MANA":"0xe8F0f6067FA52572d6631517e9050C46769bEBf3","MCD_ADM":"0xAe2f82b48f2C12bA5532879C4A718f8aAbF2f8E6","MCD_CAT":"0xc1F5856c066cfdD59D405DfCf1e77F667537bc99","MCD_CLIP_CALC_ETH_B":"0xb782CEe543F1a9A0724F32731f53DcdD198C2695","MCD_CLIP_CALC_ETH_C":"0x0E8D43bd507798476c1053165F9C061F1E000A09","MCD_CLIP_CALC_LINK_A":"0x79E6093AC9894936D2F61A29Bd2fFff44A71C047","MCD_CLIP_CALC_YFI_A":"0x0380BeA5D02A686aa19C1A6b940FC2D0EEA14351","MCD_CLIP_ETH_B":"0x31880D3A1E5cbF402b6F9840e7aDC6E7962b771B","MCD_CLIP_ETH_C":"0x2aF0c08B3dBB9D81A1D9eBea320Fd2f48f54c5D1","MCD_CLIP_LINK_A":"0xA15f6Fd90F2696e2B1BFdEB7F64A509718CA0dB9","MCD_CLIP_YFI_A":"0x79Cd1ED9D1df3a84e0f5C2261Ce73c588277892e","MCD_DAI":"0xe53793CA0F1a3991D6bfBc5929f89A9eDe65da44","MCD_DEPLOY":"0xEc93D8Ea996Da9Ffe359778F3DaE6134DF0de016","MCD_DOG":"0x970b3b28EBD466f2eC181630D4c3C93DfE280448","MCD_END":"0x4A504460C1ea6c1945D07619B546e4629fd2A5dB","MCD_ESM":"0xBFD5ccf89494B6A4A98c525f4E97f57C44f32CEB","MCD_FLAP":"0xBfd57220780aB21112008C2296C09B3a10d7E2ad","MCD_FLASH":"0x5bEE1570475945c67499251D974f7aef2455a112","MCD_FLIP_AAVE_A":"0xA99454a0B81aA2575D88508D01A017cdf448aF38","MCD_FLIP_BAL_A":"0x48C6Dc5C6709272A3044E7f710FbCe29aA642e25","MCD_FLIP_BAT_A":"0x9c0ff10dB728ebf5DA896DEDC782bA58F9dF3D57","MCD_FLIP_COMP_A":"0xCFea08DcA81ac1c528DE5Ef950C9EF8f5Ed5a96B","MCD_FLIP_DGD_A":"0x8bb51BBc9A7d5041029CB2300b6d7894351315dE","MCD_FLIP_ETH_A":"0xA7fD71f86a79B9595Bc74dB12226E7298097581B","MCD_FLIP_GNT_A":"0x0B164D1b88Dd89a22B463238D7f91210B5FA6745","MCD_FLIP_GUSD_A":"0xb9b3A6a8Ef7eea66b5eC8f65bf77855F2028AF41","MCD_FLIP_KNC_A":"0xDfd8aF1CE06Af665c1C5Ec6cb99F81C951b476a9","MCD_FLIP_LRC_A":"0xc162fedaC22ACea1AEDb1FfCd3f728dE8C346948","MCD_FLIP_MANA_A":"0x14ddb2fec281E19849318f3ce2a51FdE0139C1f1","MCD_FLIP_OMG_A":"0xc84b50Ea1cB3f964eFE51961140057f7E69b09c1","MCD_FLIP_PAXUSD_A":"0x609149777E830169f43F773f478e16DB0207B6eC","MCD_FLIP_RENBTC_A":"0x1bb4Fd4e72201b37Fa1f705B0A6E2b562b7ab64e","MCD_FLIP_REP_A":"0x76DECA04eA3bd6bCF2F7220aa849CC80ab1A4eef","MCD_FLIP_TUSD_A":"0x39ac8af65D275193538af30Bfe137744A613430a","MCD_FLIP_UNI_A":"0x36EED8eBB359e7019be02F183A8313a1385CE872","MCD_FLIP_USDC_A":"0x77b9cd0d79DF8dA228685bc6502042E46E67Ee59","MCD_FLIP_USDC_B":"0x8e32119f52c6c5c2e4Da5dB8700e1b8C49D10273","MCD_FLIP_USDT_A":"0x2Fbe303a869F3868E84AA67e2Df6823a802A0944","MCD_FLIP_WBTC_A":"0x4f36410DD60A7190bD4763b0F0462Addb8A78F50","MCD_FLIP_ZRX_A":"0x51E48Bcd93785271e3c5611f6ab15810bf293218","MCD_FLOP":"0xbacD4966540aAF7223CC9DC39a3ea1E4322Aba78","MCD_GOV":"0x1c3ac7216250eDC5B9DaA5598DA0579688b9dbD5","MCD_GOV_ACTIONS":"0x639146631B329Dd28f71e0a9E5bC1b080943a3D4","MCD_IAM_AUTO_LINE":"0x191c015d683F3c5A2f70234b3780863fb200FB69","MCD_IOU":"0x9fb9B0CCb0b6bcA8ff7667c1c1733F4469e27Af1","MCD_JOIN_AAVE_A":"0x20EB41099150cF92A0576409520b72a0AD870c75","MCD_JOIN_BAL_A":"0xbCaf9D36e65DfB2f098986D7e35420539EDe50E4","MCD_JOIN_BAT_A":"0xdB8848ea69cCE3f7f41949D274899641e558cDf4","MCD_JOIN_COMP_A":"0xDBb349cbFB22540B90995298CE3909Dd4Fa2C75d","MCD_JOIN_DAI":"0xd34835EaE60dA418abfc538B7b55332fC5F10340","MCD_JOIN_DGD_A":"0xd324BC539B85e6DFe08005c4D261d0ff22b0A34C","MCD_JOIN_ETH_A":"0x1fD87e7ddF2A2f22ac5fb8F617A44214f17B883c","MCD_JOIN_ETH_B":"0x4aF6E9FA188161FD283DC8d51619615d00ef3F01","MCD_JOIN_ETH_C":"0xA5DD0E5906fAc83862581C5DCA85CF926ABFa09b","MCD_JOIN_GNT_A":"0xfEB7149A008b52581F31717Fad5C5A23ea28cAE4","MCD_JOIN_GUSD_A":"0x2006CAA6901322b195e27aC007d2de1C09B7f19E","MCD_JOIN_KNC_A":"0x15ed0b56FC19773832011Da89118c3dd41072091","MCD_JOIN_LINK_A":"0x453085B32e086994492706b8222fee21E8A098A3","MCD_JOIN_LRC_A":"0xa26B57185e56375dd20225aDcEbd00d7e82681e4","MCD_JOIN_MANA_A":"0x6261bc3816Fa6A15dAcC68ff06baB082905f06bC","MCD_JOIN_OMG_A":"0x7581e647b7b5d522B198EF44F51E1121b3D837B0","MCD_JOIN_PAXUSD_A":"0xe1131FBFF225FfC0ebdc4233852fdC415e4d2B6b","MCD_JOIN_RENBTC_A":"0x12F30DFCdCB82B7AAE11513fFcc290EbbdF97124","MCD_JOIN_REP_A":"0xcf4a441593Fbf1Bf56960674C5a3a18049C7bbe2","MCD_JOIN_TUSD_A":"0x8A74211B5fC144A846fD1daA4dC8ABbB6268E18f","MCD_JOIN_UNI_A":"0x5d2132779D43A0B64F1f3e824B8A3163438358e8","MCD_JOIN_USDC_A":"0xE425CA42d0CB22D0D82366f6B811d559cff437B4","MCD_JOIN_USDC_B":"0x883c76966eA1D1AFEC54a1c20f84A57a287BB021","MCD_JOIN_USDT_A":"0x493226477349795d74E106Eed6a2B6a5D437Edab","MCD_JOIN_WBTC_A":"0xE6666822E10D3c5c33726Ea732506AaA50Ea0C88","MCD_JOIN_YFI_A":"0x698E14422A7739D268644b2794C1A9e49Ef3960B","MCD_JOIN_ZRX_A":"0x2B0B998110C0038336a8d5609c4E3A0AC35Af0f4","MCD_JUG":"0xd6D7C74729bB83c35138E54b8d5530ea96920c92","MCD_PAUSE":"0x6A309d0a82643cf531f6f7c2B21033D2AE7d016C","MCD_PAUSE_PROXY":"0x3C55dc3113a0a67Ee240e5149c35399d6BeC9E39","MCD_POT":"0x3F35940dD9f42F7560fa08F506c81d99fed870a7","MCD_SPOT":"0xb379BdC949F09e0E1c866785D1896B763E1387b0","MCD_VAT":"0x6D6e3B9B602a0a37c820F2383A1DD0EC02B5196d","MCD_VOW":"0xa64D95634d839445283f71137f9CeD3f1405aad5","MULTICALL":"0x5AE5677589cf9992290918CcD1828dcBD73D842c","OMG":"0x6efDF221190D139DD29bdbC0aB984165C6cC6C4b","OSM_MOM":"0x5e5baAcFFefa9958B64894141bE27d8f2a9B92e6","PAXUSD":"0x299051753C11BD80668f515405EF502d98F35588","PIP_AAVE":"0x302DBc5F544f6Fe18f1CfF1bb5e971ba13236F4F","PIP_BAL":"0xc3e27cDDbb7A06f40Ded620a67dB858643da39C2","PIP_BAT":"0xdD35201726c511474e7E1EE426B5C78B014AddCc","PIP_COMP":"0xEd9521Ba67e5961401073C8F57A10396B9296Ff2","PIP_DGD":"0xb564f1dC7D220f8E20de45547de71620543c0053","PIP_ETH":"0x2d3AdFCa1e6aD360A138cBCF2F286f70a5Ff614A","PIP_GNT":"0x9783d28387f5097d72397388d98c52Ca9b18dec8","PIP_GUSD":"0x629cA18b145A870eFb230CF89aA626a4B2D3b228","PIP_KNC":"0x5e73B1F57f673EC875C1624D7C13F06Ef8259b23","PIP_LINK":"0x161AD3D1336814B895995D5EE8F1510ec3ccEA8C","PIP_LRC":"0x519a23560835856af262d7d829e1b9d89784DaA7","PIP_MANA":"0x7294588Da9cA5494fa6861A10B1Cc26096dC3b11","PIP_OMG":"0xE0d81d47aC1e791dd2559013cf1fF005e619d733","PIP_PAXUSD":"0xB5e8D7CcF287cF4adaBF00c8529e81cd416b9fa7","PIP_RENBTC":"0xB3CcF0B63055312b73530D1D0810c862A0690e95","PIP_REP":"0x80f178c7b47cb635Ceb12aBB891338744e98365C","PIP_TUSD":"0x870Cc2aFa004e22a49CAEa7392CC3bCD2ca96A3A","PIP_UNI":"0xF6bbB12EEE8B45214B2c8A8F9487982a35b7Ae81","PIP_USDC":"0xA70B7c2a55a76f89b64b4b15381FfF87279dD3d7","PIP_USDT":"0xc6c39b56d3dafcb213b4344D54e70E232b10ca48","PIP_WBTC":"0x298E3eb3C76938DA922EF01b99c87dF156985701","PIP_YFI":"0x174666d4101f6294EBa19D0846Ec85176D28F2e6","PIP_ZRX":"0xbD4d6688B679F27Bf6829922A4AE4E43D29153E4","PROXY_ACTIONS":"0x04De75eD338D41D2E901bf703179D1049883aF5b","PROXY_ACTIONS_DSR":"0x55a191069a8ACE1589c9d44E8dbB6D1051C76e20","PROXY_ACTIONS_END":"0xd97fd1B5867cC71AfA32A0c36d38102241856Cde","PROXY_DEPLOYER":"0xf0beDfD610eE7A7e3347551Fff56E1173B726807","PROXY_FACTORY":"0x3ea503Fb236e6eE3B4d48b6Bd96Ba5F7Cf68AF94","PROXY_PAUSE_ACTIONS":"0xF5303EF974273A97bA92436E39C304618Ffaa5c0","PROXY_REGISTRY":"0x72b59ACcB5a9a9e47296fbeF741bF2Bc82FFDE62","RENBTC":"0x787b559e0A2BE9F1FCfa7824eCE7dC315f2fAF57","REP":"0x2bB387C549c61E7fCe9DDcC9ca19980D696643a4","TUSD":"0xd7e93C4B43A55fe3DbEBe4c89991769d01c3E76d","UNI":"0xb6350CdB0eE579357589B72b38110BB306F34Fa9","USDC":"0x5E6085775Cd0B41fC70d1A6B48a0451bf7aCa801","USDT":"0x537d6F0138da9FdAF5aeF1Df9E8AC8d0D73005d6","VAL_AAVE":"0x302DBc5F544f6Fe18f1CfF1bb5e971ba13236F4F","VAL_BAL":"0xc3e27cDDbb7A06f40Ded620a67dB858643da39C2","VAL_BAT":"0xdD35201726c511474e7E1EE426B5C78B014AddCc","VAL_COMP":"0xEd9521Ba67e5961401073C8F57A10396B9296Ff2","VAL_DGD":"0xb564f1dC7D220f8E20de45547de71620543c0053","VAL_ETH":"0x2d3AdFCa1e6aD360A138cBCF2F286f70a5Ff614A","VAL_GNT":"0x9783d28387f5097d72397388d98c52Ca9b18dec8","VAL_GUSD":"0x629cA18b145A870eFb230CF89aA626a4B2D3b228","VAL_KNC":"0x5e73B1F57f673EC875C1624D7C13F06Ef8259b23","VAL_LINK":"0x161AD3D1336814B895995D5EE8F1510ec3ccEA8C","VAL_LRC":"0x519a23560835856af262d7d829e1b9d89784DaA7","VAL_MANA":"0x7294588Da9cA5494fa6861A10B1Cc26096dC3b11","VAL_OMG":"0xE0d81d47aC1e791dd2559013cf1fF005e619d733","VAL_PAXUSD":"0xB5e8D7CcF287cF4adaBF00c8529e81cd416b9fa7","VAL_RENBTC":"0xB3CcF0B63055312b73530D1D0810c862A0690e95","VAL_REP":"0x80f178c7b47cb635Ceb12aBB891338744e98365C","VAL_TUSD":"0x870Cc2aFa004e22a49CAEa7392CC3bCD2ca96A3A","VAL_UNI":"0xF6bbB12EEE8B45214B2c8A8F9487982a35b7Ae81","VAL_USDC":"0xA70B7c2a55a76f89b64b4b15381FfF87279dD3d7","VAL_USDT":"0xc6c39b56d3dafcb213b4344D54e70E232b10ca48","VAL_WBTC":"0x298E3eb3C76938DA922EF01b99c87dF156985701","VAL_YFI":"0x174666d4101f6294EBa19D0846Ec85176D28F2e6","VAL_ZRX":"0xbD4d6688B679F27Bf6829922A4AE4E43D29153E4","VOTE_DELEGATE_FACTORY":"0xe95949a8C0373933dfd7110a66705eb7507Cc5Fd","VOTE_PROXY_FACTORY":"0x45204Df60612c9047Ba1cc483a957290De72180f","WBTC":"0x9dFCC19cc49f9961020a152629Db481F12b6b4Ba","YFI":"0x00727147Df379B69BB7bbf84C8c95e4eaf3e2c96","ZRX":"0x2978B18F7c68B2957e701FC6D82C8De5B55833f2","MIGRATION":"0x2978B18F7c68B2957e701FC6D82C8De5B55833f2","MCD_JOIN_SAI":"0x565e5E6d6C43Aff09A5b3C2b33d710d9c2c63e06","SAI":"0xC226F3CD13d508bc319F4f4290172748199d6612","OLD_MCD_CAT":"0x2125C30dA5DcA0819aEC5e4cdbF58Bfe91918e43","UNIV2DAIETH":"0xC226F3CD13d508bc319F4f4290172748199d6612","PIP_UNIV2DAIETH":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_JOIN_UNIV2DAIETH_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_FLIP_UNIV2DAIETH_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","UNIV2WBTCETH":"0xC226F3CD13d508bc319F4f4290172748199d6612","PIP_UNIV2WBTCETH":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_JOIN_UNIV2WBTCETH_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_FLIP_UNIV2WBTCETH_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","UNIV2USDCETH":"0xC226F3CD13d508bc319F4f4290172748199d6612","PIP_UNIV2USDCETH":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_JOIN_UNIV2USDCETH_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_FLIP_UNIV2USDCETH_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","UNIV2DAIUSDC":"0xC226F3CD13d508bc319F4f4290172748199d6612","PIP_UNIV2DAIUSDC":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_JOIN_UNIV2DAIUSDC_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_FLIP_UNIV2DAIUSDC_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","UNIV2ETHUSDT":"0xC226F3CD13d508bc319F4f4290172748199d6612","PIP_UNIV2ETHUSDT":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_JOIN_UNIV2ETHUSDT_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_FLIP_UNIV2ETHUSDT_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","UNIV2LINKETH":"0xC226F3CD13d508bc319F4f4290172748199d6612","PIP_UNIV2LINKETH":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_JOIN_UNIV2LINKETH_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_FLIP_UNIV2LINKETH_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","UNIV2UNIETH":"0xC226F3CD13d508bc319F4f4290172748199d6612","PIP_UNIV2UNIETH":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_JOIN_UNIV2UNIETH_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_FLIP_UNIV2UNIETH_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","UNIV2WBTCDAI":"0xC226F3CD13d508bc319F4f4290172748199d6612","PIP_UNIV2WBTCDAI":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_JOIN_UNIV2WBTCDAI_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_FLIP_UNIV2WBTCDAI_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","UNIV2AAVEETH":"0xC226F3CD13d508bc319F4f4290172748199d6612","PIP_UNIV2AAVEETH":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_JOIN_UNIV2AAVEETH_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_FLIP_UNIV2AAVEETH_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","UNIV2DAIUSDT":"0xC226F3CD13d508bc319F4f4290172748199d6612","PIP_UNIV2DAIUSDT":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_JOIN_UNIV2DAIUSDT_A":"0xC226F3CD13d508bc319F4f4290172748199d6612","MCD_FLIP_UNIV2DAIUSDT_A":"0xC226F3CD13d508bc319F4f4290172748199d6612"}')
    }, function (t) {
        t.exports = JSON.parse('{"DEPLOYER":"0xdB33dFD3D61308C33C63209845DaD3e6bfb2c674","MULTICALL":"0xC6D81A2e375Eee15a20E6464b51c5FC6Bb949fdA","FAUCET":"0x57aAeAE905376a4B1899bA81364b4cE2519CBfB3","MCD_DEPLOY":"0x13141b8a5E4A82Ebc6b636849dd6A515185d6236","MCD_GOV":"0xAaF64BFCC32d0F15873a02163e7E500671a4ffcD","GOV_GUARD":"0xE50303C6B67a2d869684EFb09a62F6aaDD06387B","MCD_ADM":"0x27E0c9567729Ea6e3241DE74B3dE499b7ddd3fe6","MCD_VAT":"0xbA987bDB501d131f766fEe8180Da5d81b34b69d9","MCD_JUG":"0xcbB7718c9F39d05aEEDE1c472ca8Bf804b2f1EaD","MCD_DOG":"0x121D0953683F74e9a338D40d9b4659C0EBb539a0","MCD_ESM_BUG":"0x0798603b8AE1f76D2823aDbc2E15d047Eac1Efd7","MCD_ESM_ATTACK":"0x23Aa7cbeb266413f968D284acce3a3f9EEFFC2Ec","ILK_REGISTRY":"0xB3fBb13b831F254DbBB9a1abdb81d8D91589B3B4","CLIPPER_MOM":"0x96E9a19Be6EA91d1C0908e5E207f944dc2E7B878","MCD_CLIP_LINK_A":"0x1eB71cC879960606F8ab0E02b3668EEf92CE6D98","MCD_CLIP_CALC_LINK_A":"0xbd586d6352Fcf0C45f77FC9348F4Ee7539F6e2bD","MCD_CAT":"0xdDb5F7A3A5558b9a6a1f3382BD75E2268d1c6958","OLD_MCD_CAT":"0x0511674A67192FE51e86fE55Ed660eB4f995BDd6","MCD_VOW":"0x0F4Cbe6CBA918b7488C26E29d9ECd7368F38EA3b","MCD_JOIN_DAI":"0x5AA71a3ae1C0bd6ac27A1f28e1415fFFB6F15B8c","MCD_FLAP":"0x064cd5f762851b1af81Fd8fcA837227cb3eC84b4","MCD_FLOP":"0x145B00b1AC4F01E84594EFa2972Fce1f5Beb5CED","MCD_PAUSE":"0x8754E6ecb4fe68DaA5132c2886aB39297a5c7189","MCD_PAUSE_PROXY":"0x0e4725db88Bb038bBa4C4723e91Ba183BE11eDf3","MCD_GOV_ACTIONS":"0x0Ca17E81073669741714354f16D800af64e95C75","MCD_DAI":"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa","MCD_SPOT":"0x3a042de6413eDB15F2784f2f97cC68C7E9750b2D","MCD_POT":"0xEA190DBDC7adF265260ec4dA6e9675Fd4f5A78bb","MCD_END":"0x3d9603037FF096af03B83725dFdB1CDA9EA02CE4","MCD_ESM":"0xD5D728446275B0A12E4a4038527974b92353B4a9","PROXY_ACTIONS":"0xd1D24637b9109B7f61459176EdcfF9Be56283a7B","PROXY_ACTIONS_END":"0x7c3f28f174F2b0539C202a5307Ff48efa61De982","PROXY_ACTIONS_DSR":"0xc5CC1Dfb64A62B9C7Bb6Cbf53C2A579E2856bf92","CDP_MANAGER":"0x1476483dD8C35F25e568113C5f70249D3976ba21","GET_CDPS":"0x592301a23d37c591C5856f28726AF820AF8e7014","OSM_MOM":"0x5dA9D1C3d4f1197E5c52Ff963916Fe84D2F5d8f3","FLIPPER_MOM":"0xf3828caDb05E5F22844f6f9314D99516D68a0C84","PROXY_FACTORY":"0xe11E3b391F7E8bC47247866aF32AF67Dd58Dc800","PROXY_REGISTRY":"0x64A436ae831C1672AE81F674CAb8B6775df3475C","PROXY_PAUSE_ACTIONS":"0x7c52826c1efEAE3199BDBe68e3916CC3eA222E29","PROXY_DEPLOYER":"0xA9fCcB07DD3f774d5b9d02e99DE1a27f47F91189","MIGRATION":"0x411B2Faa662C8e3E5cF8f01dFdae0aeE482ca7b0","MIGRATION_PROXY_ACTIONS":"0xF56765d255463139d3aff1613705a5520764Ab93","ETH":"0xd0A1E359811322d97991E03f863a0C30C2cF029C","PIP_ETH":"0x75dD74e8afE8110C8320eD397CcCff3B8134d981","MCD_JOIN_ETH_A":"0x775787933e92b709f2a3C70aa87999696e74A9F8","MCD_FLIP_ETH_A":"0xB40139Ea36D35d0C9F6a2e62601B616F1FfbBD1b","MCD_JOIN_ETH_B":"0xd19A770F00F89e6Dd1F12E6D6E6839b95C084D85","MCD_FLIP_ETH_B":"0x360e15d419c14f6060c88Ac0741323C37fBfDa2D","MCD_JOIN_ETH_C":"0xD166b57355BaCE25e5dEa5995009E68584f60767","MCD_FLIP_ETH_C":"0x6EB1922EbfC357bAe88B4aa5aB377A8C4DFfB4e9","BAT":"0x9f8cFB61D3B2aF62864408DD703F9C3BEB55dff7","PIP_BAT":"0x5C40C9Eb35c76069fA4C3A00EA59fAc6fFA9c113","MCD_JOIN_BAT_A":"0x2a4C485B1B8dFb46acCfbeCaF75b6188A59dBd0a","MCD_FLIP_BAT_A":"0xC94014A032cA5fCc01271F4519Add7E87a16b94C","USDC":"0xBD84be3C303f6821ab297b840a99Bd0d4c4da6b5","PIP_USDC":"0x4c51c2584309b7BF328F89609FDd03B3b95fC677","MCD_JOIN_USDC_A":"0x4c514656E7dB7B859E994322D2b511d99105C1Eb","MCD_FLIP_USDC_A":"0x45d5b4A304f554262539cfd167dd05e331Da686E","MCD_JOIN_USDC_B":"0xaca10483e7248453BB6C5afc3e403e8b7EeDF314","MCD_FLIP_USDC_B":"0x93AE217b0C6bF52E9FFea6Ab191cCD438d9EC0de","WBTC":"0x7419f744bBF35956020C1687fF68911cD777f865","PIP_WBTC":"0x2f38a1bD385A9B395D01f2Cbf767b4527663edDB","MCD_JOIN_WBTC_A":"0xB879c7d51439F8e7AC6b2f82583746A0d336e63F","MCD_FLIP_WBTC_A":"0xc45A1b76D3316D56a0225fB02Ab6b7637403fF67","TUSD":"0xD6CE59F06Ff2070Dd5DcAd0866A7D8cd9270041a","PIP_TUSD":"0xE4bAECdba7A8Ff791E14c6BF7e8089Dfdf75C7E7","MCD_JOIN_TUSD_A":"0xe53f6755A031708c87d80f5B1B43c43892551c17","MCD_FLIP_TUSD_A":"0x51a8fB578E830c932A2D49927584C643Ad08d9eC","SAI":"0xC4375B7De8af5a38a93548eb8453a498222C4fF2","MCD_JOIN_SAI":"0x2d2672D655C95016e19909174d1fC72A6DE7D381","MCD_FLIP_SAI":"0x2F68D2A62ffeBF9Cf09b3908C6D423109b77254A","ZRX":"0xC2C08A566aD44129E69f8FC98684EAA28B01a6e7","PIP_ZRX":"0x218037a42947E634191A231fcBAEAE8b16a39b3f","MCD_JOIN_ZRX_A":"0x85D38fF6a6FCf98bD034FB5F9D72cF15e38543f2","MCD_FLIP_ZRX_A":"0x1341E0947D03Fd2C24e16aaEDC347bf9D9af002F","KNC":"0x9800a0a3c7e9682e1AEb7CAA3200854eFD4E9327","PIP_KNC":"0x10799280EF9d7e2d037614F5165eFF2cB8522651","MCD_JOIN_KNC_A":"0xE42427325A0e4c8e194692FfbcACD92C2C381598","MCD_FLIP_KNC_A":"0xf14Ec3538C86A31bBf576979783a8F6dbF16d571","MANA":"0x221F4D62636b7B51b99e36444ea47Dc7831c2B2f","PIP_MANA":"0xE97D2b077Fe19c80929718d377981d9F754BF36e","MCD_JOIN_MANA_A":"0xdC9Fe394B27525e0D9C827EE356303b49F607aaF","MCD_FLIP_MANA_A":"0x5CB9D33A9fE5244019e6F5f45e68F18600805264","PAXUSD":"0xa6383AF46c36219a472b9549d70E4768dfA8894c","PIP_PAXUSD":"0xD01fefed46eb21cd057bAa14Ff466842C31a0Cd9","MCD_JOIN_PAXUSD_A":"0x3d6a14C9542B429a4e3d255F6687754d4898D897","MCD_FLIP_PAXUSD_A":"0x88001b9C8192cbf43e14323B809Ae6C4e815E12E","USDT":"0x9245BD36FA20fcD292F4765c4b5dF83Dc3fD5e86","PIP_USDT":"0x3588A7973D41AaeA7B203549553C991C4311951e","MCD_JOIN_USDT_A":"0x9B011a74a690dFd9a1e4996168d3EcBDE73c2226","MCD_FLIP_USDT_A":"0x113733e00804e61D5fd8b107Ca11b4569B6DA95D","LRC":"0xF070662e48843934b5415f150a18C250d4D7B8aB","PIP_LRC":"0xcEE47Bb8989f625b5005bC8b9f9A0B0892339721","MCD_JOIN_LRC_A":"0x436286788C5dB198d632F14A20890b0C4D236800","MCD_FLIP_LRC_A":"0xfC9496337538235669F4a19781234122c9455897","LINK":"0xa36085F69e2889c224210F603D836748e7dC0088","PIP_LINK":"0x20D5A457e49D05fac9729983d9701E0C3079Efac","MCD_JOIN_LINK_A":"0xF4Df626aE4fb446e2Dcce461338dEA54d2b9e09b","MCD_FLIP_LINK_A":"0xfbDCDF5Bd98f68cEfc3f37829189b97B602eCFF2","COMP":"0x1dDe24ACE93F9F638Bfd6fCE1B38b842703Ea1Aa","PIP_COMP":"0xcc10b1C53f4BFFEE19d0Ad00C40D7E36a454D5c4","MCD_JOIN_COMP_A":"0x16D567c1F6824ffFC460A11d48F61E010ae43766","MCD_FLIP_COMP_A":"0x2917a962BC45ED48497de85821bddD065794DF6C","YFI":"0x251F1c3077FEd1770cB248fB897100aaE1269FFC","PIP_YFI":"0x9D8255dc4e25bB85e49c65B21D8e749F2293862a","MCD_JOIN_YFI_A":"0x5b683137481F2FE683E2f2385792B1DeB018050F","MCD_FLIP_YFI_A":"0x5eB5D3B028CD255d79019f7C44a502b31bFFde9d","BAL":"0x630D82Cbf82089B09F71f8d3aAaff2EBA6f47B15","PIP_BAL":"0x4fd34872F3AbC07ea6C45c7907f87041C0801DdE","MCD_JOIN_BAL_A":"0x8De5EA9251E0576e3726c8766C56E27fAb2B6597","MCD_FLIP_BAL_A":"0xF6d19CC05482Ef7F73f09c1031BA01567EF6ac0f","GUSD":"0x31D8EdbF6F33ef858c80d68D06Ec83f33c2aA150","PIP_GUSD":"0xb6630DE6Eda0f3f3d96Db4639914565d6b82CfEF","MCD_JOIN_GUSD_A":"0x0c6B26e6AB583D2e4528034037F74842ea988909","MCD_FLIP_GUSD_A":"0xf6c0e36a76F2B9F7Bd568155F3fDc53ff1be1Aeb","UNI":"0x0C527850e5D6B2B406F1d65895d5b17c5A29Ce51","PIP_UNI":"0xe573a75BF4827658F6D600FD26C205a3fe34ee28","MCD_JOIN_UNI_A":"0xb6E6EE050B4a74C8cc1DfdE62cAC8C6d9D8F4CAa","MCD_FLIP_UNI_A":"0x6EE8a47eA5d7cF0C951eDc57141Eb9593A36e680","RENBTC":"0xe3dD56821f8C422849AF4816fE9B3c53c6a2F0Bd","PIP_RENBTC":"0x2f38a1bD385A9B395D01f2Cbf767b4527663edDB","MCD_JOIN_RENBTC_A":"0x12F1F6c7E5fDF1B671CebFBDE974341847d0Caa4","MCD_FLIP_RENBTC_A":"0x2a2E2436370e98505325111A6b98F63d158Fedc4","AAVE":"0x7B339a530Eed72683F56868deDa87BbC64fD9a12","PIP_AAVE":"0xd2d9B1355Ea96567E7D6C7A6945f5c7ec8150Cc9","MCD_JOIN_AAVE_A":"0x9f1Ed3219035e6bDb19E0D95d316c7c39ad302EC","MCD_FLIP_AAVE_A":"0x3c84d572749096b67e4899A95430201DF79b8403","UNIV2DAIETH":"0xB10cf58E08b94480fCb81d341A63295eBb2062C2","PIP_UNIV2DAIETH":"0x1AE7D6891a5fdAafAd2FE6D894bffEa48F8b2454","MCD_JOIN_UNIV2DAIETH_A":"0x03f18d97D25c13FecB15aBee143276D3bD2742De","MCD_FLIP_UNIV2DAIETH_A":"0x0B6C3512C8D4300d566b286FC4a554dAC217AaA6","UNIV2WBTCETH":"0xB10cf58E08b94480fCb81d341A63295eBb2062C2","PIP_UNIV2WBTCETH":"0x1AE7D6891a5fdAafAd2FE6D894bffEa48F8b2454","MCD_JOIN_UNIV2WBTCETH_A":"0x03f18d97D25c13FecB15aBee143276D3bD2742De","MCD_FLIP_UNIV2WBTCETH_A":"0x0B6C3512C8D4300d566b286FC4a554dAC217AaA6","UNIV2USDCETH":"0xB10cf58E08b94480fCb81d341A63295eBb2062C2","PIP_UNIV2USDCETH":"0x1AE7D6891a5fdAafAd2FE6D894bffEa48F8b2454","MCD_JOIN_UNIV2USDCETH_A":"0x03f18d97D25c13FecB15aBee143276D3bD2742De","MCD_FLIP_UNIV2USDCETH_A":"0x0B6C3512C8D4300d566b286FC4a554dAC217AaA6","UNIV2DAIUSDC":"0xB10cf58E08b94480fCb81d341A63295eBb2062C2","PIP_UNIV2DAIUSDC":"0x1AE7D6891a5fdAafAd2FE6D894bffEa48F8b2454","MCD_JOIN_UNIV2DAIUSDC_A":"0x03f18d97D25c13FecB15aBee143276D3bD2742De","MCD_FLIP_UNIV2DAIUSDC_A":"0x0B6C3512C8D4300d566b286FC4a554dAC217AaA6","UNIV2ETHUSDT":"0xB10cf58E08b94480fCb81d341A63295eBb2062C2","PIP_UNIV2ETHUSDT":"0x1AE7D6891a5fdAafAd2FE6D894bffEa48F8b2454","MCD_JOIN_UNIV2ETHUSDT_A":"0x03f18d97D25c13FecB15aBee143276D3bD2742De","MCD_FLIP_UNIV2ETHUSDT_A":"0x0B6C3512C8D4300d566b286FC4a554dAC217AaA6","UNIV2LINKETH":"0xB10cf58E08b94480fCb81d341A63295eBb2062C2","PIP_UNIV2LINKETH":"0x1AE7D6891a5fdAafAd2FE6D894bffEa48F8b2454","MCD_JOIN_UNIV2LINKETH_A":"0x03f18d97D25c13FecB15aBee143276D3bD2742De","MCD_FLIP_UNIV2LINKETH_A":"0x0B6C3512C8D4300d566b286FC4a554dAC217AaA6","UNIV2UNIETH":"0xB10cf58E08b94480fCb81d341A63295eBb2062C2","PIP_UNIV2UNIETH":"0x1AE7D6891a5fdAafAd2FE6D894bffEa48F8b2454","MCD_JOIN_UNIV2UNIETH_A":"0x03f18d97D25c13FecB15aBee143276D3bD2742De","MCD_FLIP_UNIV2UNIETH_A":"0x0B6C3512C8D4300d566b286FC4a554dAC217AaA6","UNIV2WBTCDAI":"0xB10cf58E08b94480fCb81d341A63295eBb2062C2","PIP_UNIV2WBTCDAI":"0x1AE7D6891a5fdAafAd2FE6D894bffEa48F8b2454","MCD_JOIN_UNIV2WBTCDAI_A":"0x03f18d97D25c13FecB15aBee143276D3bD2742De","MCD_FLIP_UNIV2WBTCDAI_A":"0x0B6C3512C8D4300d566b286FC4a554dAC217AaA6","UNIV2AAVEETH":"0xB10cf58E08b94480fCb81d341A63295eBb2062C2","PIP_UNIV2AAVEETH":"0x1AE7D6891a5fdAafAd2FE6D894bffEa48F8b2454","MCD_JOIN_UNIV2AAVEETH_A":"0x03f18d97D25c13FecB15aBee143276D3bD2742De","MCD_FLIP_UNIV2AAVEETH_A":"0x0B6C3512C8D4300d566b286FC4a554dAC217AaA6","UNIV2DAIUSDT":"0xB10cf58E08b94480fCb81d341A63295eBb2062C2","PIP_UNIV2DAIUSDT":"0x1AE7D6891a5fdAafAd2FE6D894bffEa48F8b2454","MCD_JOIN_UNIV2DAIUSDT_A":"0x03f18d97D25c13FecB15aBee143276D3bD2742De","MCD_FLIP_UNIV2DAIUSDT_A":"0x0B6C3512C8D4300d566b286FC4a554dAC217AaA6"}')
    }, function (t) {
        t.exports = JSON.parse('{"DEPLOYER":"0xdDb108893104dE4E1C6d0E47c42237dB4E617ACc","MULTICALL":"0x5e227AD1969Ea493B43F840cfF78d08a6fc17796","FAUCET":"0x0000000000000000000000000000000000000000","MCD_DEPLOY":"0xbaa65281c2FA2baAcb2cb550BA051525A480D3F4","MCD_GOV":"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2","GOV_GUARD":"0x6eEB68B2C7A918f36B78E2DB80dcF279236DDFb8","MCD_ADM":"0x0a3f6849f78076aefaDf113F5BED87720274dDC0","MCD_VAT":"0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B","MCD_JUG":"0x19c0976f590D67707E62397C87829d896Dc0f1F1","MCD_CAT":"0xa5679C04fc3d9d8b0AaB1F0ab83555b301cA70Ea","OLD_MCD_CAT":"0x78f2c2af65126834c51822f56be0d7469d7a523e","MCD_VOW":"0xA950524441892A31ebddF91d3cEEFa04Bf454466","MCD_JOIN_DAI":"0x9759A6Ac90977b93B58547b4A71c78317f391A28","MCD_FLAP":"0xdfE0fb1bE2a52CDBf8FB962D5701d7fd0902db9f","MCD_FLOP":"0x4D95A049d5B0b7d32058cd3F2163015747522e99","MCD_PAUSE":"0xbE286431454714F511008713973d3B053A2d38f3","MCD_PAUSE_PROXY":"0xBE8E3e3618f7474F8cB1d074A26afFef007E98FB","MCD_GOV_ACTIONS":"0x4F5f0933158569c026d617337614d00Ee6589B6E","MCD_DAI":"0x6B175474E89094C44Da98b954EedeAC495271d0F","MCD_SPOT":"0x65C79fcB50Ca1594B025960e539eD7A9a6D434A3","MCD_POT":"0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7","MCD_END":"0xBB856d1742fD182a90239D7AE85706C2FE4e5922","MCD_ESM":"0x29CfBd381043D00a98fD9904a431015Fef07af2f","PROXY_ACTIONS":"0x82ecD135Dce65Fbc6DbdD0e4237E0AF93FFD5038","PROXY_ACTIONS_END":"0x7AfF9FC9faD225e3c88cDA06BC56d8Aca774bC57","PROXY_ACTIONS_DSR":"0x07ee93aEEa0a36FfF2A9B95dd22Bd6049EE54f26","CDP_MANAGER":"0x5ef30b9986345249bc32d8928B7ee64DE9435E39","GET_CDPS":"0x36a724Bd100c39f0Ea4D3A20F7097eE01A8Ff573","OSM_MOM":"0x76416A4d5190d071bfed309861527431304aA14f","FLIPPER_MOM":"0x9BdDB99625A711bf9bda237044924E34E8570f75","PROXY_FACTORY":"0xA26e15C895EFc0616177B7c1e7270A4C7D51C997","PROXY_REGISTRY":"0x4678f0a6958e4D2Bc4F1BAF7Bc52E8F3564f3fE4","PROXY_PAUSE_ACTIONS":"0x6bda13D43B7EDd6CAfE1f70fB98b5d40f61A1370","PROXY_DEPLOYER":"0x1b93556AB8dcCEF01Cd7823C617a6d340f53Fb58","SAI_TUB":"0x448a5065aeBB8E423F0896E6c5D525C040f59af3","MIGRATION":"0xc73e0383F3Aff3215E6f04B0331D58CeCf0Ab849","MIGRATION_PROXY_ACTIONS":"0x2E1F6062d9fB227069741E40f89186DF222FB426","ETH":"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2","PIP_ETH":"0x81FE72B5A8d1A857d176C3E7d5Bd2679A9B85763","MCD_JOIN_ETH_A":"0x2F0b23f53734252Bda2277357e97e1517d6B042A","MCD_FLIP_ETH_A":"0xd8a04F5412223F513DC55F839574430f5EC15531","MCD_JOIN_ETH_B":"0x08638eF1A205bE6762A8b935F5da9b700Cf7322c","MCD_FLIP_ETH_B":"0xD499d71bE9e9E5D236A07ac562F7B6CeacCa624c","MCD_JOIN_ETH_C":"0xF04a5cC80B1E94C69B48f5ee68a08CD2F09A7c3E","MCD_FLIP_ETH_C":"0x7A67901A68243241EBf66beEB0e7b5395582BF17","SAI":"0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359","PIP_SAI":"0x54003DBf6ae6CBa6DDaE571CcdC34d834b44Ab1e","MCD_JOIN_SAI":"0xad37fd42185Ba63009177058208dd1be4b136e6b","MCD_FLIP_SAI":"0x5432b2f3c0DFf95AA191C45E5cbd539E2820aE72","BAT":"0x0D8775F648430679A709E98d2b0Cb6250d2887EF","PIP_BAT":"0xB4eb54AF9Cc7882DF0121d26c5b97E802915ABe6","MCD_JOIN_BAT_A":"0x3D0B1912B66114d4096F48A8CEe3A56C231772cA","MCD_FLIP_BAT_A":"0xaA745404d55f88C108A28c86abE7b5A1E7817c07","WBTC":"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599","PIP_WBTC":"0xf185d0682d50819263941e5f4EacC763CC5C6C42","MCD_JOIN_WBTC_A":"0xBF72Da2Bd84c5170618Fbe5914B0ECA9638d5eb5","MCD_FLIP_WBTC_A":"0x3E115d85D4d7253b05fEc9C0bB5b08383C2b0603","USDC":"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48","PIP_USDC":"0x77b68899b99b686F415d074278a9a16b336085A0","MCD_JOIN_USDC_A":"0xA191e578a6736167326d05c119CE0c90849E84B7","MCD_FLIP_USDC_A":"0xE6ed1d09a19Bd335f051d78D5d22dF3bfF2c28B1","MCD_JOIN_USDC_B":"0x2600004fd1585f7270756DDc88aD9cfA10dD0428","MCD_FLIP_USDC_B":"0xec25Ca3fFa512afbb1784E17f1D414E16D01794F","TUSD":"0x0000000000085d4780B73119b644AE5ecd22b376","PIP_TUSD":"0xeE13831ca96d191B688A670D47173694ba98f1e5","MCD_JOIN_TUSD_A":"0x4454aF7C8bb9463203b66C816220D41ED7837f44","MCD_FLIP_TUSD_A":"0xba3f6a74BD12Cf1e48d4416c7b50963cA98AfD61","ZRX":"0xE41d2489571d322189246DaFA5ebDe1F4699F498","PIP_ZRX":"0x7382c066801E7Acb2299aC8562847B9883f5CD3c","MCD_JOIN_ZRX_A":"0xc7e8Cd72BDEe38865b4F5615956eF47ce1a7e5D0","MCD_FLIP_ZRX_A":"0x08c89251FC058cC97d5bA5F06F95026C0A5CF9B0","KNC":"0xdd974D5C2e2928deA5F71b9825b8b646686BD200","PIP_KNC":"0xf36B79BD4C0904A5F350F1e4f776B81208c13069","MCD_FLIP_KNC_A":"0xAbBCB9Ae89cDD3C27E02D279480C7fF33083249b","MCD_JOIN_KNC_A":"0x475F1a89C1ED844A08E8f6C50A00228b5E59E4A9","MANA":"0x0F5D2fB29fb7d3CFeE444a200298f468908cC942","PIP_MANA":"0x8067259EA630601f319FccE477977E55C6078C13","MCD_FLIP_MANA_A":"0x4bf9D2EBC4c57B9B783C12D30076507660B58b3a","MCD_JOIN_MANA_A":"0xA6EA3b9C04b8a38Ff5e224E7c3D6937ca44C0ef9","PAXUSD":"0x8E870D67F660D95d5be530380D0eC0bd388289E1","PIP_PAXUSD":"0x043B963E1B2214eC90046167Ea29C2c8bDD7c0eC","MCD_JOIN_PAXUSD_A":"0x7e62B7E279DFC78DEB656E34D6a435cC08a44666","MCD_FLIP_PAXUSD_A":"0x52D5D1C05CC79Fc24A629Cb24cB06C5BE5d766E7","USDT":"0xdAC17F958D2ee523a2206206994597C13D831ec7","PIP_USDT":"0x7a5918670B0C390aD25f7beE908c1ACc2d314A3C","MCD_JOIN_USDT_A":"0x0Ac6A1D74E84C2dF9063bDDc31699FF2a2BB22A2","MCD_FLIP_USDT_A":"0x667F41d0fDcE1945eE0f56A79dd6c142E37fCC26","COMP":"0xc00e94Cb662C3520282E6f5717214004A7f26888","PIP_COMP":"0xBED0879953E633135a48a157718Aa791AC0108E4","MCD_JOIN_COMP_A":"0xBEa7cDfB4b49EC154Ae1c0D731E4DC773A3265aA","MCD_FLIP_COMP_A":"0x524826F84cB3A19B6593370a5889A58c00554739","LRC":"0xBBbbCA6A901c926F240b89EacB641d8Aec7AEafD","PIP_LRC":"0x9eb923339c24c40Bef2f4AF4961742AA7C23EF3a","MCD_JOIN_LRC_A":"0x6C186404A7A238D3d6027C0299D1822c1cf5d8f1","MCD_FLIP_LRC_A":"0x7FdDc36dcdC435D8F54FDCB3748adcbBF70f3dAC","LINK":"0x514910771AF9Ca656af840dff83E8264EcF986CA","PIP_LINK":"0x9B0C694C6939b5EA9584e9b61C7815E8d97D9cC7","MCD_JOIN_LINK_A":"0xdFccAf8fDbD2F4805C174f856a317765B49E4a50","MCD_FLIP_LINK_A":"0xB907EEdD63a30A3381E6D898e5815Ee8c9fd2c85","YFI":"0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e","PIP_YFI":"0x5F122465bCf86F45922036970Be6DD7F58820214","MCD_JOIN_YFI_A":"0x3ff33d9162aD47660083D7DC4bC02Fb231c81677","MCD_FLIP_YFI_A":"0xEe4C9C36257afB8098059a4763A374a4ECFE28A7","BAL":"0xba100000625a3754423978a60c9317c58a424e3D","PIP_BAL":"0x3ff860c0F28D69F392543A16A397D0dAe85D16dE","MCD_JOIN_BAL_A":"0x4a03Aa7fb3973d8f0221B466EefB53D0aC195f55","MCD_FLIP_BAL_A":"0xb2b9bd446eE5e58036D2876fce62b7Ab7334583e","GUSD":"0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd","PIP_GUSD":"0xf45Ae69CcA1b9B043dAE2C83A5B65Bc605BEc5F5","MCD_JOIN_GUSD_A":"0xe29A14bcDeA40d83675aa43B72dF07f649738C8b","MCD_FLIP_GUSD_A":"0xCAa8D152A8b98229fB77A213BE16b234cA4f612f","UNI":"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984","PIP_UNI":"0xf363c7e351C96b910b92b45d34190650df4aE8e7","MCD_JOIN_UNI_A":"0x3BC3A58b4FC1CbE7e98bB4aB7c99535e8bA9b8F1","MCD_FLIP_UNI_A":"0xF5b8cD9dB5a0EC031304A7B815010aa7761BD426","RENBTC":"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D","PIP_RENBTC":"0xf185d0682d50819263941e5f4EacC763CC5C6C42","MCD_JOIN_RENBTC_A":"0xFD5608515A47C37afbA68960c1916b79af9491D0","MCD_FLIP_RENBTC_A":"0x30BC6eBC27372e50606880a36B279240c0bA0758","AAVE":"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9","PIP_AAVE":"0x8Df8f06DC2dE0434db40dcBb32a82A104218754c","MCD_JOIN_AAVE_A":"0x24e459F61cEAa7b1cE70Dbaea938940A7c5aD46e","MCD_FLIP_AAVE_A":"0x16e1b844094c885a37509a8f76c533B5fbFED13a","UNIV2DAIETH":"0xA478c2975Ab1Ea89e8196811F51A7B7Ade33eB11","PIP_UNIV2DAIETH":"0x87ecBd742cEB40928E6cDE77B2f0b5CFa3342A09","MCD_JOIN_UNIV2DAIETH_A":"0x2502F65D77cA13f183850b5f9272270454094A08","MCD_FLIP_UNIV2DAIETH_A":"0x57dfd99f45747DD55C1c432Db4aEa07FBd5d2B5c","UNIV2WBTCETH":"0xBb2b8038a1640196FbE3e38816F3e67Cba72D940","PIP_UNIV2WBTCETH":"0x771338D5B31754b25D2eb03Cea676877562Dec26","MCD_JOIN_UNIV2WBTCETH_A":"0xDc26C9b7a8fe4F5dF648E314eC3E6Dc3694e6Dd2","MCD_FLIP_UNIV2WBTCETH_A":"0xbc95e8904d879F371Ac6B749727a0EAfDCd2ACB6","UNIV2USDCETH":"0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc","PIP_UNIV2USDCETH":"0xECB03Fec701B93DC06d19B4639AA8b5a838472BE","MCD_JOIN_UNIV2USDCETH_A":"0x03Ae53B33FeeAc1222C3f372f32D37Ba95f0F099","MCD_FLIP_UNIV2USDCETH_A":"0x48d2C08b93E57701C8ae8974Fc4ADd725222B0BB","UNIV2DAIUSDC":"0xAE461cA67B15dc8dc81CE7615e0320dA1A9aB8D5","PIP_UNIV2DAIUSDC":"0x25CD858a00146961611b18441353603191f110A0","MCD_JOIN_UNIV2DAIUSDC_A":"0xA81598667AC561986b70ae11bBE2dd5348ed4327","MCD_FLIP_UNIV2DAIUSDC_A":"0x4a613f79a250D522DdB53904D87b8f442EA94496","UNIV2ETHUSDT":"0x0d4a11d5EEaaC28EC3F61d100daF4d40471f1852","PIP_UNIV2ETHUSDT":"0x9b015AA3e4787dd0df8B43bF2FE6d90fa543E13B","MCD_JOIN_UNIV2ETHUSDT_A":"0x4aAD139a88D2dd5e7410b408593208523a3a891d","MCD_FLIP_UNIV2ETHUSDT_A":"0x118d5051e70F9EaF3B4a6a11F765185A2Ca0802E","UNIV2LINKETH":"0xa2107FA5B38d9bbd2C461D6EDf11B11A50F6b974","PIP_UNIV2LINKETH":"0x628009F5F5029544AE84636Ef676D3Cc5755238b","MCD_JOIN_UNIV2LINKETH_A":"0xDae88bDe1FB38cF39B6A02b595930A3449e593A6","MCD_FLIP_UNIV2LINKETH_A":"0xb79f818E3c73FCA387845f892356224CA75eac4b","UNIV2UNIETH":"0xd3d2E2692501A5c9Ca623199D38826e513033a17","PIP_UNIV2UNIETH":"0x8Ce9E9442F2791FC63CD6394cC12F2dE4fbc1D71","MCD_JOIN_UNIV2UNIETH_A":"0xf11a98339FE1CdE648e8D1463310CE3ccC3d7cC1","MCD_FLIP_UNIV2UNIETH_A":"0xe5ED7da0483e291485011D5372F3BF46235EB277","UNIV2WBTCDAI":"0x231B7589426Ffe1b75405526fC32aC09D44364c4","PIP_UNIV2WBTCDAI":"0x5FB5a346347ACf4FCD3AAb28f5eE518785FB0AD0","MCD_JOIN_UNIV2WBTCDAI_A":"0xD40798267795Cbf3aeEA8E9F8DCbdBA9b5281fcC","MCD_FLIP_UNIV2WBTCDAI_A":"0x172200d12D09C2698Dd918d347155fE6692f5662","UNIV2AAVEETH":"0xDFC14d2Af169B0D36C4EFF567Ada9b2E0CAE044f","PIP_UNIV2AAVEETH":"0x8D34DC2c33A6386E96cA562D8478Eaf82305b81a","MCD_JOIN_UNIV2AAVEETH_A":"0x42AFd448Df7d96291551f1eFE1A590101afB1DfF","MCD_FLIP_UNIV2AAVEETH_A":"0x20D298ca96bf8c2000203B911908DbDc1a8Bac58","UNIV2DAIUSDT":"0xB20bd5D04BE54f870D5C0d3cA85d82b34B836405","PIP_UNIV2DAIUSDT":"0x69562A7812830E6854Ffc50b992c2AA861D5C2d3","MCD_JOIN_UNIV2DAIUSDT_A":"0xAf034D882169328CAf43b823a4083dABC7EEE0F4","MCD_FLIP_UNIV2DAIUSDT_A":"0xD32f8B8aDbE331eC0CfADa9cfDbc537619622cFe"}')
    }, function (t, e, r) {
        t.exports = {
            REP: r(498),
            ZRX: r(499),
            OMG: r(500),
            BAT: r(501),
            DGD: r(502),
            KNC: r(503),
            GNT: r(504),
            SAI: r(5),
            CDP_MANAGER: r(505),
            ETH: r(506),
            GET_CDPS: r(507),
            MCD_ADM: r(508),
            MCD_CAT: r(252),
            OLD_MCD_CAT: r(252),
            MCD_DAI: r(5),
            MCD_DAI_GUARD: r(509),
            MCD_DEPLOY: r(510),
            MCD_FLAP: r(511),
            "MCD_FLIP_*": r(512),
            MCD_FLOP: r(513),
            MCD_GOV: r(5),
            "MCD_JOIN_*": r(514),
            MCD_JOIN_OMG_A: r(253),
            MCD_JOIN_DGD_A: r(253),
            MCD_JOIN_GNT_A: r(515),
            MCD_JOIN_DAI: r(516),
            MCD_JUG: r(517),
            MCD_END: r(518),
            MCD_ESM: r(519),
            MCD_PAUSE: r(520),
            MCD_PAUSE_PROXY: r(521),
            MCD_POT: r(522),
            MCD_SPOT: r(523),
            MCD_VAT: r(524),
            MCD_VOW: r(525),
            MULTICALL: r(526),
            "PIP_*": r(527),
            PROXY_ACTIONS: r(528),
            PROXY_ACTIONS_DSR: r(529),
            MIGRATION: r(530),
            MIGRATION_PROXY_ACTIONS: r(531),
            USDC: r(532),
            WBTC: r(533),
            TUSD: r(5),
            MANA: r(5),
            USDT: r(5),
            PAXUSD: r(5),
            COMP: r(5),
            LRC: r(5),
            LINK: r(5),
            YFI: r(5),
            BAL: r(5),
            GUSD: r(534),
            UNI: r(5),
            RENBTC: r(5),
            AAVE: r(5),
            UNIV2DAIETH: r(5),
            UNIV2WBTCETH: r(5),
            UNIV2USDCETH: r(5),
            UNIV2DAIUSDC: r(5),
            UNIV2ETHUSDT: r(5),
            UNIV2LINKETH: r(5),
            UNIV2UNIETH: r(5),
            UNIV2WBTCDAI: r(5),
            UNIV2AAVEETH: r(5),
            UNIV2DAIUSDT: r(5)
        }
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"guy","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"guy","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"guy","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"guy","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"guy","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"guy","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"vat_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"address","name":"own","type":"address"},{"indexed":true,"internalType":"uint256","name":"cdp","type":"uint256"}],"name":"NewCdp","type":"event"},{"constant":false,"inputs":[{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"ok","type":"uint256"}],"name":"cdpAllow","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"cdpCan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"cdpi","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"count","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"}],"name":"enter","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"first","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"flux","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"flux","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"int256","name":"dink","type":"int256"},{"internalType":"int256","name":"dart","type":"int256"}],"name":"frob","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"dst","type":"address"}],"name":"give","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"ilks","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"last","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"list","outputs":[{"internalType":"uint256","name":"prev","type":"uint256"},{"internalType":"uint256","name":"next","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"rad","type":"uint256"}],"name":"move","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"address","name":"usr","type":"address"}],"name":"open","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"owns","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"dst","type":"address"}],"name":"quit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"cdpSrc","type":"uint256"},{"internalType":"uint256","name":"cdpDst","type":"uint256"}],"name":"shift","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"ok","type":"uint256"}],"name":"urnAllow","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"urnCan","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"urns","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Withdrawal","type":"event"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"deposit","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"constant":true,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"guy","type":"address"}],"name":"getCdpsAsc","outputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"address[]","name":"urns","type":"address[]"},{"internalType":"bytes32[]","name":"ilks","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"guy","type":"address"}],"name":"getCdpsDesc","outputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"address[]","name":"urns","type":"address[]"},{"internalType":"bytes32[]","name":"ilks","type":"bytes32[]"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"authority","type":"address"}],"name":"LogSetAuthority","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"LogSetOwner","type":"event"},{"constant":true,"inputs":[],"name":"authority","outputs":[{"internalType":"contract DSAuthority","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"code","type":"address"},{"internalType":"bytes4","name":"sig","type":"bytes4"}],"name":"canCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"code","type":"address"},{"internalType":"bytes4","name":"sig","type":"bytes4"}],"name":"getCapabilityRoles","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"getUserRoles","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"uint8","name":"role","type":"uint8"}],"name":"hasUserRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"code","type":"address"},{"internalType":"bytes4","name":"sig","type":"bytes4"}],"name":"isCapabilityPublic","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"isUserRoot","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"contract DSAuthority","name":"authority_","type":"address"}],"name":"setAuthority","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"owner_","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"code","type":"address"},{"internalType":"bytes4","name":"sig","type":"bytes4"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setPublicCapability","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint8","name":"role","type":"uint8"},{"internalType":"address","name":"code","type":"address"},{"internalType":"bytes4","name":"sig","type":"bytes4"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setRoleCapability","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setRootUser","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"uint8","name":"role","type":"uint8"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setUserRole","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"src","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dst","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"sig","type":"bytes32"}],"name":"LogForbid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"src","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dst","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"sig","type":"bytes32"}],"name":"LogPermit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"authority","type":"address"}],"name":"LogSetAuthority","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"LogSetOwner","type":"event"},{"constant":true,"inputs":[],"name":"ANY","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"authority","outputs":[{"internalType":"contract DSAuthority","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"src_","type":"address"},{"internalType":"address","name":"dst_","type":"address"},{"internalType":"bytes4","name":"sig","type":"bytes4"}],"name":"canCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"bytes32","name":"sig","type":"bytes32"}],"name":"forbid","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"src","type":"bytes32"},{"internalType":"bytes32","name":"dst","type":"bytes32"},{"internalType":"bytes32","name":"sig","type":"bytes32"}],"name":"forbid","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"bytes32","name":"sig","type":"bytes32"}],"name":"permit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"src","type":"bytes32"},{"internalType":"bytes32","name":"dst","type":"bytes32"},{"internalType":"bytes32","name":"sig","type":"bytes32"}],"name":"permit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"contract DSAuthority","name":"authority_","type":"address"}],"name":"setAuthority","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"owner_","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"contract VatFab","name":"vatFab_","type":"address"},{"internalType":"contract JugFab","name":"jugFab_","type":"address"},{"internalType":"contract VowFab","name":"vowFab_","type":"address"},{"internalType":"contract CatFab","name":"catFab_","type":"address"},{"internalType":"contract DaiFab","name":"daiFab_","type":"address"},{"internalType":"contract DaiJoinFab","name":"daiJoinFab_","type":"address"},{"internalType":"contract FlapFab","name":"flapFab_","type":"address"},{"internalType":"contract FlopFab","name":"flopFab_","type":"address"},{"internalType":"contract FlipFab","name":"flipFab_","type":"address"},{"internalType":"contract SpotFab","name":"spotFab_","type":"address"},{"internalType":"contract PotFab","name":"potFab_","type":"address"},{"internalType":"contract EndFab","name":"endFab_","type":"address"},{"internalType":"contract ESMFab","name":"esmFab_","type":"address"},{"internalType":"contract PauseFab","name":"pauseFab_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"authority","type":"address"}],"name":"LogSetAuthority","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"LogSetOwner","type":"event"},{"constant":true,"inputs":[],"name":"authority","outputs":[{"internalType":"contract DSAuthority","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"cat","outputs":[{"internalType":"contract Cat","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"catFab","outputs":[{"internalType":"contract CatFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"dai","outputs":[{"internalType":"contract Dai","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"daiFab","outputs":[{"internalType":"contract DaiFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"daiJoin","outputs":[{"internalType":"contract DaiJoin","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"daiJoinFab","outputs":[{"internalType":"contract DaiJoinFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"gov","type":"address"}],"name":"deployAuctions","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"address","name":"join","type":"address"},{"internalType":"address","name":"pip","type":"address"}],"name":"deployCollateral","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"chainId","type":"uint256"}],"name":"deployDai","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"deployLiquidator","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"delay","type":"uint256"},{"internalType":"address","name":"authority","type":"address"}],"name":"deployPause","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"gov","type":"address"},{"internalType":"address","name":"pit","type":"address"},{"internalType":"uint256","name":"min","type":"uint256"}],"name":"deployShutdown","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"deployTaxation","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"deployVat","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"end","outputs":[{"internalType":"contract End","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"endFab","outputs":[{"internalType":"contract EndFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"esm","outputs":[{"internalType":"contract ESM","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"esmFab","outputs":[{"internalType":"contract ESMFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"flap","outputs":[{"internalType":"contract Flapper","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"flapFab","outputs":[{"internalType":"contract FlapFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"flipFab","outputs":[{"internalType":"contract FlipFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"flop","outputs":[{"internalType":"contract Flopper","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"flopFab","outputs":[{"internalType":"contract FlopFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"ilks","outputs":[{"internalType":"contract Flipper","name":"flip","type":"address"},{"internalType":"address","name":"join","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"jug","outputs":[{"internalType":"contract Jug","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"jugFab","outputs":[{"internalType":"contract JugFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pause","outputs":[{"internalType":"contract DSPause","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pauseFab","outputs":[{"internalType":"contract PauseFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pot","outputs":[{"internalType":"contract Pot","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"potFab","outputs":[{"internalType":"contract PotFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"releaseAuth","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"}],"name":"releaseAuthFlip","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"contract DSAuthority","name":"authority_","type":"address"}],"name":"setAuthority","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"owner_","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"spotFab","outputs":[{"internalType":"contract SpotFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"spotter","outputs":[{"internalType":"contract Spotter","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"step","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract Vat","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vatFab","outputs":[{"internalType":"contract VatFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vow","outputs":[{"internalType":"contract Vow","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vowFab","outputs":[{"internalType":"contract VowFab","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"vat_","type":"address"},{"internalType":"address","name":"gem_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lot","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"bid","type":"uint256"}],"name":"Kick","type":"event"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":true,"inputs":[],"name":"beg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"bids","outputs":[{"internalType":"uint256","name":"bid","type":"uint256"},{"internalType":"uint256","name":"lot","type":"uint256"},{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint48","name":"tic","type":"uint48"},{"internalType":"uint48","name":"end","type":"uint48"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"rad","type":"uint256"}],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"deal","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"gem","outputs":[{"internalType":"contract GemLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"lot","type":"uint256"},{"internalType":"uint256","name":"bid","type":"uint256"}],"name":"kick","outputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"kicks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"live","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"tau","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"lot","type":"uint256"},{"internalType":"uint256","name":"bid","type":"uint256"}],"name":"tend","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"tick","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"ttl","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"yank","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"vat_","type":"address"},{"internalType":"address","name":"cat_","type":"address"},{"internalType":"bytes32","name":"ilk_","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lot","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"bid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tab","type":"uint256"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"address","name":"gal","type":"address"}],"name":"Kick","type":"event"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":true,"inputs":[],"name":"beg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"bids","outputs":[{"internalType":"uint256","name":"bid","type":"uint256"},{"internalType":"uint256","name":"lot","type":"uint256"},{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint48","name":"tic","type":"uint48"},{"internalType":"uint48","name":"end","type":"uint48"},{"internalType":"address","name":"usr","type":"address"},{"internalType":"address","name":"gal","type":"address"},{"internalType":"uint256","name":"tab","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"cat","outputs":[{"internalType":"contract CatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"deal","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"lot","type":"uint256"},{"internalType":"uint256","name":"bid","type":"uint256"}],"name":"dent","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"data","type":"address"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"ilk","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"address","name":"gal","type":"address"},{"internalType":"uint256","name":"tab","type":"uint256"},{"internalType":"uint256","name":"lot","type":"uint256"},{"internalType":"uint256","name":"bid","type":"uint256"}],"name":"kick","outputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"kicks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"tau","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"lot","type":"uint256"},{"internalType":"uint256","name":"bid","type":"uint256"}],"name":"tend","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"tick","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"ttl","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"yank","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"vat_","type":"address"},{"internalType":"address","name":"gem_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"lot","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"bid","type":"uint256"},{"indexed":true,"internalType":"address","name":"gal","type":"address"}],"name":"Kick","type":"event"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":true,"inputs":[],"name":"beg","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"bids","outputs":[{"internalType":"uint256","name":"bid","type":"uint256"},{"internalType":"uint256","name":"lot","type":"uint256"},{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint48","name":"tic","type":"uint48"},{"internalType":"uint48","name":"end","type":"uint48"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"deal","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"lot","type":"uint256"},{"internalType":"uint256","name":"bid","type":"uint256"}],"name":"dent","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"gem","outputs":[{"internalType":"contract GemLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"gal","type":"address"},{"internalType":"uint256","name":"lot","type":"uint256"},{"internalType":"uint256","name":"bid","type":"uint256"}],"name":"kick","outputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"kicks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"live","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pad","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"tau","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"tick","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"ttl","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vow","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"yank","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"vat_","type":"address"},{"internalType":"bytes32","name":"ilk_","type":"bytes32"},{"internalType":"address","name":"gem_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":false,"inputs":[],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"dec","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"gem","outputs":[{"internalType":"contract GemLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ilk","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"join","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"live","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"vat_","type":"address"},{"internalType":"bytes32","name":"ilk_","type":"bytes32"},{"internalType":"address","name":"gem_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"bags","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"dec","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"gem","outputs":[{"internalType":"contract GemLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ilk","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"urn","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"join","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"live","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"make","outputs":[{"internalType":"address","name":"bag","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"make","outputs":[{"internalType":"address","name":"bag","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"vat_","type":"address"},{"internalType":"address","name":"dai_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":false,"inputs":[],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"dai","outputs":[{"internalType":"contract DSTokenLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"join","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"live","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"vat_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":true,"inputs":[],"name":"base","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"}],"name":"drip","outputs":[{"internalType":"uint256","name":"rate","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"data","type":"address"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"ilks","outputs":[{"internalType":"uint256","name":"duty","type":"uint256"},{"internalType":"uint256","name":"rho","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"}],"name":"init","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vow","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"Art","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"bag","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"}],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"cash","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"cat","outputs":[{"internalType":"contract CatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"debt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"data","type":"address"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"fix","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"}],"name":"flow","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"}],"name":"free","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"gap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"live","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"}],"name":"out","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"pack","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"pot","outputs":[{"internalType":"contract PotLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"address","name":"urn","type":"address"}],"name":"skim","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"skip","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"spot","outputs":[{"internalType":"contract Spotty","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"tag","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"thaw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vow","outputs":[{"internalType":"contract VowLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"wait","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"when","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"gem_","type":"address"},{"internalType":"address","name":"end_","type":"address"},{"internalType":"address","name":"pit_","type":"address"},{"internalType":"uint256","name":"min_","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":true,"inputs":[],"name":"Sum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"end","outputs":[{"internalType":"contract EndLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"fire","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"fired","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"gem","outputs":[{"internalType":"contract GemLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"join","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"min","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pit","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"sum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"uint256","name":"delay_","type":"uint256"},{"internalType":"address","name":"owner_","type":"address"},{"internalType":"address","name":"authority_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":true,"internalType":"bytes32","name":"foo","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"bar","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"fax","type":"bytes"}],"name":"LogNote","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"authority","type":"address"}],"name":"LogSetAuthority","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"LogSetOwner","type":"event"},{"constant":true,"inputs":[],"name":"authority","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"bytes32","name":"tag","type":"bytes32"},{"internalType":"bytes","name":"fax","type":"bytes"},{"internalType":"uint256","name":"eta","type":"uint256"}],"name":"drop","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"bytes32","name":"tag","type":"bytes32"},{"internalType":"bytes","name":"fax","type":"bytes"},{"internalType":"uint256","name":"eta","type":"uint256"}],"name":"exec","outputs":[{"internalType":"bytes","name":"out","type":"bytes"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"plans","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"bytes32","name":"tag","type":"bytes32"},{"internalType":"bytes","name":"fax","type":"bytes"},{"internalType":"uint256","name":"eta","type":"uint256"}],"name":"plot","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"proxy","outputs":[{"internalType":"contract DSPauseProxy","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"authority_","type":"address"}],"name":"setAuthority","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"delay_","type":"uint256"}],"name":"setDelay","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"owner_","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"constant":false,"inputs":[{"name":"who","type":"address"},{"name":"what","type":"bytes32"},{"name":"data","type":"bytes32"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"who","type":"address"},{"name":"data","type":"address"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"who","type":"address"},{"name":"ilk","type":"bytes32"}],"name":"init","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"who","type":"address"},{"name":"ilk","type":"bytes32"},{"name":"what","type":"bytes32"},{"name":"data","type":"address"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"who","type":"address"},{"name":"what","type":"bytes32"},{"name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"who","type":"address"},{"name":"to","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"who","type":"address"},{"name":"to","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"who","type":"address"},{"name":"what","type":"bytes32"},{"name":"data","type":"address"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"who","type":"address"},{"name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"who","type":"address"},{"name":"ilk","type":"bytes32"},{"name":"what","type":"bytes32"},{"name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"vat_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":true,"inputs":[],"name":"Pie","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"chi","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"drip","outputs":[{"internalType":"uint256","name":"tmp","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"dsr","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"addr","type":"address"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"join","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"live","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pie","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"rho","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vow","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"vat_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"ilk","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"val","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"spot","type":"uint256"}],"name":"Poke","type":"event"},{"constant":false,"inputs":[],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"pip_","type":"address"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"ilks","outputs":[{"internalType":"contract PipLike","name":"pip","type":"address"},{"internalType":"uint256","name":"mat","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"live","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"par","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"}],"name":"poke","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg3","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":true,"inputs":[],"name":"Line","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"can","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"dai","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"debt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"flux","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"i","type":"bytes32"},{"internalType":"address","name":"u","type":"address"},{"internalType":"int256","name":"rate","type":"int256"}],"name":"fold","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"int256","name":"dink","type":"int256"},{"internalType":"int256","name":"dart","type":"int256"}],"name":"fork","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"i","type":"bytes32"},{"internalType":"address","name":"u","type":"address"},{"internalType":"address","name":"v","type":"address"},{"internalType":"address","name":"w","type":"address"},{"internalType":"int256","name":"dink","type":"int256"},{"internalType":"int256","name":"dart","type":"int256"}],"name":"frob","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"}],"name":"gem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"i","type":"bytes32"},{"internalType":"address","name":"u","type":"address"},{"internalType":"address","name":"v","type":"address"},{"internalType":"address","name":"w","type":"address"},{"internalType":"int256","name":"dink","type":"int256"},{"internalType":"int256","name":"dart","type":"int256"}],"name":"grab","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"rad","type":"uint256"}],"name":"heal","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"hope","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"ilks","outputs":[{"internalType":"uint256","name":"Art","type":"uint256"},{"internalType":"uint256","name":"rate","type":"uint256"},{"internalType":"uint256","name":"spot","type":"uint256"},{"internalType":"uint256","name":"line","type":"uint256"},{"internalType":"uint256","name":"dust","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"}],"name":"init","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"live","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"rad","type":"uint256"}],"name":"move","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"nope","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"sin","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"address","name":"usr","type":"address"},{"internalType":"int256","name":"wad","type":"int256"}],"name":"slip","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"u","type":"address"},{"internalType":"address","name":"v","type":"address"},{"internalType":"uint256","name":"rad","type":"uint256"}],"name":"suck","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"}],"name":"urns","outputs":[{"internalType":"uint256","name":"ink","type":"uint256"},{"internalType":"uint256","name":"art","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"vat_","type":"address"},{"internalType":"address","name":"flapper_","type":"address"},{"internalType":"address","name":"flopper_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"constant":true,"inputs":[],"name":"Ash","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"Sin","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"bump","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"cage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"dump","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"tab","type":"uint256"}],"name":"fess","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"uint256","name":"data","type":"uint256"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"what","type":"bytes32"},{"internalType":"address","name":"data","type":"address"}],"name":"file","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"flap","outputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"flapper","outputs":[{"internalType":"contract FlapLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"era","type":"uint256"}],"name":"flog","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"flop","outputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"flopper","outputs":[{"internalType":"contract FlopLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"rad","type":"uint256"}],"name":"heal","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"hump","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"rad","type":"uint256"}],"name":"kiss","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"live","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"sin","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"sump","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"wait","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"constant":false,"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall.Call[]","name":"calls","type":"tuple[]"}],"name":"aggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCurrentBlockCoinbase","outputs":[{"internalType":"address","name":"coinbase","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCurrentBlockDifficulty","outputs":[{"internalType":"uint256","name":"difficulty","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCurrentBlockGasLimit","outputs":[{"internalType":"uint256","name":"gaslimit","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getCurrentBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getEthBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getLastBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":true,"internalType":"bytes32","name":"foo","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"bar","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"fax","type":"bytes"}],"name":"LogNote","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"authority","type":"address"}],"name":"LogSetAuthority","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"LogSetOwner","type":"event"},{"constant":true,"inputs":[],"name":"authority","outputs":[{"internalType":"contract DSAuthority","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"peek","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"wut","type":"bytes32"}],"name":"poke","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"read","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"contract DSAuthority","name":"authority_","type":"address"}],"name":"setAuthority","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"owner_","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"void","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"ok","type":"uint256"}],"name":"cdpAllow","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"apt","type":"address"},{"internalType":"address","name":"urn","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"daiJoin_join","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"jug","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"draw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"src","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"}],"name":"enter","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"apt","type":"address"},{"internalType":"address","name":"urn","type":"address"}],"name":"ethJoin_join","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"ethJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"exitETH","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"gemJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"}],"name":"exitGem","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"flux","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"ethJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"freeETH","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"gemJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"}],"name":"freeGem","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"int256","name":"dink","type":"int256"},{"internalType":"int256","name":"dart","type":"int256"}],"name":"frob","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"apt","type":"address"},{"internalType":"address","name":"urn","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"bool","name":"transferFrom","type":"bool"}],"name":"gemJoin_join","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"usr","type":"address"}],"name":"give","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"proxyRegistry","type":"address"},{"internalType":"address","name":"manager","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"dst","type":"address"}],"name":"giveToProxy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"obj","type":"address"},{"internalType":"address","name":"usr","type":"address"}],"name":"hope","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"ethJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"}],"name":"lockETH","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"jug","type":"address"},{"internalType":"address","name":"ethJoin","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"wadD","type":"uint256"}],"name":"lockETHAndDraw","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"gemJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"bool","name":"transferFrom","type":"bool"}],"name":"lockGem","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"jug","type":"address"},{"internalType":"address","name":"gemJoin","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"amtC","type":"uint256"},{"internalType":"uint256","name":"wadD","type":"uint256"},{"internalType":"bool","name":"transferFrom","type":"bool"}],"name":"lockGemAndDraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"gemJoin","type":"address"}],"name":"makeGemBag","outputs":[{"internalType":"address","name":"bag","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"rad","type":"uint256"}],"name":"move","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"obj","type":"address"},{"internalType":"address","name":"usr","type":"address"}],"name":"nope","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"address","name":"usr","type":"address"}],"name":"open","outputs":[{"internalType":"uint256","name":"cdp","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"jug","type":"address"},{"internalType":"address","name":"ethJoin","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"uint256","name":"wadD","type":"uint256"}],"name":"openLockETHAndDraw","outputs":[{"internalType":"uint256","name":"cdp","type":"uint256"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"jug","type":"address"},{"internalType":"address","name":"gntJoin","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"uint256","name":"amtC","type":"uint256"},{"internalType":"uint256","name":"wadD","type":"uint256"}],"name":"openLockGNTAndDraw","outputs":[{"internalType":"address","name":"bag","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"jug","type":"address"},{"internalType":"address","name":"gemJoin","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"bytes32","name":"ilk","type":"bytes32"},{"internalType":"uint256","name":"amtC","type":"uint256"},{"internalType":"uint256","name":"wadD","type":"uint256"},{"internalType":"bool","name":"transferFrom","type":"bool"}],"name":"openLockGemAndDraw","outputs":[{"internalType":"uint256","name":"cdp","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"dst","type":"address"}],"name":"quit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"ethJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"safeLockETH","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"gemJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"amt","type":"uint256"},{"internalType":"bool","name":"transferFrom","type":"bool"},{"internalType":"address","name":"owner","type":"address"}],"name":"safeLockGem","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"wad","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"safeWipe","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"safeWipeAll","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"uint256","name":"cdpSrc","type":"uint256"},{"internalType":"uint256","name":"cdpOrg","type":"uint256"}],"name":"shift","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"gem","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"amt","type":"uint256"}],"name":"transfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"ok","type":"uint256"}],"name":"urnAllow","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"wipe","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"}],"name":"wipeAll","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"ethJoin","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"wadC","type":"uint256"}],"name":"wipeAllAndFreeETH","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"gemJoin","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"amtC","type":"uint256"}],"name":"wipeAllAndFreeGem","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"ethJoin","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"wadC","type":"uint256"},{"internalType":"uint256","name":"wadD","type":"uint256"}],"name":"wipeAndFreeETH","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"manager","type":"address"},{"internalType":"address","name":"gemJoin","type":"address"},{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"uint256","name":"cdp","type":"uint256"},{"internalType":"uint256","name":"amtC","type":"uint256"},{"internalType":"uint256","name":"wadD","type":"uint256"}],"name":"wipeAndFreeGem","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"constant":false,"inputs":[{"internalType":"address","name":"apt","type":"address"},{"internalType":"address","name":"urn","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"daiJoin_join","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"address","name":"pot","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"exit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"address","name":"pot","type":"address"}],"name":"exitAll","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"daiJoin","type":"address"},{"internalType":"address","name":"pot","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"join","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"address","name":"tub_","type":"address"},{"internalType":"address","name":"cdpManager_","type":"address"},{"internalType":"address","name":"saiJoin_","type":"address"},{"internalType":"address","name":"wethJoin_","type":"address"},{"internalType":"address","name":"daiJoin_","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"constant":true,"inputs":[],"name":"cdpManager","outputs":[{"internalType":"contract ManagerLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"daiJoin","outputs":[{"internalType":"contract JoinLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"bytes32","name":"cup","type":"bytes32"}],"name":"migrate","outputs":[{"internalType":"uint256","name":"cdp","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"saiJoin","outputs":[{"internalType":"contract JoinLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"swapDaiToSai","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"swapSaiToDai","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"tub","outputs":[{"internalType":"contract SaiTubLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"vat","outputs":[{"internalType":"contract VatLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"wethJoin","outputs":[{"internalType":"contract JoinLike","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"constant":false,"inputs":[{"internalType":"address","name":"scdMcdMigration","type":"address"},{"internalType":"address","name":"jug","type":"address"},{"internalType":"bytes32","name":"cup","type":"bytes32"}],"name":"migrate","outputs":[{"internalType":"uint256","name":"cdp","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"scdMcdMigration","type":"address"},{"internalType":"address","name":"jug","type":"address"},{"internalType":"bytes32","name":"cup","type":"bytes32"},{"internalType":"address","name":"otc","type":"address"},{"internalType":"uint256","name":"maxPayAmt","type":"uint256"},{"internalType":"uint256","name":"minRatio","type":"uint256"}],"name":"migratePayFeeWithDebt","outputs":[{"internalType":"uint256","name":"cdp","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"scdMcdMigration","type":"address"},{"internalType":"address","name":"jug","type":"address"},{"internalType":"bytes32","name":"cup","type":"bytes32"},{"internalType":"address","name":"otc","type":"address"},{"internalType":"address","name":"payGem","type":"address"},{"internalType":"uint256","name":"maxPayAmt","type":"uint256"}],"name":"migratePayFeeWithGem","outputs":[{"internalType":"uint256","name":"cdp","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"scdMcdMigration","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"swapDaiToSai","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"scdMcdMigration","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"swapSaiToDai","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"guy","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"guy","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t) {
        t.exports = JSON.parse('[{"inputs":[{"internalType":"uint256","name":"supply","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"guy","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"src","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"erc20Impl","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"setImplementation","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }, function (t, e, r) {
        var n = r(4),
            i = r(64);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.setMethod = setMethod, e.transferToBag = transferToBag, e.default = void 0;
        var o, a, s, u = n(r(101)),
            c = n(r(28)),
            l = n(r(115)),
            h = n(r(9)),
            d = n(r(11)),
            p = n(r(23)),
            m = n(r(24)),
            y = n(r(14)),
            b = n(r(167)),
            g = n(r(29)),
            v = r(110),
            w = r(81),
            M = i(r(172)),
            A = r(30),
            x = n(r(18)),
            B = n(r(561)),
            E = r(116),
            k = n(r(894)),
            N = n(r(341)),
            T = r(33),
            C = n(r(343));

        function _createSuper(t) {
            var e = function _isNativeReflectConstruct() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (t) {
                    return !1
                }
            }();
            return function () {
                var r, n = (0, y.default)(t);
                if (e) {
                    var i = (0, y.default)(this).constructor;
                    r = Reflect.construct(n, arguments, i)
                } else r = n.apply(this, arguments);
                return (0, m.default)(this, r)
            }
        }
        var P = A.ServiceRoles.CDP_MANAGER,
            I = A.ServiceRoles.CDP_TYPE,
            O = A.ServiceRoles.SYSTEM_DATA,
            D = (o = (0, M.tracksTransactionsWithOptions)({
                numArguments: 5
            }), a = (0, M.tracksTransactionsWithOptions)({
                numArguments: 5
            }), s = function (t) {
                (0, p.default)(CdpManager, t);
                var e, r, n, i, o, a, s, m, y, b, w, M, A = _createSuper(CdpManager);

                function CdpManager() {
                    var t, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : P;
                    return (0, h.default)(this, CdpManager), (t = A.call(this, e, ["smartContract", I, O, "accounts", "proxy", "token", "web3"]))._getCdpIdsPromises = {}, t._getUrnPromises = {}, t
                }
                return (0, d.default)(CdpManager, [{
                    key: "getCdpIds",
                    value: (M = (0, g.default)(c.default.mark((function _callee(t) {
                        var e, r, n, i, o, a, s = arguments;
                        return c.default.wrap((function _callee$(u) {
                            for (;;) switch (u.prev = u.next) {
                                case 0:
                                    return e = !(s.length > 1 && void 0 !== s[1]) || s[1], r = e ? "getCdpsDesc" : "getCdpsAsc", this._getCdpIdsPromises[t] || (this._getCdpIdsPromises[t] = this.get("smartContract").getContract("GET_CDPS")[r](this._managerAddress, t)), u.next = 5, this._getCdpIdsPromises[t];
                                case 5:
                                    return n = u.sent, i = (0, l.default)(n, 3), o = i[0], a = i[2], (0, x.default)(o.length === a.length, "ids and ilks must be the same length"), u.abrupt("return", o.map((function (t, e) {
                                        return {
                                            id: t.toNumber(),
                                            ilk: (0, E.bytesToString)(a[e])
                                        }
                                    })));
                                case 11:
                                case "end":
                                    return u.stop()
                            }
                        }), _callee, this)
                    }))), function getCdpIds(t) {
                        return M.apply(this, arguments)
                    })
                }, {
                    key: "getCdp",
                    value: (w = (0, g.default)(c.default.mark((function _callee2(t, e) {
                        var r, n, i, o;
                        return c.default.wrap((function _callee2$(a) {
                            for (;;) switch (a.prev = a.next) {
                                case 0:
                                    if (r = !(0, k.default)(e, "cache") || e.cache, !(n = this._getFromInstanceCache(t, r))) {
                                        a.next = 4;
                                        break
                                    }
                                    return a.abrupt("return", n);
                                case 4:
                                    o = 0;
                                case 5:
                                    if (!(o < 5)) {
                                        a.next = 16;
                                        break
                                    }
                                    return a.next = 8, this.getIlkForCdp(t);
                                case 8:
                                    if (!(i = a.sent)) {
                                        a.next = 11;
                                        break
                                    }
                                    return a.abrupt("break", 16);
                                case 11:
                                    return a.next = 13, (0, E.promiseWait)(5e3);
                                case 13:
                                    o++, a.next = 5;
                                    break;
                                case 16:
                                    if (n = new B.default(t, i, this, e), this._putInInstanceCache(t, n, r), (0, k.default)(e, "prefetch") && !e.prefetch) {
                                        a.next = 21;
                                        break
                                    }
                                    return a.next = 21, n.prefetch();
                                case 21:
                                    return a.abrupt("return", n);
                                case 22:
                                case "end":
                                    return a.stop()
                            }
                        }), _callee2, this)
                    }))), function getCdp(t, e) {
                        return w.apply(this, arguments)
                    })
                }, {
                    key: "getIlkForCdp",
                    value: (b = (0, g.default)(c.default.mark((function _callee3(t) {
                        return c.default.wrap((function _callee3$(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return e.t0 = E.bytesToString, e.next = 3, this._manager.ilks(t);
                                case 3:
                                    return e.t1 = e.sent, e.abrupt("return", (0, e.t0)(e.t1));
                                case 5:
                                case "end":
                                    return e.stop()
                            }
                        }), _callee3, this)
                    }))), function getIlkForCdp(t) {
                        return b.apply(this, arguments)
                    })
                }, {
                    key: "getCombinedDebtValue",
                    value: (y = (0, g.default)(c.default.mark((function _callee4(t) {
                        var e, r, n, i = this,
                            o = arguments;
                        return c.default.wrap((function _callee4$(a) {
                            for (;;) switch (a.prev = a.next) {
                                case 0:
                                    return e = !(o.length > 1 && void 0 !== o[1]) || o[1], a.next = 3, this.getCdpIds(t, e);
                                case 3:
                                    return r = a.sent, a.next = 6, Promise.all(r.map((function (t) {
                                        var e = new B.default(t.id, t.ilk, i);
                                        return e.prefetch().then((function () {
                                            return e.debtValue
                                        }))
                                    })));
                                case 6:
                                    return n = a.sent, a.abrupt("return", n.reduce((function (t, e) {
                                        return t.plus(e)
                                    })));
                                case 8:
                                case "end":
                                    return a.stop()
                            }
                        }), _callee4, this)
                    }))), function getCombinedDebtValue(t) {
                        return y.apply(this, arguments)
                    })
                }, {
                    key: "open",
                    value: (m = (0, g.default)(c.default.mark((function _callee5(t, e) {
                        var r, n, i, o, a, s;
                        return c.default.wrap((function _callee5$(u) {
                            for (;;) switch (u.prev = u.next) {
                                case 0:
                                    return r = e.promise, n = e.cache, i = void 0 === n || n, u.next = 3, this.get("proxy").ensureProxy({
                                        promise: r
                                    });
                                case 3:
                                    return o = u.sent, a = this.proxyActions.open(this._managerAddress, (0, E.stringToBytes)(t), o, {
                                        dsProxy: !0,
                                        promise: r,
                                        metadata: {
                                            ilk: t
                                        }
                                    }), u.t0 = B.default, u.next = 8, a;
                                case 8:
                                    return u.t1 = u.sent, u.t2 = t, u.t3 = this, u.next = 13, u.t0.create.call(u.t0, u.t1, u.t2, u.t3);
                                case 13:
                                    return s = u.sent, this._putInInstanceCache(s.id, s, i), u.abrupt("return", s);
                                case 16:
                                case "end":
                                    return u.stop()
                            }
                        }), _callee5, this)
                    }))), function open(t, e) {
                        return m.apply(this, arguments)
                    })
                }, {
                    key: "reclaimCollateral",
                    value: (s = (0, g.default)(c.default.mark((function _callee6(t, e, r) {
                        var n;
                        return c.default.wrap((function _callee6$(i) {
                            for (;;) switch (i.prev = i.next) {
                                case 0:
                                    return n = r.promise, e = (0, E.castAsCurrency)(e, T.ETH), i.abrupt("return", this.proxyActions.frob(this._managerAddress, this.getIdBytes(t), e.toFixed("wei"), 0, {
                                        dsProxy: !0,
                                        promise: n,
                                        metadata: {
                                            id: t,
                                            dink: e
                                        }
                                    }));
                                case 3:
                                case "end":
                                    return i.stop()
                            }
                        }), _callee6, this)
                    }))), function reclaimCollateral(t, e, r) {
                        return s.apply(this, arguments)
                    })
                }, {
                    key: "openLockAndDraw",
                    value: (a = (0, g.default)(c.default.mark((function _callee7(t, e, r, n) {
                        var i, o, a, s, u, l;
                        return c.default.wrap((function _callee7$(c) {
                            for (;;) switch (c.prev = c.next) {
                                case 0:
                                    return i = n.promise, o = n.cache, a = void 0 === o || o, s = this.get(I).getCdpType(e.type, t), u = this.lockAndDraw(null, s.ilk, e, r, {
                                        promise: i
                                    }), c.t0 = B.default, c.next = 6, u;
                                case 6:
                                    return c.t1 = c.sent, c.t2 = s.ilk, c.t3 = this, c.next = 11, c.t0.create.call(c.t0, c.t1, c.t2, c.t3);
                                case 11:
                                    return l = c.sent, this._putInInstanceCache(l.id, l, a), c.abrupt("return", l);
                                case 14:
                                case "end":
                                    return c.stop()
                            }
                        }), _callee7, this)
                    }))), function openLockAndDraw(t, e, r, n) {
                        return a.apply(this, arguments)
                    })
                }, {
                    key: "lockAndDraw",
                    value: (o = (0, g.default)(c.default.mark((function _callee8(t, e, r) {
                        var n, i, o, a, s, l, h, d, p, m, y = arguments;
                        return c.default.wrap((function _callee8$(c) {
                            for (;;) switch (c.prev = c.next) {
                                case 0:
                                    return i = y.length > 3 && void 0 !== y[3] ? y[3] : (0, T.DAI)(0), o = y.length > 4 ? y[4] : void 0, a = o.promise, (0, x.default)(r && i, "both amounts must be specified"), (0, x.default)(r instanceof v.Currency, "lockAmount must be a Currency value"), i = (0, E.castAsCurrency)(i, T.DAI), c.next = 7, this.get("proxy").ensureProxy({
                                        promise: a
                                    });
                                case 7:
                                    if (s = c.sent, l = this.get("smartContract").getContractAddress("MCD_JUG"), h = T.ETH.isInstance(r), d = T.GNT.isInstance(r), p = setMethod(h, d, t), m = [this._managerAddress, l, this._adapterAddress(e), this._adapterAddress("DAI"), t || (0, E.stringToBytes)(e), !h && r.toFixed(this._precision(r, e)), i.toFixed("wei"), {
                                            dsProxy: !0,
                                            value: h ? r.toFixed("wei") : 0,
                                            promise: a,
                                            metadata: {
                                                id: t,
                                                ilk: e,
                                                lockAmount: r,
                                                drawAmount: i
                                            }
                                        }].filter((function (t) {
                                            return t
                                        })), "openLockGNTAndDraw" !== p) {
                                        c.next = 16;
                                        break
                                    }
                                    return c.next = 16, this.get("token").getToken("GNT").transfer(s, r);
                                case 16:
                                    if (!t || !d) {
                                        c.next = 19;
                                        break
                                    }
                                    return c.next = 19, transferToBag(r, s, this);
                                case 19:
                                    return h || "openLockGNTAndDraw" === p || m.splice(-1, 0, !T.GNT.isInstance(r)), c.next = 22, (n = this.proxyActions)[p].apply(n, (0, u.default)(m));
                                case 22:
                                    return c.abrupt("return", c.sent);
                                case 23:
                                case "end":
                                    return c.stop()
                            }
                        }), _callee8, this)
                    }))), function lockAndDraw(t, e, r) {
                        return o.apply(this, arguments)
                    })
                }, {
                    key: "lock",
                    value: (i = (0, g.default)(c.default.mark((function _callee9(t, e, r, n, i) {
                        var o, a, s, l, h, d, p;
                        return c.default.wrap((function _callee9$(c) {
                            for (;;) switch (c.prev = c.next) {
                                case 0:
                                    if (a = i.promise, n) {
                                        c.next = 5;
                                        break
                                    }
                                    return c.next = 4, this.getOwner(t);
                                case 4:
                                    n = c.sent;
                                case 5:
                                    return c.next = 7, this.get("proxy").ensureProxy({
                                        promise: a
                                    });
                                case 7:
                                    if (s = c.sent, l = T.ETH.isInstance(r), h = T.GNT.isInstance(r), d = "safeLock".concat(l ? "ETH" : "Gem"), p = [this._managerAddress, this._adapterAddress(e), t, !l && r.toFixed(this._precision(r, e)), n, {
                                            dsProxy: !0,
                                            value: l ? r.toFixed("wei") : 0,
                                            promise: a,
                                            metadata: {
                                                id: t,
                                                ilk: e,
                                                lockAmount: r
                                            }
                                        }].filter((function (t) {
                                            return t
                                        })), !t || !h) {
                                        c.next = 15;
                                        break
                                    }
                                    return c.next = 15, transferToBag(r, s, this);
                                case 15:
                                    return l || p.splice(-2, 0, !T.GNT.isInstance(r)), c.abrupt("return", (o = this.proxyActions)[d].apply(o, (0, u.default)(p)));
                                case 17:
                                case "end":
                                    return c.stop()
                            }
                        }), _callee9, this)
                    }))), function lock(t, e, r, n, o) {
                        return i.apply(this, arguments)
                    })
                }, {
                    key: "draw",
                    value: (n = (0, g.default)(c.default.mark((function _callee10(t, e, r, n) {
                        var i;
                        return c.default.wrap((function _callee10$(o) {
                            for (;;) switch (o.prev = o.next) {
                                case 0:
                                    return i = n.promise, o.abrupt("return", this.proxyActions.draw(this._managerAddress, this.get("smartContract").getContractAddress("MCD_JUG"), this._adapterAddress("DAI"), this.getIdBytes(t), (0, E.castAsCurrency)(r, T.DAI).toFixed("wei"), {
                                        dsProxy: !0,
                                        promise: i,
                                        metadata: {
                                            id: t,
                                            ilk: e,
                                            drawAmount: r
                                        }
                                    }));
                                case 2:
                                case "end":
                                    return o.stop()
                            }
                        }), _callee10, this)
                    }))), function draw(t, e, r, i) {
                        return n.apply(this, arguments)
                    })
                }, {
                    key: "wipeAndFree",
                    value: function wipeAndFree(t, e) {
                        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : (0, T.DAI)(0),
                            n = arguments.length > 3 ? arguments[3] : void 0,
                            i = arguments.length > 4 ? arguments[4] : void 0,
                            o = i.promise,
                            a = T.ETH.isInstance(n),
                            s = a ? "wipeAndFreeETH" : "wipeAndFreeGem";
                        return this.proxyActions[s](this._managerAddress, this._adapterAddress(e), this._adapterAddress("DAI"), this.getIdBytes(t), n.toFixed(this._precision(n, e)), r.toFixed("wei"), {
                            dsProxy: !0,
                            promise: o,
                            metadata: {
                                id: t,
                                ilk: e,
                                wipeAmount: r,
                                freeAmount: n
                            }
                        })
                    }
                }, {
                    key: "wipe",
                    value: (r = (0, g.default)(c.default.mark((function _callee11(t, e, r, n) {
                        var i;
                        return c.default.wrap((function _callee11$(o) {
                            for (;;) switch (o.prev = o.next) {
                                case 0:
                                    if (i = n.promise, r) {
                                        o.next = 5;
                                        break
                                    }
                                    return o.next = 4, this.getOwner(t);
                                case 4:
                                    r = o.sent;
                                case 5:
                                    return o.abrupt("return", this.proxyActions.safeWipe(this._managerAddress, this._adapterAddress("DAI"), this.getIdBytes(t), e.toFixed("wei"), r, {
                                        dsProxy: !0,
                                        promise: i,
                                        metadata: {
                                            id: t,
                                            wipeAmount: e
                                        }
                                    }));
                                case 6:
                                case "end":
                                    return o.stop()
                            }
                        }), _callee11, this)
                    }))), function wipe(t, e, n, i) {
                        return r.apply(this, arguments)
                    })
                }, {
                    key: "unsafeWipe",
                    value: function unsafeWipe(t, e, r) {
                        var n = r.promise;
                        return this.proxyActions.wipe(this._managerAddress, this._adapterAddress("DAI"), this.getIdBytes(t), e.toFixed("wei"), {
                            dsProxy: !0,
                            promise: n,
                            metadata: {
                                id: t,
                                wipeAmount: e
                            }
                        })
                    }
                }, {
                    key: "wipeAll",
                    value: (e = (0, g.default)(c.default.mark((function _callee12(t, e) {
                        var r, n, i = arguments;
                        return c.default.wrap((function _callee12$(o) {
                            for (;;) switch (o.prev = o.next) {
                                case 0:
                                    if (r = i.length > 2 && void 0 !== i[2] ? i[2] : {}, n = r.promise, e) {
                                        o.next = 5;
                                        break
                                    }
                                    return o.next = 4, this.getOwner(t);
                                case 4:
                                    e = o.sent;
                                case 5:
                                    return o.abrupt("return", this.proxyActions.safeWipeAll(this._managerAddress, this._adapterAddress("DAI"), this.getIdBytes(t), e, {
                                        dsProxy: !0,
                                        promise: n,
                                        metadata: {
                                            id: t
                                        }
                                    }));
                                case 6:
                                case "end":
                                    return o.stop()
                            }
                        }), _callee12, this)
                    }))), function wipeAll(t, r) {
                        return e.apply(this, arguments)
                    })
                }, {
                    key: "unsafeWipeAll",
                    value: function unsafeWipeAll(t) {
                        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            r = e.promise;
                        return this.proxyActions.wipeAll(this._managerAddress, this._adapterAddress("DAI"), this.getIdBytes(t), {
                            dsProxy: !0,
                            promise: r,
                            metadata: {
                                id: t
                            }
                        })
                    }
                }, {
                    key: "wipeAllAndFree",
                    value: function wipeAllAndFree(t, e, r, n) {
                        var i = n.promise,
                            o = T.ETH.isInstance(r) ? "wipeAllAndFreeETH" : "wipeAllAndFreeGem";
                        return this.proxyActions[o](this._managerAddress, this._adapterAddress(e), this._adapterAddress("DAI"), this.getIdBytes(t), r.toFixed(this._precision(r, e)), {
                            dsProxy: !0,
                            promise: i,
                            metadata: {
                                id: t,
                                ilk: e,
                                freeAmount: r
                            }
                        })
                    }
                }, {
                    key: "give",
                    value: function give(t, e, r) {
                        var n = r.promise;
                        return this.proxyActions.give(this._managerAddress, this.getIdBytes(t), e, {
                            dsProxy: !0,
                            promise: n,
                            metadata: {
                                id: t
                            }
                        })
                    }
                }, {
                    key: "giveToProxy",
                    value: function giveToProxy(t, e, r) {
                        var n = r.promise;
                        return this.proxyActions.giveToProxy(this._contractAddress("PROXY_REGISTRY"), this._managerAddress, this.getIdBytes(t), e, {
                            dsProxy: !0,
                            promise: n,
                            metadata: {
                                id: t,
                                address: e
                            }
                        })
                    }
                }, {
                    key: "getUrn",
                    value: function getUrn(t) {
                        return this._getUrnPromises[t] || (this._getUrnPromises[t] = this._manager.urns(t)), this._getUrnPromises[t]
                    }
                }, {
                    key: "getOwner",
                    value: function getOwner(t) {
                        return this._manager.owns(this.getIdBytes(t))
                    }
                }, {
                    key: "getIdBytes",
                    value: function getIdBytes(t) {
                        var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                        return (0, x.default)("number" == typeof t, "ID must be a number"), (e ? "0x" : "") + (0, N.default)(t.toString(16), 24, "0")
                    }
                }, {
                    key: "reset",
                    value: function reset() {
                        this._getCdpIdsPromises = {}, this._getUrnPromises = {}
                    }
                }, {
                    key: "_contractAddress",
                    value: function _contractAddress(t) {
                        return this.get("smartContract").getContractAddress(t)
                    }
                }, {
                    key: "_adapterAddress",
                    value: function _adapterAddress(t) {
                        return this.get(O).adapterAddress(t)
                    }
                }, {
                    key: "_precision",
                    value: function _precision(t, e) {
                        return "ETH" === t.type.symbol ? "wei" : this.get(I).getCdpType(t.type, e).decimals
                    }
                }, {
                    key: "_getFromInstanceCache",
                    value: function _getFromInstanceCache(t, e) {
                        if (e) {
                            this._instanceCache || (this._instanceCache = {});
                            var r = this._instanceCache[t];
                            return r || void 0
                        }
                    }
                }, {
                    key: "_putInInstanceCache",
                    value: function _putInInstanceCache(t, e, r) {
                        r && (this._instanceCache || (this._instanceCache = {}), this._instanceCache[t] = e)
                    }
                }, {
                    key: "getNewCdpId",
                    value: function getNewCdpId(t) {
                        var e = t.receipt.logs,
                            r = this.get("smartContract").getContract("CDP_MANAGER"),
                            n = this.get("web3")._web3,
                            i = r.interface.events.NewCdp,
                            o = n.utils.keccak256(n.utils.toHex(i.signature)),
                            a = e.filter((function (t) {
                                return t.topics[0].toLowerCase() === o.toLowerCase()
                            })),
                            s = i.parse(a[0].topics, a[0].data);
                        return (0, x.default)(s.cdp, "could not find log for NewCdp event"), parseInt(s.cdp)
                    }
                }, {
                    key: "getEventHistory",
                    value: function getEventHistory(t) {
                        return this._eventHistoryCache || (this._eventHistoryCache = {}), (0, C.default)(this, t, this._eventHistoryCache)
                    }
                }, {
                    key: "resetEventHistoryCache",
                    value: function resetEventHistoryCache() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                        null !== t ? delete this._eventHistoryCache[t] : this._eventHistoryCache = {}
                    }
                }, {
                    key: "proxyActions",
                    get: function get() {
                        return this.get("smartContract").getContract("PROXY_ACTIONS")
                    }
                }, {
                    key: "vat",
                    get: function get() {
                        return this.get(O).vat
                    }
                }, {
                    key: "_manager",
                    get: function get() {
                        return this.get("smartContract").getContract("CDP_MANAGER")
                    }
                }, {
                    key: "_managerAddress",
                    get: function get() {
                        return this._contractAddress("CDP_MANAGER")
                    }
                }]), CdpManager
            }(w.LocalService), (0, b.default)(s.prototype, "open", [M.default], Object.getOwnPropertyDescriptor(s.prototype, "open"), s.prototype), (0, b.default)(s.prototype, "reclaimCollateral", [M.default], Object.getOwnPropertyDescriptor(s.prototype, "reclaimCollateral"), s.prototype), (0, b.default)(s.prototype, "openLockAndDraw", [M.default], Object.getOwnPropertyDescriptor(s.prototype, "openLockAndDraw"), s.prototype), (0, b.default)(s.prototype, "lockAndDraw", [o], Object.getOwnPropertyDescriptor(s.prototype, "lockAndDraw"), s.prototype), (0, b.default)(s.prototype, "lock", [M.default], Object.getOwnPropertyDescriptor(s.prototype, "lock"), s.prototype), (0, b.default)(s.prototype, "draw", [M.default], Object.getOwnPropertyDescriptor(s.prototype, "draw"), s.prototype), (0, b.default)(s.prototype, "wipeAndFree", [a], Object.getOwnPropertyDescriptor(s.prototype, "wipeAndFree"), s.prototype), (0, b.default)(s.prototype, "wipe", [M.default], Object.getOwnPropertyDescriptor(s.prototype, "wipe"), s.prototype), (0, b.default)(s.prototype, "unsafeWipe", [M.default], Object.getOwnPropertyDescriptor(s.prototype, "unsafeWipe"), s.prototype), (0, b.default)(s.prototype, "wipeAll", [M.default], Object.getOwnPropertyDescriptor(s.prototype, "wipeAll"), s.prototype), (0, b.default)(s.prototype, "unsafeWipeAll", [M.default], Object.getOwnPropertyDescriptor(s.prototype, "unsafeWipeAll"), s.prototype), (0, b.default)(s.prototype, "wipeAllAndFree", [M.default], Object.getOwnPropertyDescriptor(s.prototype, "wipeAllAndFree"), s.prototype), (0, b.default)(s.prototype, "give", [M.default], Object.getOwnPropertyDescriptor(s.prototype, "give"), s.prototype), (0, b.default)(s.prototype, "giveToProxy", [M.default], Object.getOwnPropertyDescriptor(s.prototype, "giveToProxy"), s.prototype), s);

        function setMethod(t, e, r) {
            return r && t ? "lockETHAndDraw" : t ? "openLockETHAndDraw" : !r && e ? "openLockGNTAndDraw" : r ? "lockGemAndDraw" : "openLockGemAndDraw"
        }

        function transferToBag(t, e, r) {
            return _transferToBag.apply(this, arguments)
        }

        function _transferToBag() {
            return (_transferToBag = (0, g.default)(c.default.mark((function _callee13(t, e, r) {
                var n, i, o;
                return c.default.wrap((function _callee13$(a) {
                    for (;;) switch (a.prev = a.next) {
                        case 0:
                            return n = r.get("token").getToken(T.GNT), i = r.get("smartContract").getContract("MCD_JOIN_GNT_A"), a.next = 4, i.bags(e);
                        case 4:
                            return o = a.sent, a.abrupt("return", n.transfer(o, t));
                        case 6:
                        case "end":
                            return a.stop()
                    }
                }), _callee13)
            })))).apply(this, arguments)
        }
        e.default = D
    }, function (t, e, r) {
        var n = function (t) {
            var e = Object.prototype,
                r = e.hasOwnProperty,
                n = "function" == typeof Symbol ? Symbol : {},
                i = n.iterator || "@@iterator",
                o = n.asyncIterator || "@@asyncIterator",
                a = n.toStringTag || "@@toStringTag";

            function wrap(t, e, r, n) {
                var i = e && e.prototype instanceof Generator ? e : Generator,
                    o = Object.create(i.prototype),
                    a = new Context(n || []);
                return o._invoke = function makeInvokeMethod(t, e, r) {
                    var n = "suspendedStart";
                    return function invoke(i, o) {
                        if ("executing" === n) throw new Error("Generator is already running");
                        if ("completed" === n) {
                            if ("throw" === i) throw o;
                            return doneResult()
                        }
                        for (r.method = i, r.arg = o;;) {
                            var a = r.delegate;
                            if (a) {
                                var u = maybeInvokeDelegate(a, r);
                                if (u) {
                                    if (u === s) continue;
                                    return u
                                }
                            }
                            if ("next" === r.method) r.sent = r._sent = r.arg;
                            else if ("throw" === r.method) {
                                if ("suspendedStart" === n) throw n = "completed", r.arg;
                                r.dispatchException(r.arg)
                            } else "return" === r.method && r.abrupt("return", r.arg);
                            n = "executing";
                            var c = tryCatch(t, e, r);
                            if ("normal" === c.type) {
                                if (n = r.done ? "completed" : "suspendedYield", c.arg === s) continue;
                                return {
                                    value: c.arg,
                                    done: r.done
                                }
                            }
                            "throw" === c.type && (n = "completed", r.method = "throw", r.arg = c.arg)
                        }
                    }
                }(t, r, a), o
            }

            function tryCatch(t, e, r) {
                try {
                    return {
                        type: "normal",
                        arg: t.call(e, r)
                    }
                } catch (t) {
                    return {
                        type: "throw",
                        arg: t
                    }
                }
            }
            t.wrap = wrap;
            var s = {};

            function Generator() {}

            function GeneratorFunction() {}

            function GeneratorFunctionPrototype() {}
            var u = {};
            u[i] = function () {
                return this
            };
            var c = Object.getPrototypeOf,
                l = c && c(c(values([])));
            l && l !== e && r.call(l, i) && (u = l);
            var h = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(u);

            function defineIteratorMethods(t) {
                ["next", "throw", "return"].forEach((function (e) {
                    t[e] = function (t) {
                        return this._invoke(e, t)
                    }
                }))
            }

            function AsyncIterator(t, e) {
                var n;
                this._invoke = function enqueue(i, o) {
                    function callInvokeWithMethodAndArg() {
                        return new e((function (n, a) {
                            ! function invoke(n, i, o, a) {
                                var s = tryCatch(t[n], t, i);
                                if ("throw" !== s.type) {
                                    var u = s.arg,
                                        c = u.value;
                                    return c && "object" == typeof c && r.call(c, "__await") ? e.resolve(c.__await).then((function (t) {
                                        invoke("next", t, o, a)
                                    }), (function (t) {
                                        invoke("throw", t, o, a)
                                    })) : e.resolve(c).then((function (t) {
                                        u.value = t, o(u)
                                    }), (function (t) {
                                        return invoke("throw", t, o, a)
                                    }))
                                }
                                a(s.arg)
                            }(i, o, n, a)
                        }))
                    }
                    return n = n ? n.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg()
                }
            }

            function maybeInvokeDelegate(t, e) {
                var r = t.iterator[e.method];
                if (void 0 === r) {
                    if (e.delegate = null, "throw" === e.method) {
                        if (t.iterator.return && (e.method = "return", e.arg = void 0, maybeInvokeDelegate(t, e), "throw" === e.method)) return s;
                        e.method = "throw", e.arg = new TypeError("The iterator does not provide a 'throw' method")
                    }
                    return s
                }
                var n = tryCatch(r, t.iterator, e.arg);
                if ("throw" === n.type) return e.method = "throw", e.arg = n.arg, e.delegate = null, s;
                var i = n.arg;
                return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, s) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, s)
            }

            function pushTryEntry(t) {
                var e = {
                    tryLoc: t[0]
                };
                1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e)
            }

            function resetTryEntry(t) {
                var e = t.completion || {};
                e.type = "normal", delete e.arg, t.completion = e
            }

            function Context(t) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], t.forEach(pushTryEntry, this), this.reset(!0)
            }

            function values(t) {
                if (t) {
                    var e = t[i];
                    if (e) return e.call(t);
                    if ("function" == typeof t.next) return t;
                    if (!isNaN(t.length)) {
                        var n = -1,
                            o = function next() {
                                for (; ++n < t.length;)
                                    if (r.call(t, n)) return next.value = t[n], next.done = !1, next;
                                return next.value = void 0, next.done = !0, next
                            };
                        return o.next = o
                    }
                }
                return {
                    next: doneResult
                }
            }

            function doneResult() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return GeneratorFunction.prototype = h.constructor = GeneratorFunctionPrototype, GeneratorFunctionPrototype.constructor = GeneratorFunction, GeneratorFunctionPrototype[a] = GeneratorFunction.displayName = "GeneratorFunction", t.isGeneratorFunction = function (t) {
                var e = "function" == typeof t && t.constructor;
                return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name))
            }, t.mark = function (t) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, a in t || (t[a] = "GeneratorFunction")), t.prototype = Object.create(h), t
            }, t.awrap = function (t) {
                return {
                    __await: t
                }
            }, defineIteratorMethods(AsyncIterator.prototype), AsyncIterator.prototype[o] = function () {
                return this
            }, t.AsyncIterator = AsyncIterator, t.async = function (e, r, n, i, o) {
                void 0 === o && (o = Promise);
                var a = new AsyncIterator(wrap(e, r, n, i), o);
                return t.isGeneratorFunction(r) ? a : a.next().then((function (t) {
                    return t.done ? t.value : a.next()
                }))
            }, defineIteratorMethods(h), h[a] = "Generator", h[i] = function () {
                return this
            }, h.toString = function () {
                return "[object Generator]"
            }, t.keys = function (t) {
                var e = [];
                for (var r in t) e.push(r);
                return e.reverse(),
                    function next() {
                        for (; e.length;) {
                            var r = e.pop();
                            if (r in t) return next.value = r, next.done = !1, next
                        }
                        return next.done = !0, next
                    }
            }, t.values = values, Context.prototype = {
                constructor: Context,
                reset: function (t) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(resetTryEntry), !t)
                        for (var e in this) "t" === e.charAt(0) && r.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0)
                },
                stop: function () {
                    this.done = !0;
                    var t = this.tryEntries[0].completion;
                    if ("throw" === t.type) throw t.arg;
                    return this.rval
                },
                dispatchException: function (t) {
                    if (this.done) throw t;
                    var e = this;

                    function handle(r, n) {
                        return o.type = "throw", o.arg = t, e.next = r, n && (e.method = "next", e.arg = void 0), !!n
                    }
                    for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                        var i = this.tryEntries[n],
                            o = i.completion;
                        if ("root" === i.tryLoc) return handle("end");
                        if (i.tryLoc <= this.prev) {
                            var a = r.call(i, "catchLoc"),
                                s = r.call(i, "finallyLoc");
                            if (a && s) {
                                if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                                if (this.prev < i.finallyLoc) return handle(i.finallyLoc)
                            } else if (a) {
                                if (this.prev < i.catchLoc) return handle(i.catchLoc, !0)
                            } else {
                                if (!s) throw new Error("try statement without catch or finally");
                                if (this.prev < i.finallyLoc) return handle(i.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function (t, e) {
                    for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                        var i = this.tryEntries[n];
                        if (i.tryLoc <= this.prev && r.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                            var o = i;
                            break
                        }
                    }
                    o && ("break" === t || "continue" === t) && o.tryLoc <= e && e <= o.finallyLoc && (o = null);
                    var a = o ? o.completion : {};
                    return a.type = t, a.arg = e, o ? (this.method = "next", this.next = o.finallyLoc, s) : this.complete(a)
                },
                complete: function (t, e) {
                    if ("throw" === t.type) throw t.arg;
                    return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), s
                },
                finish: function (t) {
                    for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                        var r = this.tryEntries[e];
                        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), s
                    }
                },
                catch: function (t) {
                    for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                        var r = this.tryEntries[e];
                        if (r.tryLoc === t) {
                            var n = r.completion;
                            if ("throw" === n.type) {
                                var i = n.arg;
                                resetTryEntry(r)
                            }
                            return i
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function (t, e, r) {
                    return this.delegate = {
                        iterator: values(t),
                        resultName: e,
                        nextLoc: r
                    }, "next" === this.method && (this.arg = void 0), s
                }
            }, t
        }(t.exports);
        try {
            regeneratorRuntime = n
        } catch (t) {
            Function("r", "regeneratorRuntime = r")(n)
        }
    }, function (t, e) {
        t.exports = function _arrayWithHoles(t) {
            if (Array.isArray(t)) return t
        }
    }, function (t, e) {
        t.exports = function _iterableToArrayLimit(t, e) {
            if ("undefined" != typeof Symbol && Symbol.iterator in Object(t)) {
                var r = [],
                    n = !0,
                    i = !1,
                    o = void 0;
                try {
                    for (var a, s = t[Symbol.iterator](); !(n = (a = s.next()).done) && (r.push(a.value), !e || r.length !== e); n = !0);
                } catch (t) {
                    i = !0, o = t
                } finally {
                    try {
                        n || null == s.return || s.return()
                    } finally {
                        if (i) throw o
                    }
                }
                return r
            }
        }
    }, function (t, e) {
        t.exports = function _nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
    }, function (t, e) {
        t.exports = function _assertThisInitialized(t) {
            if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t
        }
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var i = n(r(47)),
            o = n(r(115)),
            a = n(r(9)),
            s = n(r(11)),
            u = n(r(255)),
            c = n(r(256)),
            l = n(r(254)),
            h = function () {
                function ServiceProvider(t, e) {
                    var r = e.services,
                        n = e.defaults,
                        i = e.disabled;
                    (0, a.default)(this, ServiceProvider), this._config = t, this._services = r, this._resolver = {
                        defaults: n,
                        disabled: i
                    }
                }
                return (0, s.default)(ServiceProvider, [{
                    key: "supports",
                    value: function supports(t) {
                        return !!this._services[t]
                    }
                }, {
                    key: "buildContainer",
                    value: function buildContainer() {
                        var t = new c.default;
                        for (var e in this._config) {
                            var r = (0, l.default)(e, this._config[e], this._resolver),
                                n = (0, o.default)(r, 2),
                                a = n[0],
                                s = n[1],
                                u = void 0;
                            if ("object" == (0, i.default)(a)) u = a;
                            else if ("function" == typeof a) u = new a;
                            else {
                                if (!this.supports(a) && "exchange" === e) throw new Error("This service has been extracted from dai.js. Please refer to the documentation to add it as a plugin: \n\n https://github.com/makerdao/dai.js/wiki/Basic-Usage-(Plugins)");
                                if (!this.supports(a)) throw new Error("Unsupported service in configuration: " + a);
                                u = new this._services[a]
                            }
                            u.manager().settings(s), t.register(u, e)
                        }
                        return this._registerDependencies(t), t.injectDependencies(), this._container = t, t
                    }
                }, {
                    key: "_registerDependencies",
                    value: function _registerDependencies(t) {
                        var e = t.getRegisteredServiceNames(),
                            r = e.reduce((function (e, r) {
                                var n = t.service(r).manager().dependencies();
                                return (0, u.default)(e.concat(n))
                            }), []).filter((function (t) {
                                return !e.includes(t)
                            }));
                        if (0 !== r.length) {
                            var n = !0,
                                i = !1,
                                o = void 0;
                            try {
                                for (var a, s = r[Symbol.iterator](); !(n = (a = s.next()).done); n = !0) {
                                    var c = a.value,
                                        l = this._resolver.defaults[c],
                                        h = this._services[l];
                                    if (!h) throw new Error('No service found for "'.concat(c, '"'));
                                    t.register(new h, c)
                                }
                            } catch (t) {
                                i = !0, o = t
                            } finally {
                                try {
                                    n || null == s.return || s.return()
                                } finally {
                                    if (i) throw o
                                }
                            }
                            this._registerDependencies(t)
                        }
                    }
                }, {
                    key: "service",
                    value: function service(t) {
                        return this._container || this.buildContainer(), this._container.service(t)
                    }
                }]), ServiceProvider
            }();
        e.default = h
    }, function (t, e) {
        t.exports = function _isNativeFunction(t) {
            return -1 !== Function.toString.call(t).indexOf("[native code]")
        }
    }, function (t, e, r) {
        var n = r(166),
            i = r(544);

        function _construct(e, r, o) {
            return i() ? t.exports = _construct = Reflect.construct : t.exports = _construct = function _construct(t, e, r) {
                var i = [null];
                i.push.apply(i, e);
                var o = new(Function.bind.apply(t, i));
                return r && n(o, r.prototype), o
            }, _construct.apply(null, arguments)
        }
        t.exports = _construct
    }, function (t, e) {
        t.exports = function _isNativeReflectConstruct() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
            } catch (t) {
                return !1
            }
        }
    }, function (t, e, r) {
        var n = r(546),
            i = r(103);
        t.exports = function values(t) {
            return null == t ? [] : n(t, i(t))
        }
    }, function (t, e, r) {
        var n = r(150);
        t.exports = function baseValues(t, e) {
            return n(e, (function (e) {
                return t[e]
            }))
        }
    }, function (t, e, r) {
        var n = r(548);

        function _get(e, r, i) {
            return "undefined" != typeof Reflect && Reflect.get ? t.exports = _get = Reflect.get : t.exports = _get = function _get(t, e, r) {
                var i = n(t, e);
                if (i) {
                    var o = Object.getOwnPropertyDescriptor(i, e);
                    return o.get ? o.get.call(r) : o.value
                }
            }, _get(e, r, i || e)
        }
        t.exports = _get
    }, function (t, e, r) {
        var n = r(14);
        t.exports = function _superPropBase(t, e) {
            for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = n(t)););
            return t
        }
    }, function (t, e, r) {
        var n = r(64),
            i = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var o = i(r(9)),
            a = i(r(11)),
            s = i(r(257)),
            u = i(r(170)),
            c = n(r(82)),
            l = (0, i(r(550)).default)("dai:ServiceManagerBase");

        function _promisify(t) {
            return new Promise((function (e, r) {
                try {
                    e(t())
                } catch (t) {
                    r(t.message)
                }
            }))
        }
        var h = function () {
            function ServiceManagerBase() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                    e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                if ((0, o.default)(this, ServiceManagerBase), null !== t && "function" != typeof t) throw new Error("Invalid argument init: not a function or null.");
                if (null === t && (t = function init() {
                        return Promise.resolve()
                    }), null !== e && "function" != typeof e) throw new Error("Invalid argument connect: not a function or null.");
                if (null === e && null !== r && (e = function connect() {
                        return Promise.resolve()
                    }), null !== r && "function" != typeof r) throw new Error("Invalid argument auth: not a function or null.");
                this._init = t, this._connect = e, this._auth = r, this._type = null === r ? null === e ? c.default.LOCAL : c.default.PUBLIC : c.default.PRIVATE, this._state = new s.default(u.default.CREATED, c.serviceTypeTransitions[this._type]), this._initPromise = null, this._connectPromise = null, this._authPromise = null
            }
            return (0, a.default)(ServiceManagerBase, [{
                key: "initialize",
                value: function initialize(t) {
                    var e = this;
                    if (this._state.inState(u.default.CREATED)) {
                        if (this._initPromise) throw new Error("Unexpected init promise in state CREATED.");
                        this._state.transitionTo(u.default.INITIALIZING), this._initPromise = _promisify((function () {
                            return e._init(t)
                        })).then((function () {
                            return e._state.transitionTo(e._type === c.default.LOCAL ? u.default.READY : u.default.OFFLINE)
                        }), (function (t) {
                            throw l(t), e._state.transitionTo(u.default.CREATED), t
                        }))
                    }
                    return this._initPromise
                }
            }, {
                key: "connect",
                value: function connect() {
                    var t = this;
                    return this._type === c.default.LOCAL ? this.initialize() : (this._state.inState([u.default.CREATED, u.default.INITIALIZING, u.default.OFFLINE]) && null === this._connectPromise && (this._connectPromise = this.initialize().then((function () {
                        return t._state.transitionTo(u.default.CONNECTING), _promisify((function () {
                            return t._connect((function () {
                                return t._disconnect()
                            }))
                        })).then((function () {
                            t._state.inState(u.default.CONNECTING) && t._state.transitionTo(t._type === c.default.PUBLIC ? u.default.READY : u.default.ONLINE)
                        }), (function (e) {
                            throw l("connect error:", e), t._state.inState(u.default.CONNECTING) && t._state.transitionTo(u.default.OFFLINE), e
                        }))
                    }))), this._connectPromise)
                }
            }, {
                key: "authenticate",
                value: function authenticate() {
                    var t = this;
                    return this._type !== c.default.PRIVATE ? this.connect() : (this._state.inState([u.default.CREATED, u.default.INITIALIZING, u.default.OFFLINE, u.default.CONNECTING, u.default.ONLINE]) && null === this._authPromise && (this._authPromise = this.connect().then((function () {
                        return t._state.transitionTo(u.default.AUTHENTICATING), _promisify((function () {
                            return t._auth((function () {
                                return t._deauthenticate()
                            }))
                        })).then((function () {
                            t._state.inState(u.default.AUTHENTICATING) && t._state.transitionTo(u.default.READY)
                        }), (function (e) {
                            l("authenticate error: " + e), t._state.inState(u.default.AUTHENTICATING) && t._state.transitionTo(u.default.ONLINE)
                        }))
                    }))), this._authPromise)
                }
            }, {
                key: "settings",
                value: function settings(t) {
                    return this._settings = t, this
                }
            }, {
                key: "state",
                value: function state() {
                    return this._state.state()
                }
            }, {
                key: "type",
                value: function type() {
                    return this._type
                }
            }, {
                key: "isInitialized",
                value: function isInitialized() {
                    return !this._state.inState([u.default.CREATED, u.default.INITIALIZING])
                }
            }, {
                key: "isConnected",
                value: function isConnected() {
                    return this._type === c.default.LOCAL ? null : this._state.inState([u.default.ONLINE, u.default.AUTHENTICATING, u.default.READY])
                }
            }, {
                key: "isAuthenticated",
                value: function isAuthenticated() {
                    return this._type === c.default.PRIVATE ? this._state.inState(u.default.READY) : null
                }
            }, {
                key: "isReady",
                value: function isReady() {
                    return this._state.inState(u.default.READY)
                }
            }, {
                key: "onInitialized",
                value: function onInitialized(t) {
                    return this._state.onStateChanged((function (e, r) {
                        e !== u.default.INITIALIZING || r !== u.default.OFFLINE && r !== u.default.READY || t()
                    })), this
                }
            }, {
                key: "onConnected",
                value: function onConnected(t) {
                    return this._state.onStateChanged((function (e, r) {
                        e !== u.default.CONNECTING || r !== u.default.ONLINE && r !== u.default.READY || t()
                    })), this
                }
            }, {
                key: "onDisconnected",
                value: function onDisconnected(t) {
                    return this._state.onStateChanged((function (e, r) {
                        r !== u.default.OFFLINE || e !== u.default.ONLINE && e !== u.default.READY || t()
                    })), this
                }
            }, {
                key: "onAuthenticated",
                value: function onAuthenticated(t) {
                    return this._state.onStateChanged((function (e, r) {
                        e === u.default.AUTHENTICATING && r === u.default.READY && t()
                    })), this
                }
            }, {
                key: "onDeauthenticated",
                value: function onDeauthenticated(t) {
                    return this.type() === c.default.PRIVATE && this._state.onStateChanged((function (e, r) {
                        r !== u.default.OFFLINE && r !== u.default.ONLINE || e !== u.default.READY || t()
                    })), this
                }
            }, {
                key: "onReady",
                value: function onReady(t) {
                    return this._state.onStateChanged((function (e, r) {
                        r === u.default.READY && t()
                    })), this
                }
            }, {
                key: "onStateChanged",
                value: function onStateChanged(t) {
                    return this._state.onStateChanged(t), this
                }
            }, {
                key: "_disconnect",
                value: function _disconnect() {
                    if (this._type === c.default.LOCAL) throw new Error("_disconnect must not be called on a Local Service");
                    this._state.inState(u.default.AUTHENTICATING) && this._deauthenticate(), this._state.inState([u.default.READY, u.default.ONLINE, u.default.CONNECTING]) && (this._authPromise = null, this._connectPromise = null, this._state.transitionTo(u.default.OFFLINE))
                }
            }, {
                key: "_deauthenticate",
                value: function _deauthenticate() {
                    if (this._type !== c.default.PRIVATE) throw new Error("_deauthenticate must not be called on a Local or Public Service");
                    this._state.inState([u.default.READY, u.default.AUTHENTICATING]) && (this._authPromise = null, this._state.transitionTo(u.default.ONLINE))
                }
            }]), ServiceManagerBase
        }();
        e.default = h
    }, function (t, e, r) {
        (function (n) {
            function load() {
                var t;
                try {
                    t = e.storage.debug
                } catch (t) {}
                return !t && void 0 !== n && "env" in n && (t = n.env.DEBUG), t
            }(e = t.exports = r(551)).log = function log() {
                return "object" == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments)
            }, e.formatArgs = function formatArgs(t) {
                var r = this.useColors;
                if (t[0] = (r ? "%c" : "") + this.namespace + (r ? " %c" : " ") + t[0] + (r ? "%c " : " ") + "+" + e.humanize(this.diff), !r) return;
                var n = "color: " + this.color;
                t.splice(1, 0, n, "color: inherit");
                var i = 0,
                    o = 0;
                t[0].replace(/%[a-zA-Z%]/g, (function (t) {
                    "%%" !== t && (i++, "%c" === t && (o = i))
                })), t.splice(o, 0, n)
            }, e.save = function save(t) {
                try {
                    null == t ? e.storage.removeItem("debug") : e.storage.debug = t
                } catch (t) {}
            }, e.load = load, e.useColors = function useColors() {
                if ("undefined" != typeof window && window.process && "renderer" === window.process.type) return !0;
                return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)
            }, e.storage = "undefined" != typeof chrome && void 0 !== chrome.storage ? chrome.storage.local : function localstorage() {
                try {
                    return window.localStorage
                } catch (t) {}
            }(), e.colors = ["lightseagreen", "forestgreen", "goldenrod", "dodgerblue", "darkorchid", "crimson"], e.formatters.j = function (t) {
                try {
                    return JSON.stringify(t)
                } catch (t) {
                    return "[UnexpectedJSONParseError]: " + t.message
                }
            }, e.enable(load())
        }).call(this, r(7))
    }, function (t, e, r) {
        var n;

        function createDebug(t) {
            function debug() {
                if (debug.enabled) {
                    var t = debug,
                        r = +new Date,
                        i = r - (n || r);
                    t.diff = i, t.prev = n, t.curr = r, n = r;
                    for (var o = new Array(arguments.length), a = 0; a < o.length; a++) o[a] = arguments[a];
                    o[0] = e.coerce(o[0]), "string" != typeof o[0] && o.unshift("%O");
                    var s = 0;
                    o[0] = o[0].replace(/%([a-zA-Z%])/g, (function (r, n) {
                        if ("%%" === r) return r;
                        s++;
                        var i = e.formatters[n];
                        if ("function" == typeof i) {
                            var a = o[s];
                            r = i.call(t, a), o.splice(s, 1), s--
                        }
                        return r
                    })), e.formatArgs.call(t, o);
                    var u = debug.log || e.log || console.log.bind(console);
                    u.apply(t, o)
                }
            }
            return debug.namespace = t, debug.enabled = e.enabled(t), debug.useColors = e.useColors(), debug.color = function selectColor(t) {
                var r, n = 0;
                for (r in t) n = (n << 5) - n + t.charCodeAt(r), n |= 0;
                return e.colors[Math.abs(n) % e.colors.length]
            }(t), "function" == typeof e.init && e.init(debug), debug
        }(e = t.exports = createDebug.debug = createDebug.default = createDebug).coerce = function coerce(t) {
            return t instanceof Error ? t.stack || t.message : t
        }, e.disable = function disable() {
            e.enable("")
        }, e.enable = function enable(t) {
            e.save(t), e.names = [], e.skips = [];
            for (var r = ("string" == typeof t ? t : "").split(/[\s,]+/), n = r.length, i = 0; i < n; i++) r[i] && ("-" === (t = r[i].replace(/\*/g, ".*?"))[0] ? e.skips.push(new RegExp("^" + t.substr(1) + "$")) : e.names.push(new RegExp("^" + t + "$")))
        }, e.enabled = function enabled(t) {
            var r, n;
            for (r = 0, n = e.skips.length; r < n; r++)
                if (e.skips[r].test(t)) return !1;
            for (r = 0, n = e.names.length; r < n; r++)
                if (e.names[r].test(t)) return !0;
            return !1
        }, e.humanize = r(552), e.names = [], e.skips = [], e.formatters = {}
    }, function (t, e) {
        var r = 1e3,
            n = 6e4,
            i = 60 * n,
            o = 24 * i;

        function plural(t, e, r) {
            if (!(t < e)) return t < 1.5 * e ? Math.floor(t / e) + " " + r : Math.ceil(t / e) + " " + r + "s"
        }
        t.exports = function (t, e) {
            e = e || {};
            var a = typeof t;
            if ("string" === a && t.length > 0) return function parse(t) {
                if ((t = String(t)).length > 100) return;
                var e = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(t);
                if (!e) return;
                var a = parseFloat(e[1]);
                switch ((e[2] || "ms").toLowerCase()) {
                    case "years":
                    case "year":
                    case "yrs":
                    case "yr":
                    case "y":
                        return 315576e5 * a;
                    case "days":
                    case "day":
                    case "d":
                        return a * o;
                    case "hours":
                    case "hour":
                    case "hrs":
                    case "hr":
                    case "h":
                        return a * i;
                    case "minutes":
                    case "minute":
                    case "mins":
                    case "min":
                    case "m":
                        return a * n;
                    case "seconds":
                    case "second":
                    case "secs":
                    case "sec":
                    case "s":
                        return a * r;
                    case "milliseconds":
                    case "millisecond":
                    case "msecs":
                    case "msec":
                    case "ms":
                        return a;
                    default:
                        return
                }
            }(t);
            if ("number" === a && !1 === isNaN(t)) return e.long ? function fmtLong(t) {
                return plural(t, o, "day") || plural(t, i, "hour") || plural(t, n, "minute") || plural(t, r, "second") || t + " ms"
            }(t) : function fmtShort(t) {
                if (t >= o) return Math.round(t / o) + "d";
                if (t >= i) return Math.round(t / i) + "h";
                if (t >= n) return Math.round(t / n) + "m";
                if (t >= r) return Math.round(t / r) + "s";
                return t + "ms"
            }(t);
            throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(t))
        }
    }, function (t, e) {
        function toposort(t, e) {
            var r = t.length,
                n = new Array(r),
                i = {},
                o = r,
                a = function makeOutgoingEdges(t) {
                    for (var e = new Map, r = 0, n = t.length; r < n; r++) {
                        var i = t[r];
                        e.has(i[0]) || e.set(i[0], new Set), e.has(i[1]) || e.set(i[1], new Set), e.get(i[0]).add(i[1])
                    }
                    return e
                }(e),
                s = function makeNodesHash(t) {
                    for (var e = new Map, r = 0, n = t.length; r < n; r++) e.set(t[r], r);
                    return e
                }(t);
            for (e.forEach((function (t) {
                    if (!s.has(t[0]) || !s.has(t[1])) throw new Error("Unknown node. There is an unknown node in the supplied edges.")
                })); o--;) i[o] || visit(t[o], o, new Set);
            return n;

            function visit(t, e, o) {
                if (o.has(t)) {
                    var u;
                    try {
                        u = ", node was:" + JSON.stringify(t)
                    } catch (t) {
                        u = ""
                    }
                    throw new Error("Cyclic dependency" + u)
                }
                if (!s.has(t)) throw new Error("Found unknown node. Make sure to provided all involved nodes. Unknown node: " + JSON.stringify(t));
                if (!i[e]) {
                    i[e] = !0;
                    var c = a.get(t) || new Set;
                    if (e = (c = Array.from(c)).length) {
                        o.add(t);
                        do {
                            var l = c[--e];
                            visit(l, s.get(l), o)
                        } while (e);
                        o.delete(t)
                    }
                    n[--r] = t
                }
            }
        }
        t.exports = function (t) {
            return toposort(function uniqueNodes(t) {
                for (var e = new Set, r = 0, n = t.length; r < n; r++) {
                    var i = t[r];
                    e.add(i[0]), e.add(i[1])
                }
                return Array.from(e)
            }(t), t)
        }, t.exports.array = toposort
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var i = n(r(9)),
            o = n(r(24)),
            a = n(r(14)),
            s = n(r(23)),
            u = n(r(82)),
            c = function (t) {
                function LocalService(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                    return (0, i.default)(this, LocalService), (0, o.default)(this, (0, a.default)(LocalService).call(this, u.default.LOCAL, t, e))
                }
                return (0, s.default)(LocalService, t), LocalService
            }(n(r(171)).default);
        e.default = c
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var i = n(r(9)),
            o = n(r(24)),
            a = n(r(14)),
            s = n(r(23)),
            u = n(r(82)),
            c = function (t) {
                function PublicService(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                    return (0, i.default)(this, PublicService), (0, o.default)(this, (0, a.default)(PublicService).call(this, u.default.PUBLIC, t, e))
                }
                return (0, s.default)(PublicService, t), PublicService
            }(n(r(171)).default);
        e.default = c
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var i = n(r(9)),
            o = n(r(24)),
            a = n(r(14)),
            s = n(r(23)),
            u = n(r(82)),
            c = function (t) {
                function PrivateService(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                    return (0, i.default)(this, PrivateService), (0, o.default)(this, (0, a.default)(PrivateService).call(this, u.default.PRIVATE, t, e))
                }
                return (0, s.default)(PrivateService, t), PrivateService
            }(n(r(171)).default);
        e.default = c
    }, function (t, e, r) {
        var n = r(212),
            i = r(558),
            o = r(173),
            a = Math.min;
        t.exports = function times(t, e) {
            if ((t = o(t)) < 1 || t > 9007199254740991) return [];
            var r = 4294967295,
                s = a(t, 4294967295);
            e = i(e), t -= 4294967295;
            for (var u = n(s, e); ++r < t;) e(r);
            return u
        }
    }, function (t, e, r) {
        var n = r(151);
        t.exports = function castFunction(t) {
            return "function" == typeof t ? t : n
        }
    }, function (t, e, r) {
        var n = r(560);
        t.exports = function toFinite(t) {
            return t ? (t = n(t)) === 1 / 0 || t === -1 / 0 ? 17976931348623157e292 * (t < 0 ? -1 : 1) : t == t ? t : 0 : 0 === t ? t : 0
        }
    }, function (t, e, r) {
        var n = r(102),
            i = r(77),
            o = /^\s+|\s+$/g,
            a = /^[-+]0x[0-9a-f]+$/i,
            s = /^0b[01]+$/i,
            u = /^0o[0-7]+$/i,
            c = parseInt;
        t.exports = function toNumber(t) {
            if ("number" == typeof t) return t;
            if (i(t)) return NaN;
            if (n(t)) {
                var e = "function" == typeof t.valueOf ? t.valueOf() : t;
                t = n(e) ? e + "" : e
            }
            if ("string" != typeof t) return 0 === t ? t : +t;
            t = t.replace(o, "");
            var r = s.test(t);
            return r || u.test(t) ? c(t.slice(2), r ? 2 : 8) : a.test(t) ? NaN : +t
        }
    }, function (t, e, r) {
        var n = r(4),
            i = r(64);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var o, a, s, u, c = n(r(9)),
            l = n(r(11)),
            h = n(r(167)),
            d = n(r(28)),
            p = n(r(29)),
            m = r(116),
            y = i(r(172)),
            b = r(30),
            g = n(r(18)),
            v = r(33),
            w = i(r(203)),
            M = (o = (0, y.tracksTransactionsWithOptions)({
                numArguments: 3
            }), a = (0, y.tracksTransactionsWithOptions)({
                numArguments: 3
            }), s = (0, y.tracksTransactionsWithOptions)({
                numArguments: 1
            }), u = function () {
                function ManagedCdp(t, e, r) {
                    var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {
                        prefetch: !0
                    };
                    (0, c.default)(this, ManagedCdp), (0, g.default)("number" == typeof t, "ID must be a number"), this.id = t, (0, g.default)(e && "string" == typeof e, "Must specify ilk"), this.ilk = e, this._cdpManager = r, this.type = r.get(b.ServiceRoles.CDP_TYPE).getCdpType(null, e), this.currency = this.type.currency, this.cache = {}, n.prefetch && this.prefetch()
                }
                return (0, l.default)(ManagedCdp, [{
                    key: "getOwner",
                    value: function getOwner() {
                        return this._cdpManager.getOwner(this.id)
                    }
                }, {
                    key: "getUrn",
                    value: function getUrn() {
                        return this._cdpManager.getUrn(this.id)
                    }
                }, {
                    key: "lockCollateral",
                    value: function lockCollateral(t) {
                        return t = (0, m.castAsCurrency)(t, this.currency), this._cdpManager.lock(this.id, this.ilk, t, null)
                    }
                }, {
                    key: "drawDai",
                    value: function drawDai(t, e) {
                        var r = e.promise;
                        return this._cdpManager.draw(this.id, this.ilk, t, {
                            promise: r
                        })
                    }
                }, {
                    key: "lockAndDraw",
                    value: function lockAndDraw() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.currency(0),
                            e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : (0, v.DAI)(0),
                            r = arguments.length > 2 ? arguments[2] : void 0,
                            n = r.promise;
                        return (0, g.default)(t && e, "amounts must be defined"), t = (0, m.castAsCurrency)(t, this.currency), e = (0, m.castAsCurrency)(e, v.DAI), this._cdpManager.lockAndDraw(this.id, this.ilk, t, e, {
                            promise: n
                        })
                    }
                }, {
                    key: "wipeDai",
                    value: function wipeDai(t) {
                        return t = (0, m.castAsCurrency)(t, v.DAI), this._cdpManager.wipe(this.id, t, null)
                    }
                }, {
                    key: "unsafeWipe",
                    value: function unsafeWipe(t) {
                        return t = (0, m.castAsCurrency)(t, v.DAI), this._cdpManager.unsafeWipe(this.id, t)
                    }
                }, {
                    key: "wipeAll",
                    value: function wipeAll() {
                        return this._cdpManager.wipeAll(this.id, null)
                    }
                }, {
                    key: "unsafeWipeAll",
                    value: function unsafeWipeAll() {
                        return this._cdpManager.unsafeWipeAll(this.id)
                    }
                }, {
                    key: "freeCollateral",
                    value: function freeCollateral(t) {
                        return this.wipeAndFree(void 0, t)
                    }
                }, {
                    key: "give",
                    value: function give(t) {
                        return this._cdpManager.give(this.id, t)
                    }
                }, {
                    key: "giveToProxy",
                    value: function giveToProxy(t) {
                        return this._cdpManager.giveToProxy(this.id, t)
                    }
                }, {
                    key: "wipeAndFree",
                    value: function wipeAndFree() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : (0, v.DAI)(0),
                            e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.currency(0),
                            r = arguments.length > 2 ? arguments[2] : void 0,
                            n = r.promise;
                        return (0, g.default)(t && e, "amounts must be defined"), t = (0, m.castAsCurrency)(t, v.DAI), e = (0, m.castAsCurrency)(e, this.currency), this._cdpManager.wipeAndFree(this.id, this.ilk, t, e, {
                            promise: n
                        })
                    }
                }, {
                    key: "wipeAllAndFree",
                    value: function wipeAllAndFree() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.currency(0),
                            e = arguments.length > 1 ? arguments[1] : void 0,
                            r = e.promise;
                        return (0, g.default)(t, "free amount must be defined"), t = (0, m.castAsCurrency)(t, this.currency), this._cdpManager.wipeAllAndFree(this.id, this.ilk, t, {
                            promise: r
                        })
                    }
                }, {
                    key: "_getUrnInfo",
                    value: function _getUrnInfo() {
                        var t = this;
                        return this._urnInfoPromise || (this._urnInfoPromise = this._cdpManager.getUrn(this.id).then((function (e) {
                            return t._cdpManager.vat.urns((0, m.stringToBytes)(t.ilk), e)
                        }))), this._urnInfoPromise.then((function (e) {
                            return t.cache.urnInfo = e, e
                        }))
                    }
                }, {
                    key: "_getCached",
                    value: function _getCached(t) {
                        return (0, g.default)(this.cache[t], "".concat(t, " is not cached")), this.cache[t]
                    }
                }, {
                    key: "prefetch",
                    value: function prefetch() {
                        return Promise.all([this._getUrnInfo(), this.type.prefetch()])
                    }
                }, {
                    key: "reset",
                    value: function reset() {
                        this._urnInfoPromise = null, this.cache = {}, this.type.reset()
                    }
                }, {
                    key: "collateralAmount",
                    get: function get() {
                        return w.collateralAmount(this.currency, this._getCached("urnInfo").ink)
                    }
                }, {
                    key: "collateralValue",
                    get: function get() {
                        return w.collateralValue(this.collateralAmount, this.type.price)
                    }
                }, {
                    key: "debtValue",
                    get: function get() {
                        return w.debtValue(this._getCached("urnInfo").art, this.type._getCached("vatInfo").rate)
                    }
                }, {
                    key: "collateralizationRatio",
                    get: function get() {
                        return w.collateralizationRatio(this.collateralValue, this.debtValue)
                    }
                }, {
                    key: "liquidationPrice",
                    get: function get() {
                        return w.liquidationPrice(this.collateralAmount, this.debtValue, this.type.liquidationRatio)
                    }
                }, {
                    key: "isSafe",
                    get: function get() {
                        return this.type.price.gte(this.liquidationPrice)
                    }
                }, {
                    key: "minSafeCollateralAmount",
                    get: function get() {
                        return w.minSafeCollateralAmount(this.debtValue, this.type.liquidationRatio, this.type.price)
                    }
                }, {
                    key: "collateralAvailable",
                    get: function get() {
                        return this.collateralAmount.minus(this.minSafeCollateralAmount)
                    }
                }, {
                    key: "daiAvailable",
                    get: function get() {
                        return w.daiAvailable(this.collateralValue, this.debtValue, this.type.liquidationRatio)
                    }
                }]), ManagedCdp
            }(), (0, h.default)(u.prototype, "drawDai", [y.default], Object.getOwnPropertyDescriptor(u.prototype, "drawDai"), u.prototype), (0, h.default)(u.prototype, "lockAndDraw", [o], Object.getOwnPropertyDescriptor(u.prototype, "lockAndDraw"), u.prototype), (0, h.default)(u.prototype, "wipeAndFree", [a], Object.getOwnPropertyDescriptor(u.prototype, "wipeAndFree"), u.prototype), (0, h.default)(u.prototype, "wipeAllAndFree", [s], Object.getOwnPropertyDescriptor(u.prototype, "wipeAllAndFree"), u.prototype), u);
        e.default = M, M.create = function () {
            var t = (0, p.default)(d.default.mark((function _callee(t, e, r) {
                var n, i;
                return d.default.wrap((function _callee$(o) {
                    for (;;) switch (o.prev = o.next) {
                        case 0:
                            return n = r.getNewCdpId(t), i = new M(n, e, r), o.next = 4, i.prefetch();
                        case 4:
                            return o.abrupt("return", i);
                        case 5:
                        case "end":
                            return o.stop()
                    }
                }), _callee)
            })));
            return function (e, r, n) {
                return t.apply(this, arguments)
            }
        }()
    }, function (t, e, r) {
        e.byteLength = function byteLength(t) {
            var e = getLens(t),
                r = e[0],
                n = e[1];
            return 3 * (r + n) / 4 - n
        }, e.toByteArray = function toByteArray(t) {
            var e, r, n = getLens(t),
                a = n[0],
                s = n[1],
                u = new o(function _byteLength(t, e, r) {
                    return 3 * (e + r) / 4 - r
                }(0, a, s)),
                c = 0,
                l = s > 0 ? a - 4 : a;
            for (r = 0; r < l; r += 4) e = i[t.charCodeAt(r)] << 18 | i[t.charCodeAt(r + 1)] << 12 | i[t.charCodeAt(r + 2)] << 6 | i[t.charCodeAt(r + 3)], u[c++] = e >> 16 & 255, u[c++] = e >> 8 & 255, u[c++] = 255 & e;
            2 === s && (e = i[t.charCodeAt(r)] << 2 | i[t.charCodeAt(r + 1)] >> 4, u[c++] = 255 & e);
            1 === s && (e = i[t.charCodeAt(r)] << 10 | i[t.charCodeAt(r + 1)] << 4 | i[t.charCodeAt(r + 2)] >> 2, u[c++] = e >> 8 & 255, u[c++] = 255 & e);
            return u
        }, e.fromByteArray = function fromByteArray(t) {
            for (var e, r = t.length, i = r % 3, o = [], a = 0, s = r - i; a < s; a += 16383) o.push(encodeChunk(t, a, a + 16383 > s ? s : a + 16383));
            1 === i ? (e = t[r - 1], o.push(n[e >> 2] + n[e << 4 & 63] + "==")) : 2 === i && (e = (t[r - 2] << 8) + t[r - 1], o.push(n[e >> 10] + n[e >> 4 & 63] + n[e << 2 & 63] + "="));
            return o.join("")
        };
        for (var n = [], i = [], o = "undefined" != typeof Uint8Array ? Uint8Array : Array, a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0, u = a.length; s < u; ++s) n[s] = a[s], i[a.charCodeAt(s)] = s;

        function getLens(t) {
            var e = t.length;
            if (e % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
            var r = t.indexOf("=");
            return -1 === r && (r = e), [r, r === e ? 0 : 4 - r % 4]
        }

        function encodeChunk(t, e, r) {
            for (var i, o, a = [], s = e; s < r; s += 3) i = (t[s] << 16 & 16711680) + (t[s + 1] << 8 & 65280) + (255 & t[s + 2]), a.push(n[(o = i) >> 18 & 63] + n[o >> 12 & 63] + n[o >> 6 & 63] + n[63 & o]);
            return a.join("")
        }
        i["-".charCodeAt(0)] = 62, i["_".charCodeAt(0)] = 63
    }, function (t, e) {
        e.read = function (t, e, r, n, i) {
            var o, a, s = 8 * i - n - 1,
                u = (1 << s) - 1,
                c = u >> 1,
                l = -7,
                h = r ? i - 1 : 0,
                d = r ? -1 : 1,
                p = t[e + h];
            for (h += d, o = p & (1 << -l) - 1, p >>= -l, l += s; l > 0; o = 256 * o + t[e + h], h += d, l -= 8);
            for (a = o & (1 << -l) - 1, o >>= -l, l += n; l > 0; a = 256 * a + t[e + h], h += d, l -= 8);
            if (0 === o) o = 1 - c;
            else {
                if (o === u) return a ? NaN : 1 / 0 * (p ? -1 : 1);
                a += Math.pow(2, n), o -= c
            }
            return (p ? -1 : 1) * a * Math.pow(2, o - n)
        }, e.write = function (t, e, r, n, i, o) {
            var a, s, u, c = 8 * o - i - 1,
                l = (1 << c) - 1,
                h = l >> 1,
                d = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
                p = n ? 0 : o - 1,
                m = n ? 1 : -1,
                y = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;
            for (e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (s = isNaN(e) ? 1 : 0, a = l) : (a = Math.floor(Math.log(e) / Math.LN2), e * (u = Math.pow(2, -a)) < 1 && (a--, u *= 2), (e += a + h >= 1 ? d / u : d * Math.pow(2, 1 - h)) * u >= 2 && (a++, u /= 2), a + h >= l ? (s = 0, a = l) : a + h >= 1 ? (s = (e * u - 1) * Math.pow(2, i), a += h) : (s = e * Math.pow(2, h - 1) * Math.pow(2, i), a = 0)); i >= 8; t[r + p] = 255 & s, p += m, s /= 256, i -= 8);
            for (a = a << i | s, c += i; c > 0; t[r + p] = 255 & a, p += m, a /= 256, c -= 8);
            t[r + p - m] |= 128 * y
        }
    }, function (t, e, r) {
        var n = r(565).version,
            i = r(174),
            o = r(699),
            a = r(335),
            s = r(856),
            u = r(857),
            c = r(875),
            l = r(48),
            h = function Web3() {
                var t = this;
                i.packageInit(this, arguments), this.version = n, this.utils = l, this.eth = new o(this), this.shh = new u(this), this.bzz = new c(this);
                var e = this.setProvider;
                this.setProvider = function (r, n) {
                    return e.apply(t, arguments), t.eth.setRequestManager(t._requestManager), t.shh.setRequestManager(t._requestManager), t.bzz.setProvider(r), !0
                }
            };
        h.version = n, h.utils = l, h.modules = {
            Eth: o,
            Net: a,
            Personal: s,
            Shh: u,
            Bzz: c
        }, i.addProviders(h), t.exports = h
    }, function (t) {
        t.exports = JSON.parse('{"name":"web3","version":"1.5.1","description":"Ethereum JavaScript API","repository":"https://github.com/ethereum/web3.js","license":"LGPL-3.0","engines":{"node":">=8.0.0"},"main":"lib/index.js","bugs":{"url":"https://github.com/ethereum/web3.js/issues"},"keywords":["Ethereum","JavaScript","API"],"author":"ethereum.org","types":"types/index.d.ts","scripts":{"compile":"tsc -b tsconfig.json","dtslint":"dtslint --localTs ../../node_modules/typescript/lib types","postinstall":"echo \\"WARNING: the web3-shh and web3-bzz api will be deprecated in the next version\\""},"authors":[{"name":"Fabian Vogelsteller","email":"fabian@ethereum.org","homepage":"http://frozeman.de"},{"name":"Marek Kotewicz","email":"marek@parity.io","url":"https://github.com/debris"},{"name":"Marian Oancea","url":"https://github.com/cubedro"},{"name":"Gav Wood","email":"g@parity.io","homepage":"http://gavwood.com"},{"name":"Jeffery Wilcke","email":"jeffrey.wilcke@ethereum.org","url":"https://github.com/obscuren"}],"dependencies":{"web3-bzz":"1.5.1","web3-core":"1.5.1","web3-eth":"1.5.1","web3-eth-personal":"1.5.1","web3-net":"1.5.1","web3-shh":"1.5.1","web3-utils":"1.5.1"},"devDependencies":{"@types/node":"^12.12.6","dtslint":"^3.4.1","typescript":"^3.9.5","web3-core-helpers":"1.5.1"},"gitHead":"37a046d53ba193e89f3c53921c8b0ddc6a2e86fe"}')
    }, function (t, e, r) {
        const {
            callbackify: n
        } = r(59);
        var i = r(25).errors,
            o = r(262),
            a = r(577),
            s = r(578),
            u = function RequestManager(t, e) {
                this.provider = null, this.providers = RequestManager.providers, this.setProvider(t, e), this.subscriptions = new Map
            };
        u.givenProvider = s, u.providers = {
            WebsocketProvider: r(579),
            HttpProvider: r(588),
            IpcProvider: r(604)
        }, u.prototype.setProvider = function (t, e) {
            var r = this;
            if (t && "string" == typeof t && this.providers)
                if (/^http(s)?:\/\//i.test(t)) t = new this.providers.HttpProvider(t);
                else if (/^ws(s)?:\/\//i.test(t)) t = new this.providers.WebsocketProvider(t);
            else if (t && "object" == typeof e && "function" == typeof e.connect) t = new this.providers.IpcProvider(t, e);
            else if (t) throw new Error("Can't autodetect provider for \"" + t + '"');
            if (this.provider && this.provider.connected && this.clearSubscriptions(), this.provider = t || null, this.provider && this.provider.on) {
                "function" == typeof t.request ? this.provider.on("message", (function (t) {
                    if (t && "eth_subscription" === t.type && t.data) {
                        const e = t.data;
                        e.subscription && r.subscriptions.has(e.subscription) && r.subscriptions.get(e.subscription).callback(null, e.result)
                    }
                })) : this.provider.on("data", (function data(t, e) {
                    (t = t || e).method && t.params && t.params.subscription && r.subscriptions.has(t.params.subscription) && r.subscriptions.get(t.params.subscription).callback(null, t.params.result)
                })), this.provider.on("connect", (function connect() {
                    r.subscriptions.forEach((function (t) {
                        t.subscription.resubscribe()
                    }))
                })), this.provider.on("error", (function error(error) {
                    r.subscriptions.forEach((function (t) {
                        t.callback(error)
                    }))
                }));
                const e = function disconnect(t) {
                    r._isCleanCloseEvent(t) && !r._isIpcCloseError(t) || (r.subscriptions.forEach((function (e) {
                        e.callback(i.ConnectionCloseError(t)), r.subscriptions.delete(e.subscription.id)
                    })), r.provider && r.provider.emit && r.provider.emit("error", i.ConnectionCloseError(t))), r.provider && r.provider.emit && r.provider.emit("end", t)
                };
                this.provider.on("close", e), this.provider.on("disconnect", e)
            }
        }, u.prototype.send = function (t, e) {
            if (e = e || function () {}, !this.provider) return e(i.InvalidProvider());
            const {
                method: r,
                params: a
            } = t, s = o.toPayload(r, a), u = this._jsonrpcResultCallback(e, s);
            if (this.provider.request) {
                n(this.provider.request.bind(this.provider))({
                    method: r,
                    params: a
                }, e)
            } else if (this.provider.sendAsync) this.provider.sendAsync(s, u);
            else {
                if (!this.provider.send) throw new Error("Provider does not have a request or send method to use.");
                this.provider.send(s, u)
            }
        }, u.prototype.sendBatch = function (t, e) {
            if (!this.provider) return e(i.InvalidProvider());
            var r = o.toBatchPayload(t);
            this.provider[this.provider.sendAsync ? "sendAsync" : "send"](r, (function (t, r) {
                return t ? e(t) : Array.isArray(r) ? void e(null, r) : e(i.InvalidResponse(r))
            }))
        }, u.prototype.addSubscription = function (t, e) {
            if (!this.provider.on) throw new Error("The provider doesn't support subscriptions: " + this.provider.constructor.name);
            this.subscriptions.set(t.id, {
                callback: e,
                subscription: t
            })
        }, u.prototype.removeSubscription = function (t, e) {
            if (this.subscriptions.has(t)) {
                var r = this.subscriptions.get(t).subscription.options.type;
                return this.subscriptions.delete(t), void this.send({
                    method: r + "_unsubscribe",
                    params: [t]
                }, e)
            }
            "function" == typeof e && e(null)
        }, u.prototype.clearSubscriptions = function (t) {
            try {
                var e = this;
                return this.subscriptions.size > 0 && this.subscriptions.forEach((function (r, n) {
                    t && "syncing" === r.name || e.removeSubscription(n)
                })), this.provider.reset && this.provider.reset(), !0
            } catch (t) {
                throw new Error("Error while clearing subscriptions: " + t)
            }
        }, u.prototype._isCleanCloseEvent = function (t) {
            return "object" == typeof t && ([1e3].includes(t.code) || !0 === t.wasClean)
        }, u.prototype._isIpcCloseError = function (t) {
            return "boolean" == typeof t && t
        }, u.prototype._jsonrpcResultCallback = function (t, e) {
            return function (r, n) {
                return n && n.id && e.id !== n.id ? t(new Error(`Wrong response id ${n.id} (expected: ${e.id}) in ${JSON.stringify(e)}`)) : r ? t(r) : n && n.error ? t(i.ErrorResponse(n)) : o.isValidResponse(n) ? void t(null, n.result) : t(i.InvalidResponse(n))
            }
        }, t.exports = {
            Manager: u,
            BatchManager: a
        }
    }, function (t, e, r) {
        t.exports = {
            ErrorResponse: function (t) {
                var e = t && t.error && t.error.message ? t.error.message : JSON.stringify(t),
                    r = t.error && t.error.data ? t.error.data : null,
                    n = new Error("Returned error: " + e);
                return n.data = r, n
            },
            InvalidNumberOfParams: function (t, e, r) {
                return new Error('Invalid number of parameters for "' + r + '". Got ' + t + " expected " + e + "!")
            },
            InvalidConnection: function (t, e) {
                return this.ConnectionError("CONNECTION ERROR: Couldn't connect to node " + t + ".", e)
            },
            InvalidProvider: function () {
                return new Error("Provider not set or invalid")
            },
            InvalidResponse: function (t) {
                var e = t && t.error && t.error.message ? t.error.message : "Invalid JSON RPC response: " + JSON.stringify(t);
                return new Error(e)
            },
            ConnectionTimeout: function (t) {
                return new Error("CONNECTION TIMEOUT: timeout of " + t + " ms achived")
            },
            ConnectionNotOpenError: function (t) {
                return this.ConnectionError("connection not open on send()", t)
            },
            ConnectionCloseError: function (t) {
                return "object" == typeof t && t.code && t.reason ? this.ConnectionError("CONNECTION ERROR: The connection got closed with the close code `" + t.code + "` and the following reason string `" + t.reason + "`", t) : new Error("CONNECTION ERROR: The connection closed unexpectedly")
            },
            MaxAttemptsReachedOnReconnectingError: function () {
                return new Error("Maximum number of reconnect attempts reached!")
            },
            PendingRequestsOnReconnectingError: function () {
                return new Error("CONNECTION ERROR: Provider started to reconnect before the response got received!")
            },
            ConnectionError: function (t, e) {
                const r = new Error(t);
                return e && (r.code = e.code, r.reason = e.reason), r
            },
            RevertInstructionError: function (t, e) {
                var r = new Error("Your request got reverted with the following reason string: " + t);
                return r.reason = t, r.signature = e, r
            },
            TransactionRevertInstructionError: function (t, e, r) {
                var n = new Error("Transaction has been reverted by the EVM:\n" + JSON.stringify(r, null, 2));
                return n.reason = t, n.signature = e, n.receipt = r, n
            },
            TransactionError: function (t, e) {
                var r = new Error(t);
                return r.receipt = e, r
            },
            NoContractAddressFoundError: function (t) {
                return this.TransactionError("The transaction receipt didn't contain a contract address.", t)
            },
            ContractCodeNotStoredError: function (t) {
                return this.TransactionError("The contract code couldn't be stored, please check your gas limit.", t)
            },
            TransactionRevertedWithoutReasonError: function (t) {
                return this.TransactionError("Transaction has been reverted by the EVM:\n" + JSON.stringify(t, null, 2), t)
            },
            TransactionOutOfGasError: function (t) {
                return this.TransactionError("Transaction ran out of gas. Please provide more gas:\n" + JSON.stringify(t, null, 2), t)
            },
            ResolverMethodMissingError: function (t, e) {
                return new Error("The resolver at " + t + 'does not implement requested method: "' + e + '".')
            },
            ContractMissingABIError: function () {
                return new Error("You must provide the json interface of the contract when instantiating a contract object.")
            },
            ContractOnceRequiresCallbackError: function () {
                return new Error("Once requires a callback as the second parameter.")
            },
            ContractEventDoesNotExistError: function (t) {
                return new Error('Event "' + t + "\" doesn't exist in this contract.")
            },
            ContractReservedEventError: function (t) {
                return new Error('The event "' + t + "\" is a reserved event name, you can't use it.")
            },
            ContractMissingDeployDataError: function () {
                return new Error('No "data" specified in neither the given options, nor the default options.')
            },
            ContractNoAddressDefinedError: function () {
                return new Error("This contract object doesn't have address set yet, please set an address first.")
            },
            ContractNoFromAddressDefinedError: function () {
                return new Error('No "from" address specified in neither the given options, nor the default options.')
            }
        }
    }, function (t, e, r) {
        var n = r(48),
            i = r(576),
            outputBigNumberFormatter = function (t) {
                return n.toBN(t).toString(10)
            },
            inputBlockNumberFormatter = function (t) {
                if (void 0 !== t) return function (t) {
                    return "latest" === t || "pending" === t || "earliest" === t
                }(t) ? t : "genesis" === t ? "0x0" : n.isHexStrict(t) ? "string" == typeof t ? t.toLowerCase() : t : n.numberToHex(t)
            },
            _txInputFormatter = function (t) {
                if (t.to && (t.to = inputAddressFormatter(t.to)), t.data && t.input) throw new Error('You can\'t have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.');
                if (!t.data && t.input && (t.data = t.input, delete t.input), t.data && !t.data.startsWith("0x") && (t.data = "0x" + t.data), t.data && !n.isHex(t.data)) throw new Error("The data field must be HEX encoded data.");
                return (t.gas || t.gasLimit) && (t.gas = t.gas || t.gasLimit), (t.maxPriorityFeePerGas || t.maxFeePerGas) && delete t.gasPrice, ["gasPrice", "gas", "value", "maxPriorityFeePerGas", "maxFeePerGas", "nonce"].filter((function (e) {
                    return void 0 !== t[e]
                })).forEach((function (e) {
                    t[e] = n.numberToHex(t[e])
                })), t
            },
            outputTransactionFormatter = function (t) {
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), t.nonce = n.hexToNumber(t.nonce), t.gas = n.hexToNumber(t.gas), t.gasPrice && (t.gasPrice = outputBigNumberFormatter(t.gasPrice)), t.maxFeePerGas && (t.maxFeePerGas = outputBigNumberFormatter(t.maxFeePerGas)), t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = outputBigNumberFormatter(t.maxPriorityFeePerGas)), t.type && (t.type = n.hexToNumber(t.type)), t.value = outputBigNumberFormatter(t.value), t.to && n.isAddress(t.to) ? t.to = n.toChecksumAddress(t.to) : t.to = null, t.from && (t.from = n.toChecksumAddress(t.from)), t
            },
            outputLogFormatter = function (t) {
                if ("string" == typeof t.blockHash && "string" == typeof t.transactionHash && "string" == typeof t.logIndex) {
                    var e = n.sha3(t.blockHash.replace("0x", "") + t.transactionHash.replace("0x", "") + t.logIndex.replace("0x", ""));
                    t.id = "log_" + e.replace("0x", "").substr(0, 8)
                } else t.id || (t.id = null);
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), null !== t.logIndex && (t.logIndex = n.hexToNumber(t.logIndex)), t.address && (t.address = n.toChecksumAddress(t.address)), t
            },
            inputAddressFormatter = function (t) {
                var e = new i(t);
                if (e.isValid() && e.isDirect()) return e.toAddress().toLowerCase();
                if (n.isAddress(t)) return "0x" + t.toLowerCase().replace("0x", "");
                throw new Error(`Provided address ${t} is invalid, the capitalization checksum test failed, or it's an indirect IBAN address which can't be converted.`)
            };
        t.exports = {
            inputDefaultBlockNumberFormatter: function (t) {
                return inputBlockNumberFormatter(this && null == t ? this.defaultBlock : t)
            },
            inputBlockNumberFormatter: inputBlockNumberFormatter,
            inputCallFormatter: function (t) {
                var e = (t = _txInputFormatter(t)).from || (this ? this.defaultAccount : null);
                return e && (t.from = inputAddressFormatter(e)), t
            },
            inputTransactionFormatter: function (t) {
                if ("number" != typeof (t = _txInputFormatter(t)).from && (!t.from || "object" != typeof t.from)) {
                    if (t.from = t.from || (this ? this.defaultAccount : null), !t.from && "number" != typeof t.from) throw new Error('The send transactions "from" field must be defined!');
                    t.from = inputAddressFormatter(t.from)
                }
                return t
            },
            inputAddressFormatter: inputAddressFormatter,
            inputPostFormatter: function (t) {
                return t.ttl && (t.ttl = n.numberToHex(t.ttl)), t.workToProve && (t.workToProve = n.numberToHex(t.workToProve)), t.priority && (t.priority = n.numberToHex(t.priority)), Array.isArray(t.topics) || (t.topics = t.topics ? [t.topics] : []), t.topics = t.topics.map((function (t) {
                    return 0 === t.indexOf("0x") ? t : n.fromUtf8(t)
                })), t
            },
            inputLogFormatter: function (t) {
                var toTopic = function (t) {
                    return null == t ? null : 0 === (t = String(t)).indexOf("0x") ? t : n.fromUtf8(t)
                };
                return void 0 === t && (t = {}), void 0 === t.fromBlock && (t = {
                    ...t,
                    fromBlock: "latest"
                }), (t.fromBlock || 0 === t.fromBlock) && (t.fromBlock = inputBlockNumberFormatter(t.fromBlock)), (t.toBlock || 0 === t.toBlock) && (t.toBlock = inputBlockNumberFormatter(t.toBlock)), t.topics = t.topics || [], t.topics = t.topics.map((function (t) {
                    return Array.isArray(t) ? t.map(toTopic) : toTopic(t)
                })), toTopic = null, t.address && (t.address = Array.isArray(t.address) ? t.address.map((function (t) {
                    return inputAddressFormatter(t)
                })) : inputAddressFormatter(t.address)), t
            },
            inputSignFormatter: function (t) {
                return n.isHexStrict(t) ? t : n.utf8ToHex(t)
            },
            inputStorageKeysFormatter: function (t) {
                return t.map(n.numberToHex)
            },
            outputProofFormatter: function (t) {
                return t.address = n.toChecksumAddress(t.address), t.nonce = n.hexToNumberString(t.nonce), t.balance = n.hexToNumberString(t.balance), t
            },
            outputBigNumberFormatter: outputBigNumberFormatter,
            outputTransactionFormatter: outputTransactionFormatter,
            outputTransactionReceiptFormatter: function (t) {
                if ("object" != typeof t) throw new Error("Received receipt is invalid: " + t);
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), t.cumulativeGasUsed = n.hexToNumber(t.cumulativeGasUsed), t.gasUsed = n.hexToNumber(t.gasUsed), Array.isArray(t.logs) && (t.logs = t.logs.map(outputLogFormatter)), t.contractAddress && (t.contractAddress = n.toChecksumAddress(t.contractAddress)), void 0 !== t.status && null !== t.status && (t.status = Boolean(parseInt(t.status))), t
            },
            outputBlockFormatter: function (t) {
                return t.gasLimit = n.hexToNumber(t.gasLimit), t.gasUsed = n.hexToNumber(t.gasUsed), t.size = n.hexToNumber(t.size), t.timestamp = n.hexToNumber(t.timestamp), null !== t.number && (t.number = n.hexToNumber(t.number)), t.difficulty && (t.difficulty = outputBigNumberFormatter(t.difficulty)), t.totalDifficulty && (t.totalDifficulty = outputBigNumberFormatter(t.totalDifficulty)), Array.isArray(t.transactions) && t.transactions.forEach((function (t) {
                    if ("string" != typeof t) return outputTransactionFormatter(t)
                })), t.miner && (t.miner = n.toChecksumAddress(t.miner)), t
            },
            outputLogFormatter: outputLogFormatter,
            outputPostFormatter: function (t) {
                return t.expiry = n.hexToNumber(t.expiry), t.sent = n.hexToNumber(t.sent), t.ttl = n.hexToNumber(t.ttl), t.workProved = n.hexToNumber(t.workProved), t.topics || (t.topics = []), t.topics = t.topics.map((function (t) {
                    return n.toUtf8(t)
                })), t
            },
            outputSyncingFormatter: function (t) {
                return t.startingBlock = n.hexToNumber(t.startingBlock), t.currentBlock = n.hexToNumber(t.currentBlock), t.highestBlock = n.hexToNumber(t.highestBlock), t.knownStates && (t.knownStates = n.hexToNumber(t.knownStates), t.pulledStates = n.hexToNumber(t.pulledStates)), t
            }
        }
    }, function (t, e, r) {
        (function (t) {
            ! function (t, e) {
                function assert(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }

                function inherits(t, e) {
                    t.super_ = e;
                    var TempCtor = function () {};
                    TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
                }

                function BN(t, e, r) {
                    if (BN.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                var n;
                "object" == typeof t ? t.exports = BN : e.BN = BN, BN.BN = BN, BN.wordSize = 26;
                try {
                    n = r(0).Buffer
                } catch (t) {}

                function parseHex(t, e, r) {
                    for (var n = 0, i = Math.min(t.length, r), o = e; o < i; o++) {
                        var a = t.charCodeAt(o) - 48;
                        n <<= 4, n |= a >= 49 && a <= 54 ? a - 49 + 10 : a >= 17 && a <= 22 ? a - 17 + 10 : 15 & a
                    }
                    return n
                }

                function parseBase(t, e, r, n) {
                    for (var i = 0, o = Math.min(t.length, r), a = e; a < o; a++) {
                        var s = t.charCodeAt(a) - 48;
                        i *= n, i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s
                    }
                    return i
                }
                BN.isBN = function isBN(t) {
                    return t instanceof BN || null !== t && "object" == typeof t && t.constructor.wordSize === BN.wordSize && Array.isArray(t.words)
                }, BN.max = function max(t, e) {
                    return t.cmp(e) > 0 ? t : e
                }, BN.min = function min(t, e) {
                    return t.cmp(e) < 0 ? t : e
                }, BN.prototype._init = function init(t, e, r) {
                    if ("number" == typeof t) return this._initNumber(t, e, r);
                    if ("object" == typeof t) return this._initArray(t, e, r);
                    "hex" === e && (e = 16), assert(e === (0 | e) && e >= 2 && e <= 36);
                    var n = 0;
                    "-" === (t = t.toString().replace(/\s+/g, ""))[0] && n++, 16 === e ? this._parseHex(t, n) : this._parseBase(t, e, n), "-" === t[0] && (this.negative = 1), this.strip(), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initNumber = function _initNumber(t, e, r) {
                    t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (assert(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initArray = function _initArray(t, e, r) {
                    if (assert("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                    this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o, a = 0;
                    if ("be" === r)
                        for (n = t.length - 1, i = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    else if ("le" === r)
                        for (n = 0, i = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    return this.strip()
                }, BN.prototype._parseHex = function _parseHex(t, e) {
                    this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                    for (var r = 0; r < this.length; r++) this.words[r] = 0;
                    var n, i, o = 0;
                    for (r = t.length - 6, n = 0; r >= e; r -= 6) i = parseHex(t, r, r + 6), this.words[n] |= i << o & 67108863, this.words[n + 1] |= i >>> 26 - o & 4194303, (o += 24) >= 26 && (o -= 26, n++);
                    r + 6 !== e && (i = parseHex(t, e, r + 6), this.words[n] |= i << o & 67108863, this.words[n + 1] |= i >>> 26 - o & 4194303), this.strip()
                }, BN.prototype._parseBase = function _parseBase(t, e, r) {
                    this.words = [0], this.length = 1;
                    for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                    n--, i = i / e | 0;
                    for (var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n) u = parseBase(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== a) {
                        var l = 1;
                        for (u = parseBase(t, c, t.length, e), c = 0; c < a; c++) l *= e;
                        this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                }, BN.prototype.copy = function copy(t) {
                    t.words = new Array(this.length);
                    for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                    t.length = this.length, t.negative = this.negative, t.red = this.red
                }, BN.prototype.clone = function clone() {
                    var t = new BN(null);
                    return this.copy(t), t
                }, BN.prototype._expand = function _expand(t) {
                    for (; this.length < t;) this.words[this.length++] = 0;
                    return this
                }, BN.prototype.strip = function strip() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                    return this._normSign()
                }, BN.prototype._normSign = function _normSign() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                }, BN.prototype.inspect = function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                };
                var i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    o = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    a = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function smallMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, d = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= d; p++) {
                            var m = c - p | 0;
                            l += (a = (i = 0 | t.words[m]) * (o = 0 | e.words[p]) + h) / 67108864 | 0, h = 67108863 & a
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r.strip()
                }
                BN.prototype.toString = function toString(t, e) {
                    var r;
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var n = 0, s = 0, u = 0; u < this.length; u++) {
                            var c = this.words[u],
                                l = (16777215 & (c << n | s)).toString(16);
                            r = 0 !== (s = c >>> 24 - n & 16777215) || u !== this.length - 1 ? i[6 - l.length] + l + r : l + r, (n += 2) >= 26 && (n -= 26, u--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var h = o[t],
                            d = a[t];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero();) {
                            var m = p.modn(d).toString(t);
                            r = (p = p.idivn(d)).isZero() ? m + r : i[h - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    assert(!1, "Base should be between 2 and 36")
                }, BN.prototype.toNumber = function toNumber() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, BN.prototype.toJSON = function toJSON() {
                    return this.toString(16)
                }, BN.prototype.toBuffer = function toBuffer(t, e) {
                    return assert(void 0 !== n), this.toArrayLike(n, t, e)
                }, BN.prototype.toArray = function toArray(t, e) {
                    return this.toArrayLike(Array, t, e)
                }, BN.prototype.toArrayLike = function toArrayLike(t, e, r) {
                    var n = this.byteLength(),
                        i = r || Math.max(1, n);
                    assert(n <= i, "byte array longer than desired length"), assert(i > 0, "Requested array length <= 0"), this.strip();
                    var o, a, s = "le" === e,
                        u = new t(i),
                        c = this.clone();
                    if (s) {
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[a] = o;
                        for (; a < i; a++) u[a] = 0
                    } else {
                        for (a = 0; a < i - n; a++) u[a] = 0;
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[i - a - 1] = o
                    }
                    return u
                }, Math.clz32 ? BN.prototype._countBits = function _countBits(t) {
                    return 32 - Math.clz32(t)
                } : BN.prototype._countBits = function _countBits(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, BN.prototype._zeroBits = function _zeroBits(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r
                }, BN.prototype.bitLength = function bitLength() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return 26 * (this.length - 1) + e
                }, BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8)
                }, BN.prototype.toTwos = function toTwos(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, BN.prototype.fromTwos = function fromTwos(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, BN.prototype.isNeg = function isNeg() {
                    return 0 !== this.negative
                }, BN.prototype.neg = function neg() {
                    return this.clone().ineg()
                }, BN.prototype.ineg = function ineg() {
                    return this.isZero() || (this.negative ^= 1), this
                }, BN.prototype.iuor = function iuor(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this.strip()
                }, BN.prototype.ior = function ior(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuor(t)
                }, BN.prototype.or = function or(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, BN.prototype.uor = function uor(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, BN.prototype.iuand = function iuand(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this.strip()
                }, BN.prototype.iand = function iand(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuand(t)
                }, BN.prototype.and = function and(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, BN.prototype.uand = function uand(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, BN.prototype.iuxor = function iuxor(t) {
                    var e, r;
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this.strip()
                }, BN.prototype.ixor = function ixor(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuxor(t)
                }, BN.prototype.xor = function xor(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, BN.prototype.uxor = function uxor(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, BN.prototype.inotn = function inotn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip()
                }, BN.prototype.notn = function notn(t) {
                    return this.clone().inotn(t)
                }, BN.prototype.setn = function setn(t, e) {
                    assert("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        n = t % 26;
                    return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip()
                }, BN.prototype.iadd = function iadd(t) {
                    var e, r, n;
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, BN.prototype.add = function add(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, BN.prototype.isub = function isub(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e = this.iadd(t);
                        return t.negative = 1, e._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var r, n, i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (r = this, n = t) : (r = t, n = this);
                    for (var o = 0, a = 0; a < n.length; a++) o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    for (; 0 !== o && a < r.length; a++) o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    if (0 === o && a < r.length && r !== this)
                        for (; a < r.length; a++) this.words[a] = r.words[a];
                    return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this.strip()
                }, BN.prototype.sub = function sub(t) {
                    return this.clone().isub(t)
                };
                var s = function comb10MulTo(t, e, r) {
                    var n, i, o, a = t.words,
                        s = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        h = 8191 & l,
                        d = l >>> 13,
                        p = 0 | a[1],
                        m = 8191 & p,
                        y = p >>> 13,
                        b = 0 | a[2],
                        g = 8191 & b,
                        v = b >>> 13,
                        w = 0 | a[3],
                        M = 8191 & w,
                        A = w >>> 13,
                        x = 0 | a[4],
                        B = 8191 & x,
                        E = x >>> 13,
                        k = 0 | a[5],
                        N = 8191 & k,
                        T = k >>> 13,
                        C = 0 | a[6],
                        P = 8191 & C,
                        I = C >>> 13,
                        O = 0 | a[7],
                        D = 8191 & O,
                        j = O >>> 13,
                        L = 0 | a[8],
                        U = 8191 & L,
                        H = L >>> 13,
                        q = 0 | a[9],
                        z = 8191 & q,
                        G = q >>> 13,
                        V = 0 | s[0],
                        J = 8191 & V,
                        W = V >>> 13,
                        Z = 0 | s[1],
                        X = 8191 & Z,
                        Y = Z >>> 13,
                        $ = 0 | s[2],
                        Q = 8191 & $,
                        tt = $ >>> 13,
                        et = 0 | s[3],
                        rt = 8191 & et,
                        nt = et >>> 13,
                        it = 0 | s[4],
                        ot = 8191 & it,
                        st = it >>> 13,
                        ut = 0 | s[5],
                        ct = 8191 & ut,
                        ht = ut >>> 13,
                        dt = 0 | s[6],
                        pt = 8191 & dt,
                        mt = dt >>> 13,
                        yt = 0 | s[7],
                        bt = 8191 & yt,
                        vt = yt >>> 13,
                        wt = 0 | s[8],
                        Mt = 8191 & wt,
                        _t = wt >>> 13,
                        At = 0 | s[9],
                        xt = 8191 & At,
                        Bt = At >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var Et = (c + (n = Math.imul(h, J)) | 0) + ((8191 & (i = (i = Math.imul(h, W)) + Math.imul(d, J) | 0)) << 13) | 0;
                    c = ((o = Math.imul(d, W)) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(m, J), i = (i = Math.imul(m, W)) + Math.imul(y, J) | 0, o = Math.imul(y, W);
                    var kt = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(d, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Y) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(g, J), i = (i = Math.imul(g, W)) + Math.imul(v, J) | 0, o = Math.imul(v, W), n = n + Math.imul(m, X) | 0, i = (i = i + Math.imul(m, Y) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, Y) | 0;
                    var Nt = (c + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, tt) | 0) + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(M, J), i = (i = Math.imul(M, W)) + Math.imul(A, J) | 0, o = Math.imul(A, W), n = n + Math.imul(g, X) | 0, i = (i = i + Math.imul(g, Y) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, Y) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0;
                    var St = (c + (n = n + Math.imul(h, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, nt) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, nt) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(B, J), i = (i = Math.imul(B, W)) + Math.imul(E, J) | 0, o = Math.imul(E, W), n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(g, Q) | 0, i = (i = i + Math.imul(g, tt) | 0) + Math.imul(v, Q) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                    var Tt = (c + (n = n + Math.imul(h, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, st) | 0) + Math.imul(d, ot) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, st) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(N, J), i = (i = Math.imul(N, W)) + Math.imul(T, J) | 0, o = Math.imul(T, W), n = n + Math.imul(B, X) | 0, i = (i = i + Math.imul(B, Y) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(g, rt) | 0, i = (i = i + Math.imul(g, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                    var Ct = (c + (n = n + Math.imul(h, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ht) | 0) + Math.imul(d, ct) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, ht) | 0) + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(P, J), i = (i = Math.imul(P, W)) + Math.imul(I, J) | 0, o = Math.imul(I, W), n = n + Math.imul(N, X) | 0, i = (i = i + Math.imul(N, Y) | 0) + Math.imul(T, X) | 0, o = o + Math.imul(T, Y) | 0, n = n + Math.imul(B, Q) | 0, i = (i = i + Math.imul(B, tt) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(M, rt) | 0, i = (i = i + Math.imul(M, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(g, ot) | 0, i = (i = i + Math.imul(g, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(m, ct) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, ht) | 0;
                    var Pt = (c + (n = n + Math.imul(h, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, mt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, mt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(D, J), i = (i = Math.imul(D, W)) + Math.imul(j, J) | 0, o = Math.imul(j, W), n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(N, Q) | 0, i = (i = i + Math.imul(N, tt) | 0) + Math.imul(T, Q) | 0, o = o + Math.imul(T, tt) | 0, n = n + Math.imul(B, rt) | 0, i = (i = i + Math.imul(B, nt) | 0) + Math.imul(E, rt) | 0, o = o + Math.imul(E, nt) | 0, n = n + Math.imul(M, ot) | 0, i = (i = i + Math.imul(M, st) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(g, ct) | 0, i = (i = i + Math.imul(g, ht) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(m, pt) | 0, i = (i = i + Math.imul(m, mt) | 0) + Math.imul(y, pt) | 0, o = o + Math.imul(y, mt) | 0;
                    var It = (c + (n = n + Math.imul(h, bt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, vt) | 0) + Math.imul(d, bt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, vt) | 0) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(U, J), i = (i = Math.imul(U, W)) + Math.imul(H, J) | 0, o = Math.imul(H, W), n = n + Math.imul(D, X) | 0, i = (i = i + Math.imul(D, Y) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, tt) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = (i = i + Math.imul(N, nt) | 0) + Math.imul(T, rt) | 0, o = o + Math.imul(T, nt) | 0, n = n + Math.imul(B, ot) | 0, i = (i = i + Math.imul(B, st) | 0) + Math.imul(E, ot) | 0, o = o + Math.imul(E, st) | 0, n = n + Math.imul(M, ct) | 0, i = (i = i + Math.imul(M, ht) | 0) + Math.imul(A, ct) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(g, pt) | 0, i = (i = i + Math.imul(g, mt) | 0) + Math.imul(v, pt) | 0, o = o + Math.imul(v, mt) | 0, n = n + Math.imul(m, bt) | 0, i = (i = i + Math.imul(m, vt) | 0) + Math.imul(y, bt) | 0, o = o + Math.imul(y, vt) | 0;
                    var Ot = (c + (n = n + Math.imul(h, Mt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, _t) | 0) + Math.imul(d, Mt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, _t) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(z, J), i = (i = Math.imul(z, W)) + Math.imul(G, J) | 0, o = Math.imul(G, W), n = n + Math.imul(U, X) | 0, i = (i = i + Math.imul(U, Y) | 0) + Math.imul(H, X) | 0, o = o + Math.imul(H, Y) | 0, n = n + Math.imul(D, Q) | 0, i = (i = i + Math.imul(D, tt) | 0) + Math.imul(j, Q) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(P, rt) | 0, i = (i = i + Math.imul(P, nt) | 0) + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = (i = i + Math.imul(N, st) | 0) + Math.imul(T, ot) | 0, o = o + Math.imul(T, st) | 0, n = n + Math.imul(B, ct) | 0, i = (i = i + Math.imul(B, ht) | 0) + Math.imul(E, ct) | 0, o = o + Math.imul(E, ht) | 0, n = n + Math.imul(M, pt) | 0, i = (i = i + Math.imul(M, mt) | 0) + Math.imul(A, pt) | 0, o = o + Math.imul(A, mt) | 0, n = n + Math.imul(g, bt) | 0, i = (i = i + Math.imul(g, vt) | 0) + Math.imul(v, bt) | 0, o = o + Math.imul(v, vt) | 0, n = n + Math.imul(m, Mt) | 0, i = (i = i + Math.imul(m, _t) | 0) + Math.imul(y, Mt) | 0, o = o + Math.imul(y, _t) | 0;
                    var Rt = (c + (n = n + Math.imul(h, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Bt) | 0) + Math.imul(d, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Bt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(z, X), i = (i = Math.imul(z, Y)) + Math.imul(G, X) | 0, o = Math.imul(G, Y), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, tt) | 0) + Math.imul(H, Q) | 0, o = o + Math.imul(H, tt) | 0, n = n + Math.imul(D, rt) | 0, i = (i = i + Math.imul(D, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(P, ot) | 0, i = (i = i + Math.imul(P, st) | 0) + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ct) | 0, i = (i = i + Math.imul(N, ht) | 0) + Math.imul(T, ct) | 0, o = o + Math.imul(T, ht) | 0, n = n + Math.imul(B, pt) | 0, i = (i = i + Math.imul(B, mt) | 0) + Math.imul(E, pt) | 0, o = o + Math.imul(E, mt) | 0, n = n + Math.imul(M, bt) | 0, i = (i = i + Math.imul(M, vt) | 0) + Math.imul(A, bt) | 0, o = o + Math.imul(A, vt) | 0, n = n + Math.imul(g, Mt) | 0, i = (i = i + Math.imul(g, _t) | 0) + Math.imul(v, Mt) | 0, o = o + Math.imul(v, _t) | 0;
                    var Ft = (c + (n = n + Math.imul(m, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, Bt) | 0) + Math.imul(y, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, Bt) | 0) + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(z, Q), i = (i = Math.imul(z, tt)) + Math.imul(G, Q) | 0, o = Math.imul(G, tt), n = n + Math.imul(U, rt) | 0, i = (i = i + Math.imul(U, nt) | 0) + Math.imul(H, rt) | 0, o = o + Math.imul(H, nt) | 0, n = n + Math.imul(D, ot) | 0, i = (i = i + Math.imul(D, st) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, st) | 0, n = n + Math.imul(P, ct) | 0, i = (i = i + Math.imul(P, ht) | 0) + Math.imul(I, ct) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, pt) | 0, i = (i = i + Math.imul(N, mt) | 0) + Math.imul(T, pt) | 0, o = o + Math.imul(T, mt) | 0, n = n + Math.imul(B, bt) | 0, i = (i = i + Math.imul(B, vt) | 0) + Math.imul(E, bt) | 0, o = o + Math.imul(E, vt) | 0, n = n + Math.imul(M, Mt) | 0, i = (i = i + Math.imul(M, _t) | 0) + Math.imul(A, Mt) | 0, o = o + Math.imul(A, _t) | 0;
                    var Dt = (c + (n = n + Math.imul(g, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(g, Bt) | 0) + Math.imul(v, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(v, Bt) | 0) + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(z, rt), i = (i = Math.imul(z, nt)) + Math.imul(G, rt) | 0, o = Math.imul(G, nt), n = n + Math.imul(U, ot) | 0, i = (i = i + Math.imul(U, st) | 0) + Math.imul(H, ot) | 0, o = o + Math.imul(H, st) | 0, n = n + Math.imul(D, ct) | 0, i = (i = i + Math.imul(D, ht) | 0) + Math.imul(j, ct) | 0, o = o + Math.imul(j, ht) | 0, n = n + Math.imul(P, pt) | 0, i = (i = i + Math.imul(P, mt) | 0) + Math.imul(I, pt) | 0, o = o + Math.imul(I, mt) | 0, n = n + Math.imul(N, bt) | 0, i = (i = i + Math.imul(N, vt) | 0) + Math.imul(T, bt) | 0, o = o + Math.imul(T, vt) | 0, n = n + Math.imul(B, Mt) | 0, i = (i = i + Math.imul(B, _t) | 0) + Math.imul(E, Mt) | 0, o = o + Math.imul(E, _t) | 0;
                    var jt = (c + (n = n + Math.imul(M, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, Bt) | 0) + Math.imul(A, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, Bt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(z, ot), i = (i = Math.imul(z, st)) + Math.imul(G, ot) | 0, o = Math.imul(G, st), n = n + Math.imul(U, ct) | 0, i = (i = i + Math.imul(U, ht) | 0) + Math.imul(H, ct) | 0, o = o + Math.imul(H, ht) | 0, n = n + Math.imul(D, pt) | 0, i = (i = i + Math.imul(D, mt) | 0) + Math.imul(j, pt) | 0, o = o + Math.imul(j, mt) | 0, n = n + Math.imul(P, bt) | 0, i = (i = i + Math.imul(P, vt) | 0) + Math.imul(I, bt) | 0, o = o + Math.imul(I, vt) | 0, n = n + Math.imul(N, Mt) | 0, i = (i = i + Math.imul(N, _t) | 0) + Math.imul(T, Mt) | 0, o = o + Math.imul(T, _t) | 0;
                    var Lt = (c + (n = n + Math.imul(B, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, Bt) | 0) + Math.imul(E, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, Bt) | 0) + (i >>> 13) | 0) + (Lt >>> 26) | 0, Lt &= 67108863, n = Math.imul(z, ct), i = (i = Math.imul(z, ht)) + Math.imul(G, ct) | 0, o = Math.imul(G, ht), n = n + Math.imul(U, pt) | 0, i = (i = i + Math.imul(U, mt) | 0) + Math.imul(H, pt) | 0, o = o + Math.imul(H, mt) | 0, n = n + Math.imul(D, bt) | 0, i = (i = i + Math.imul(D, vt) | 0) + Math.imul(j, bt) | 0, o = o + Math.imul(j, vt) | 0, n = n + Math.imul(P, Mt) | 0, i = (i = i + Math.imul(P, _t) | 0) + Math.imul(I, Mt) | 0, o = o + Math.imul(I, _t) | 0;
                    var Ut = (c + (n = n + Math.imul(N, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(N, Bt) | 0) + Math.imul(T, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(T, Bt) | 0) + (i >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, n = Math.imul(z, pt), i = (i = Math.imul(z, mt)) + Math.imul(G, pt) | 0, o = Math.imul(G, mt), n = n + Math.imul(U, bt) | 0, i = (i = i + Math.imul(U, vt) | 0) + Math.imul(H, bt) | 0, o = o + Math.imul(H, vt) | 0, n = n + Math.imul(D, Mt) | 0, i = (i = i + Math.imul(D, _t) | 0) + Math.imul(j, Mt) | 0, o = o + Math.imul(j, _t) | 0;
                    var Ht = (c + (n = n + Math.imul(P, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, Bt) | 0) + Math.imul(I, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, Bt) | 0) + (i >>> 13) | 0) + (Ht >>> 26) | 0, Ht &= 67108863, n = Math.imul(z, bt), i = (i = Math.imul(z, vt)) + Math.imul(G, bt) | 0, o = Math.imul(G, vt), n = n + Math.imul(U, Mt) | 0, i = (i = i + Math.imul(U, _t) | 0) + Math.imul(H, Mt) | 0, o = o + Math.imul(H, _t) | 0;
                    var qt = (c + (n = n + Math.imul(D, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(D, Bt) | 0) + Math.imul(j, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, Bt) | 0) + (i >>> 13) | 0) + (qt >>> 26) | 0, qt &= 67108863, n = Math.imul(z, Mt), i = (i = Math.imul(z, _t)) + Math.imul(G, Mt) | 0, o = Math.imul(G, _t);
                    var zt = (c + (n = n + Math.imul(U, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, Bt) | 0) + Math.imul(H, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(H, Bt) | 0) + (i >>> 13) | 0) + (zt >>> 26) | 0, zt &= 67108863;
                    var Gt = (c + (n = Math.imul(z, xt)) | 0) + ((8191 & (i = (i = Math.imul(z, Bt)) + Math.imul(G, xt) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(G, Bt)) + (i >>> 13) | 0) + (Gt >>> 26) | 0, Gt &= 67108863, u[0] = Et, u[1] = kt, u[2] = Nt, u[3] = St, u[4] = Tt, u[5] = Ct, u[6] = Pt, u[7] = It, u[8] = Ot, u[9] = Rt, u[10] = Ft, u[11] = Dt, u[12] = jt, u[13] = Lt, u[14] = Ut, u[15] = Ht, u[16] = qt, u[17] = zt, u[18] = Gt, 0 !== c && (u[19] = c, r.length++), r
                };

                function jumboMulTo(t, e, r) {
                    return (new FFTM).mulp(t, e, r)
                }

                function FFTM(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (s = smallMulTo), BN.prototype.mulTo = function mulTo(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? s(this, t, e) : r < 63 ? smallMulTo(this, t, e) : r < 1024 ? function bigMulTo(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var a = i;
                            i = 0;
                            for (var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                                var l = o - c,
                                    h = (0 | t.words[l]) * (0 | e.words[c]),
                                    d = 67108863 & h;
                                s = 67108863 & (d = d + s | 0), i += (a = (a = a + (h / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863
                            }
                            r.words[o] = s, n = a, a = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }(this, t, e) : jumboMulTo(this, t, e)
                }, FFTM.prototype.makeRBT = function makeRBT(t) {
                    for (var e = new Array(t), r = BN.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, FFTM.prototype.revBin = function revBin(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, FFTM.prototype.permute = function permute(t, e, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = e[t[a]], i[a] = r[t[a]]
                }, FFTM.prototype.transform = function transform(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var h = u, d = c, p = 0; p < a; p++) {
                                var m = r[l + p],
                                    y = n[l + p],
                                    b = r[l + p + a],
                                    g = n[l + p + a],
                                    v = h * b - d * g;
                                g = h * g + d * b, b = v, r[l + p] = m + b, n[l + p] = y + g, r[l + p + a] = m - b, n[l + p + a] = y - g, p !== s && (v = u * h - c * d, d = u * d + c * h, h = v)
                            }
                }, FFTM.prototype.guessLen13b = function guessLen13b(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, FFTM.prototype.conjugate = function conjugate(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, FFTM.prototype.normalize13b = function normalize13b(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, FFTM.prototype.convert13b = function convert13b(t, e, r, n) {
                    for (var i = 0, o = 0; o < e; o++) i += 0 | t[o], r[2 * o] = 8191 & i, i >>>= 13, r[2 * o + 1] = 8191 & i, i >>>= 13;
                    for (o = 2 * e; o < n; ++o) r[o] = 0;
                    assert(0 === i), assert(0 == (-8192 & i))
                }, FFTM.prototype.stub = function stub(t) {
                    for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, FFTM.prototype.mulp = function mulp(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = new Array(n),
                        s = new Array(n),
                        u = new Array(n),
                        c = new Array(n),
                        l = new Array(n),
                        h = new Array(n),
                        d = r.words;
                    d.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var p = 0; p < n; p++) {
                        var m = s[p] * l[p] - u[p] * h[p];
                        u[p] = s[p] * h[p] + u[p] * l[p], s[p] = m
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, d, o, n, i), this.conjugate(d, o, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                }, BN.prototype.mul = function mul(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                }, BN.prototype.mulf = function mulf(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), jumboMulTo(this, t, e)
                }, BN.prototype.imul = function imul(t) {
                    return this.clone().mulTo(t, this)
                }, BN.prototype.imuln = function imuln(t) {
                    assert("number" == typeof t), assert(t < 67108864);
                    for (var e = 0, r = 0; r < this.length; r++) {
                        var n = (0 | this.words[r]) * t,
                            i = (67108863 & n) + (67108863 & e);
                        e >>= 26, e += n / 67108864 | 0, e += i >>> 26, this.words[r] = 67108863 & i
                    }
                    return 0 !== e && (this.words[r] = e, this.length++), this
                }, BN.prototype.muln = function muln(t) {
                    return this.clone().imuln(t)
                }, BN.prototype.sqr = function sqr() {
                    return this.mul(this)
                }, BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone())
                }, BN.prototype.pow = function pow(t) {
                    var e = function toBitArray(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }(t);
                    if (0 === e.length) return new BN(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, BN.prototype.iushln = function iushln(t) {
                    assert("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        n = (t - r) / 26,
                        i = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & i,
                                s = (0 | this.words[e]) - a << r;
                            this.words[e] = s | o, o = a >>> 26 - r
                        }
                        o && (this.words[e] = o, this.length++)
                    }
                    if (0 !== n) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                        for (e = 0; e < n; e++) this.words[e] = 0;
                        this.length += n
                    }
                    return this.strip()
                }, BN.prototype.ishln = function ishln(t) {
                    return assert(0 === this.negative), this.iushln(t)
                }, BN.prototype.iushrn = function iushrn(t, e, r) {
                    var n;
                    assert("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                    var i = t % 26,
                        o = Math.min((t - i) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> i << i,
                        s = r;
                    if (n -= o, n = Math.max(0, n), s) {
                        for (var u = 0; u < o; u++) s.words[u] = this.words[u];
                        s.length = o
                    }
                    if (0 === o);
                    else if (this.length > o)
                        for (this.length -= o, u = 0; u < this.length; u++) this.words[u] = this.words[u + o];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= n); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - i | l >>> i, c = l & a
                    }
                    return s && 0 !== c && (s.words[s.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                }, BN.prototype.ishrn = function ishrn(t, e, r) {
                    return assert(0 === this.negative), this.iushrn(t, e, r)
                }, BN.prototype.shln = function shln(t) {
                    return this.clone().ishln(t)
                }, BN.prototype.ushln = function ushln(t) {
                    return this.clone().iushln(t)
                }, BN.prototype.shrn = function shrn(t) {
                    return this.clone().ishrn(t)
                }, BN.prototype.ushrn = function ushrn(t) {
                    return this.clone().iushrn(t)
                }, BN.prototype.testn = function testn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }, BN.prototype.imaskn = function imaskn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var n = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= n
                    }
                    return this.strip()
                }, BN.prototype.maskn = function maskn(t) {
                    return this.clone().imaskn(t)
                }, BN.prototype.iaddn = function iaddn(t) {
                    return assert("number" == typeof t), assert(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                }, BN.prototype._iaddn = function _iaddn(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, BN.prototype.isubn = function isubn(t) {
                    if (assert("number" == typeof t), assert(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this.strip()
                }, BN.prototype.addn = function addn(t) {
                    return this.clone().iaddn(t)
                }, BN.prototype.subn = function subn(t) {
                    return this.clone().isubn(t)
                }, BN.prototype.iabs = function iabs() {
                    return this.negative = 0, this
                }, BN.prototype.abs = function abs() {
                    return this.clone().iabs()
                }, BN.prototype._ishlnsubmul = function _ishlnsubmul(t, e, r) {
                    var n, i, o = t.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < t.length; n++) {
                        i = (0 | this.words[n + r]) + a;
                        var s = (0 | t.words[n]) * e;
                        a = ((i -= 67108863 & s) >> 26) - (s / 67108864 | 0), this.words[n + r] = 67108863 & i
                    }
                    for (; n < this.length - r; n++) a = (i = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & i;
                    if (0 === a) return this.strip();
                    for (assert(-1 === a), a = 0, n = 0; n < this.length; n++) a = (i = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & i;
                    return this.negative = 1, this.strip()
                }, BN.prototype._wordDiv = function _wordDiv(t, e) {
                    var r = (this.length, t.length),
                        n = this.clone(),
                        i = t,
                        o = 0 | i.words[i.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                    var a, s = n.length - i.length;
                    if ("mod" !== e) {
                        (a = new BN(null)).length = s + 1, a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++) a.words[u] = 0
                    }
                    var c = n.clone()._ishlnsubmul(i, 1, s);
                    0 === c.negative && (n = c, a && (a.words[s] = 1));
                    for (var l = s - 1; l >= 0; l--) {
                        var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                        for (h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;) h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                        a && (a.words[l] = h)
                    }
                    return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                        div: a || null,
                        mod: n
                    }
                }, BN.prototype.divmod = function divmod(t, e, r) {
                    return assert(!t.isZero()), this.isZero() ? {
                        div: new BN(0),
                        mod: new BN(0)
                    } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), "mod" !== e && (n = o.div.neg()), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(t)), {
                        div: n,
                        mod: i
                    }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), "mod" !== e && (n = o.div.neg()), {
                        div: n,
                        mod: o.mod
                    }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(t)), {
                        div: o.div,
                        mod: i
                    }) : t.length > this.length || this.cmp(t) < 0 ? {
                        div: new BN(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new BN(this.modn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new BN(this.modn(t.words[0]))
                    } : this._wordDiv(t, e);
                    var n, i, o
                }, BN.prototype.div = function div(t) {
                    return this.divmod(t, "div", !1).div
                }, BN.prototype.mod = function mod(t) {
                    return this.divmod(t, "mod", !1).mod
                }, BN.prototype.umod = function umod(t) {
                    return this.divmod(t, "mod", !0).mod
                }, BN.prototype.divRound = function divRound(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, BN.prototype.modn = function modn(t) {
                    assert(t <= 67108863);
                    for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) r = (e * r + (0 | this.words[n])) % t;
                    return r
                }, BN.prototype.idivn = function idivn(t) {
                    assert(t <= 67108863);
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = (0 | this.words[r]) + 67108864 * e;
                        this.words[r] = n / t | 0, e = n % t
                    }
                    return this.strip()
                }, BN.prototype.divn = function divn(t) {
                    return this.clone().idivn(t)
                }, BN.prototype.egcd = function egcd(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n = new BN(1), i = new BN(0), o = new BN(0), a = new BN(1), s = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++s;
                    for (var u = r.clone(), c = e.clone(); !e.isZero();) {
                        for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                        if (l > 0)
                            for (e.iushrn(l); l-- > 0;)(n.isOdd() || i.isOdd()) && (n.iadd(u), i.isub(c)), n.iushrn(1), i.iushrn(1);
                        for (var d = 0, p = 1; 0 == (r.words[0] & p) && d < 26; ++d, p <<= 1);
                        if (d > 0)
                            for (r.iushrn(d); d-- > 0;)(o.isOdd() || a.isOdd()) && (o.iadd(u), a.isub(c)), o.iushrn(1), a.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), n.isub(o), i.isub(a)) : (r.isub(e), o.isub(n), a.isub(i))
                    }
                    return {
                        a: o,
                        b: a,
                        gcd: r.iushln(s)
                    }
                }, BN.prototype._invmp = function _invmp(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n, i = new BN(1), o = new BN(0), a = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var s = 0, u = 1; 0 == (e.words[0] & u) && s < 26; ++s, u <<= 1);
                        if (s > 0)
                            for (e.iushrn(s); s-- > 0;) i.isOdd() && i.iadd(a), i.iushrn(1);
                        for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(a), o.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(o)) : (r.isub(e), o.isub(i))
                    }
                    return (n = 0 === e.cmpn(1) ? i : o).cmpn(0) < 0 && n.iadd(t), n
                }, BN.prototype.gcd = function gcd(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, BN.prototype.invm = function invm(t) {
                    return this.egcd(t).a.umod(t)
                }, BN.prototype.isEven = function isEven() {
                    return 0 == (1 & this.words[0])
                }, BN.prototype.isOdd = function isOdd() {
                    return 1 == (1 & this.words[0])
                }, BN.prototype.andln = function andln(t) {
                    return this.words[0] & t
                }, BN.prototype.bincn = function bincn(t) {
                    assert("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                    for (var i = n, o = r; 0 !== i && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        i = (a += i) >>> 26, a &= 67108863, this.words[o] = a
                    }
                    return 0 !== i && (this.words[o] = i, this.length++), this
                }, BN.prototype.isZero = function isZero() {
                    return 1 === this.length && 0 === this.words[0]
                }, BN.prototype.cmpn = function cmpn(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this.strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), assert(t <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        e = n === t ? 0 : n < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.cmp = function cmp(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.ucmp = function ucmp(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, BN.prototype.gtn = function gtn(t) {
                    return 1 === this.cmpn(t)
                }, BN.prototype.gt = function gt(t) {
                    return 1 === this.cmp(t)
                }, BN.prototype.gten = function gten(t) {
                    return this.cmpn(t) >= 0
                }, BN.prototype.gte = function gte(t) {
                    return this.cmp(t) >= 0
                }, BN.prototype.ltn = function ltn(t) {
                    return -1 === this.cmpn(t)
                }, BN.prototype.lt = function lt(t) {
                    return -1 === this.cmp(t)
                }, BN.prototype.lten = function lten(t) {
                    return this.cmpn(t) <= 0
                }, BN.prototype.lte = function lte(t) {
                    return this.cmp(t) <= 0
                }, BN.prototype.eqn = function eqn(t) {
                    return 0 === this.cmpn(t)
                }, BN.prototype.eq = function eq(t) {
                    return 0 === this.cmp(t)
                }, BN.red = function red(t) {
                    return new Red(t)
                }, BN.prototype.toRed = function toRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, BN.prototype.fromRed = function fromRed() {
                    return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, BN.prototype._forceRed = function _forceRed(t) {
                    return this.red = t, this
                }, BN.prototype.forceRed = function forceRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, BN.prototype.redAdd = function redAdd(t) {
                    return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, BN.prototype.redIAdd = function redIAdd(t) {
                    return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, BN.prototype.redSub = function redSub(t) {
                    return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, BN.prototype.redISub = function redISub(t) {
                    return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, BN.prototype.redShl = function redShl(t) {
                    return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, BN.prototype.redMul = function redMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, BN.prototype.redIMul = function redIMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, BN.prototype.redSqr = function redSqr() {
                    return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, BN.prototype.redISqr = function redISqr() {
                    return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, BN.prototype.redSqrt = function redSqrt() {
                    return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, BN.prototype.redInvm = function redInvm() {
                    return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, BN.prototype.redNeg = function redNeg() {
                    return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, BN.prototype.redPow = function redPow(t) {
                    return assert(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var u = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function MPrime(t, e) {
                    this.name = t, this.p = new BN(e, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function Red(t) {
                    if ("string" == typeof t) {
                        var e = BN._prime(t);
                        this.m = e.p, this.prime = e
                    } else assert(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function Mont(t) {
                    Red.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                MPrime.prototype._tmp = function _tmp() {
                    var t = new BN(null);
                    return t.words = new Array(Math.ceil(this.n / 13)), t
                }, MPrime.prototype.ireduce = function ireduce(t) {
                    var e, r = t;
                    do {
                        this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : r.strip(), r
                }, MPrime.prototype.split = function split(t, e) {
                    t.iushrn(this.n, 0, e)
                }, MPrime.prototype.imulK = function imulK(t) {
                    return t.imul(this.k)
                }, inherits(K256, MPrime), K256.prototype.split = function split(t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++) e.words[n] = t.words[n];
                    if (e.length = r, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                    var i = t.words[9];
                    for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, K256.prototype.imulK = function imulK(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function imulK(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 19 * (0 | t.words[r]) + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, BN._prime = function prime(t) {
                    if (u[t]) return u[t];
                    var prime;
                    if ("k256" === t) prime = new K256;
                    else if ("p224" === t) prime = new P224;
                    else if ("p192" === t) prime = new P192;
                    else {
                        if ("p25519" !== t) throw new Error("Unknown prime " + t);
                        prime = new P25519
                    }
                    return u[t] = prime, prime
                }, Red.prototype._verify1 = function _verify1(t) {
                    assert(0 === t.negative, "red works only with positives"), assert(t.red, "red works only with red numbers")
                }, Red.prototype._verify2 = function _verify2(t, e) {
                    assert(0 == (t.negative | e.negative), "red works only with positives"), assert(t.red && t.red === e.red, "red works only with red numbers")
                }, Red.prototype.imod = function imod(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                }, Red.prototype.neg = function neg(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, Red.prototype.add = function add(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, Red.prototype.iadd = function iadd(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, Red.prototype.sub = function sub(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                }, Red.prototype.isub = function isub(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r
                }, Red.prototype.shl = function shl(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, Red.prototype.imul = function imul(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, Red.prototype.mul = function mul(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, Red.prototype.isqr = function isqr(t) {
                    return this.imul(t, t.clone())
                }, Red.prototype.sqr = function sqr(t) {
                    return this.mul(t, t)
                }, Red.prototype.sqrt = function sqrt(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (assert(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var n = this.m.subn(1), i = 0; !n.isZero() && 0 === n.andln(1);) i++, n.iushrn(1);
                    assert(!n.isZero());
                    var o = new BN(1).toRed(this),
                        a = o.redNeg(),
                        s = this.m.subn(1).iushrn(1),
                        u = this.m.bitLength();
                    for (u = new BN(2 * u * u).toRed(this); 0 !== this.pow(u, s).cmp(a);) u.redIAdd(a);
                    for (var c = this.pow(u, n), l = this.pow(t, n.addn(1).iushrn(1)), h = this.pow(t, n), d = i; 0 !== h.cmp(o);) {
                        for (var p = h, m = 0; 0 !== p.cmp(o); m++) p = p.redSqr();
                        assert(m < d);
                        var y = this.pow(c, new BN(1).iushln(d - m - 1));
                        l = l.redMul(y), c = y.redSqr(), h = h.redMul(c), d = m
                    }
                    return l
                }, Red.prototype.invm = function invm(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, Red.prototype.pow = function pow(t, e) {
                    if (e.isZero()) return new BN(1);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = new Array(16);
                    r[0] = new BN(1).toRed(this), r[1] = t;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], t);
                    var i = r[0],
                        o = 0,
                        a = 0,
                        s = e.bitLength() % 26;
                    for (0 === s && (s = 26), n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = s - 1; c >= 0; c--) {
                            var l = u >> c & 1;
                            i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 === ++a || 0 === n && 0 === c) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0
                        }
                        s = 26
                    }
                    return i
                }, Red.prototype.convertTo = function convertTo(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, Red.prototype.convertFrom = function convertFrom(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, BN.mont = function mont(t) {
                    return new Mont(t)
                }, inherits(Mont, Red), Mont.prototype.convertTo = function convertTo(t) {
                    return this.imod(t.ushln(this.shift))
                }, Mont.prototype.convertFrom = function convertFrom(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, Mont.prototype.imul = function imul(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.mul = function mul(t, e) {
                    if (t.isZero() || e.isZero()) return new BN(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.invm = function invm(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t, this)
        }).call(this, r(8)(t))
    }, function (t, e, r) {
        (function (t) {
            ! function (t, e) {
                function assert(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }

                function inherits(t, e) {
                    t.super_ = e;
                    var TempCtor = function () {};
                    TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
                }

                function BN(t, e, r) {
                    if (BN.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                var n;
                "object" == typeof t ? t.exports = BN : e.BN = BN, BN.BN = BN, BN.wordSize = 26;
                try {
                    n = r(0).Buffer
                } catch (t) {}

                function parseHex(t, e, r) {
                    for (var n = 0, i = Math.min(t.length, r), o = e; o < i; o++) {
                        var a = t.charCodeAt(o) - 48;
                        n <<= 4, n |= a >= 49 && a <= 54 ? a - 49 + 10 : a >= 17 && a <= 22 ? a - 17 + 10 : 15 & a
                    }
                    return n
                }

                function parseBase(t, e, r, n) {
                    for (var i = 0, o = Math.min(t.length, r), a = e; a < o; a++) {
                        var s = t.charCodeAt(a) - 48;
                        i *= n, i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s
                    }
                    return i
                }
                BN.isBN = function isBN(t) {
                    return t instanceof BN || null !== t && "object" == typeof t && t.constructor.wordSize === BN.wordSize && Array.isArray(t.words)
                }, BN.max = function max(t, e) {
                    return t.cmp(e) > 0 ? t : e
                }, BN.min = function min(t, e) {
                    return t.cmp(e) < 0 ? t : e
                }, BN.prototype._init = function init(t, e, r) {
                    if ("number" == typeof t) return this._initNumber(t, e, r);
                    if ("object" == typeof t) return this._initArray(t, e, r);
                    "hex" === e && (e = 16), assert(e === (0 | e) && e >= 2 && e <= 36);
                    var n = 0;
                    "-" === (t = t.toString().replace(/\s+/g, ""))[0] && n++, 16 === e ? this._parseHex(t, n) : this._parseBase(t, e, n), "-" === t[0] && (this.negative = 1), this.strip(), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initNumber = function _initNumber(t, e, r) {
                    t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (assert(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initArray = function _initArray(t, e, r) {
                    if (assert("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                    this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o, a = 0;
                    if ("be" === r)
                        for (n = t.length - 1, i = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    else if ("le" === r)
                        for (n = 0, i = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    return this.strip()
                }, BN.prototype._parseHex = function _parseHex(t, e) {
                    this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                    for (var r = 0; r < this.length; r++) this.words[r] = 0;
                    var n, i, o = 0;
                    for (r = t.length - 6, n = 0; r >= e; r -= 6) i = parseHex(t, r, r + 6), this.words[n] |= i << o & 67108863, this.words[n + 1] |= i >>> 26 - o & 4194303, (o += 24) >= 26 && (o -= 26, n++);
                    r + 6 !== e && (i = parseHex(t, e, r + 6), this.words[n] |= i << o & 67108863, this.words[n + 1] |= i >>> 26 - o & 4194303), this.strip()
                }, BN.prototype._parseBase = function _parseBase(t, e, r) {
                    this.words = [0], this.length = 1;
                    for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                    n--, i = i / e | 0;
                    for (var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n) u = parseBase(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== a) {
                        var l = 1;
                        for (u = parseBase(t, c, t.length, e), c = 0; c < a; c++) l *= e;
                        this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                }, BN.prototype.copy = function copy(t) {
                    t.words = new Array(this.length);
                    for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                    t.length = this.length, t.negative = this.negative, t.red = this.red
                }, BN.prototype.clone = function clone() {
                    var t = new BN(null);
                    return this.copy(t), t
                }, BN.prototype._expand = function _expand(t) {
                    for (; this.length < t;) this.words[this.length++] = 0;
                    return this
                }, BN.prototype.strip = function strip() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                    return this._normSign()
                }, BN.prototype._normSign = function _normSign() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                }, BN.prototype.inspect = function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                };
                var i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    o = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    a = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function smallMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, d = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= d; p++) {
                            var m = c - p | 0;
                            l += (a = (i = 0 | t.words[m]) * (o = 0 | e.words[p]) + h) / 67108864 | 0, h = 67108863 & a
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r.strip()
                }
                BN.prototype.toString = function toString(t, e) {
                    var r;
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var n = 0, s = 0, u = 0; u < this.length; u++) {
                            var c = this.words[u],
                                l = (16777215 & (c << n | s)).toString(16);
                            r = 0 !== (s = c >>> 24 - n & 16777215) || u !== this.length - 1 ? i[6 - l.length] + l + r : l + r, (n += 2) >= 26 && (n -= 26, u--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var h = o[t],
                            d = a[t];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero();) {
                            var m = p.modn(d).toString(t);
                            r = (p = p.idivn(d)).isZero() ? m + r : i[h - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    assert(!1, "Base should be between 2 and 36")
                }, BN.prototype.toNumber = function toNumber() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, BN.prototype.toJSON = function toJSON() {
                    return this.toString(16)
                }, BN.prototype.toBuffer = function toBuffer(t, e) {
                    return assert(void 0 !== n), this.toArrayLike(n, t, e)
                }, BN.prototype.toArray = function toArray(t, e) {
                    return this.toArrayLike(Array, t, e)
                }, BN.prototype.toArrayLike = function toArrayLike(t, e, r) {
                    var n = this.byteLength(),
                        i = r || Math.max(1, n);
                    assert(n <= i, "byte array longer than desired length"), assert(i > 0, "Requested array length <= 0"), this.strip();
                    var o, a, s = "le" === e,
                        u = new t(i),
                        c = this.clone();
                    if (s) {
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[a] = o;
                        for (; a < i; a++) u[a] = 0
                    } else {
                        for (a = 0; a < i - n; a++) u[a] = 0;
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[i - a - 1] = o
                    }
                    return u
                }, Math.clz32 ? BN.prototype._countBits = function _countBits(t) {
                    return 32 - Math.clz32(t)
                } : BN.prototype._countBits = function _countBits(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, BN.prototype._zeroBits = function _zeroBits(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r
                }, BN.prototype.bitLength = function bitLength() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return 26 * (this.length - 1) + e
                }, BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8)
                }, BN.prototype.toTwos = function toTwos(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, BN.prototype.fromTwos = function fromTwos(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, BN.prototype.isNeg = function isNeg() {
                    return 0 !== this.negative
                }, BN.prototype.neg = function neg() {
                    return this.clone().ineg()
                }, BN.prototype.ineg = function ineg() {
                    return this.isZero() || (this.negative ^= 1), this
                }, BN.prototype.iuor = function iuor(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this.strip()
                }, BN.prototype.ior = function ior(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuor(t)
                }, BN.prototype.or = function or(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, BN.prototype.uor = function uor(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, BN.prototype.iuand = function iuand(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this.strip()
                }, BN.prototype.iand = function iand(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuand(t)
                }, BN.prototype.and = function and(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, BN.prototype.uand = function uand(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, BN.prototype.iuxor = function iuxor(t) {
                    var e, r;
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this.strip()
                }, BN.prototype.ixor = function ixor(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuxor(t)
                }, BN.prototype.xor = function xor(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, BN.prototype.uxor = function uxor(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, BN.prototype.inotn = function inotn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip()
                }, BN.prototype.notn = function notn(t) {
                    return this.clone().inotn(t)
                }, BN.prototype.setn = function setn(t, e) {
                    assert("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        n = t % 26;
                    return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip()
                }, BN.prototype.iadd = function iadd(t) {
                    var e, r, n;
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, BN.prototype.add = function add(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, BN.prototype.isub = function isub(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e = this.iadd(t);
                        return t.negative = 1, e._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var r, n, i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (r = this, n = t) : (r = t, n = this);
                    for (var o = 0, a = 0; a < n.length; a++) o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    for (; 0 !== o && a < r.length; a++) o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    if (0 === o && a < r.length && r !== this)
                        for (; a < r.length; a++) this.words[a] = r.words[a];
                    return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this.strip()
                }, BN.prototype.sub = function sub(t) {
                    return this.clone().isub(t)
                };
                var s = function comb10MulTo(t, e, r) {
                    var n, i, o, a = t.words,
                        s = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        h = 8191 & l,
                        d = l >>> 13,
                        p = 0 | a[1],
                        m = 8191 & p,
                        y = p >>> 13,
                        b = 0 | a[2],
                        g = 8191 & b,
                        v = b >>> 13,
                        w = 0 | a[3],
                        M = 8191 & w,
                        A = w >>> 13,
                        x = 0 | a[4],
                        B = 8191 & x,
                        E = x >>> 13,
                        k = 0 | a[5],
                        N = 8191 & k,
                        T = k >>> 13,
                        C = 0 | a[6],
                        P = 8191 & C,
                        I = C >>> 13,
                        O = 0 | a[7],
                        D = 8191 & O,
                        j = O >>> 13,
                        L = 0 | a[8],
                        U = 8191 & L,
                        H = L >>> 13,
                        q = 0 | a[9],
                        z = 8191 & q,
                        G = q >>> 13,
                        V = 0 | s[0],
                        J = 8191 & V,
                        W = V >>> 13,
                        Z = 0 | s[1],
                        X = 8191 & Z,
                        Y = Z >>> 13,
                        $ = 0 | s[2],
                        Q = 8191 & $,
                        tt = $ >>> 13,
                        et = 0 | s[3],
                        rt = 8191 & et,
                        nt = et >>> 13,
                        it = 0 | s[4],
                        ot = 8191 & it,
                        st = it >>> 13,
                        ut = 0 | s[5],
                        ct = 8191 & ut,
                        ht = ut >>> 13,
                        dt = 0 | s[6],
                        pt = 8191 & dt,
                        mt = dt >>> 13,
                        yt = 0 | s[7],
                        bt = 8191 & yt,
                        vt = yt >>> 13,
                        wt = 0 | s[8],
                        Mt = 8191 & wt,
                        _t = wt >>> 13,
                        At = 0 | s[9],
                        xt = 8191 & At,
                        Bt = At >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var Et = (c + (n = Math.imul(h, J)) | 0) + ((8191 & (i = (i = Math.imul(h, W)) + Math.imul(d, J) | 0)) << 13) | 0;
                    c = ((o = Math.imul(d, W)) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(m, J), i = (i = Math.imul(m, W)) + Math.imul(y, J) | 0, o = Math.imul(y, W);
                    var kt = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(d, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Y) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(g, J), i = (i = Math.imul(g, W)) + Math.imul(v, J) | 0, o = Math.imul(v, W), n = n + Math.imul(m, X) | 0, i = (i = i + Math.imul(m, Y) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, Y) | 0;
                    var Nt = (c + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, tt) | 0) + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(M, J), i = (i = Math.imul(M, W)) + Math.imul(A, J) | 0, o = Math.imul(A, W), n = n + Math.imul(g, X) | 0, i = (i = i + Math.imul(g, Y) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, Y) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0;
                    var St = (c + (n = n + Math.imul(h, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, nt) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, nt) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(B, J), i = (i = Math.imul(B, W)) + Math.imul(E, J) | 0, o = Math.imul(E, W), n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(g, Q) | 0, i = (i = i + Math.imul(g, tt) | 0) + Math.imul(v, Q) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                    var Tt = (c + (n = n + Math.imul(h, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, st) | 0) + Math.imul(d, ot) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, st) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(N, J), i = (i = Math.imul(N, W)) + Math.imul(T, J) | 0, o = Math.imul(T, W), n = n + Math.imul(B, X) | 0, i = (i = i + Math.imul(B, Y) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(g, rt) | 0, i = (i = i + Math.imul(g, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                    var Ct = (c + (n = n + Math.imul(h, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ht) | 0) + Math.imul(d, ct) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, ht) | 0) + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(P, J), i = (i = Math.imul(P, W)) + Math.imul(I, J) | 0, o = Math.imul(I, W), n = n + Math.imul(N, X) | 0, i = (i = i + Math.imul(N, Y) | 0) + Math.imul(T, X) | 0, o = o + Math.imul(T, Y) | 0, n = n + Math.imul(B, Q) | 0, i = (i = i + Math.imul(B, tt) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(M, rt) | 0, i = (i = i + Math.imul(M, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(g, ot) | 0, i = (i = i + Math.imul(g, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(m, ct) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, ht) | 0;
                    var Pt = (c + (n = n + Math.imul(h, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, mt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, mt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(D, J), i = (i = Math.imul(D, W)) + Math.imul(j, J) | 0, o = Math.imul(j, W), n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(N, Q) | 0, i = (i = i + Math.imul(N, tt) | 0) + Math.imul(T, Q) | 0, o = o + Math.imul(T, tt) | 0, n = n + Math.imul(B, rt) | 0, i = (i = i + Math.imul(B, nt) | 0) + Math.imul(E, rt) | 0, o = o + Math.imul(E, nt) | 0, n = n + Math.imul(M, ot) | 0, i = (i = i + Math.imul(M, st) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(g, ct) | 0, i = (i = i + Math.imul(g, ht) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(m, pt) | 0, i = (i = i + Math.imul(m, mt) | 0) + Math.imul(y, pt) | 0, o = o + Math.imul(y, mt) | 0;
                    var It = (c + (n = n + Math.imul(h, bt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, vt) | 0) + Math.imul(d, bt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, vt) | 0) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(U, J), i = (i = Math.imul(U, W)) + Math.imul(H, J) | 0, o = Math.imul(H, W), n = n + Math.imul(D, X) | 0, i = (i = i + Math.imul(D, Y) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, tt) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = (i = i + Math.imul(N, nt) | 0) + Math.imul(T, rt) | 0, o = o + Math.imul(T, nt) | 0, n = n + Math.imul(B, ot) | 0, i = (i = i + Math.imul(B, st) | 0) + Math.imul(E, ot) | 0, o = o + Math.imul(E, st) | 0, n = n + Math.imul(M, ct) | 0, i = (i = i + Math.imul(M, ht) | 0) + Math.imul(A, ct) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(g, pt) | 0, i = (i = i + Math.imul(g, mt) | 0) + Math.imul(v, pt) | 0, o = o + Math.imul(v, mt) | 0, n = n + Math.imul(m, bt) | 0, i = (i = i + Math.imul(m, vt) | 0) + Math.imul(y, bt) | 0, o = o + Math.imul(y, vt) | 0;
                    var Ot = (c + (n = n + Math.imul(h, Mt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, _t) | 0) + Math.imul(d, Mt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, _t) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(z, J), i = (i = Math.imul(z, W)) + Math.imul(G, J) | 0, o = Math.imul(G, W), n = n + Math.imul(U, X) | 0, i = (i = i + Math.imul(U, Y) | 0) + Math.imul(H, X) | 0, o = o + Math.imul(H, Y) | 0, n = n + Math.imul(D, Q) | 0, i = (i = i + Math.imul(D, tt) | 0) + Math.imul(j, Q) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(P, rt) | 0, i = (i = i + Math.imul(P, nt) | 0) + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = (i = i + Math.imul(N, st) | 0) + Math.imul(T, ot) | 0, o = o + Math.imul(T, st) | 0, n = n + Math.imul(B, ct) | 0, i = (i = i + Math.imul(B, ht) | 0) + Math.imul(E, ct) | 0, o = o + Math.imul(E, ht) | 0, n = n + Math.imul(M, pt) | 0, i = (i = i + Math.imul(M, mt) | 0) + Math.imul(A, pt) | 0, o = o + Math.imul(A, mt) | 0, n = n + Math.imul(g, bt) | 0, i = (i = i + Math.imul(g, vt) | 0) + Math.imul(v, bt) | 0, o = o + Math.imul(v, vt) | 0, n = n + Math.imul(m, Mt) | 0, i = (i = i + Math.imul(m, _t) | 0) + Math.imul(y, Mt) | 0, o = o + Math.imul(y, _t) | 0;
                    var Rt = (c + (n = n + Math.imul(h, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Bt) | 0) + Math.imul(d, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Bt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(z, X), i = (i = Math.imul(z, Y)) + Math.imul(G, X) | 0, o = Math.imul(G, Y), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, tt) | 0) + Math.imul(H, Q) | 0, o = o + Math.imul(H, tt) | 0, n = n + Math.imul(D, rt) | 0, i = (i = i + Math.imul(D, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(P, ot) | 0, i = (i = i + Math.imul(P, st) | 0) + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ct) | 0, i = (i = i + Math.imul(N, ht) | 0) + Math.imul(T, ct) | 0, o = o + Math.imul(T, ht) | 0, n = n + Math.imul(B, pt) | 0, i = (i = i + Math.imul(B, mt) | 0) + Math.imul(E, pt) | 0, o = o + Math.imul(E, mt) | 0, n = n + Math.imul(M, bt) | 0, i = (i = i + Math.imul(M, vt) | 0) + Math.imul(A, bt) | 0, o = o + Math.imul(A, vt) | 0, n = n + Math.imul(g, Mt) | 0, i = (i = i + Math.imul(g, _t) | 0) + Math.imul(v, Mt) | 0, o = o + Math.imul(v, _t) | 0;
                    var Ft = (c + (n = n + Math.imul(m, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, Bt) | 0) + Math.imul(y, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, Bt) | 0) + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(z, Q), i = (i = Math.imul(z, tt)) + Math.imul(G, Q) | 0, o = Math.imul(G, tt), n = n + Math.imul(U, rt) | 0, i = (i = i + Math.imul(U, nt) | 0) + Math.imul(H, rt) | 0, o = o + Math.imul(H, nt) | 0, n = n + Math.imul(D, ot) | 0, i = (i = i + Math.imul(D, st) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, st) | 0, n = n + Math.imul(P, ct) | 0, i = (i = i + Math.imul(P, ht) | 0) + Math.imul(I, ct) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, pt) | 0, i = (i = i + Math.imul(N, mt) | 0) + Math.imul(T, pt) | 0, o = o + Math.imul(T, mt) | 0, n = n + Math.imul(B, bt) | 0, i = (i = i + Math.imul(B, vt) | 0) + Math.imul(E, bt) | 0, o = o + Math.imul(E, vt) | 0, n = n + Math.imul(M, Mt) | 0, i = (i = i + Math.imul(M, _t) | 0) + Math.imul(A, Mt) | 0, o = o + Math.imul(A, _t) | 0;
                    var Dt = (c + (n = n + Math.imul(g, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(g, Bt) | 0) + Math.imul(v, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(v, Bt) | 0) + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(z, rt), i = (i = Math.imul(z, nt)) + Math.imul(G, rt) | 0, o = Math.imul(G, nt), n = n + Math.imul(U, ot) | 0, i = (i = i + Math.imul(U, st) | 0) + Math.imul(H, ot) | 0, o = o + Math.imul(H, st) | 0, n = n + Math.imul(D, ct) | 0, i = (i = i + Math.imul(D, ht) | 0) + Math.imul(j, ct) | 0, o = o + Math.imul(j, ht) | 0, n = n + Math.imul(P, pt) | 0, i = (i = i + Math.imul(P, mt) | 0) + Math.imul(I, pt) | 0, o = o + Math.imul(I, mt) | 0, n = n + Math.imul(N, bt) | 0, i = (i = i + Math.imul(N, vt) | 0) + Math.imul(T, bt) | 0, o = o + Math.imul(T, vt) | 0, n = n + Math.imul(B, Mt) | 0, i = (i = i + Math.imul(B, _t) | 0) + Math.imul(E, Mt) | 0, o = o + Math.imul(E, _t) | 0;
                    var jt = (c + (n = n + Math.imul(M, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, Bt) | 0) + Math.imul(A, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, Bt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(z, ot), i = (i = Math.imul(z, st)) + Math.imul(G, ot) | 0, o = Math.imul(G, st), n = n + Math.imul(U, ct) | 0, i = (i = i + Math.imul(U, ht) | 0) + Math.imul(H, ct) | 0, o = o + Math.imul(H, ht) | 0, n = n + Math.imul(D, pt) | 0, i = (i = i + Math.imul(D, mt) | 0) + Math.imul(j, pt) | 0, o = o + Math.imul(j, mt) | 0, n = n + Math.imul(P, bt) | 0, i = (i = i + Math.imul(P, vt) | 0) + Math.imul(I, bt) | 0, o = o + Math.imul(I, vt) | 0, n = n + Math.imul(N, Mt) | 0, i = (i = i + Math.imul(N, _t) | 0) + Math.imul(T, Mt) | 0, o = o + Math.imul(T, _t) | 0;
                    var Lt = (c + (n = n + Math.imul(B, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, Bt) | 0) + Math.imul(E, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, Bt) | 0) + (i >>> 13) | 0) + (Lt >>> 26) | 0, Lt &= 67108863, n = Math.imul(z, ct), i = (i = Math.imul(z, ht)) + Math.imul(G, ct) | 0, o = Math.imul(G, ht), n = n + Math.imul(U, pt) | 0, i = (i = i + Math.imul(U, mt) | 0) + Math.imul(H, pt) | 0, o = o + Math.imul(H, mt) | 0, n = n + Math.imul(D, bt) | 0, i = (i = i + Math.imul(D, vt) | 0) + Math.imul(j, bt) | 0, o = o + Math.imul(j, vt) | 0, n = n + Math.imul(P, Mt) | 0, i = (i = i + Math.imul(P, _t) | 0) + Math.imul(I, Mt) | 0, o = o + Math.imul(I, _t) | 0;
                    var Ut = (c + (n = n + Math.imul(N, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(N, Bt) | 0) + Math.imul(T, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(T, Bt) | 0) + (i >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, n = Math.imul(z, pt), i = (i = Math.imul(z, mt)) + Math.imul(G, pt) | 0, o = Math.imul(G, mt), n = n + Math.imul(U, bt) | 0, i = (i = i + Math.imul(U, vt) | 0) + Math.imul(H, bt) | 0, o = o + Math.imul(H, vt) | 0, n = n + Math.imul(D, Mt) | 0, i = (i = i + Math.imul(D, _t) | 0) + Math.imul(j, Mt) | 0, o = o + Math.imul(j, _t) | 0;
                    var Ht = (c + (n = n + Math.imul(P, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, Bt) | 0) + Math.imul(I, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, Bt) | 0) + (i >>> 13) | 0) + (Ht >>> 26) | 0, Ht &= 67108863, n = Math.imul(z, bt), i = (i = Math.imul(z, vt)) + Math.imul(G, bt) | 0, o = Math.imul(G, vt), n = n + Math.imul(U, Mt) | 0, i = (i = i + Math.imul(U, _t) | 0) + Math.imul(H, Mt) | 0, o = o + Math.imul(H, _t) | 0;
                    var qt = (c + (n = n + Math.imul(D, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(D, Bt) | 0) + Math.imul(j, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, Bt) | 0) + (i >>> 13) | 0) + (qt >>> 26) | 0, qt &= 67108863, n = Math.imul(z, Mt), i = (i = Math.imul(z, _t)) + Math.imul(G, Mt) | 0, o = Math.imul(G, _t);
                    var zt = (c + (n = n + Math.imul(U, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, Bt) | 0) + Math.imul(H, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(H, Bt) | 0) + (i >>> 13) | 0) + (zt >>> 26) | 0, zt &= 67108863;
                    var Gt = (c + (n = Math.imul(z, xt)) | 0) + ((8191 & (i = (i = Math.imul(z, Bt)) + Math.imul(G, xt) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(G, Bt)) + (i >>> 13) | 0) + (Gt >>> 26) | 0, Gt &= 67108863, u[0] = Et, u[1] = kt, u[2] = Nt, u[3] = St, u[4] = Tt, u[5] = Ct, u[6] = Pt, u[7] = It, u[8] = Ot, u[9] = Rt, u[10] = Ft, u[11] = Dt, u[12] = jt, u[13] = Lt, u[14] = Ut, u[15] = Ht, u[16] = qt, u[17] = zt, u[18] = Gt, 0 !== c && (u[19] = c, r.length++), r
                };

                function jumboMulTo(t, e, r) {
                    return (new FFTM).mulp(t, e, r)
                }

                function FFTM(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (s = smallMulTo), BN.prototype.mulTo = function mulTo(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? s(this, t, e) : r < 63 ? smallMulTo(this, t, e) : r < 1024 ? function bigMulTo(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var a = i;
                            i = 0;
                            for (var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                                var l = o - c,
                                    h = (0 | t.words[l]) * (0 | e.words[c]),
                                    d = 67108863 & h;
                                s = 67108863 & (d = d + s | 0), i += (a = (a = a + (h / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863
                            }
                            r.words[o] = s, n = a, a = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }(this, t, e) : jumboMulTo(this, t, e)
                }, FFTM.prototype.makeRBT = function makeRBT(t) {
                    for (var e = new Array(t), r = BN.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, FFTM.prototype.revBin = function revBin(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, FFTM.prototype.permute = function permute(t, e, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = e[t[a]], i[a] = r[t[a]]
                }, FFTM.prototype.transform = function transform(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var h = u, d = c, p = 0; p < a; p++) {
                                var m = r[l + p],
                                    y = n[l + p],
                                    b = r[l + p + a],
                                    g = n[l + p + a],
                                    v = h * b - d * g;
                                g = h * g + d * b, b = v, r[l + p] = m + b, n[l + p] = y + g, r[l + p + a] = m - b, n[l + p + a] = y - g, p !== s && (v = u * h - c * d, d = u * d + c * h, h = v)
                            }
                }, FFTM.prototype.guessLen13b = function guessLen13b(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, FFTM.prototype.conjugate = function conjugate(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, FFTM.prototype.normalize13b = function normalize13b(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, FFTM.prototype.convert13b = function convert13b(t, e, r, n) {
                    for (var i = 0, o = 0; o < e; o++) i += 0 | t[o], r[2 * o] = 8191 & i, i >>>= 13, r[2 * o + 1] = 8191 & i, i >>>= 13;
                    for (o = 2 * e; o < n; ++o) r[o] = 0;
                    assert(0 === i), assert(0 == (-8192 & i))
                }, FFTM.prototype.stub = function stub(t) {
                    for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, FFTM.prototype.mulp = function mulp(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = new Array(n),
                        s = new Array(n),
                        u = new Array(n),
                        c = new Array(n),
                        l = new Array(n),
                        h = new Array(n),
                        d = r.words;
                    d.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var p = 0; p < n; p++) {
                        var m = s[p] * l[p] - u[p] * h[p];
                        u[p] = s[p] * h[p] + u[p] * l[p], s[p] = m
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, d, o, n, i), this.conjugate(d, o, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                }, BN.prototype.mul = function mul(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                }, BN.prototype.mulf = function mulf(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), jumboMulTo(this, t, e)
                }, BN.prototype.imul = function imul(t) {
                    return this.clone().mulTo(t, this)
                }, BN.prototype.imuln = function imuln(t) {
                    assert("number" == typeof t), assert(t < 67108864);
                    for (var e = 0, r = 0; r < this.length; r++) {
                        var n = (0 | this.words[r]) * t,
                            i = (67108863 & n) + (67108863 & e);
                        e >>= 26, e += n / 67108864 | 0, e += i >>> 26, this.words[r] = 67108863 & i
                    }
                    return 0 !== e && (this.words[r] = e, this.length++), this
                }, BN.prototype.muln = function muln(t) {
                    return this.clone().imuln(t)
                }, BN.prototype.sqr = function sqr() {
                    return this.mul(this)
                }, BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone())
                }, BN.prototype.pow = function pow(t) {
                    var e = function toBitArray(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }(t);
                    if (0 === e.length) return new BN(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, BN.prototype.iushln = function iushln(t) {
                    assert("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        n = (t - r) / 26,
                        i = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & i,
                                s = (0 | this.words[e]) - a << r;
                            this.words[e] = s | o, o = a >>> 26 - r
                        }
                        o && (this.words[e] = o, this.length++)
                    }
                    if (0 !== n) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                        for (e = 0; e < n; e++) this.words[e] = 0;
                        this.length += n
                    }
                    return this.strip()
                }, BN.prototype.ishln = function ishln(t) {
                    return assert(0 === this.negative), this.iushln(t)
                }, BN.prototype.iushrn = function iushrn(t, e, r) {
                    var n;
                    assert("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                    var i = t % 26,
                        o = Math.min((t - i) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> i << i,
                        s = r;
                    if (n -= o, n = Math.max(0, n), s) {
                        for (var u = 0; u < o; u++) s.words[u] = this.words[u];
                        s.length = o
                    }
                    if (0 === o);
                    else if (this.length > o)
                        for (this.length -= o, u = 0; u < this.length; u++) this.words[u] = this.words[u + o];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= n); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - i | l >>> i, c = l & a
                    }
                    return s && 0 !== c && (s.words[s.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                }, BN.prototype.ishrn = function ishrn(t, e, r) {
                    return assert(0 === this.negative), this.iushrn(t, e, r)
                }, BN.prototype.shln = function shln(t) {
                    return this.clone().ishln(t)
                }, BN.prototype.ushln = function ushln(t) {
                    return this.clone().iushln(t)
                }, BN.prototype.shrn = function shrn(t) {
                    return this.clone().ishrn(t)
                }, BN.prototype.ushrn = function ushrn(t) {
                    return this.clone().iushrn(t)
                }, BN.prototype.testn = function testn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }, BN.prototype.imaskn = function imaskn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var n = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= n
                    }
                    return this.strip()
                }, BN.prototype.maskn = function maskn(t) {
                    return this.clone().imaskn(t)
                }, BN.prototype.iaddn = function iaddn(t) {
                    return assert("number" == typeof t), assert(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                }, BN.prototype._iaddn = function _iaddn(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, BN.prototype.isubn = function isubn(t) {
                    if (assert("number" == typeof t), assert(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this.strip()
                }, BN.prototype.addn = function addn(t) {
                    return this.clone().iaddn(t)
                }, BN.prototype.subn = function subn(t) {
                    return this.clone().isubn(t)
                }, BN.prototype.iabs = function iabs() {
                    return this.negative = 0, this
                }, BN.prototype.abs = function abs() {
                    return this.clone().iabs()
                }, BN.prototype._ishlnsubmul = function _ishlnsubmul(t, e, r) {
                    var n, i, o = t.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < t.length; n++) {
                        i = (0 | this.words[n + r]) + a;
                        var s = (0 | t.words[n]) * e;
                        a = ((i -= 67108863 & s) >> 26) - (s / 67108864 | 0), this.words[n + r] = 67108863 & i
                    }
                    for (; n < this.length - r; n++) a = (i = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & i;
                    if (0 === a) return this.strip();
                    for (assert(-1 === a), a = 0, n = 0; n < this.length; n++) a = (i = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & i;
                    return this.negative = 1, this.strip()
                }, BN.prototype._wordDiv = function _wordDiv(t, e) {
                    var r = (this.length, t.length),
                        n = this.clone(),
                        i = t,
                        o = 0 | i.words[i.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                    var a, s = n.length - i.length;
                    if ("mod" !== e) {
                        (a = new BN(null)).length = s + 1, a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++) a.words[u] = 0
                    }
                    var c = n.clone()._ishlnsubmul(i, 1, s);
                    0 === c.negative && (n = c, a && (a.words[s] = 1));
                    for (var l = s - 1; l >= 0; l--) {
                        var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                        for (h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;) h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                        a && (a.words[l] = h)
                    }
                    return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                        div: a || null,
                        mod: n
                    }
                }, BN.prototype.divmod = function divmod(t, e, r) {
                    return assert(!t.isZero()), this.isZero() ? {
                        div: new BN(0),
                        mod: new BN(0)
                    } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), "mod" !== e && (n = o.div.neg()), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(t)), {
                        div: n,
                        mod: i
                    }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), "mod" !== e && (n = o.div.neg()), {
                        div: n,
                        mod: o.mod
                    }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(t)), {
                        div: o.div,
                        mod: i
                    }) : t.length > this.length || this.cmp(t) < 0 ? {
                        div: new BN(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new BN(this.modn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new BN(this.modn(t.words[0]))
                    } : this._wordDiv(t, e);
                    var n, i, o
                }, BN.prototype.div = function div(t) {
                    return this.divmod(t, "div", !1).div
                }, BN.prototype.mod = function mod(t) {
                    return this.divmod(t, "mod", !1).mod
                }, BN.prototype.umod = function umod(t) {
                    return this.divmod(t, "mod", !0).mod
                }, BN.prototype.divRound = function divRound(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, BN.prototype.modn = function modn(t) {
                    assert(t <= 67108863);
                    for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) r = (e * r + (0 | this.words[n])) % t;
                    return r
                }, BN.prototype.idivn = function idivn(t) {
                    assert(t <= 67108863);
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = (0 | this.words[r]) + 67108864 * e;
                        this.words[r] = n / t | 0, e = n % t
                    }
                    return this.strip()
                }, BN.prototype.divn = function divn(t) {
                    return this.clone().idivn(t)
                }, BN.prototype.egcd = function egcd(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n = new BN(1), i = new BN(0), o = new BN(0), a = new BN(1), s = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++s;
                    for (var u = r.clone(), c = e.clone(); !e.isZero();) {
                        for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                        if (l > 0)
                            for (e.iushrn(l); l-- > 0;)(n.isOdd() || i.isOdd()) && (n.iadd(u), i.isub(c)), n.iushrn(1), i.iushrn(1);
                        for (var d = 0, p = 1; 0 == (r.words[0] & p) && d < 26; ++d, p <<= 1);
                        if (d > 0)
                            for (r.iushrn(d); d-- > 0;)(o.isOdd() || a.isOdd()) && (o.iadd(u), a.isub(c)), o.iushrn(1), a.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), n.isub(o), i.isub(a)) : (r.isub(e), o.isub(n), a.isub(i))
                    }
                    return {
                        a: o,
                        b: a,
                        gcd: r.iushln(s)
                    }
                }, BN.prototype._invmp = function _invmp(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n, i = new BN(1), o = new BN(0), a = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var s = 0, u = 1; 0 == (e.words[0] & u) && s < 26; ++s, u <<= 1);
                        if (s > 0)
                            for (e.iushrn(s); s-- > 0;) i.isOdd() && i.iadd(a), i.iushrn(1);
                        for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(a), o.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(o)) : (r.isub(e), o.isub(i))
                    }
                    return (n = 0 === e.cmpn(1) ? i : o).cmpn(0) < 0 && n.iadd(t), n
                }, BN.prototype.gcd = function gcd(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, BN.prototype.invm = function invm(t) {
                    return this.egcd(t).a.umod(t)
                }, BN.prototype.isEven = function isEven() {
                    return 0 == (1 & this.words[0])
                }, BN.prototype.isOdd = function isOdd() {
                    return 1 == (1 & this.words[0])
                }, BN.prototype.andln = function andln(t) {
                    return this.words[0] & t
                }, BN.prototype.bincn = function bincn(t) {
                    assert("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                    for (var i = n, o = r; 0 !== i && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        i = (a += i) >>> 26, a &= 67108863, this.words[o] = a
                    }
                    return 0 !== i && (this.words[o] = i, this.length++), this
                }, BN.prototype.isZero = function isZero() {
                    return 1 === this.length && 0 === this.words[0]
                }, BN.prototype.cmpn = function cmpn(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this.strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), assert(t <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        e = n === t ? 0 : n < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.cmp = function cmp(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.ucmp = function ucmp(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, BN.prototype.gtn = function gtn(t) {
                    return 1 === this.cmpn(t)
                }, BN.prototype.gt = function gt(t) {
                    return 1 === this.cmp(t)
                }, BN.prototype.gten = function gten(t) {
                    return this.cmpn(t) >= 0
                }, BN.prototype.gte = function gte(t) {
                    return this.cmp(t) >= 0
                }, BN.prototype.ltn = function ltn(t) {
                    return -1 === this.cmpn(t)
                }, BN.prototype.lt = function lt(t) {
                    return -1 === this.cmp(t)
                }, BN.prototype.lten = function lten(t) {
                    return this.cmpn(t) <= 0
                }, BN.prototype.lte = function lte(t) {
                    return this.cmp(t) <= 0
                }, BN.prototype.eqn = function eqn(t) {
                    return 0 === this.cmpn(t)
                }, BN.prototype.eq = function eq(t) {
                    return 0 === this.cmp(t)
                }, BN.red = function red(t) {
                    return new Red(t)
                }, BN.prototype.toRed = function toRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, BN.prototype.fromRed = function fromRed() {
                    return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, BN.prototype._forceRed = function _forceRed(t) {
                    return this.red = t, this
                }, BN.prototype.forceRed = function forceRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, BN.prototype.redAdd = function redAdd(t) {
                    return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, BN.prototype.redIAdd = function redIAdd(t) {
                    return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, BN.prototype.redSub = function redSub(t) {
                    return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, BN.prototype.redISub = function redISub(t) {
                    return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, BN.prototype.redShl = function redShl(t) {
                    return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, BN.prototype.redMul = function redMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, BN.prototype.redIMul = function redIMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, BN.prototype.redSqr = function redSqr() {
                    return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, BN.prototype.redISqr = function redISqr() {
                    return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, BN.prototype.redSqrt = function redSqrt() {
                    return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, BN.prototype.redInvm = function redInvm() {
                    return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, BN.prototype.redNeg = function redNeg() {
                    return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, BN.prototype.redPow = function redPow(t) {
                    return assert(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var u = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function MPrime(t, e) {
                    this.name = t, this.p = new BN(e, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function Red(t) {
                    if ("string" == typeof t) {
                        var e = BN._prime(t);
                        this.m = e.p, this.prime = e
                    } else assert(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function Mont(t) {
                    Red.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                MPrime.prototype._tmp = function _tmp() {
                    var t = new BN(null);
                    return t.words = new Array(Math.ceil(this.n / 13)), t
                }, MPrime.prototype.ireduce = function ireduce(t) {
                    var e, r = t;
                    do {
                        this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : r.strip(), r
                }, MPrime.prototype.split = function split(t, e) {
                    t.iushrn(this.n, 0, e)
                }, MPrime.prototype.imulK = function imulK(t) {
                    return t.imul(this.k)
                }, inherits(K256, MPrime), K256.prototype.split = function split(t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++) e.words[n] = t.words[n];
                    if (e.length = r, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                    var i = t.words[9];
                    for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, K256.prototype.imulK = function imulK(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function imulK(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 19 * (0 | t.words[r]) + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, BN._prime = function prime(t) {
                    if (u[t]) return u[t];
                    var prime;
                    if ("k256" === t) prime = new K256;
                    else if ("p224" === t) prime = new P224;
                    else if ("p192" === t) prime = new P192;
                    else {
                        if ("p25519" !== t) throw new Error("Unknown prime " + t);
                        prime = new P25519
                    }
                    return u[t] = prime, prime
                }, Red.prototype._verify1 = function _verify1(t) {
                    assert(0 === t.negative, "red works only with positives"), assert(t.red, "red works only with red numbers")
                }, Red.prototype._verify2 = function _verify2(t, e) {
                    assert(0 == (t.negative | e.negative), "red works only with positives"), assert(t.red && t.red === e.red, "red works only with red numbers")
                }, Red.prototype.imod = function imod(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                }, Red.prototype.neg = function neg(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, Red.prototype.add = function add(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, Red.prototype.iadd = function iadd(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, Red.prototype.sub = function sub(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                }, Red.prototype.isub = function isub(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r
                }, Red.prototype.shl = function shl(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, Red.prototype.imul = function imul(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, Red.prototype.mul = function mul(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, Red.prototype.isqr = function isqr(t) {
                    return this.imul(t, t.clone())
                }, Red.prototype.sqr = function sqr(t) {
                    return this.mul(t, t)
                }, Red.prototype.sqrt = function sqrt(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (assert(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var n = this.m.subn(1), i = 0; !n.isZero() && 0 === n.andln(1);) i++, n.iushrn(1);
                    assert(!n.isZero());
                    var o = new BN(1).toRed(this),
                        a = o.redNeg(),
                        s = this.m.subn(1).iushrn(1),
                        u = this.m.bitLength();
                    for (u = new BN(2 * u * u).toRed(this); 0 !== this.pow(u, s).cmp(a);) u.redIAdd(a);
                    for (var c = this.pow(u, n), l = this.pow(t, n.addn(1).iushrn(1)), h = this.pow(t, n), d = i; 0 !== h.cmp(o);) {
                        for (var p = h, m = 0; 0 !== p.cmp(o); m++) p = p.redSqr();
                        assert(m < d);
                        var y = this.pow(c, new BN(1).iushln(d - m - 1));
                        l = l.redMul(y), c = y.redSqr(), h = h.redMul(c), d = m
                    }
                    return l
                }, Red.prototype.invm = function invm(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, Red.prototype.pow = function pow(t, e) {
                    if (e.isZero()) return new BN(1);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = new Array(16);
                    r[0] = new BN(1).toRed(this), r[1] = t;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], t);
                    var i = r[0],
                        o = 0,
                        a = 0,
                        s = e.bitLength() % 26;
                    for (0 === s && (s = 26), n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = s - 1; c >= 0; c--) {
                            var l = u >> c & 1;
                            i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 === ++a || 0 === n && 0 === c) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0
                        }
                        s = 26
                    }
                    return i
                }, Red.prototype.convertTo = function convertTo(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, Red.prototype.convertFrom = function convertFrom(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, BN.mont = function mont(t) {
                    return new Mont(t)
                }, inherits(Mont, Red), Mont.prototype.convertTo = function convertTo(t) {
                    return this.imod(t.ushln(this.shift))
                }, Mont.prototype.convertFrom = function convertFrom(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, Mont.prototype.imul = function imul(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.mul = function mul(t, e) {
                    if (t.isZero() || e.isZero()) return new BN(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.invm = function invm(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t, this)
        }).call(this, r(8)(t))
    }, function (t, e) {}, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        const n = r(573);

        function toByteArray(t) {
            if (null == t) throw new Error("cannot convert null value to array");
            if ("string" == typeof t) {
                const e = t.match(/^(0x)?[0-9a-fA-F]*$/);
                if (!e) throw new Error("invalid hexidecimal string");
                if ("0x" !== e[1]) throw new Error("hex string must have 0x prefix");
                (t = t.substring(2)).length % 2 && (t = "0" + t);
                const r = [];
                for (let e = 0; e < t.length; e += 2) r.push(parseInt(t.substr(e, 2), 16));
                return addSlice(new Uint8Array(r))
            }
            if (function isByteArray(t) {
                    if (!t || parseInt(String(t.length)) != t.length || "string" == typeof t) return !1;
                    for (let e = 0; e < t.length; e++) {
                        const r = t[e];
                        if (r < 0 || r >= 256 || parseInt(String(r)) != r) return !1
                    }
                    return !0
                }(t)) return addSlice(new Uint8Array(t));
            throw new Error("invalid arrayify value")
        }

        function addSlice(t) {
            return void 0 !== t.slice || (t.slice = () => {
                const e = Array.prototype.slice.call(arguments);
                return addSlice(new Uint8Array(Array.prototype.slice.apply(t, e)))
            }), t
        }
        e.keccak256 = function keccak256(t) {
            return "0x" + n.keccak_256(toByteArray(t))
        }, e.padLeft = (t, e) => {
            const r = /^0x/i.test(t) || "number" == typeof t,
                n = e - (t = t.toString().replace(/^0x/i, "")).length + 1 >= 0 ? e - t.length + 1 : 0;
            return (r ? "0x" : "") + new Array(n).join("0") + t
        }, e.bytesToHex = function bytesToHex(t) {
            const e = [];
            for (let r = 0; r < t.length; r++) e.push((t[r] >>> 4).toString(16)), e.push((15 & t[r]).toString(16));
            return "0x" + e.join("").replace(/^0+/, "")
        }, e.toByteArray = toByteArray
    }, function (t, e, r) {
        (function (n, i) {
            var o;
            ! function () {
                var a = "input is invalid type",
                    s = "object" == typeof window,
                    u = s ? window : {};
                u.JS_SHA3_NO_WINDOW && (s = !1);
                var c = !s && "object" == typeof self;
                !u.JS_SHA3_NO_NODE_JS && "object" == typeof n && n.versions && n.versions.node ? u = i : c && (u = self);
                var l = !u.JS_SHA3_NO_COMMON_JS && "object" == typeof t && t.exports,
                    h = r(574),
                    d = !u.JS_SHA3_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer,
                    p = "0123456789abcdef".split(""),
                    m = [4, 1024, 262144, 67108864],
                    y = [0, 8, 16, 24],
                    b = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648],
                    g = [224, 256, 384, 512],
                    v = [128, 256],
                    w = ["hex", "buffer", "arrayBuffer", "array", "digest"],
                    M = {
                        128: 168,
                        256: 136
                    };
                !u.JS_SHA3_NO_NODE_JS && Array.isArray || (Array.isArray = function (t) {
                    return "[object Array]" === Object.prototype.toString.call(t)
                }), !d || !u.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function (t) {
                    return "object" == typeof t && t.buffer && t.buffer.constructor === ArrayBuffer
                });
                for (var createOutputMethod = function (t, e, r) {
                        return function (n) {
                            return new Keccak(t, e, t).update(n)[r]()
                        }
                    }, createShakeOutputMethod = function (t, e, r) {
                        return function (n, i) {
                            return new Keccak(t, e, i).update(n)[r]()
                        }
                    }, createCshakeOutputMethod = function (t, e, r) {
                        return function (e, n, i, o) {
                            return x["cshake" + t].update(e, n, i, o)[r]()
                        }
                    }, createKmacOutputMethod = function (t, e, r) {
                        return function (e, n, i, o) {
                            return x["kmac" + t].update(e, n, i, o)[r]()
                        }
                    }, createOutputMethods = function (t, e, r, n) {
                        for (var i = 0; i < w.length; ++i) {
                            var o = w[i];
                            t[o] = e(r, n, o)
                        }
                        return t
                    }, createMethod = function (t, e) {
                        var r = createOutputMethod(t, e, "hex");
                        return r.create = function () {
                            return new Keccak(t, e, t)
                        }, r.update = function (t) {
                            return r.create().update(t)
                        }, createOutputMethods(r, createOutputMethod, t, e)
                    }, A = [{
                        name: "keccak",
                        padding: [1, 256, 65536, 16777216],
                        bits: g,
                        createMethod: createMethod
                    }, {
                        name: "sha3",
                        padding: [6, 1536, 393216, 100663296],
                        bits: g,
                        createMethod: createMethod
                    }, {
                        name: "shake",
                        padding: [31, 7936, 2031616, 520093696],
                        bits: v,
                        createMethod: function (t, e) {
                            var r = createShakeOutputMethod(t, e, "hex");
                            return r.create = function (r) {
                                return new Keccak(t, e, r)
                            }, r.update = function (t, e) {
                                return r.create(e).update(t)
                            }, createOutputMethods(r, createShakeOutputMethod, t, e)
                        }
                    }, {
                        name: "cshake",
                        padding: m,
                        bits: v,
                        createMethod: function (t, e) {
                            var r = M[t],
                                n = createCshakeOutputMethod(t, 0, "hex");
                            return n.create = function (n, i, o) {
                                return i || o ? new Keccak(t, e, n).bytepad([i, o], r) : x["shake" + t].create(n)
                            }, n.update = function (t, e, r, i) {
                                return n.create(e, r, i).update(t)
                            }, createOutputMethods(n, createCshakeOutputMethod, t, e)
                        }
                    }, {
                        name: "kmac",
                        padding: m,
                        bits: v,
                        createMethod: function (t, e) {
                            var r = M[t],
                                n = createKmacOutputMethod(t, 0, "hex");
                            return n.create = function (n, i, o) {
                                return new Kmac(t, e, i).bytepad(["KMAC", o], r).bytepad([n], r)
                            }, n.update = function (t, e, r, i) {
                                return n.create(t, r, i).update(e)
                            }, createOutputMethods(n, createKmacOutputMethod, t, e)
                        }
                    }], x = {}, B = [], E = 0; E < A.length; ++E)
                    for (var k = A[E], N = k.bits, T = 0; T < N.length; ++T) {
                        var C = k.name + "_" + N[T];
                        if (B.push(C), x[C] = k.createMethod(N[T], k.padding), "sha3" !== k.name) {
                            var P = k.name + N[T];
                            B.push(P), x[P] = x[C]
                        }
                    }

                function Keccak(t, e, r) {
                    this.blocks = [], this.s = [], this.padding = e, this.outputBits = r, this.reset = !0, this.finalized = !1, this.block = 0, this.start = 0, this.blockCount = 1600 - (t << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = r >> 5, this.extraBytes = (31 & r) >> 3;
                    for (var n = 0; n < 50; ++n) this.s[n] = 0
                }

                function Kmac(t, e, r) {
                    Keccak.call(this, t, e, r)
                }
                Keccak.prototype.update = function (t) {
                    if (this.finalized) throw new Error("finalize already called");
                    var e, r = typeof t;
                    if ("string" !== r) {
                        if ("object" !== r) throw new Error(a);
                        if (null === t) throw new Error(a);
                        if (d && t.constructor === ArrayBuffer) t = new Uint8Array(t);
                        else if (!(Array.isArray(t) || d && ArrayBuffer.isView(t))) throw new Error(a);
                        e = !0
                    }
                    for (var n, i, o = this.blocks, s = this.byteCount, u = t.length, c = this.blockCount, l = 0, h = this.s; l < u;) {
                        if (this.reset)
                            for (this.reset = !1, o[0] = this.block, n = 1; n < c + 1; ++n) o[n] = 0;
                        if (e)
                            for (n = this.start; l < u && n < s; ++l) o[n >> 2] |= t[l] << y[3 & n++];
                        else
                            for (n = this.start; l < u && n < s; ++l)(i = t.charCodeAt(l)) < 128 ? o[n >> 2] |= i << y[3 & n++] : i < 2048 ? (o[n >> 2] |= (192 | i >> 6) << y[3 & n++], o[n >> 2] |= (128 | 63 & i) << y[3 & n++]) : i < 55296 || i >= 57344 ? (o[n >> 2] |= (224 | i >> 12) << y[3 & n++], o[n >> 2] |= (128 | i >> 6 & 63) << y[3 & n++], o[n >> 2] |= (128 | 63 & i) << y[3 & n++]) : (i = 65536 + ((1023 & i) << 10 | 1023 & t.charCodeAt(++l)), o[n >> 2] |= (240 | i >> 18) << y[3 & n++], o[n >> 2] |= (128 | i >> 12 & 63) << y[3 & n++], o[n >> 2] |= (128 | i >> 6 & 63) << y[3 & n++], o[n >> 2] |= (128 | 63 & i) << y[3 & n++]);
                        if (this.lastByteIndex = n, n >= s) {
                            for (this.start = n - s, this.block = o[c], n = 0; n < c; ++n) h[n] ^= o[n];
                            f(h), this.reset = !0
                        } else this.start = n
                    }
                    return this
                }, Keccak.prototype.encode = function (t, e) {
                    var r = 255 & t,
                        n = 1,
                        i = [r];
                    for (r = 255 & (t >>= 8); r > 0;) i.unshift(r), r = 255 & (t >>= 8), ++n;
                    return e ? i.push(n) : i.unshift(n), this.update(i), i.length
                }, Keccak.prototype.encodeString = function (t) {
                    var e, r = typeof t;
                    if ("string" !== r) {
                        if ("object" !== r) throw new Error(a);
                        if (null === t) throw new Error(a);
                        if (d && t.constructor === ArrayBuffer) t = new Uint8Array(t);
                        else if (!(Array.isArray(t) || d && ArrayBuffer.isView(t))) throw new Error(a);
                        e = !0
                    }
                    var n = 0,
                        i = t.length;
                    if (e) n = i;
                    else
                        for (var o = 0; o < t.length; ++o) {
                            var s = t.charCodeAt(o);
                            s < 128 ? n += 1 : s < 2048 ? n += 2 : s < 55296 || s >= 57344 ? n += 3 : (s = 65536 + ((1023 & s) << 10 | 1023 & t.charCodeAt(++o)), n += 4)
                        }
                    return n += this.encode(8 * n), this.update(t), n
                }, Keccak.prototype.bytepad = function (t, e) {
                    for (var r = this.encode(e), n = 0; n < t.length; ++n) r += this.encodeString(t[n]);
                    var i = e - r % e,
                        o = [];
                    return o.length = i, this.update(o), this
                }, Keccak.prototype.finalize = function () {
                    if (!this.finalized) {
                        this.finalized = !0;
                        var t = this.blocks,
                            e = this.lastByteIndex,
                            r = this.blockCount,
                            n = this.s;
                        if (t[e >> 2] |= this.padding[3 & e], this.lastByteIndex === this.byteCount)
                            for (t[0] = t[r], e = 1; e < r + 1; ++e) t[e] = 0;
                        for (t[r - 1] |= 2147483648, e = 0; e < r; ++e) n[e] ^= t[e];
                        f(n)
                    }
                }, Keccak.prototype.toString = Keccak.prototype.hex = function () {
                    this.finalize();
                    for (var t, e = this.blockCount, r = this.s, n = this.outputBlocks, i = this.extraBytes, o = 0, a = 0, s = ""; a < n;) {
                        for (o = 0; o < e && a < n; ++o, ++a) t = r[o], s += p[t >> 4 & 15] + p[15 & t] + p[t >> 12 & 15] + p[t >> 8 & 15] + p[t >> 20 & 15] + p[t >> 16 & 15] + p[t >> 28 & 15] + p[t >> 24 & 15];
                        a % e == 0 && (f(r), o = 0)
                    }
                    return i && (t = r[o], s += p[t >> 4 & 15] + p[15 & t], i > 1 && (s += p[t >> 12 & 15] + p[t >> 8 & 15]), i > 2 && (s += p[t >> 20 & 15] + p[t >> 16 & 15])), s
                }, Keccak.prototype.arrayBuffer = function () {
                    this.finalize();
                    var t, e = this.blockCount,
                        r = this.s,
                        n = this.outputBlocks,
                        i = this.extraBytes,
                        o = 0,
                        a = 0,
                        s = this.outputBits >> 3;
                    t = i ? new ArrayBuffer(n + 1 << 2) : new ArrayBuffer(s);
                    for (var u = new Uint32Array(t); a < n;) {
                        for (o = 0; o < e && a < n; ++o, ++a) u[a] = r[o];
                        a % e == 0 && f(r)
                    }
                    return i && (u[o] = r[o], t = t.slice(0, s)), t
                }, Keccak.prototype.buffer = Keccak.prototype.arrayBuffer, Keccak.prototype.digest = Keccak.prototype.array = function () {
                    this.finalize();
                    for (var t, e, r = this.blockCount, n = this.s, i = this.outputBlocks, o = this.extraBytes, a = 0, s = 0, u = []; s < i;) {
                        for (a = 0; a < r && s < i; ++a, ++s) t = s << 2, e = n[a], u[t] = 255 & e, u[t + 1] = e >> 8 & 255, u[t + 2] = e >> 16 & 255, u[t + 3] = e >> 24 & 255;
                        s % r == 0 && f(n)
                    }
                    return o && (t = s << 2, e = n[a], u[t] = 255 & e, o > 1 && (u[t + 1] = e >> 8 & 255), o > 2 && (u[t + 2] = e >> 16 & 255)), u
                }, Kmac.prototype = new Keccak, Kmac.prototype.finalize = function () {
                    return this.encode(this.outputBits, !0), Keccak.prototype.finalize.call(this)
                };
                var f = function (t) {
                    var e, r, n, i, o, a, s, u, c, l, h, d, p, m, y, g, v, w, M, A, x, B, E, k, N, T, C, P, I, O, D, j, L, U, H, q, z, G, V, J, W, Z, X, Y, $, Q, tt, et, rt, nt, it, ot, st, ut, ct, ht, dt, pt, mt, yt, bt, vt, wt;
                    for (n = 0; n < 48; n += 2) i = t[0] ^ t[10] ^ t[20] ^ t[30] ^ t[40], o = t[1] ^ t[11] ^ t[21] ^ t[31] ^ t[41], a = t[2] ^ t[12] ^ t[22] ^ t[32] ^ t[42], s = t[3] ^ t[13] ^ t[23] ^ t[33] ^ t[43], u = t[4] ^ t[14] ^ t[24] ^ t[34] ^ t[44], c = t[5] ^ t[15] ^ t[25] ^ t[35] ^ t[45], l = t[6] ^ t[16] ^ t[26] ^ t[36] ^ t[46], h = t[7] ^ t[17] ^ t[27] ^ t[37] ^ t[47], e = (d = t[8] ^ t[18] ^ t[28] ^ t[38] ^ t[48]) ^ (a << 1 | s >>> 31), r = (p = t[9] ^ t[19] ^ t[29] ^ t[39] ^ t[49]) ^ (s << 1 | a >>> 31), t[0] ^= e, t[1] ^= r, t[10] ^= e, t[11] ^= r, t[20] ^= e, t[21] ^= r, t[30] ^= e, t[31] ^= r, t[40] ^= e, t[41] ^= r, e = i ^ (u << 1 | c >>> 31), r = o ^ (c << 1 | u >>> 31), t[2] ^= e, t[3] ^= r, t[12] ^= e, t[13] ^= r, t[22] ^= e, t[23] ^= r, t[32] ^= e, t[33] ^= r, t[42] ^= e, t[43] ^= r, e = a ^ (l << 1 | h >>> 31), r = s ^ (h << 1 | l >>> 31), t[4] ^= e, t[5] ^= r, t[14] ^= e, t[15] ^= r, t[24] ^= e, t[25] ^= r, t[34] ^= e, t[35] ^= r, t[44] ^= e, t[45] ^= r, e = u ^ (d << 1 | p >>> 31), r = c ^ (p << 1 | d >>> 31), t[6] ^= e, t[7] ^= r, t[16] ^= e, t[17] ^= r, t[26] ^= e, t[27] ^= r, t[36] ^= e, t[37] ^= r, t[46] ^= e, t[47] ^= r, e = l ^ (i << 1 | o >>> 31), r = h ^ (o << 1 | i >>> 31), t[8] ^= e, t[9] ^= r, t[18] ^= e, t[19] ^= r, t[28] ^= e, t[29] ^= r, t[38] ^= e, t[39] ^= r, t[48] ^= e, t[49] ^= r, m = t[0], y = t[1], Q = t[11] << 4 | t[10] >>> 28, tt = t[10] << 4 | t[11] >>> 28, P = t[20] << 3 | t[21] >>> 29, I = t[21] << 3 | t[20] >>> 29, yt = t[31] << 9 | t[30] >>> 23, bt = t[30] << 9 | t[31] >>> 23, Z = t[40] << 18 | t[41] >>> 14, X = t[41] << 18 | t[40] >>> 14, U = t[2] << 1 | t[3] >>> 31, H = t[3] << 1 | t[2] >>> 31, g = t[13] << 12 | t[12] >>> 20, v = t[12] << 12 | t[13] >>> 20, et = t[22] << 10 | t[23] >>> 22, rt = t[23] << 10 | t[22] >>> 22, O = t[33] << 13 | t[32] >>> 19, D = t[32] << 13 | t[33] >>> 19, vt = t[42] << 2 | t[43] >>> 30, wt = t[43] << 2 | t[42] >>> 30, ut = t[5] << 30 | t[4] >>> 2, ct = t[4] << 30 | t[5] >>> 2, q = t[14] << 6 | t[15] >>> 26, z = t[15] << 6 | t[14] >>> 26, w = t[25] << 11 | t[24] >>> 21, M = t[24] << 11 | t[25] >>> 21, nt = t[34] << 15 | t[35] >>> 17, it = t[35] << 15 | t[34] >>> 17, j = t[45] << 29 | t[44] >>> 3, L = t[44] << 29 | t[45] >>> 3, k = t[6] << 28 | t[7] >>> 4, N = t[7] << 28 | t[6] >>> 4, ht = t[17] << 23 | t[16] >>> 9, dt = t[16] << 23 | t[17] >>> 9, G = t[26] << 25 | t[27] >>> 7, V = t[27] << 25 | t[26] >>> 7, A = t[36] << 21 | t[37] >>> 11, x = t[37] << 21 | t[36] >>> 11, ot = t[47] << 24 | t[46] >>> 8, st = t[46] << 24 | t[47] >>> 8, Y = t[8] << 27 | t[9] >>> 5, $ = t[9] << 27 | t[8] >>> 5, T = t[18] << 20 | t[19] >>> 12, C = t[19] << 20 | t[18] >>> 12, pt = t[29] << 7 | t[28] >>> 25, mt = t[28] << 7 | t[29] >>> 25, J = t[38] << 8 | t[39] >>> 24, W = t[39] << 8 | t[38] >>> 24, B = t[48] << 14 | t[49] >>> 18, E = t[49] << 14 | t[48] >>> 18, t[0] = m ^ ~g & w, t[1] = y ^ ~v & M, t[10] = k ^ ~T & P, t[11] = N ^ ~C & I, t[20] = U ^ ~q & G, t[21] = H ^ ~z & V, t[30] = Y ^ ~Q & et, t[31] = $ ^ ~tt & rt, t[40] = ut ^ ~ht & pt, t[41] = ct ^ ~dt & mt, t[2] = g ^ ~w & A, t[3] = v ^ ~M & x, t[12] = T ^ ~P & O, t[13] = C ^ ~I & D, t[22] = q ^ ~G & J, t[23] = z ^ ~V & W, t[32] = Q ^ ~et & nt, t[33] = tt ^ ~rt & it, t[42] = ht ^ ~pt & yt, t[43] = dt ^ ~mt & bt, t[4] = w ^ ~A & B, t[5] = M ^ ~x & E, t[14] = P ^ ~O & j, t[15] = I ^ ~D & L, t[24] = G ^ ~J & Z, t[25] = V ^ ~W & X, t[34] = et ^ ~nt & ot, t[35] = rt ^ ~it & st, t[44] = pt ^ ~yt & vt, t[45] = mt ^ ~bt & wt, t[6] = A ^ ~B & m, t[7] = x ^ ~E & y, t[16] = O ^ ~j & k, t[17] = D ^ ~L & N, t[26] = J ^ ~Z & U, t[27] = W ^ ~X & H, t[36] = nt ^ ~ot & Y, t[37] = it ^ ~st & $, t[46] = yt ^ ~vt & ut, t[47] = bt ^ ~wt & ct, t[8] = B ^ ~m & g, t[9] = E ^ ~y & v, t[18] = j ^ ~k & T, t[19] = L ^ ~N & C, t[28] = Z ^ ~U & q, t[29] = X ^ ~H & z, t[38] = ot ^ ~Y & Q, t[39] = st ^ ~$ & tt, t[48] = vt ^ ~ut & ht, t[49] = wt ^ ~ct & dt, t[0] ^= b[n], t[1] ^= b[n + 1]
                };
                if (l) t.exports = x;
                else {
                    for (E = 0; E < B.length; ++E) u[B[E]] = x[B[E]];
                    h && (void 0 === (o = function () {
                        return x
                    }.call(e, r, e, t)) || (t.exports = o))
                }
            }()
        }).call(this, r(7), r(6))
    }, function (t, e) {
        (function (e) {
            t.exports = e
        }).call(this, {})
    }, function (t, e, r) {
        var n = r(117),
            i = r(261),
            _parseNumber = function (t) {
                var e = typeof t;
                if ("string" === e) return i.isHexStrict(t) ? new n(t.replace(/0x/i, ""), 16) : new n(t, 10);
                if ("number" === e) return new n(t);
                if (i.isBigNumber(t)) return new n(t.toString(10));
                if (i.isBN(t)) return t;
                throw new Error(t + " is not a number")
            },
            _solidityPack = function (t, e, r) {
                var o, a;
                if ("bytes" === (t = function (t) {
                        return t.startsWith("int[") ? "int256" + t.slice(3) : "int" === t ? "int256" : t.startsWith("uint[") ? "uint256" + t.slice(4) : "uint" === t ? "uint256" : t.startsWith("fixed[") ? "fixed128x128" + t.slice(5) : "fixed" === t ? "fixed128x128" : t.startsWith("ufixed[") ? "ufixed128x128" + t.slice(6) : "ufixed" === t ? "ufixed128x128" : t
                    }(t))) {
                    if (e.replace(/^0x/i, "").length % 2 != 0) throw new Error("Invalid bytes characters " + e.length);
                    return e
                }
                if ("string" === t) return i.utf8ToHex(e);
                if ("bool" === t) return e ? "01" : "00";
                if (t.startsWith("address")) {
                    if (o = r ? 64 : 40, !i.isAddress(e)) throw new Error(e + " is not a valid address, or the checksum is invalid.");
                    return i.leftPad(e.toLowerCase(), o)
                }
                if (o = function (t) {
                        var e = /^\D+(\d+).*$/.exec(t);
                        return e ? parseInt(e[1], 10) : null
                    }(t), t.startsWith("bytes")) {
                    if (!o) throw new Error("bytes[] not yet supported in solidity");
                    if (r && (o = 32), o < 1 || o > 32 || o < e.replace(/^0x/i, "").length / 2) throw new Error("Invalid bytes" + o + " for " + e);
                    return i.rightPad(e, 2 * o)
                }
                if (t.startsWith("uint")) {
                    if (o % 8 || o < 8 || o > 256) throw new Error("Invalid uint" + o + " size");
                    if ((a = _parseNumber(e)).bitLength() > o) throw new Error("Supplied uint exceeds width: " + o + " vs " + a.bitLength());
                    if (a.lt(new n(0))) throw new Error("Supplied uint " + a.toString() + " is negative");
                    return o ? i.leftPad(a.toString("hex"), o / 8 * 2) : a
                }
                if (t.startsWith("int")) {
                    if (o % 8 || o < 8 || o > 256) throw new Error("Invalid int" + o + " size");
                    if ((a = _parseNumber(e)).bitLength() > o) throw new Error("Supplied int exceeds width: " + o + " vs " + a.bitLength());
                    return a.lt(new n(0)) ? a.toTwos(o).toString("hex") : o ? i.leftPad(a.toString("hex"), o / 8 * 2) : a
                }
                throw new Error("Unsupported or invalid type: " + t)
            },
            _processSolidityEncodePackedArgs = function (t) {
                if (Array.isArray(t)) throw new Error("Autodetection of array types is not supported.");
                var e, r, o = "";
                if (t && "object" == typeof t && (t.hasOwnProperty("v") || t.hasOwnProperty("t") || t.hasOwnProperty("value") || t.hasOwnProperty("type")) ? (e = t.hasOwnProperty("t") ? t.t : t.type, o = t.hasOwnProperty("v") ? t.v : t.value) : (e = i.toHex(t, !0), o = i.toHex(t), e.startsWith("int") || e.startsWith("uint") || (e = "bytes")), !e.startsWith("int") && !e.startsWith("uint") || "string" != typeof o || /^(-)?0x/i.test(o) || (o = new n(o)), Array.isArray(o)) {
                    if ((r = function (t) {
                            var e = /^\D+\d*\[(\d+)\]$/.exec(t);
                            return e ? parseInt(e[1], 10) : null
                        }(e)) && o.length !== r) throw new Error(e + " is not matching the given array " + JSON.stringify(o));
                    r = o.length
                }
                return Array.isArray(o) ? o.map((function (t) {
                    return _solidityPack(e, t, r).toString("hex").replace("0x", "")
                })).join("") : _solidityPack(e, o, r).toString("hex").replace("0x", "")
            };
        t.exports = {
            soliditySha3: function () {
                var t = Array.prototype.slice.call(arguments),
                    e = t.map(_processSolidityEncodePackedArgs);
                return i.sha3("0x" + e.join(""))
            },
            soliditySha3Raw: function () {
                return i.sha3Raw("0x" + Array.prototype.slice.call(arguments).map(_processSolidityEncodePackedArgs).join(""))
            },
            encodePacked: function () {
                var t = Array.prototype.slice.call(arguments),
                    e = t.map(_processSolidityEncodePackedArgs);
                return "0x" + e.join("").toLowerCase()
            }
        }
    }, function (t, e, r) {
        const n = r(48),
            i = r(117),
            iso13616Prepare = function (t) {
                const e = "A".charCodeAt(0),
                    r = "Z".charCodeAt(0);
                return (t = (t = t.toUpperCase()).substr(4) + t.substr(0, 4)).split("").map((function (t) {
                    const n = t.charCodeAt(0);
                    return n >= e && n <= r ? n - e + 10 : t
                })).join("")
            },
            mod9710 = function (t) {
                let e, r = t;
                for (; r.length > 2;) e = r.slice(0, 9), r = parseInt(e, 10) % 97 + r.slice(e.length);
                return parseInt(r, 10) % 97
            };
        class Iban {
            constructor(t) {
                this._iban = t
            }
            static toAddress(t) {
                if (!(t = new Iban(t)).isDirect()) throw new Error("IBAN is indirect and can't be converted");
                return t.toAddress()
            }
            static toIban(t) {
                return Iban.fromAddress(t).toString()
            }
            static fromAddress(t) {
                if (!n.isAddress(t)) throw new Error("Provided address is not a valid address: " + t);
                t = t.replace("0x", "").replace("0X", "");
                const e = function (t, e) {
                    let r = t;
                    for (; r.length < 2 * e;) r = "0" + r;
                    return r
                }(new i(t, 16).toString(36), 15);
                return Iban.fromBban(e.toUpperCase())
            }
            static fromBban(t) {
                const e = ("0" + (98 - mod9710(iso13616Prepare("XE00" + t)))).slice(-2);
                return new Iban("XE" + e + t)
            }
            static createIndirect(t) {
                return Iban.fromBban("ETH" + t.institution + t.identifier)
            }
            static isValid(t) {
                return new Iban(t).isValid()
            }
            isValid() {
                return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban) && 1 === mod9710(iso13616Prepare(this._iban))
            }
            isDirect() {
                return 34 === this._iban.length || 35 === this._iban.length
            }
            isIndirect() {
                return 20 === this._iban.length
            }
            checksum() {
                return this._iban.substr(2, 2)
            }
            institution() {
                return this.isIndirect() ? this._iban.substr(7, 4) : ""
            }
            client() {
                return this.isIndirect() ? this._iban.substr(11) : ""
            }
            toAddress() {
                if (this.isDirect()) {
                    const t = this._iban.substr(4),
                        e = new i(t, 36);
                    return n.toChecksumAddress(e.toString(16, 20))
                }
                return ""
            }
            toString() {
                return this._iban
            }
        }
        t.exports = Iban
    }, function (t, e, r) {
        var n = r(262),
            i = r(25).errors,
            Batch = function (t) {
                this.requestManager = t, this.requests = []
            };
        Batch.prototype.add = function (t) {
            this.requests.push(t)
        }, Batch.prototype.execute = function () {
            var t = this.requests;
            this.requestManager.sendBatch(t, (function (e, r) {
                r = r || [], t.map((function (t, e) {
                    return r[e] || {}
                })).forEach((function (e, r) {
                    if (t[r].callback) {
                        if (e && e.error) return t[r].callback(i.ErrorResponse(e));
                        if (!n.isValidResponse(e)) return t[r].callback(i.InvalidResponse(e));
                        try {
                            t[r].callback(null, t[r].format ? t[r].format(e.result) : e.result)
                        } catch (e) {
                            t[r].callback(e)
                        }
                    }
                }))
            }))
        }, t.exports = Batch
    }, function (t, e, r) {
        var n, i = null;
        try {
            n = Function("return this")()
        } catch (t) {
            n = window
        }
        void 0 !== n.ethereum ? i = n.ethereum : void 0 !== n.web3 && n.web3.currentProvider && (n.web3.currentProvider.sendAsync && (n.web3.currentProvider.send = n.web3.currentProvider.sendAsync, delete n.web3.currentProvider.sendAsync), !n.web3.currentProvider.on && n.web3.currentProvider.connection && "ipcProviderWrapper" === n.web3.currentProvider.connection.constructor.name && (n.web3.currentProvider.on = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            switch (t) {
                case "data":
                    this.connection.on("data", (function (t) {
                        var r = "";
                        t = t.toString();
                        try {
                            r = JSON.parse(t)
                        } catch (r) {
                            return e(new Error("Couldn't parse response data" + t))
                        }
                        r.id || -1 === r.method.indexOf("_subscription") || e(null, r)
                    }));
                    break;
                default:
                    this.connection.on(t, e)
            }
        }), i = n.web3.currentProvider), t.exports = i
    }, function (t, e, r) {
        var n = r(175),
            i = r(580),
            o = r(25).errors,
            a = r(83).w3cwebsocket,
            s = function WebsocketProvider(t, e) {
                n.call(this), e = e || {}, this.url = t, this._customTimeout = e.timeout || 15e3, this.headers = e.headers || {}, this.protocol = e.protocol || void 0, this.reconnectOptions = Object.assign({
                    auto: !1,
                    delay: 5e3,
                    maxAttempts: !1,
                    onTimeout: !1
                }, e.reconnect), this.clientConfig = e.clientConfig || void 0, this.requestOptions = e.requestOptions || void 0, this.DATA = "data", this.CLOSE = "close", this.ERROR = "error", this.CONNECT = "connect", this.RECONNECT = "reconnect", this.connection = null, this.requestQueue = new Map, this.responseQueue = new Map, this.reconnectAttempts = 0, this.reconnecting = !1;
                var r = i.parseURL(t);
                r.username && r.password && (this.headers.authorization = "Basic " + i.btoa(r.username + ":" + r.password)), r.auth && (this.headers.authorization = "Basic " + i.btoa(r.auth)), Object.defineProperty(this, "connected", {
                    get: function () {
                        return this.connection && this.connection.readyState === this.connection.OPEN
                    },
                    enumerable: !0
                }), this.connect()
            };
        (s.prototype = Object.create(n.prototype)).constructor = s, s.prototype.connect = function () {
            this.connection = new a(this.url, this.protocol, void 0, this.headers, this.requestOptions, this.clientConfig), this._addSocketListeners()
        }, s.prototype._onMessage = function (t) {
            var e = this;
            this._parseResponse("string" == typeof t.data ? t.data : "").forEach((function (t) {
                if (t.method && -1 !== t.method.indexOf("_subscription")) e.emit(e.DATA, t);
                else {
                    var r = t.id;
                    Array.isArray(t) && (r = t[0].id), e.responseQueue.has(r) && (void 0 !== e.responseQueue.get(r).callback && e.responseQueue.get(r).callback(!1, t), e.responseQueue.delete(r))
                }
            }))
        }, s.prototype._onConnect = function () {
            if (this.emit(this.CONNECT), this.reconnectAttempts = 0, this.reconnecting = !1, this.requestQueue.size > 0) {
                var t = this;
                this.requestQueue.forEach((function (e, r) {
                    t.send(e.payload, e.callback), t.requestQueue.delete(r)
                }))
            }
        }, s.prototype._onClose = function (t) {
            var e = this;
            !this.reconnectOptions.auto || [1e3, 1001].includes(t.code) && !1 !== t.wasClean ? (this.emit(this.CLOSE, t), this.requestQueue.size > 0 && this.requestQueue.forEach((function (r, n) {
                r.callback(o.ConnectionNotOpenError(t)), e.requestQueue.delete(n)
            })), this.responseQueue.size > 0 && this.responseQueue.forEach((function (r, n) {
                r.callback(o.InvalidConnection("on WS", t)), e.responseQueue.delete(n)
            })), this._removeSocketListeners(), this.removeAllListeners()) : this.reconnect()
        }, s.prototype._addSocketListeners = function () {
            this.connection.addEventListener("message", this._onMessage.bind(this)), this.connection.addEventListener("open", this._onConnect.bind(this)), this.connection.addEventListener("close", this._onClose.bind(this))
        }, s.prototype._removeSocketListeners = function () {
            this.connection.removeEventListener("message", this._onMessage), this.connection.removeEventListener("open", this._onConnect), this.connection.removeEventListener("close", this._onClose)
        }, s.prototype._parseResponse = function (t) {
            var e = this,
                r = [];
            return t.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach((function (t) {
                e.lastChunk && (t = e.lastChunk + t);
                var n = null;
                try {
                    n = JSON.parse(t)
                } catch (r) {
                    return e.lastChunk = t, clearTimeout(e.lastChunkTimeout), void(e.lastChunkTimeout = setTimeout((function () {
                        e.reconnectOptions.auto && e.reconnectOptions.onTimeout ? e.reconnect() : (e.emit(e.ERROR, o.ConnectionTimeout(e._customTimeout)), e.requestQueue.size > 0 && e.requestQueue.forEach((function (t, r) {
                            t.callback(o.ConnectionTimeout(e._customTimeout)), e.requestQueue.delete(r)
                        })))
                    }), e._customTimeout))
                }
                clearTimeout(e.lastChunkTimeout), e.lastChunk = null, n && r.push(n)
            })), r
        }, s.prototype.send = function (t, e) {
            var r = t.id,
                n = {
                    payload: t,
                    callback: e
                };
            if (Array.isArray(t) && (r = t[0].id), this.connection.readyState === this.connection.CONNECTING || this.reconnecting) this.requestQueue.set(r, n);
            else {
                if (this.connection.readyState !== this.connection.OPEN) return this.requestQueue.delete(r), this.emit(this.ERROR, o.ConnectionNotOpenError()), void n.callback(o.ConnectionNotOpenError());
                this.responseQueue.set(r, n), this.requestQueue.delete(r);
                try {
                    this.connection.send(JSON.stringify(n.payload))
                } catch (t) {
                    n.callback(t), this.responseQueue.delete(r)
                }
            }
        }, s.prototype.reset = function () {
            this.responseQueue.clear(), this.requestQueue.clear(), this.removeAllListeners(), this._removeSocketListeners(), this._addSocketListeners()
        }, s.prototype.disconnect = function (t, e) {
            this._removeSocketListeners(), this.connection.close(t || 1e3, e)
        }, s.prototype.supportsSubscriptions = function () {
            return !0
        }, s.prototype.reconnect = function () {
            var t = this;
            this.reconnecting = !0, this.responseQueue.size > 0 && this.responseQueue.forEach((function (e, r) {
                e.callback(o.PendingRequestsOnReconnectingError()), t.responseQueue.delete(r)
            })), !this.reconnectOptions.maxAttempts || this.reconnectAttempts < this.reconnectOptions.maxAttempts ? setTimeout((function () {
                t.reconnectAttempts++, t._removeSocketListeners(), t.emit(t.RECONNECT, t.reconnectAttempts), t.connect()
            }), this.reconnectOptions.delay) : (this.emit(this.ERROR, o.MaxAttemptsReachedOnReconnectingError()), this.reconnecting = !1, this.requestQueue.size > 0 && this.requestQueue.forEach((function (e, r) {
                e.callback(o.MaxAttemptsReachedOnReconnectingError()), t.requestQueue.delete(r)
            })))
        }, t.exports = s
    }, function (t, e, r) {
        (function (e, n) {
            var i = "[object process]" === Object.prototype.toString.call(void 0 !== e ? e : 0),
                o = "undefined" != typeof navigator && "ReactNative" === navigator.product,
                a = null,
                s = null;
            if (i || o) {
                a = function (t) {
                    return n.from(t).toString("base64")
                };
                var u = r(16);
                if (u.URL) {
                    var c = u.URL;
                    s = function (t) {
                        return new c(t)
                    }
                } else s = r(16).parse
            } else a = btoa.bind(window), s = function (t) {
                return new URL(t)
            };
            t.exports = {
                parseURL: s,
                btoa: a
            }
        }).call(this, r(7), r(0).Buffer)
    }, function (t, e, r) {
        t.exports = {
            isString: function (t) {
                return "string" == typeof t
            },
            isObject: function (t) {
                return "object" == typeof t && null !== t
            },
            isNull: function (t) {
                return null === t
            },
            isNullOrUndefined: function (t) {
                return null == t
            }
        }
    }, function (t, e, r) {
        e.decode = e.parse = r(583), e.encode = e.stringify = r(584)
    }, function (t, e, r) {
        function hasOwnProperty(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }
        t.exports = function (t, e, r, i) {
            e = e || "&", r = r || "=";
            var o = {};
            if ("string" != typeof t || 0 === t.length) return o;
            var a = /\+/g;
            t = t.split(e);
            var s = 1e3;
            i && "number" == typeof i.maxKeys && (s = i.maxKeys);
            var u = t.length;
            s > 0 && u > s && (u = s);
            for (var c = 0; c < u; ++c) {
                var l, h, d, p, m = t[c].replace(a, "%20"),
                    y = m.indexOf(r);
                y >= 0 ? (l = m.substr(0, y), h = m.substr(y + 1)) : (l = m, h = ""), d = decodeURIComponent(l), p = decodeURIComponent(h), hasOwnProperty(o, d) ? n(o[d]) ? o[d].push(p) : o[d] = [o[d], p] : o[d] = p
            }
            return o
        };
        var n = Array.isArray || function (t) {
            return "[object Array]" === Object.prototype.toString.call(t)
        }
    }, function (t, e, r) {
        var stringifyPrimitive = function (t) {
            switch (typeof t) {
                case "string":
                    return t;
                case "boolean":
                    return t ? "true" : "false";
                case "number":
                    return isFinite(t) ? t : "";
                default:
                    return ""
            }
        };
        t.exports = function (t, e, r, o) {
            return e = e || "&", r = r || "=", null === t && (t = void 0), "object" == typeof t ? map(i(t), (function (i) {
                var o = encodeURIComponent(stringifyPrimitive(i)) + r;
                return n(t[i]) ? map(t[i], (function (t) {
                    return o + encodeURIComponent(stringifyPrimitive(t))
                })).join(e) : o + encodeURIComponent(stringifyPrimitive(t[i]))
            })).join(e) : o ? encodeURIComponent(stringifyPrimitive(o)) + r + encodeURIComponent(stringifyPrimitive(t)) : ""
        };
        var n = Array.isArray || function (t) {
            return "[object Array]" === Object.prototype.toString.call(t)
        };

        function map(t, e) {
            if (t.map) return t.map(e);
            for (var r = [], n = 0; n < t.length; n++) r.push(e(t[n], n));
            return r
        }
        var i = Object.keys || function (t) {
            var e = [];
            for (var r in t) Object.prototype.hasOwnProperty.call(t, r) && e.push(r);
            return e
        }
    }, function (t, e) {
        var naiveFallback = function () {
            if ("object" == typeof self && self) return self;
            if ("object" == typeof window && window) return window;
            throw new Error("Unable to resolve global `this`")
        };
        t.exports = function () {
            if (this) return this;
            if ("object" == typeof globalThis && globalThis) return globalThis;
            try {
                Object.defineProperty(Object.prototype, "__global__", {
                    get: function () {
                        return this
                    },
                    configurable: !0
                })
            } catch (t) {
                return naiveFallback()
            }
            try {
                return __global__ || naiveFallback()
            } finally {
                delete Object.prototype.__global__
            }
        }()
    }, function (t, e, r) {
        t.exports = r(587).version
    }, function (t) {
        t.exports = JSON.parse('{"name":"websocket","description":"Websocket Client & Server Library implementing the WebSocket protocol as specified in RFC 6455.","keywords":["websocket","websockets","socket","networking","comet","push","RFC-6455","realtime","server","client"],"author":"Brian McKelvey <theturtle32@gmail.com> (https://github.com/theturtle32)","contributors":["Iñaki Baz Castillo <ibc@aliax.net> (http://dev.sipdoc.net)"],"version":"1.0.34","repository":{"type":"git","url":"https://github.com/theturtle32/WebSocket-Node.git"},"homepage":"https://github.com/theturtle32/WebSocket-Node","engines":{"node":">=4.0.0"},"dependencies":{"bufferutil":"^4.0.1","debug":"^2.2.0","es5-ext":"^0.10.50","typedarray-to-buffer":"^3.1.5","utf-8-validate":"^5.0.2","yaeti":"^0.0.6"},"devDependencies":{"buffer-equal":"^1.0.0","gulp":"^4.0.2","gulp-jshint":"^2.0.4","jshint-stylish":"^2.2.1","jshint":"^2.0.0","tape":"^4.9.1"},"config":{"verbose":false},"scripts":{"test":"tape test/unit/*.js","gulp":"gulp"},"main":"index","directories":{"lib":"./lib"},"browser":"lib/browser.js","license":"Apache-2.0"}')
    }, function (t, e, r) {
        var n = r(25).errors,
            i = r(84).XMLHttpRequest,
            o = r(51),
            a = r(68),
            s = function HttpProvider(t, e) {
                e = e || {}, this.withCredentials = e.withCredentials || !1, this.timeout = e.timeout || 0, this.headers = e.headers, this.agent = e.agent, this.connected = !1;
                const r = !1 !== e.keepAlive;
                this.host = t || "http://localhost:8545", this.agent || ("https" === this.host.substring(0, 5) ? this.httpsAgent = new a.Agent({
                    keepAlive: r
                }) : this.httpAgent = new o.Agent({
                    keepAlive: r
                }))
            };
        s.prototype._prepareRequest = function () {
            var t;
            if ("undefined" != typeof XMLHttpRequest) t = new XMLHttpRequest;
            else {
                t = new i;
                var e = {
                    httpsAgent: this.httpsAgent,
                    httpAgent: this.httpAgent,
                    baseUrl: this.baseUrl
                };
                this.agent && (e.httpsAgent = this.agent.https, e.httpAgent = this.agent.http, e.baseUrl = this.agent.baseUrl), t.nodejsSet(e)
            }
            return t.open("POST", this.host, !0), t.setRequestHeader("Content-Type", "application/json"), t.timeout = this.timeout, t.withCredentials = this.withCredentials, this.headers && this.headers.forEach((function (e) {
                t.setRequestHeader(e.name, e.value)
            })), t
        }, s.prototype.send = function (t, e) {
            var r = this,
                i = this._prepareRequest();
            i.onreadystatechange = function () {
                if (4 === i.readyState && 1 !== i.timeout) {
                    var t = i.responseText,
                        o = null;
                    try {
                        t = JSON.parse(t)
                    } catch (t) {
                        o = n.InvalidResponse(i.responseText)
                    }
                    r.connected = !0, e(o, t)
                }
            }, i.ontimeout = function () {
                r.connected = !1, e(n.ConnectionTimeout(this.timeout))
            };
            try {
                i.send(JSON.stringify(t))
            } catch (t) {
                this.connected = !1, e(n.InvalidConnection(this.host))
            }
        }, s.prototype.disconnect = function () {}, s.prototype.supportsSubscriptions = function () {
            return !1
        }, t.exports = s
    }, function (t, e, r) {
        (function (t, n) {
            var i, o = this && this.__extends || (i = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function (t, e) {
                        t.__proto__ = e
                    } || function (t, e) {
                        for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r])
                    },
                    function (t, e) {
                        function __() {
                            this.constructor = t
                        }
                        i(t, e), t.prototype = null === e ? Object.create(e) : (__.prototype = e.prototype, new __)
                    }),
                a = this && this.__assign || Object.assign || function (t) {
                    for (var e, r = 1, n = arguments.length; r < n; r++)
                        for (var i in e = arguments[r]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                    return t
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var s = r(51),
                u = r(68),
                c = r(599),
                l = r(16),
                h = r(600),
                d = r(601),
                p = r(179),
                m = r(602),
                y = r(603),
                b = function (e) {
                    function XMLHttpRequest(r) {
                        void 0 === r && (r = {});
                        var n = e.call(this) || this;
                        return n.UNSENT = XMLHttpRequest.UNSENT, n.OPENED = XMLHttpRequest.OPENED, n.HEADERS_RECEIVED = XMLHttpRequest.HEADERS_RECEIVED, n.LOADING = XMLHttpRequest.LOADING, n.DONE = XMLHttpRequest.DONE, n.onreadystatechange = null, n.readyState = XMLHttpRequest.UNSENT, n.response = null, n.responseText = "", n.responseType = "", n.status = 0, n.statusText = "", n.timeout = 0, n.upload = new m.XMLHttpRequestUpload, n.responseUrl = "", n.withCredentials = !1, n._method = null, n._url = null, n._sync = !1, n._headers = {}, n._loweredHeaders = {}, n._mimeOverride = null, n._request = null, n._response = null, n._responseParts = null, n._responseHeaders = null, n._aborting = null, n._error = null, n._loadedBytes = 0, n._totalBytes = 0, n._lengthComputable = !1, n._restrictedMethods = {
                            CONNECT: !0,
                            TRACE: !0,
                            TRACK: !0
                        }, n._restrictedHeaders = {
                            "accept-charset": !0,
                            "accept-encoding": !0,
                            "access-control-request-headers": !0,
                            "access-control-request-method": !0,
                            connection: !0,
                            "content-length": !0,
                            cookie: !0,
                            cookie2: !0,
                            date: !0,
                            dnt: !0,
                            expect: !0,
                            host: !0,
                            "keep-alive": !0,
                            origin: !0,
                            referer: !0,
                            te: !0,
                            trailer: !0,
                            "transfer-encoding": !0,
                            upgrade: !0,
                            "user-agent": !0,
                            via: !0
                        }, n._privateHeaders = {
                            "set-cookie": !0,
                            "set-cookie2": !0
                        }, n._userAgent = "Mozilla/5.0 (" + c.type() + " " + c.arch() + ") node.js/" + t.versions.node + " v8/" + t.versions.v8, n._anonymous = r.anon || !1, n
                    }
                    return o(XMLHttpRequest, e), XMLHttpRequest.prototype.open = function (t, e, r, n, i) {
                        if (void 0 === r && (r = !0), t = t.toUpperCase(), this._restrictedMethods[t]) throw new XMLHttpRequest.SecurityError("HTTP method " + t + " is not allowed in XHR");
                        var o = this._parseUrl(e, n, i);
                        this.readyState === XMLHttpRequest.HEADERS_RECEIVED || (this.readyState, XMLHttpRequest.LOADING), this._method = t, this._url = o, this._sync = !r, this._headers = {}, this._loweredHeaders = {}, this._mimeOverride = null, this._setReadyState(XMLHttpRequest.OPENED), this._request = null, this._response = null, this.status = 0, this.statusText = "", this._responseParts = [], this._responseHeaders = null, this._loadedBytes = 0, this._totalBytes = 0, this._lengthComputable = !1
                    }, XMLHttpRequest.prototype.setRequestHeader = function (t, e) {
                        if (this.readyState !== XMLHttpRequest.OPENED) throw new XMLHttpRequest.InvalidStateError("XHR readyState must be OPENED");
                        var r = t.toLowerCase();
                        this._restrictedHeaders[r] || /^sec-/.test(r) || /^proxy-/.test(r) ? console.warn('Refused to set unsafe header "' + t + '"') : (e = e.toString(), null != this._loweredHeaders[r] ? (t = this._loweredHeaders[r], this._headers[t] = this._headers[t] + ", " + e) : (this._loweredHeaders[r] = t, this._headers[t] = e))
                    }, XMLHttpRequest.prototype.send = function (t) {
                        if (this.readyState !== XMLHttpRequest.OPENED) throw new XMLHttpRequest.InvalidStateError("XHR readyState must be OPENED");
                        if (this._request) throw new XMLHttpRequest.InvalidStateError("send() already called");
                        switch (this._url.protocol) {
                            case "file:":
                                return this._sendFile(t);
                            case "http:":
                            case "https:":
                                return this._sendHttp(t);
                            default:
                                throw new XMLHttpRequest.NetworkError("Unsupported protocol " + this._url.protocol)
                        }
                    }, XMLHttpRequest.prototype.abort = function () {
                        null != this._request && (this._request.abort(), this._setError(), this._dispatchProgress("abort"), this._dispatchProgress("loadend"))
                    }, XMLHttpRequest.prototype.getResponseHeader = function (t) {
                        if (null == this._responseHeaders || null == t) return null;
                        var e = t.toLowerCase();
                        return this._responseHeaders.hasOwnProperty(e) ? this._responseHeaders[t.toLowerCase()] : null
                    }, XMLHttpRequest.prototype.getAllResponseHeaders = function () {
                        var t = this;
                        return null == this._responseHeaders ? "" : Object.keys(this._responseHeaders).map((function (e) {
                            return e + ": " + t._responseHeaders[e]
                        })).join("\r\n")
                    }, XMLHttpRequest.prototype.overrideMimeType = function (t) {
                        if (this.readyState === XMLHttpRequest.LOADING || this.readyState === XMLHttpRequest.DONE) throw new XMLHttpRequest.InvalidStateError("overrideMimeType() not allowed in LOADING or DONE");
                        this._mimeOverride = t.toLowerCase()
                    }, XMLHttpRequest.prototype.nodejsSet = function (t) {
                        if (this.nodejsHttpAgent = t.httpAgent || this.nodejsHttpAgent, this.nodejsHttpsAgent = t.httpsAgent || this.nodejsHttpsAgent, t.hasOwnProperty("baseUrl")) {
                            if (null != t.baseUrl)
                                if (!l.parse(t.baseUrl, !1, !0).protocol) throw new XMLHttpRequest.SyntaxError("baseUrl must be an absolute URL");
                            this.nodejsBaseUrl = t.baseUrl
                        }
                    }, XMLHttpRequest.nodejsSet = function (t) {
                        XMLHttpRequest.prototype.nodejsSet(t)
                    }, XMLHttpRequest.prototype._setReadyState = function (t) {
                        this.readyState = t, this.dispatchEvent(new h.ProgressEvent("readystatechange"))
                    }, XMLHttpRequest.prototype._sendFile = function (t) {
                        throw new Error("Protocol file: not implemented")
                    }, XMLHttpRequest.prototype._sendHttp = function (t) {
                        if (this._sync) throw new Error("Synchronous XHR processing not implemented");
                        !t || "GET" !== this._method && "HEAD" !== this._method ? t = t || "" : (console.warn("Discarding entity body for " + this._method + " requests"), t = null), this.upload._setData(t), this._finalizeHeaders(), this._sendHxxpRequest()
                    }, XMLHttpRequest.prototype._sendHxxpRequest = function () {
                        var t = this;
                        if (this.withCredentials) {
                            var e = XMLHttpRequest.cookieJar.getCookies(y.CookieAccessInfo(this._url.hostname, this._url.pathname, "https:" === this._url.protocol)).toValueString();
                            this._headers.cookie = this._headers.cookie2 = e
                        }
                        var r = "http:" === this._url.protocol ? [s, this.nodejsHttpAgent] : [u, this.nodejsHttpsAgent],
                            n = r[0],
                            i = r[1],
                            o = n.request.bind(n)({
                                hostname: this._url.hostname,
                                port: +this._url.port,
                                path: this._url.path,
                                auth: this._url.auth,
                                method: this._method,
                                headers: this._headers,
                                agent: i
                            });
                        this._request = o, this.timeout && o.setTimeout(this.timeout, (function () {
                            return t._onHttpTimeout(o)
                        })), o.on("response", (function (e) {
                            return t._onHttpResponse(o, e)
                        })), o.on("error", (function (e) {
                            return t._onHttpRequestError(o, e)
                        })), this.upload._startUpload(o), this._request === o && this._dispatchProgress("loadstart")
                    }, XMLHttpRequest.prototype._finalizeHeaders = function () {
                        this._headers = a({}, this._headers, {
                            Connection: "keep-alive",
                            Host: this._url.host,
                            "User-Agent": this._userAgent
                        }, this._anonymous ? {
                            Referer: "about:blank"
                        } : {}), this.upload._finalizeHeaders(this._headers, this._loweredHeaders)
                    }, XMLHttpRequest.prototype._onHttpResponse = function (t, e) {
                        var r = this;
                        if (this._request === t) {
                            if (this.withCredentials && (e.headers["set-cookie"] || e.headers["set-cookie2"]) && XMLHttpRequest.cookieJar.setCookies(e.headers["set-cookie"] || e.headers["set-cookie2"]), [301, 302, 303, 307, 308].indexOf(e.statusCode) >= 0) return this._url = this._parseUrl(e.headers.location), this._method = "GET", this._loweredHeaders["content-type"] && (delete this._headers[this._loweredHeaders["content-type"]], delete this._loweredHeaders["content-type"]), null != this._headers["Content-Type"] && delete this._headers["Content-Type"], delete this._headers["Content-Length"], this.upload._reset(), this._finalizeHeaders(), void this._sendHxxpRequest();
                            this._response = e, this._response.on("data", (function (t) {
                                return r._onHttpResponseData(e, t)
                            })), this._response.on("end", (function () {
                                return r._onHttpResponseEnd(e)
                            })), this._response.on("close", (function () {
                                return r._onHttpResponseClose(e)
                            })), this.responseUrl = this._url.href.split("#")[0], this.status = e.statusCode, this.statusText = s.STATUS_CODES[this.status], this._parseResponseHeaders(e);
                            var n = this._responseHeaders["content-length"] || "";
                            this._totalBytes = +n, this._lengthComputable = !!n, this._setReadyState(XMLHttpRequest.HEADERS_RECEIVED)
                        }
                    }, XMLHttpRequest.prototype._onHttpResponseData = function (t, e) {
                        this._response === t && (this._responseParts.push(new n(e)), this._loadedBytes += e.length, this.readyState !== XMLHttpRequest.LOADING && this._setReadyState(XMLHttpRequest.LOADING), this._dispatchProgress("progress"))
                    }, XMLHttpRequest.prototype._onHttpResponseEnd = function (t) {
                        this._response === t && (this._parseResponse(), this._request = null, this._response = null, this._setReadyState(XMLHttpRequest.DONE), this._dispatchProgress("load"), this._dispatchProgress("loadend"))
                    }, XMLHttpRequest.prototype._onHttpResponseClose = function (t) {
                        if (this._response === t) {
                            var e = this._request;
                            this._setError(), e.abort(), this._setReadyState(XMLHttpRequest.DONE), this._dispatchProgress("error"), this._dispatchProgress("loadend")
                        }
                    }, XMLHttpRequest.prototype._onHttpTimeout = function (t) {
                        this._request === t && (this._setError(), t.abort(), this._setReadyState(XMLHttpRequest.DONE), this._dispatchProgress("timeout"), this._dispatchProgress("loadend"))
                    }, XMLHttpRequest.prototype._onHttpRequestError = function (t, e) {
                        this._request === t && (this._setError(), t.abort(), this._setReadyState(XMLHttpRequest.DONE), this._dispatchProgress("error"), this._dispatchProgress("loadend"))
                    }, XMLHttpRequest.prototype._dispatchProgress = function (t) {
                        var e = new XMLHttpRequest.ProgressEvent(t);
                        e.lengthComputable = this._lengthComputable, e.loaded = this._loadedBytes, e.total = this._totalBytes, this.dispatchEvent(e)
                    }, XMLHttpRequest.prototype._setError = function () {
                        this._request = null, this._response = null, this._responseHeaders = null, this._responseParts = null
                    }, XMLHttpRequest.prototype._parseUrl = function (t, e, r) {
                        var n = null == this.nodejsBaseUrl ? t : l.resolve(this.nodejsBaseUrl, t),
                            i = l.parse(n, !1, !0);
                        i.hash = null;
                        var o = (i.auth || "").split(":"),
                            a = o[0],
                            s = o[1];
                        return (a || s || e || r) && (i.auth = (e || a || "") + ":" + (r || s || "")), i
                    }, XMLHttpRequest.prototype._parseResponseHeaders = function (t) {
                        for (var e in this._responseHeaders = {}, t.headers) {
                            var r = e.toLowerCase();
                            this._privateHeaders[r] || (this._responseHeaders[r] = t.headers[e])
                        }
                        null != this._mimeOverride && (this._responseHeaders["content-type"] = this._mimeOverride)
                    }, XMLHttpRequest.prototype._parseResponse = function () {
                        var t = n.concat(this._responseParts);
                        switch (this._responseParts = null, this.responseType) {
                            case "json":
                                this.responseText = null;
                                try {
                                    this.response = JSON.parse(t.toString("utf-8"))
                                } catch (t) {
                                    this.response = null
                                }
                                return;
                            case "buffer":
                                return this.responseText = null, void(this.response = t);
                            case "arraybuffer":
                                this.responseText = null;
                                for (var e = new ArrayBuffer(t.length), r = new Uint8Array(e), i = 0; i < t.length; i++) r[i] = t[i];
                                return void(this.response = e);
                            case "text":
                            default:
                                try {
                                    this.responseText = t.toString(this._parseResponseEncoding())
                                } catch (e) {
                                    this.responseText = t.toString("binary")
                                }
                                this.response = this.responseText
                        }
                    }, XMLHttpRequest.prototype._parseResponseEncoding = function () {
                        return /;\s*charset=(.*)$/.exec(this._responseHeaders["content-type"] || "")[1] || "utf-8"
                    }, XMLHttpRequest.ProgressEvent = h.ProgressEvent, XMLHttpRequest.InvalidStateError = d.InvalidStateError, XMLHttpRequest.NetworkError = d.NetworkError, XMLHttpRequest.SecurityError = d.SecurityError, XMLHttpRequest.SyntaxError = d.SyntaxError, XMLHttpRequest.XMLHttpRequestUpload = m.XMLHttpRequestUpload, XMLHttpRequest.UNSENT = 0, XMLHttpRequest.OPENED = 1, XMLHttpRequest.HEADERS_RECEIVED = 2, XMLHttpRequest.LOADING = 3, XMLHttpRequest.DONE = 4, XMLHttpRequest.cookieJar = y.CookieJar(), XMLHttpRequest
                }(p.XMLHttpRequestEventTarget);
            e.XMLHttpRequest = b, b.prototype.nodejsHttpAgent = s.globalAgent, b.prototype.nodejsHttpsAgent = u.globalAgent, b.prototype.nodejsBaseUrl = null
        }).call(this, r(7), r(0).Buffer)
    }, function (t, e, r) {
        (function (e, n, i) {
            var o = r(264),
                a = r(1),
                s = r(265),
                u = r(85),
                c = r(597),
                l = s.IncomingMessage,
                h = s.readyStates;
            var d = t.exports = function (t) {
                var r, n = this;
                u.Writable.call(n), n._opts = t, n._body = [], n._headers = {}, t.auth && n.setHeader("Authorization", "Basic " + new e(t.auth).toString("base64")), Object.keys(t.headers).forEach((function (e) {
                    n.setHeader(e, t.headers[e])
                }));
                var i = !0;
                if ("disable-fetch" === t.mode || "requestTimeout" in t && !o.abortController) i = !1, r = !0;
                else if ("prefer-streaming" === t.mode) r = !1;
                else if ("allow-wrong-content-type" === t.mode) r = !o.overrideMimeType;
                else {
                    if (t.mode && "default" !== t.mode && "prefer-fast" !== t.mode) throw new Error("Invalid value for opts.mode");
                    r = !0
                }
                n._mode = function decideMode(t, e) {
                    return o.fetch && e ? "fetch" : o.mozchunkedarraybuffer ? "moz-chunked-arraybuffer" : o.msstream ? "ms-stream" : o.arraybuffer && t ? "arraybuffer" : o.vbArray && t ? "text:vbarray" : "text"
                }(r, i), n._fetchTimer = null, n.on("finish", (function () {
                    n._onFinish()
                }))
            };
            a(d, u.Writable), d.prototype.setHeader = function (t, e) {
                var r = t.toLowerCase(); - 1 === p.indexOf(r) && (this._headers[r] = {
                    name: t,
                    value: e
                })
            }, d.prototype.getHeader = function (t) {
                var e = this._headers[t.toLowerCase()];
                return e ? e.value : null
            }, d.prototype.removeHeader = function (t) {
                delete this._headers[t.toLowerCase()]
            }, d.prototype._onFinish = function () {
                var t = this;
                if (!t._destroyed) {
                    var r = t._opts,
                        a = t._headers,
                        s = null;
                    "GET" !== r.method && "HEAD" !== r.method && (s = o.arraybuffer ? c(e.concat(t._body)) : o.blobConstructor ? new n.Blob(t._body.map((function (t) {
                        return c(t)
                    })), {
                        type: (a["content-type"] || {}).value || ""
                    }) : e.concat(t._body).toString());
                    var u = [];
                    if (Object.keys(a).forEach((function (t) {
                            var e = a[t].name,
                                r = a[t].value;
                            Array.isArray(r) ? r.forEach((function (t) {
                                u.push([e, t])
                            })) : u.push([e, r])
                        })), "fetch" === t._mode) {
                        var l = null;
                        if (o.abortController) {
                            var d = new AbortController;
                            l = d.signal, t._fetchAbortController = d, "requestTimeout" in r && 0 !== r.requestTimeout && (t._fetchTimer = n.setTimeout((function () {
                                t.emit("requestTimeout"), t._fetchAbortController && t._fetchAbortController.abort()
                            }), r.requestTimeout))
                        }
                        n.fetch(t._opts.url, {
                            method: t._opts.method,
                            headers: u,
                            body: s || void 0,
                            mode: "cors",
                            credentials: r.withCredentials ? "include" : "same-origin",
                            signal: l
                        }).then((function (e) {
                            t._fetchResponse = e, t._connect()
                        }), (function (e) {
                            n.clearTimeout(t._fetchTimer), t._destroyed || t.emit("error", e)
                        }))
                    } else {
                        var p = t._xhr = new n.XMLHttpRequest;
                        try {
                            p.open(t._opts.method, t._opts.url, !0)
                        } catch (e) {
                            return void i.nextTick((function () {
                                t.emit("error", e)
                            }))
                        }
                        "responseType" in p && (p.responseType = t._mode.split(":")[0]), "withCredentials" in p && (p.withCredentials = !!r.withCredentials), "text" === t._mode && "overrideMimeType" in p && p.overrideMimeType("text/plain; charset=x-user-defined"), "requestTimeout" in r && (p.timeout = r.requestTimeout, p.ontimeout = function () {
                            t.emit("requestTimeout")
                        }), u.forEach((function (t) {
                            p.setRequestHeader(t[0], t[1])
                        })), t._response = null, p.onreadystatechange = function () {
                            switch (p.readyState) {
                                case h.LOADING:
                                case h.DONE:
                                    t._onXHRProgress()
                            }
                        }, "moz-chunked-arraybuffer" === t._mode && (p.onprogress = function () {
                            t._onXHRProgress()
                        }), p.onerror = function () {
                            t._destroyed || t.emit("error", new Error("XHR error"))
                        };
                        try {
                            p.send(s)
                        } catch (e) {
                            return void i.nextTick((function () {
                                t.emit("error", e)
                            }))
                        }
                    }
                }
            }, d.prototype._onXHRProgress = function () {
                (function statusValid(t) {
                    try {
                        var e = t.status;
                        return null !== e && 0 !== e
                    } catch (t) {
                        return !1
                    }
                })(this._xhr) && !this._destroyed && (this._response || this._connect(), this._response._onXHRProgress())
            }, d.prototype._connect = function () {
                var t = this;
                t._destroyed || (t._response = new l(t._xhr, t._fetchResponse, t._mode, t._fetchTimer), t._response.on("error", (function (e) {
                    t.emit("error", e)
                })), t.emit("response", t._response))
            }, d.prototype._write = function (t, e, r) {
                this._body.push(t), r()
            }, d.prototype.abort = d.prototype.destroy = function () {
                this._destroyed = !0, n.clearTimeout(this._fetchTimer), this._response && (this._response._destroyed = !0), this._xhr ? this._xhr.abort() : this._fetchAbortController && this._fetchAbortController.abort()
            }, d.prototype.end = function (t, e, r) {
                "function" == typeof t && (r = t, t = void 0), u.Writable.prototype.end.call(this, t, e, r)
            }, d.prototype.flushHeaders = function () {}, d.prototype.setTimeout = function () {}, d.prototype.setNoDelay = function () {}, d.prototype.setSocketKeepAlive = function () {};
            var p = ["accept-charset", "accept-encoding", "access-control-request-headers", "access-control-request-method", "connection", "content-length", "cookie", "cookie2", "date", "dnt", "expect", "host", "keep-alive", "origin", "referer", "te", "trailer", "transfer-encoding", "upgrade", "via"]
        }).call(this, r(0).Buffer, r(6), r(7))
    }, function (t, e) {}, function (t, e, r) {
        var n = r(176).Buffer,
            i = r(593);
        t.exports = function () {
            function BufferList() {
                ! function _classCallCheck(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, BufferList), this.head = null, this.tail = null, this.length = 0
            }
            return BufferList.prototype.push = function push(t) {
                var e = {
                    data: t,
                    next: null
                };
                this.length > 0 ? this.tail.next = e : this.head = e, this.tail = e, ++this.length
            }, BufferList.prototype.unshift = function unshift(t) {
                var e = {
                    data: t,
                    next: this.head
                };
                0 === this.length && (this.tail = e), this.head = e, ++this.length
            }, BufferList.prototype.shift = function shift() {
                if (0 !== this.length) {
                    var t = this.head.data;
                    return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, t
                }
            }, BufferList.prototype.clear = function clear() {
                this.head = this.tail = null, this.length = 0
            }, BufferList.prototype.join = function join(t) {
                if (0 === this.length) return "";
                for (var e = this.head, r = "" + e.data; e = e.next;) r += t + e.data;
                return r
            }, BufferList.prototype.concat = function concat(t) {
                if (0 === this.length) return n.alloc(0);
                if (1 === this.length) return this.head.data;
                for (var e, r, i, o = n.allocUnsafe(t >>> 0), a = this.head, s = 0; a;) e = a.data, r = o, i = s, e.copy(r, i), s += a.data.length, a = a.next;
                return o
            }, BufferList
        }(), i && i.inspect && i.inspect.custom && (t.exports.prototype[i.inspect.custom] = function () {
            var t = i.inspect({
                length: this.length
            });
            return this.constructor.name + " " + t
        })
    }, function (t, e) {}, function (t, e, r) {
        (function (t, e) {
            ! function (t, r) {
                if (!t.setImmediate) {
                    var n, i = 1,
                        o = {},
                        a = !1,
                        s = t.document,
                        u = Object.getPrototypeOf && Object.getPrototypeOf(t);
                    u = u && u.setTimeout ? u : t, "[object process]" === {}.toString.call(t.process) ? function installNextTickImplementation() {
                        n = function (t) {
                            e.nextTick((function () {
                                runIfPresent(t)
                            }))
                        }
                    }() : ! function canUsePostMessage() {
                        if (t.postMessage && !t.importScripts) {
                            var e = !0,
                                r = t.onmessage;
                            return t.onmessage = function () {
                                e = !1
                            }, t.postMessage("", "*"), t.onmessage = r, e
                        }
                    }() ? t.MessageChannel ? function installMessageChannelImplementation() {
                        var t = new MessageChannel;
                        t.port1.onmessage = function (t) {
                            runIfPresent(t.data)
                        }, n = function (e) {
                            t.port2.postMessage(e)
                        }
                    }() : s && "onreadystatechange" in s.createElement("script") ? function installReadyStateChangeImplementation() {
                        var t = s.documentElement;
                        n = function (e) {
                            var r = s.createElement("script");
                            r.onreadystatechange = function () {
                                runIfPresent(e), r.onreadystatechange = null, t.removeChild(r), r = null
                            }, t.appendChild(r)
                        }
                    }() : function installSetTimeoutImplementation() {
                        n = function (t) {
                            setTimeout(runIfPresent, 0, t)
                        }
                    }() : function installPostMessageImplementation() {
                        var e = "setImmediate$" + Math.random() + "$",
                            onGlobalMessage = function (r) {
                                r.source === t && "string" == typeof r.data && 0 === r.data.indexOf(e) && runIfPresent(+r.data.slice(e.length))
                            };
                        t.addEventListener ? t.addEventListener("message", onGlobalMessage, !1) : t.attachEvent("onmessage", onGlobalMessage), n = function (r) {
                            t.postMessage(e + r, "*")
                        }
                    }(), u.setImmediate = function setImmediate(t) {
                        "function" != typeof t && (t = new Function("" + t));
                        for (var e = new Array(arguments.length - 1), r = 0; r < e.length; r++) e[r] = arguments[r + 1];
                        var a = {
                            callback: t,
                            args: e
                        };
                        return o[i] = a, n(i), i++
                    }, u.clearImmediate = clearImmediate
                }

                function clearImmediate(t) {
                    delete o[t]
                }

                function runIfPresent(t) {
                    if (a) setTimeout(runIfPresent, 0, t);
                    else {
                        var e = o[t];
                        if (e) {
                            a = !0;
                            try {
                                ! function run(t) {
                                    var e = t.callback,
                                        r = t.args;
                                    switch (r.length) {
                                        case 0:
                                            e();
                                            break;
                                        case 1:
                                            e(r[0]);
                                            break;
                                        case 2:
                                            e(r[0], r[1]);
                                            break;
                                        case 3:
                                            e(r[0], r[1], r[2]);
                                            break;
                                        default:
                                            e.apply(void 0, r)
                                    }
                                }(e)
                            } finally {
                                clearImmediate(t), a = !1
                            }
                        }
                    }
                }
            }("undefined" == typeof self ? void 0 === t ? this : t : self)
        }).call(this, r(6), r(7))
    }, function (t, e, r) {
        (function (e) {
            function config(t) {
                try {
                    if (!e.localStorage) return !1
                } catch (t) {
                    return !1
                }
                var r = e.localStorage[t];
                return null != r && "true" === String(r).toLowerCase()
            }
            t.exports = function deprecate(t, e) {
                if (config("noDeprecation")) return t;
                var r = !1;
                return function deprecated() {
                    if (!r) {
                        if (config("throwDeprecation")) throw new Error(e);
                        config("traceDeprecation") ? console.trace(e) : console.warn(e), r = !0
                    }
                    return t.apply(this, arguments)
                }
            }
        }).call(this, r(6))
    }, function (t, e, r) {
        t.exports = PassThrough;
        var n = r(270),
            i = Object.create(r(86));

        function PassThrough(t) {
            if (!(this instanceof PassThrough)) return new PassThrough(t);
            n.call(this, t)
        }
        i.inherits = r(1), i.inherits(PassThrough, n), PassThrough.prototype._transform = function (t, e, r) {
            r(null, t)
        }
    }, function (t, e, r) {
        var n = r(0).Buffer;
        t.exports = function (t) {
            if (t instanceof Uint8Array) {
                if (0 === t.byteOffset && t.byteLength === t.buffer.byteLength) return t.buffer;
                if ("function" == typeof t.buffer.slice) return t.buffer.slice(t.byteOffset, t.byteOffset + t.byteLength)
            }
            if (n.isBuffer(t)) {
                for (var e = new Uint8Array(t.length), r = t.length, i = 0; i < r; i++) e[i] = t[i];
                return e.buffer
            }
            throw new Error("Argument must be a Buffer")
        }
    }, function (t, e) {
        t.exports = {
            100: "Continue",
            101: "Switching Protocols",
            102: "Processing",
            200: "OK",
            201: "Created",
            202: "Accepted",
            203: "Non-Authoritative Information",
            204: "No Content",
            205: "Reset Content",
            206: "Partial Content",
            207: "Multi-Status",
            208: "Already Reported",
            226: "IM Used",
            300: "Multiple Choices",
            301: "Moved Permanently",
            302: "Found",
            303: "See Other",
            304: "Not Modified",
            305: "Use Proxy",
            307: "Temporary Redirect",
            308: "Permanent Redirect",
            400: "Bad Request",
            401: "Unauthorized",
            402: "Payment Required",
            403: "Forbidden",
            404: "Not Found",
            405: "Method Not Allowed",
            406: "Not Acceptable",
            407: "Proxy Authentication Required",
            408: "Request Timeout",
            409: "Conflict",
            410: "Gone",
            411: "Length Required",
            412: "Precondition Failed",
            413: "Payload Too Large",
            414: "URI Too Long",
            415: "Unsupported Media Type",
            416: "Range Not Satisfiable",
            417: "Expectation Failed",
            418: "I'm a teapot",
            421: "Misdirected Request",
            422: "Unprocessable Entity",
            423: "Locked",
            424: "Failed Dependency",
            425: "Unordered Collection",
            426: "Upgrade Required",
            428: "Precondition Required",
            429: "Too Many Requests",
            431: "Request Header Fields Too Large",
            451: "Unavailable For Legal Reasons",
            500: "Internal Server Error",
            501: "Not Implemented",
            502: "Bad Gateway",
            503: "Service Unavailable",
            504: "Gateway Timeout",
            505: "HTTP Version Not Supported",
            506: "Variant Also Negotiates",
            507: "Insufficient Storage",
            508: "Loop Detected",
            509: "Bandwidth Limit Exceeded",
            510: "Not Extended",
            511: "Network Authentication Required"
        }
    }, function (t, e) {
        e.endianness = function () {
            return "LE"
        }, e.hostname = function () {
            return "undefined" != typeof location ? location.hostname : ""
        }, e.loadavg = function () {
            return []
        }, e.uptime = function () {
            return 0
        }, e.freemem = function () {
            return Number.MAX_VALUE
        }, e.totalmem = function () {
            return Number.MAX_VALUE
        }, e.cpus = function () {
            return []
        }, e.type = function () {
            return "Browser"
        }, e.release = function () {
            return "undefined" != typeof navigator ? navigator.appVersion : ""
        }, e.networkInterfaces = e.getNetworkInterfaces = function () {
            return {}
        }, e.arch = function () {
            return "javascript"
        }, e.platform = function () {
            return "browser"
        }, e.tmpdir = e.tmpDir = function () {
            return "/tmp"
        }, e.EOL = "\n", e.homedir = function () {
            return "/"
        }
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = function n(t) {
            this.type = t, this.bubbles = !1, this.cancelable = !1, this.loaded = 0, this.lengthComputable = !1, this.total = 0
        };
        e.ProgressEvent = n
    }, function (t, e, r) {
        var n, i = this && this.__extends || (n = Object.setPrototypeOf || {
                __proto__: []
            }
            instanceof Array && function (t, e) {
                t.__proto__ = e
            } || function (t, e) {
                for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r])
            },
            function (t, e) {
                function __() {
                    this.constructor = t
                }
                n(t, e), t.prototype = null === e ? Object.create(e) : (__.prototype = e.prototype, new __)
            });
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var o = function (t) {
            function SecurityError() {
                return null !== t && t.apply(this, arguments) || this
            }
            return i(SecurityError, t), SecurityError
        }(Error);
        e.SecurityError = o;
        var a = function (t) {
            function InvalidStateError() {
                return null !== t && t.apply(this, arguments) || this
            }
            return i(InvalidStateError, t), InvalidStateError
        }(Error);
        e.InvalidStateError = a;
        var s = function (t) {
            function NetworkError() {
                return null !== t && t.apply(this, arguments) || this
            }
            return i(NetworkError, t), NetworkError
        }(Error);
        e.NetworkError = s;
        var u = function (t) {
            function SyntaxError() {
                return null !== t && t.apply(this, arguments) || this
            }
            return i(SyntaxError, t), SyntaxError
        }(Error);
        e.SyntaxError = u
    }, function (t, e, r) {
        (function (t) {
            var n, i = this && this.__extends || (n = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (t, e) {
                    t.__proto__ = e
                } || function (t, e) {
                    for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r])
                },
                function (t, e) {
                    function __() {
                        this.constructor = t
                    }
                    n(t, e), t.prototype = null === e ? Object.create(e) : (__.prototype = e.prototype, new __)
                });
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var o = function (e) {
                function XMLHttpRequestUpload() {
                    var t = e.call(this) || this;
                    return t._contentType = null, t._body = null, t._reset(), t
                }
                return i(XMLHttpRequestUpload, e), XMLHttpRequestUpload.prototype._reset = function () {
                    this._contentType = null, this._body = null
                }, XMLHttpRequestUpload.prototype._setData = function (e) {
                    if (null != e)
                        if ("string" == typeof e) 0 !== e.length && (this._contentType = "text/plain;charset=UTF-8"), this._body = new t(e, "utf-8");
                        else if (t.isBuffer(e)) this._body = e;
                    else if (e instanceof ArrayBuffer) {
                        for (var r = new t(e.byteLength), n = new Uint8Array(e), i = 0; i < e.byteLength; i++) r[i] = n[i];
                        this._body = r
                    } else {
                        if (!(e.buffer && e.buffer instanceof ArrayBuffer)) throw new Error("Unsupported send() data " + e);
                        r = new t(e.byteLength);
                        var o = e.byteOffset;
                        for (n = new Uint8Array(e.buffer), i = 0; i < e.byteLength; i++) r[i] = n[i + o];
                        this._body = r
                    }
                }, XMLHttpRequestUpload.prototype._finalizeHeaders = function (t, e) {
                    this._contentType && !e["content-type"] && (t["Content-Type"] = this._contentType), this._body && (t["Content-Length"] = this._body.length.toString())
                }, XMLHttpRequestUpload.prototype._startUpload = function (t) {
                    this._body && t.write(this._body), t.end()
                }, XMLHttpRequestUpload
            }(r(179).XMLHttpRequestEventTarget);
            e.XMLHttpRequestUpload = o
        }).call(this, r(0).Buffer)
    }, function (t, e) {
        ! function () {
            function CookieAccessInfo(t, e, r, n) {
                return this instanceof CookieAccessInfo ? (this.domain = t || void 0, this.path = e || "/", this.secure = !!r, this.script = !!n, this) : new CookieAccessInfo(t, e, r, n)
            }

            function Cookie(t, e, r) {
                return t instanceof Cookie ? t : this instanceof Cookie ? (this.name = null, this.value = null, this.expiration_date = 1 / 0, this.path = String(r || "/"), this.explicit_path = !1, this.domain = e || null, this.explicit_domain = !1, this.secure = !1, this.noscript = !1, t && this.parse(t, e, r), this) : new Cookie(t, e, r)
            }
            CookieAccessInfo.All = Object.freeze(Object.create(null)), e.CookieAccessInfo = CookieAccessInfo, e.Cookie = Cookie, Cookie.prototype.toString = function toString() {
                var t = [this.name + "=" + this.value];
                return this.expiration_date !== 1 / 0 && t.push("expires=" + new Date(this.expiration_date).toGMTString()), this.domain && t.push("domain=" + this.domain), this.path && t.push("path=" + this.path), this.secure && t.push("secure"), this.noscript && t.push("httponly"), t.join("; ")
            }, Cookie.prototype.toValueString = function toValueString() {
                return this.name + "=" + this.value
            };
            var t = /[:](?=\s*[a-zA-Z0-9_\-]+\s*[=])/g;

            function CookieJar() {
                var t, e;
                return this instanceof CookieJar ? (t = Object.create(null), this.setCookie = function setCookie(r, n, i) {
                    var o, a;
                    if (o = (r = new Cookie(r, n, i)).expiration_date <= Date.now(), void 0 !== t[r.name]) {
                        for (e = t[r.name], a = 0; a < e.length; a += 1)
                            if (e[a].collidesWith(r)) return o ? (e.splice(a, 1), 0 === e.length && delete t[r.name], !1) : (e[a] = r, r);
                        return !o && (e.push(r), r)
                    }
                    return !o && (t[r.name] = [r], t[r.name])
                }, this.getCookie = function getCookie(r, n) {
                    var i, o;
                    if (e = t[r])
                        for (o = 0; o < e.length; o += 1)
                            if ((i = e[o]).expiration_date <= Date.now()) 0 === e.length && delete t[i.name];
                            else if (i.matches(n)) return i
                }, this.getCookies = function getCookies(e) {
                    var r, n, i = [];
                    for (r in t)(n = this.getCookie(r, e)) && i.push(n);
                    return i.toString = function toString() {
                        return i.join(":")
                    }, i.toValueString = function toValueString() {
                        return i.map((function (t) {
                            return t.toValueString()
                        })).join(";")
                    }, i
                }, this) : new CookieJar
            }
            Cookie.prototype.parse = function parse(t, e, r) {
                if (this instanceof Cookie) {
                    var n, i = t.split(";").filter((function (t) {
                            return !!t
                        })),
                        o = i[0].match(/([^=]+)=([\s\S]*)/);
                    if (!o) return void console.warn("Invalid cookie header encountered. Header: '" + t + "'");
                    var a = o[1],
                        s = o[2];
                    if ("string" != typeof a || 0 === a.length || "string" != typeof s) return void console.warn("Unable to extract values from cookie header. Cookie: '" + t + "'");
                    for (this.name = a, this.value = s, n = 1; n < i.length; n += 1) switch (a = (o = i[n].match(/([^=]+)(?:=([\s\S]*))?/))[1].trim().toLowerCase(), s = o[2], a) {
                        case "httponly":
                            this.noscript = !0;
                            break;
                        case "expires":
                            this.expiration_date = s ? Number(Date.parse(s)) : 1 / 0;
                            break;
                        case "path":
                            this.path = s ? s.trim() : "", this.explicit_path = !0;
                            break;
                        case "domain":
                            this.domain = s ? s.trim() : "", this.explicit_domain = !!this.domain;
                            break;
                        case "secure":
                            this.secure = !0
                    }
                    return this.explicit_path || (this.path = r || "/"), this.explicit_domain || (this.domain = e), this
                }
                return (new Cookie).parse(t, e, r)
            }, Cookie.prototype.matches = function matches(t) {
                return t === CookieAccessInfo.All || !(this.noscript && t.script || this.secure && !t.secure || !this.collidesWith(t))
            }, Cookie.prototype.collidesWith = function collidesWith(t) {
                if (this.path && !t.path || this.domain && !t.domain) return !1;
                if (this.path && 0 !== t.path.indexOf(this.path)) return !1;
                if (this.explicit_path && 0 !== t.path.indexOf(this.path)) return !1;
                var e = t.domain && t.domain.replace(/^[\.]/, ""),
                    r = this.domain && this.domain.replace(/^[\.]/, "");
                if (r === e) return !0;
                if (r) {
                    if (!this.explicit_domain) return !1;
                    var n = e.indexOf(r);
                    return -1 !== n && n === e.length - r.length
                }
                return !0
            }, e.CookieJar = CookieJar, CookieJar.prototype.setCookies = function setCookies(e, r, n) {
                var i, o, a = [];
                for (e = (e = Array.isArray(e) ? e : e.split(t)).map((function (t) {
                        return new Cookie(t, r, n)
                    })), i = 0; i < e.length; i += 1) o = e[i], this.setCookie(o, r, n) && a.push(o);
                return a
            }
        }()
    }, function (t, e, r) {
        var n = r(25).errors,
            i = r(605),
            o = function IpcProvider(t, e) {
                var r = this;
                this.responseCallbacks = {}, this.notificationCallbacks = [], this.path = t, this.connected = !1, this.connection = e.connect({
                    path: this.path
                }), this.addDefaultEvents();
                var callback = function (t) {
                    var e = null;
                    Array.isArray(t) ? t.forEach((function (t) {
                        r.responseCallbacks[t.id] && (e = t.id)
                    })) : e = t.id, e || -1 === t.method.indexOf("_subscription") ? r.responseCallbacks[e] && (r.responseCallbacks[e](null, t), delete r.responseCallbacks[e]) : r.notificationCallbacks.forEach((function (e) {
                        "function" == typeof e && e(t)
                    }))
                };
                "Socket" === e.constructor.name ? i(this.connection).done(callback) : this.connection.on("data", (function (t) {
                    r._parseResponse(t.toString()).forEach(callback)
                }))
            };
        o.prototype.addDefaultEvents = function () {
            var t = this;
            this.connection.on("connect", (function () {
                t.connected = !0
            })), this.connection.on("close", (function () {
                t.connected = !1
            })), this.connection.on("error", (function () {
                t._timeout()
            })), this.connection.on("end", (function () {
                t._timeout()
            })), this.connection.on("timeout", (function () {
                t._timeout()
            }))
        }, o.prototype._parseResponse = function (t) {
            var e = this,
                r = [];
            return t.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach((function (t) {
                e.lastChunk && (t = e.lastChunk + t);
                var i = null;
                try {
                    i = JSON.parse(t)
                } catch (r) {
                    return e.lastChunk = t, clearTimeout(e.lastChunkTimeout), void(e.lastChunkTimeout = setTimeout((function () {
                        throw e._timeout(), n.InvalidResponse(t)
                    }), 15e3))
                }
                clearTimeout(e.lastChunkTimeout), e.lastChunk = null, i && r.push(i)
            })), r
        }, o.prototype._addResponseCallback = function (t, e) {
            var r = t.id || t[0].id,
                n = t.method || t[0].method;
            this.responseCallbacks[r] = e, this.responseCallbacks[r].method = n
        }, o.prototype._timeout = function () {
            for (var t in this.responseCallbacks) this.responseCallbacks.hasOwnProperty(t) && (this.responseCallbacks[t](n.InvalidConnection("on IPC")), delete this.responseCallbacks[t])
        }, o.prototype.reconnect = function () {
            this.connection.connect({
                path: this.path
            })
        }, o.prototype.send = function (t, e) {
            this.connection.writable || this.connection.connect({
                path: this.path
            }), this.connection.write(JSON.stringify(t)), this._addResponseCallback(t, e)
        }, o.prototype.on = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            switch (t) {
                case "data":
                    this.notificationCallbacks.push(e);
                    break;
                default:
                    this.connection.on(t, e)
            }
        }, o.prototype.once = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            this.connection.once(t, e)
        }, o.prototype.removeListener = function (t, e) {
            var r = this;
            switch (t) {
                case "data":
                    this.notificationCallbacks.forEach((function (t, n) {
                        t === e && r.notificationCallbacks.splice(n, 1)
                    }));
                    break;
                default:
                    this.connection.removeListener(t, e)
            }
        }, o.prototype.removeAllListeners = function (t) {
            switch (t) {
                case "data":
                    this.notificationCallbacks = [];
                    break;
                default:
                    this.connection.removeAllListeners(t)
            }
        }, o.prototype.reset = function () {
            this._timeout(), this.notificationCallbacks = [], this.connection.removeAllListeners("error"), this.connection.removeAllListeners("end"), this.connection.removeAllListeners("timeout"), this.addDefaultEvents()
        }, o.prototype.supportsSubscriptions = function () {
            return !0
        }, t.exports = o
    }, function (t, e, r) {
        ! function webpackUniversalModuleDefinition(e, r) {
            t.exports = r()
        }("undefined" != typeof self && self, (function () {
            return function (t) {
                var e = {};

                function __webpack_require__(r) {
                    if (e[r]) return e[r].exports;
                    var n = e[r] = {
                        i: r,
                        l: !1,
                        exports: {}
                    };
                    return t[r].call(n.exports, n, n.exports, __webpack_require__), n.l = !0, n.exports
                }
                return __webpack_require__.m = t, __webpack_require__.c = e, __webpack_require__.d = function (t, e, r) {
                    __webpack_require__.o(t, e) || Object.defineProperty(t, e, {
                        configurable: !1,
                        enumerable: !0,
                        get: r
                    })
                }, __webpack_require__.n = function (t) {
                    var e = t && t.__esModule ? function getDefault() {
                        return t.default
                    } : function getModuleExports() {
                        return t
                    };
                    return __webpack_require__.d(e, "a", e), e
                }, __webpack_require__.o = function (t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e)
                }, __webpack_require__.p = "", __webpack_require__(__webpack_require__.s = 7)
            }([function (t, e, r) {
                r.d(e, "j", (function () {
                    return i
                })), r.d(e, "d", (function () {
                    return compose2
                })), r.d(e, "c", (function () {
                    return attr
                })), r.d(e, "h", (function () {
                    return o
                })), r.d(e, "b", (function () {
                    return apply
                })), r.d(e, "k", (function () {
                    return varArgs
                })), r.d(e, "e", (function () {
                    return flip
                })), r.d(e, "g", (function () {
                    return lazyIntersection
                })), r.d(e, "i", (function () {
                    return noop
                })), r.d(e, "a", (function () {
                    return always
                })), r.d(e, "f", (function () {
                    return functor
                }));
                var n = r(1),
                    i = varArgs((function (t, e) {
                        var r = e.length;
                        return varArgs((function (n) {
                            for (var i = 0; i < n.length; i++) e[r + i] = n[i];
                            return e.length = r + n.length, t.apply(this, e)
                        }))
                    }));
                varArgs((function (t) {
                    var e = Object(n.c)(t);

                    function next(t, e) {
                        return [apply(t, e)]
                    }
                    return varArgs((function (t) {
                        return Object(n.f)(next, t, e)[0]
                    }))
                }));

                function compose2(t, e) {
                    return function () {
                        return t.call(this, e.apply(this, arguments))
                    }
                }

                function attr(t) {
                    return function (e) {
                        return e[t]
                    }
                }
                var o = varArgs((function (t) {
                    return varArgs((function (e) {
                        for (var r, n = 0; n < attr("length")(t); n++)
                            if (r = apply(e, t[n])) return r
                    }))
                }));

                function apply(t, e) {
                    return e.apply(void 0, t)
                }

                function varArgs(t) {
                    var e = t.length - 1,
                        r = Array.prototype.slice;
                    if (0 === e) return function () {
                        return t.call(this, r.call(arguments))
                    };
                    if (1 === e) return function () {
                        return t.call(this, arguments[0], r.call(arguments, 1))
                    };
                    var n = Array(t.length);
                    return function () {
                        for (var i = 0; i < e; i++) n[i] = arguments[i];
                        return n[e] = r.call(arguments, e), t.apply(this, n)
                    }
                }

                function flip(t) {
                    return function (e, r) {
                        return t(r, e)
                    }
                }

                function lazyIntersection(t, e) {
                    return function (r) {
                        return t(r) && e(r)
                    }
                }

                function noop() {}

                function always() {
                    return !0
                }

                function functor(t) {
                    return function () {
                        return t
                    }
                }
            }, function (t, e, r) {
                r.d(e, "d", (function () {
                    return cons
                })), r.d(e, "g", (function () {
                    return i
                })), r.d(e, "l", (function () {
                    return o
                })), r.d(e, "c", (function () {
                    return arrayAsList
                })), r.d(e, "h", (function () {
                    return a
                })), r.d(e, "i", (function () {
                    return listAsArray
                })), r.d(e, "j", (function () {
                    return map
                })), r.d(e, "f", (function () {
                    return foldR
                })), r.d(e, "m", (function () {
                    return without
                })), r.d(e, "a", (function () {
                    return all
                })), r.d(e, "b", (function () {
                    return applyEach
                })), r.d(e, "k", (function () {
                    return reverseList
                })), r.d(e, "e", (function () {
                    return first
                }));
                var n = r(0);

                function cons(t, e) {
                    return [t, e]
                }
                var i = Object(n.c)(0),
                    o = Object(n.c)(1);

                function arrayAsList(t) {
                    return reverseList(t.reduce(Object(n.e)(cons), null))
                }
                var a = Object(n.k)(arrayAsList);

                function listAsArray(t) {
                    return foldR((function (t, e) {
                        return t.unshift(e), t
                    }), [], t)
                }

                function map(t, e) {
                    return e ? cons(t(i(e)), map(t, o(e))) : null
                }

                function foldR(t, e, r) {
                    return r ? t(foldR(t, e, o(r)), i(r)) : e
                }

                function without(t, e, r) {
                    return function withoutInner(t, r) {
                        return t ? e(i(t)) ? (r(i(t)), o(t)) : cons(i(t), withoutInner(o(t), r)) : null
                    }(t, r || n.i)
                }

                function all(t, e) {
                    return !e || t(i(e)) && all(t, o(e))
                }

                function applyEach(t, e) {
                    t && (i(t).apply(null, e), applyEach(o(t), e))
                }

                function reverseList(t) {
                    return function reverseInner(t, e) {
                        return t ? reverseInner(o(t), cons(i(t), e)) : e
                    }(t, null)
                }

                function first(t, e) {
                    return e && (t(i(e)) ? i(e) : first(t, o(e)))
                }
            }, function (t, e, r) {
                r.d(e, "c", (function () {
                    return isOfType
                })), r.d(e, "e", (function () {
                    return o
                })), r.d(e, "d", (function () {
                    return a
                })), r.d(e, "a", (function () {
                    return defined
                })), r.d(e, "b", (function () {
                    return hasAllProperties
                }));
                var n = r(1),
                    i = r(0);

                function isOfType(t, e) {
                    return e && e.constructor === t
                }
                var o = Object(i.c)("length"),
                    a = Object(i.j)(isOfType, String);

                function defined(t) {
                    return void 0 !== t
                }

                function hasAllProperties(t, e) {
                    return e instanceof Object && Object(n.a)((function (t) {
                        return t in e
                    }), t)
                }
            }, function (t, e, r) {
                r.d(e, "f", (function () {
                    return i
                })), r.d(e, "d", (function () {
                    return o
                })), r.d(e, "g", (function () {
                    return a
                })), r.d(e, "e", (function () {
                    return s
                })), r.d(e, "b", (function () {
                    return u
                })), r.d(e, "h", (function () {
                    return c
                })), r.d(e, "i", (function () {
                    return l
                })), r.d(e, "c", (function () {
                    return h
                })), r.d(e, "m", (function () {
                    return d
                })), r.d(e, "n", (function () {
                    return p
                })), r.d(e, "a", (function () {
                    return m
                })), r.d(e, "j", (function () {
                    return y
                })), r.d(e, "l", (function () {
                    return b
                })), r.d(e, "k", (function () {
                    return g
                })), r.d(e, "o", (function () {
                    return errorReport
                }));
                var n = 1,
                    i = n++,
                    o = n++,
                    a = n++,
                    s = n++,
                    u = "fail",
                    c = n++,
                    l = n++,
                    h = "start",
                    d = "data",
                    p = "end",
                    m = n++,
                    y = n++,
                    b = n++,
                    g = n++;

                function errorReport(t, e, r) {
                    try {
                        var n = JSON.parse(e)
                    } catch (t) {}
                    return {
                        statusCode: t,
                        body: e,
                        jsonBody: n,
                        thrown: r
                    }
                }
            }, function (t, e, r) {
                r.d(e, "b", (function () {
                    return namedNode
                })), r.d(e, "a", (function () {
                    return i
                })), r.d(e, "c", (function () {
                    return o
                }));
                var n = r(0);

                function namedNode(t, e) {
                    return {
                        key: t,
                        node: e
                    }
                }
                var i = Object(n.c)("key"),
                    o = Object(n.c)("node")
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return oboe
                }));
                var n = r(1),
                    i = r(0),
                    o = r(2),
                    a = r(8),
                    s = r(9);

                function oboe(t) {
                    var e = Object(n.h)("resume", "pause", "pipe"),
                        r = Object(i.j)(o.b, e);
                    return t ? r(t) || Object(o.d)(t) ? Object(a.a)(s.a, t) : Object(a.a)(s.a, t.url, t.method, t.body, t.headers, t.withCredentials, t.cached) : Object(s.a)()
                }
                oboe.drop = function () {
                    return oboe.drop
                }
            }, function (t, e, r) {
                r.d(e, "b", (function () {
                    return incrementalContentBuilder
                })), r.d(e, "a", (function () {
                    return s
                }));
                var n = r(3),
                    i = r(4),
                    o = r(2),
                    a = r(1),
                    s = {};

                function incrementalContentBuilder(t) {
                    var e = t(n.f).emit,
                        r = t(n.d).emit,
                        u = t(n.i).emit,
                        c = t(n.h).emit;

                    function appendBuiltContent(t, e, r) {
                        Object(i.c)(Object(a.g)(t))[e] = r
                    }

                    function keyFound(t, r, n) {
                        t && appendBuiltContent(t, r, n);
                        var o = Object(a.d)(Object(i.b)(r, n), t);
                        return e(o), o
                    }
                    var l = {};
                    return l[n.l] = function nodeOpened(t, e) {
                        if (!t) return u(e), keyFound(t, s, e);
                        var r = function arrayIndicesAreKeys(t, e) {
                                var r = Object(i.c)(Object(a.g)(t));
                                return Object(o.c)(Array, r) ? keyFound(t, Object(o.e)(r), e) : t
                            }(t, e),
                            n = Object(a.l)(r),
                            c = Object(i.a)(Object(a.g)(r));
                        return appendBuiltContent(n, c, e), Object(a.d)(Object(i.b)(c, e), n)
                    }, l[n.k] = function nodeClosed(t) {
                        return r(t), Object(a.l)(t) || c(Object(i.c)(Object(a.g)(t)))
                    }, l[n.j] = keyFound, l
                }
            }, function (t, e, r) {
                Object.defineProperty(e, "__esModule", {
                    value: !0
                });
                var n = r(5);
                e.default = n.a
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return applyDefaults
                }));
                var n = r(2);

                function applyDefaults(t, e, r, i, o, a, s) {
                    return o = o ? JSON.parse(JSON.stringify(o)) : {}, i ? (Object(n.d)(i) || (i = JSON.stringify(i), o["Content-Type"] = o["Content-Type"] || "application/json"), o["Content-Length"] = o["Content-Length"] || i.length) : i = null, t(r || "GET", function modifiedUrl(t, e) {
                        return !1 === e && (-1 === t.indexOf("?") ? t += "?" : t += "&", t += "_=" + (new Date).getTime()), t
                    }(e, s), i, o, a || !1)
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return wire
                }));
                var n = r(10),
                    i = r(12),
                    o = r(6),
                    a = r(13),
                    s = r(14),
                    u = r(16),
                    c = r(17),
                    l = r(18);

                function wire(t, e, r, h, d) {
                    var p = Object(n.a)();
                    return e && Object(l.b)(p, Object(l.a)(), t, e, r, h, d), Object(c.a)(p), Object(i.a)(p, Object(o.b)(p)), Object(a.a)(p, s.a), Object(u.a)(p, e)
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return pubSub
                }));
                var n = r(11),
                    i = r(0);

                function pubSub() {
                    var t = {},
                        e = newSingle("newListener"),
                        r = newSingle("removeListener");

                    function newSingle(i) {
                        return t[i] = Object(n.a)(i, e, r), t[i]
                    }

                    function pubSubInstance(e) {
                        return t[e] || newSingle(e)
                    }
                    return ["emit", "on", "un"].forEach((function (t) {
                        pubSubInstance[t] = Object(i.k)((function (e, r) {
                            Object(i.b)(r, pubSubInstance(e)[t])
                        }))
                    })), pubSubInstance
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return singleEventPubSub
                }));
                var n = r(1),
                    i = r(2),
                    o = r(0);

                function singleEventPubSub(t, e, r) {
                    var a, s;

                    function hasId(t) {
                        return function (e) {
                            return e.id === t
                        }
                    }
                    return {
                        on: function (r, i) {
                            var o = {
                                listener: r,
                                id: i || r
                            };
                            return e && e.emit(t, r, o.id), a = Object(n.d)(o, a), s = Object(n.d)(r, s), this
                        },
                        emit: function () {
                            Object(n.b)(s, arguments)
                        },
                        un: function (e) {
                            var i;
                            a = Object(n.m)(a, hasId(e), (function (t) {
                                i = t
                            })), i && (s = Object(n.m)(s, (function (t) {
                                return t === i.listener
                            })), r && r.emit(t, i.listener, i.id))
                        },
                        listeners: function () {
                            return s
                        },
                        hasListener: function (t) {
                            var e = t ? hasId(t) : o.a;
                            return Object(i.a)(Object(n.e)(e, a))
                        }
                    }
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return ascentManager
                }));
                var n = r(4),
                    i = r(3),
                    o = r(1);

                function ascentManager(t, e) {
                    var r, a = {};

                    function stateAfter(t) {
                        return function (e) {
                            r = t(r, e)
                        }
                    }
                    for (var s in e) t(s).on(stateAfter(e[s]), a);
                    t(i.g).on((function (t) {
                        var e = Object(o.g)(r),
                            i = Object(n.a)(e),
                            a = Object(o.l)(r);
                        a && (Object(n.c)(Object(o.g)(a))[i] = t)
                    })), t(i.e).on((function () {
                        var t = Object(o.g)(r),
                            e = Object(n.a)(t),
                            i = Object(o.l)(r);
                        i && delete Object(n.c)(Object(o.g)(i))[e]
                    })), t(i.a).on((function () {
                        for (var r in e) t(r).un(a)
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return patternAdapter
                }));
                var n = r(3),
                    i = r(1),
                    o = r(4);

                function patternAdapter(t, e) {
                    var r = {
                        node: t(n.d),
                        path: t(n.f)
                    };

                    function addUnderlyingListener(e, r, n) {
                        var a = t(e).emit;
                        r.on((function (t) {
                            var e = n(t);
                            !1 !== e && function emitMatchingNode(t, e, r) {
                                var n = Object(i.k)(r);
                                t(e, Object(i.i)(Object(i.l)(Object(i.j)(o.a, n))), Object(i.i)(Object(i.j)(o.c, n)))
                            }(a, Object(o.c)(e), t)
                        }), e), t("removeListener").on((function (n) {
                            n === e && (t(n).listeners() || r.un(e))
                        }))
                    }
                    t("newListener").on((function (t) {
                        var n = /(node|path):(.*)/.exec(t);
                        if (n) {
                            var i = r[n[1]];
                            i.hasListener(t) || addUnderlyingListener(t, i, e(n[2]))
                        }
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return c
                }));
                var n = r(0),
                    i = r(1),
                    o = r(4),
                    a = r(2),
                    s = r(6),
                    u = r(15),
                    c = Object(u.a)((function (t, e, r, u, c) {
                        var l = Object(n.d)(o.a, i.g),
                            h = Object(n.d)(o.c, i.g);

                        function capture(t, e) {
                            return !!e[1] ? Object(n.g)(t, i.g) : t
                        }

                        function skip1(t) {
                            if (t === n.a) return n.a;
                            return Object(n.g)((function notAtRoot(t) {
                                return l(t) !== s.a
                            }), Object(n.d)(t, i.l))
                        }

                        function rootExpr() {
                            return function (t) {
                                return l(t) === s.a
                            }
                        }

                        function generateClauseReaderIfTokenFound(t, e, r, n, o) {
                            var s = t(r);
                            if (s) {
                                var u = function expressionsReader(t, e, r) {
                                    return Object(i.f)((function (t, e) {
                                        return e(t, r)
                                    }), e, t)
                                }(e, n, s);
                                return o(r.substr(Object(a.e)(s[0])), u)
                            }
                        }

                        function clauseMatcher(t, e) {
                            return Object(n.j)(generateClauseReaderIfTokenFound, t, e)
                        }
                        var d = Object(n.h)(clauseMatcher(t, Object(i.h)(capture, (function duckTypeClause(t, e) {
                            var r = e[3];
                            if (!r) return t;
                            var o = Object(n.j)(a.b, Object(i.c)(r.split(/\W+/))),
                                s = Object(n.d)(o, h);
                            return Object(n.g)(s, t)
                        }), (function nameClause(t, e) {
                            var r = e[2],
                                i = r && "*" !== r ? function (t) {
                                    return String(l(t)) === r
                                } : n.a;
                            return Object(n.g)(i, t)
                        }), skip1)), clauseMatcher(e, Object(i.h)((function skipMany(t) {
                            if (t === n.a) return n.a;
                            var e = rootExpr(),
                                r = t,
                                i = skip1((function (t) {
                                    return o(t)
                                })),
                                o = Object(n.h)(e, r, i);
                            return o
                        }))), clauseMatcher(r, Object(i.h)()), clauseMatcher(u, Object(i.h)(capture, rootExpr)), clauseMatcher(c, Object(i.h)((function statementExpr(t) {
                            return function (e) {
                                var r = t(e);
                                return !0 === r ? Object(i.g)(e) : r
                            }
                        }))), (function (t) {
                            throw Error('"' + t + '" could not be tokenised')
                        }));

                        function returnFoundParser(t, e) {
                            return e
                        }

                        function compileJsonPathToFunction(t, e) {
                            return d(t, e, t ? compileJsonPathToFunction : returnFoundParser)
                        }
                        return function (t) {
                            try {
                                return compileJsonPathToFunction(t, n.a)
                            } catch (e) {
                                throw Error('Could not compile "' + t + '" because ' + e.message)
                            }
                        }
                    }))
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return y
                }));
                var n, i, o, a, s, u, c, l, h, d, p, m = r(0),
                    y = (n = Object(m.k)((function (t) {
                        return t.unshift(/^/),
                            function regexDescriptor(t) {
                                return t.exec.bind(t)
                            }(RegExp(t.map(Object(m.c)("source")).join("")))
                    })), a = n(i = /(\$?)/, /([\w-_]+|\*)/, o = /(?:{([\w ]*?)})?/), s = n(i, /\["([^"]+)"\]/, o), u = n(i, /\[(\d+|\*)\]/, o), c = n(i, /()/, /{([\w ]*?)}/), l = n(/\.\./), h = n(/\./), d = n(i, /!/), p = n(/$/), function (t) {
                        return t(Object(m.h)(a, s, u, c), l, h, d, p)
                    })
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return instanceApi
                }));
                var n = r(3),
                    i = r(0),
                    o = r(2),
                    a = r(5);

                function instanceApi(t, e) {
                    var r, s = /^(node|path):./,
                        u = t(n.h),
                        c = t(n.e).emit,
                        l = t(n.g).emit,
                        h = Object(i.k)((function (e, n) {
                            if (r[e]) Object(i.b)(n, r[e]);
                            else {
                                var o = t(e),
                                    a = n[0];
                                s.test(e) ? addForgettableCallback(o, wrapCallbackToSwapNodeIfSomethingReturned(a)) : o.on(a)
                            }
                            return r
                        }));

                    function addForgettableCallback(t, e, n) {
                        n = n || e;
                        var o = protectedCallback(e);
                        return t.on((function () {
                            var e = !1;
                            r.forget = function () {
                                e = !0
                            }, Object(i.b)(arguments, o), delete r.forget, e && t.un(n)
                        }), n), r
                    }

                    function protectedCallback(t) {
                        return function () {
                            try {
                                return t.apply(r, arguments)
                            } catch (t) {
                                setTimeout((function () {
                                    throw new Error(t.message)
                                }))
                            }
                        }
                    }

                    function wrapCallbackToSwapNodeIfSomethingReturned(t) {
                        return function () {
                            var e = t.apply(this, arguments);
                            Object(o.a)(e) && (e === a.a.drop ? c() : l(e))
                        }
                    }

                    function addSingleNodeOrPathListener(e, r, n) {
                        var i;
                        i = "node" === e ? wrapCallbackToSwapNodeIfSomethingReturned(n) : n, addForgettableCallback(function fullyQualifiedPatternMatchEvent(e, r) {
                            return t(e + ":" + r)
                        }(e, r), i, n)
                    }

                    function addNodeOrPathListenerApi(t, e, n) {
                        return Object(o.d)(e) ? addSingleNodeOrPathListener(t, e, n) : function addMultipleNodeOrPathListeners(t, e) {
                            for (var r in e) addSingleNodeOrPathListener(t, r, e[r])
                        }(t, e), r
                    }
                    return t(n.i).on((function (t) {
                        r.root = Object(i.f)(t)
                    })), t(n.c).on((function (t, e) {
                        r.header = function (t) {
                            return t ? e[t] : e
                        }
                    })), r = {
                        on: h,
                        addListener: h,
                        removeListener: function (e, n, i) {
                            if ("done" === e) u.un(n);
                            else if ("node" === e || "path" === e) t.un(e + ":" + n, i);
                            else {
                                var o = n;
                                t(e).un(o)
                            }
                            return r
                        },
                        emit: t.emit,
                        node: Object(i.j)(addNodeOrPathListenerApi, "node"),
                        path: Object(i.j)(addNodeOrPathListenerApi, "path"),
                        done: Object(i.j)(addForgettableCallback, u),
                        start: Object(i.j)((function addProtectedCallback(e, n) {
                            return t(e).on(protectedCallback(n), n), r
                        }), n.c),
                        fail: t(n.b).on,
                        abort: t(n.a).emit,
                        header: i.i,
                        root: i.i,
                        source: e
                    }
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return clarinet
                }));
                var n = r(3);

                function clarinet(t) {
                    var e, r, i, o, a = t(n.j).emit,
                        s = t(n.l).emit,
                        u = t(n.k).emit,
                        c = t(n.b).emit,
                        l = /[\\"\n]/g,
                        h = 0,
                        d = h++,
                        p = h++,
                        m = h++,
                        y = h++,
                        b = h++,
                        g = h++,
                        v = h++,
                        w = h++,
                        M = h++,
                        A = h++,
                        x = h++,
                        B = h++,
                        E = h++,
                        k = h++,
                        N = h++,
                        T = h++,
                        C = h++,
                        P = h++,
                        I = h++,
                        O = h++,
                        D = 65536,
                        j = "",
                        L = !1,
                        U = !1,
                        H = d,
                        q = [],
                        z = null,
                        G = 0,
                        V = 0,
                        J = 0,
                        W = 0,
                        Z = 1;

                    function emitError(t) {
                        void 0 !== o && (s(o), u(), o = void 0), e = Error(t + "\nLn: " + Z + "\nCol: " + W + "\nChr: " + r), c(Object(n.o)(void 0, void 0, e))
                    }

                    function whitespace(t) {
                        return "\r" === t || "\n" === t || " " === t || "\t" === t
                    }
                    t(n.m).on((function handleData(t) {
                        if (e) return;
                        if (U) return emitError("Cannot write after close");
                        var n = 0;
                        r = t[0];
                        for (; r && (n > 0 && (i = r), r = t[n++]);) switch (J++, "\n" === r ? (Z++, W = 0) : W++, H) {
                            case d:
                                if ("{" === r) H = m;
                                else if ("[" === r) H = b;
                                else if (!whitespace(r)) return emitError("Non-whitespace before {[.");
                                continue;
                            case w:
                            case m:
                                if (whitespace(r)) continue;
                                if (H === w) q.push(M);
                                else {
                                    if ("}" === r) {
                                        s({}), u(), H = q.pop() || p;
                                        continue
                                    }
                                    q.push(y)
                                }
                                if ('"' !== r) return emitError('Malformed object key should start with " ');
                                H = v;
                                continue;
                            case M:
                            case y:
                                if (whitespace(r)) continue;
                                if (":" === r) H === y ? (q.push(y), void 0 !== o && (s({}), a(o), o = void 0), V++) : void 0 !== o && (a(o), o = void 0), H = p;
                                else if ("}" === r) void 0 !== o && (s(o), u(), o = void 0), u(), V--, H = q.pop() || p;
                                else {
                                    if ("," !== r) return emitError("Bad object");
                                    H === y && q.push(y), void 0 !== o && (s(o), u(), o = void 0), H = w
                                }
                                continue;
                            case b:
                            case p:
                                if (whitespace(r)) continue;
                                if (H === b) {
                                    if (s([]), V++, H = p, "]" === r) {
                                        u(), V--, H = q.pop() || p;
                                        continue
                                    }
                                    q.push(g)
                                }
                                if ('"' === r) H = v;
                                else if ("{" === r) H = m;
                                else if ("[" === r) H = b;
                                else if ("t" === r) H = A;
                                else if ("f" === r) H = E;
                                else if ("n" === r) H = C;
                                else if ("-" === r) j += r;
                                else if ("0" === r) j += r, H = 20;
                                else {
                                    if (-1 === "123456789".indexOf(r)) return emitError("Bad value");
                                    j += r, H = 20
                                }
                                continue;
                            case g:
                                if ("," === r) q.push(g), void 0 !== o && (s(o), u(), o = void 0), H = p;
                                else {
                                    if ("]" !== r) {
                                        if (whitespace(r)) continue;
                                        return emitError("Bad array")
                                    }
                                    void 0 !== o && (s(o), u(), o = void 0), u(), V--, H = q.pop() || p
                                }
                                continue;
                            case v:
                                void 0 === o && (o = "");
                                var c = n - 1;
                                t: for (;;) {
                                    for (; G > 0;)
                                        if (z += r, r = t.charAt(n++), 4 === G ? (o += String.fromCharCode(parseInt(z, 16)), G = 0, c = n - 1) : G++, !r) break t;
                                    if ('"' === r && !L) {
                                        H = q.pop() || p, o += t.substring(c, n - 1);
                                        break
                                    }
                                    if (!("\\" !== r || L || (L = !0, o += t.substring(c, n - 1), r = t.charAt(n++)))) break;
                                    if (L) {
                                        if (L = !1, "n" === r ? o += "\n" : "r" === r ? o += "\r" : "t" === r ? o += "\t" : "f" === r ? o += "\f" : "b" === r ? o += "\b" : "u" === r ? (G = 1, z = "") : o += r, r = t.charAt(n++), c = n - 1, r) continue;
                                        break
                                    }
                                    l.lastIndex = n;
                                    var h = l.exec(t);
                                    if (!h) {
                                        n = t.length + 1, o += t.substring(c, n - 1);
                                        break
                                    }
                                    if (n = h.index + 1, !(r = t.charAt(h.index))) {
                                        o += t.substring(c, n - 1);
                                        break
                                    }
                                }
                                continue;
                            case A:
                                if (!r) continue;
                                if ("r" !== r) return emitError("Invalid true started with t" + r);
                                H = x;
                                continue;
                            case x:
                                if (!r) continue;
                                if ("u" !== r) return emitError("Invalid true started with tr" + r);
                                H = B;
                                continue;
                            case B:
                                if (!r) continue;
                                if ("e" !== r) return emitError("Invalid true started with tru" + r);
                                s(!0), u(), H = q.pop() || p;
                                continue;
                            case E:
                                if (!r) continue;
                                if ("a" !== r) return emitError("Invalid false started with f" + r);
                                H = k;
                                continue;
                            case k:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid false started with fa" + r);
                                H = N;
                                continue;
                            case N:
                                if (!r) continue;
                                if ("s" !== r) return emitError("Invalid false started with fal" + r);
                                H = T;
                                continue;
                            case T:
                                if (!r) continue;
                                if ("e" !== r) return emitError("Invalid false started with fals" + r);
                                s(!1), u(), H = q.pop() || p;
                                continue;
                            case C:
                                if (!r) continue;
                                if ("u" !== r) return emitError("Invalid null started with n" + r);
                                H = P;
                                continue;
                            case P:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid null started with nu" + r);
                                H = I;
                                continue;
                            case I:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid null started with nul" + r);
                                s(null), u(), H = q.pop() || p;
                                continue;
                            case O:
                                if ("." !== r) return emitError("Leading zero not followed by .");
                                j += r, H = 20;
                                continue;
                            case 20:
                                if (-1 !== "0123456789".indexOf(r)) j += r;
                                else if ("." === r) {
                                    if (-1 !== j.indexOf(".")) return emitError("Invalid number has two dots");
                                    j += r
                                } else if ("e" === r || "E" === r) {
                                    if (-1 !== j.indexOf("e") || -1 !== j.indexOf("E")) return emitError("Invalid number has two exponential");
                                    j += r
                                } else if ("+" === r || "-" === r) {
                                    if ("e" !== i && "E" !== i) return emitError("Invalid symbol in number");
                                    j += r
                                } else j && (s(parseFloat(j)), u(), j = ""), n--, H = q.pop() || p;
                                continue;
                            default:
                                return emitError("Unknown state: " + H)
                        }
                        J >= D && function checkBufferLength() {
                            var t = 0;
                            void 0 !== o && o.length > 65536 && (emitError("Max buffer length exceeded: textNode"), t = Math.max(t, o.length)), j.length > 65536 && (emitError("Max buffer length exceeded: numberNode"), t = Math.max(t, j.length)), D = 65536 - t + J
                        }()
                    })), t(n.n).on((function handleStreamEnd() {
                        if (H === d) return s({}), u(), void(U = !0);
                        H === p && 0 === V || emitError("Unexpected end");
                        void 0 !== o && (s(o), u(), o = void 0);
                        U = !0
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return httpTransport
                })), r.d(e, "b", (function () {
                    return streamingHttp
                }));
                var n = r(19),
                    i = r(3),
                    o = r(2),
                    a = r(20),
                    s = r(0);

                function httpTransport() {
                    return new XMLHttpRequest
                }

                function streamingHttp(t, e, r, u, c, l, h) {
                    var d = t(i.m).emit,
                        p = t(i.b).emit,
                        m = 0,
                        y = !0;

                    function handleProgress() {
                        if ("2" === String(e.status)[0]) {
                            var t = e.responseText,
                                r = (" " + t.substr(m)).substr(1);
                            r && d(r), m = Object(o.e)(t)
                        }
                    }

                    function sendStartIfNotAlready(e) {
                        try {
                            y && t(i.c).emit(e.status, Object(a.a)(e.getAllResponseHeaders())), y = !1
                        } catch (t) {}
                    }
                    t(i.a).on((function () {
                        e.onreadystatechange = null, e.abort()
                    })), "onprogress" in e && (e.onprogress = handleProgress), e.onreadystatechange = function () {
                        switch (e.readyState) {
                            case 2:
                            case 3:
                                return sendStartIfNotAlready(e);
                            case 4:
                                sendStartIfNotAlready(e), "2" === String(e.status)[0] ? (handleProgress(), t(i.n).emit()) : p(Object(i.o)(e.status, e.responseText))
                        }
                    };
                    try {
                        for (var b in e.open(r, u, !0), l) e.setRequestHeader(b, l[b]);
                        Object(n.a)(window.location, Object(n.b)(u)) || e.setRequestHeader("X-Requested-With", "XMLHttpRequest"), e.withCredentials = h, e.send(c)
                    } catch (t) {
                        window.setTimeout(Object(s.j)(p, Object(i.o)(void 0, void 0, t)), 0)
                    }
                }
            }, function (t, e, r) {
                function isCrossOrigin(t, e) {
                    function portOf(e) {
                        return String(e.port || function defaultPort(t) {
                            return {
                                "http:": 80,
                                "https:": 443
                            } [t]
                        }(e.protocol || t.protocol))
                    }
                    return !!(e.protocol && e.protocol !== t.protocol || e.host && e.host !== t.host || e.host && portOf(e) !== portOf(t))
                }

                function parseUrlOrigin(t) {
                    var e = /(\w+:)?(?:\/\/)([\w.-]+)?(?::(\d+))?\/?/.exec(t) || [];
                    return {
                        protocol: e[1] || "",
                        host: e[2] || "",
                        port: e[3] || ""
                    }
                }
                r.d(e, "a", (function () {
                    return isCrossOrigin
                })), r.d(e, "b", (function () {
                    return parseUrlOrigin
                }))
            }, function (t, e, r) {
                function parseResponseHeaders(t) {
                    var e = {};
                    return t && t.split("\r\n").forEach((function (t) {
                        var r = t.indexOf(": ");
                        e[t.substring(0, r)] = t.substring(r + 2)
                    })), e
                }
                r.d(e, "a", (function () {
                    return parseResponseHeaders
                }))
            }]).default
        }))
    }, function (t, e, r) {
        var n = r(25).formatters,
            i = r(180),
            o = r(48);
        t.exports = function (t) {
            var ex = function (e) {
                var r;
                return e.property ? (t[e.property] || (t[e.property] = {}), r = t[e.property]) : r = t, e.methods && e.methods.forEach((function (e) {
                    e instanceof i || (e = new i(e)), e.attachToObject(r), e.setRequestManager(t._requestManager)
                })), t
            };
            return ex.formatters = n, ex.utils = o, ex.Method = i, ex
        }
    }, function (t, e, r) {
        var n = r(175),
            i = function PromiEvent(t) {
                var e, r, i = new Promise((function () {
                    e = arguments[0], r = arguments[1]
                }));
                if (t) return {
                    resolve: e,
                    reject: r,
                    eventEmitter: i
                };
                var o = new n;
                return i._events = o._events, i.emit = o.emit, i.on = o.on, i.once = o.once, i.off = o.off, i.listeners = o.listeners, i.addListener = o.addListener, i.removeListener = o.removeListener, i.removeAllListeners = o.removeAllListeners, {
                    resolve: e,
                    reject: r,
                    eventEmitter: i
                }
            };
        i.resolve = function (t) {
            var e = i(!0);
            return e.resolve(t), e.eventEmitter
        }, t.exports = i
    }, function (t, e, r) {
        var n = r(609),
            i = function Subscriptions(t) {
                this.name = t.name, this.type = t.type, this.subscriptions = t.subscriptions || {}, this.requestManager = null
            };
        i.prototype.setRequestManager = function (t) {
            this.requestManager = t
        }, i.prototype.attachToObject = function (t) {
            var e = this.buildCall(),
                r = this.name.split(".");
            r.length > 1 ? (t[r[0]] = t[r[0]] || {}, t[r[0]][r[1]] = e) : t[r[0]] = e
        }, i.prototype.buildCall = function () {
            var t = this;
            return function () {
                t.subscriptions[arguments[0]] || console.warn("Subscription " + JSON.stringify(arguments[0]) + " doesn't exist. Subscribing anyway.");
                var e = new n({
                    subscription: t.subscriptions[arguments[0]] || {},
                    requestManager: t.requestManager,
                    type: t.type
                });
                return e.subscribe.apply(e, arguments)
            }
        }, t.exports = {
            subscriptions: i,
            subscription: n
        }
    }, function (t, e, r) {
        var n = r(25).errors,
            i = r(175),
            o = r(25).formatters;

        function identity(t) {
            return t
        }

        function Subscription(t) {
            i.call(this), this.id = null, this.callback = identity, this.arguments = null, this.lastBlock = null, this.options = {
                subscription: t.subscription,
                type: t.type,
                requestManager: t.requestManager
            }
        }
        Subscription.prototype = Object.create(i.prototype), Subscription.prototype.constructor = Subscription, Subscription.prototype._extractCallback = function (t) {
            if ("function" == typeof t[t.length - 1]) return t.pop()
        }, Subscription.prototype._validateArgs = function (t) {
            var e = this.options.subscription;
            if (e || (e = {}), e.params || (e.params = 0), t.length !== e.params) throw n.InvalidNumberOfParams(t.length, e.params, e.subscriptionName)
        }, Subscription.prototype._formatInput = function (t) {
            var e = this.options.subscription;
            return e && e.inputFormatter ? e.inputFormatter.map((function (e, r) {
                return e ? e(t[r]) : t[r]
            })) : t
        }, Subscription.prototype._formatOutput = function (t) {
            var e = this.options.subscription;
            return e && e.outputFormatter && t ? e.outputFormatter(t) : t
        }, Subscription.prototype._toPayload = function (t) {
            var e = [];
            if (this.callback = this._extractCallback(t) || identity, this.subscriptionMethod || (this.subscriptionMethod = t.shift(), this.options.subscription.subscriptionName && (this.subscriptionMethod = this.options.subscription.subscriptionName)), this.arguments || (this.arguments = this._formatInput(t), this._validateArgs(this.arguments), t = []), e.push(this.subscriptionMethod), e = e.concat(this.arguments), t.length) throw new Error("Only a callback is allowed as parameter on an already instantiated subscription.");
            return {
                method: this.options.type + "_subscribe",
                params: e
            }
        }, Subscription.prototype.unsubscribe = function (t) {
            this.options.requestManager.removeSubscription(this.id, t), this.id = null, this.lastBlock = null, this.removeAllListeners()
        }, Subscription.prototype.subscribe = function () {
            var t = this,
                e = Array.prototype.slice.call(arguments),
                r = this._toPayload(e);
            if (!r) return this;
            if (!this.options.requestManager.provider) return setTimeout((function () {
                var e = new Error("No provider set.");
                t.callback(e, null, t), t.emit("error", e)
            }), 0), this;
            if (!this.options.requestManager.provider.on) return setTimeout((function () {
                var e = new Error("The current provider doesn't support subscriptions: " + t.options.requestManager.provider.constructor.name);
                t.callback(e, null, t), t.emit("error", e)
            }), 0), this;
            if (this.lastBlock && this.options.params && "object" == typeof this.options.params && (r.params[1] = this.options.params, r.params[1].fromBlock = o.inputBlockNumberFormatter(this.lastBlock + 1)), this.id && this.unsubscribe(), this.options.params = r.params[1], "logs" === r.params[0] && r.params[1] && "object" == typeof r.params[1] && r.params[1].hasOwnProperty("fromBlock") && isFinite(r.params[1].fromBlock)) {
                var n = Object.assign({}, r.params[1]);
                this.options.requestManager.send({
                    method: "eth_getLogs",
                    params: [n]
                }, (function (e, r) {
                    e ? setTimeout((function () {
                        t.callback(e, null, t), t.emit("error", e)
                    }), 0) : r.forEach((function (e) {
                        var r = t._formatOutput(e);
                        t.callback(null, r, t), t.emit("data", r)
                    }))
                }))
            }
            return "object" == typeof r.params[1] && delete r.params[1].fromBlock, this.options.requestManager.send(r, (function (e, n) {
                !e && n ? (t.id = n, t.method = r.params[0], t.emit("connected", n), t.options.requestManager.addSubscription(t, (function (e, r) {
                    e ? (t.callback(e, !1, t), t.emit("error", e)) : (Array.isArray(r) || (r = [r]), r.forEach((function (e) {
                        var r = t._formatOutput(e);
                        if (t.lastBlock = r && "object" == typeof r ? r.blockNumber : null, "function" == typeof t.options.subscription.subscriptionHandler) return t.options.subscription.subscriptionHandler.call(t, r);
                        t.emit("data", r), t.callback(null, r, t)
                    })))
                }))) : setTimeout((function () {
                    t.callback(e, !1, t), t.emit("error", e)
                }), 0)
            })), this
        }, Subscription.prototype.resubscribe = function () {
            this.options.requestManager.removeSubscription(this.id), this.id = null, this.subscribe(this.callback)
        }, t.exports = Subscription
    }, function (t, e, r) {
        var n;
        n = function (t) {
            t.version = "1.2.0";
            var e = function signed_crc_table() {
                for (var t = 0, e = new Array(256), r = 0; 256 != r; ++r) t = 1 & (t = 1 & (t = 1 & (t = 1 & (t = 1 & (t = 1 & (t = 1 & (t = 1 & (t = r) ? -306674912 ^ t >>> 1 : t >>> 1) ? -306674912 ^ t >>> 1 : t >>> 1) ? -306674912 ^ t >>> 1 : t >>> 1) ? -306674912 ^ t >>> 1 : t >>> 1) ? -306674912 ^ t >>> 1 : t >>> 1) ? -306674912 ^ t >>> 1 : t >>> 1) ? -306674912 ^ t >>> 1 : t >>> 1) ? -306674912 ^ t >>> 1 : t >>> 1, e[r] = t;
                return "undefined" != typeof Int32Array ? new Int32Array(e) : e
            }();
            t.table = e, t.bstr = function crc32_bstr(t, r) {
                for (var n = -1 ^ r, i = t.length - 1, o = 0; o < i;) n = (n = n >>> 8 ^ e[255 & (n ^ t.charCodeAt(o++))]) >>> 8 ^ e[255 & (n ^ t.charCodeAt(o++))];
                return o === i && (n = n >>> 8 ^ e[255 & (n ^ t.charCodeAt(o))]), -1 ^ n
            }, t.buf = function crc32_buf(t, r) {
                if (t.length > 1e4) return function crc32_buf_8(t, r) {
                    for (var n = -1 ^ r, i = t.length - 7, o = 0; o < i;) n = (n = (n = (n = (n = (n = (n = (n = n >>> 8 ^ e[255 & (n ^ t[o++])]) >>> 8 ^ e[255 & (n ^ t[o++])]) >>> 8 ^ e[255 & (n ^ t[o++])]) >>> 8 ^ e[255 & (n ^ t[o++])]) >>> 8 ^ e[255 & (n ^ t[o++])]) >>> 8 ^ e[255 & (n ^ t[o++])]) >>> 8 ^ e[255 & (n ^ t[o++])]) >>> 8 ^ e[255 & (n ^ t[o++])];
                    for (; o < i + 7;) n = n >>> 8 ^ e[255 & (n ^ t[o++])];
                    return -1 ^ n
                }(t, r);
                for (var n = -1 ^ r, i = t.length - 3, o = 0; o < i;) n = (n = (n = (n = n >>> 8 ^ e[255 & (n ^ t[o++])]) >>> 8 ^ e[255 & (n ^ t[o++])]) >>> 8 ^ e[255 & (n ^ t[o++])]) >>> 8 ^ e[255 & (n ^ t[o++])];
                for (; o < i + 3;) n = n >>> 8 ^ e[255 & (n ^ t[o++])];
                return -1 ^ n
            }, t.str = function crc32_str(t, r) {
                for (var n, i, o = -1 ^ r, a = 0, s = t.length; a < s;)(n = t.charCodeAt(a++)) < 128 ? o = o >>> 8 ^ e[255 & (o ^ n)] : n < 2048 ? o = (o = o >>> 8 ^ e[255 & (o ^ (192 | n >> 6 & 31))]) >>> 8 ^ e[255 & (o ^ (128 | 63 & n))] : n >= 55296 && n < 57344 ? (n = 64 + (1023 & n), i = 1023 & t.charCodeAt(a++), o = (o = (o = (o = o >>> 8 ^ e[255 & (o ^ (240 | n >> 8 & 7))]) >>> 8 ^ e[255 & (o ^ (128 | n >> 2 & 63))]) >>> 8 ^ e[255 & (o ^ (128 | i >> 6 & 15 | (3 & n) << 4))]) >>> 8 ^ e[255 & (o ^ (128 | 63 & i))]) : o = (o = (o = o >>> 8 ^ e[255 & (o ^ (224 | n >> 12 & 15))]) >>> 8 ^ e[255 & (o ^ (128 | n >> 6 & 63))]) >>> 8 ^ e[255 & (o ^ (128 | 63 & n))];
                return -1 ^ o
            }
        }, "undefined" == typeof DO_NOT_EXPORT_CRC ? n(e) : n({})
    }, function (t, e, r) {
        var n = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
                void 0 === n && (n = r), Object.defineProperty(t, n, {
                    enumerable: !0,
                    get: function () {
                        return e[r]
                    }
                })
            } : function (t, e, r, n) {
                void 0 === n && (n = r), t[n] = e[r]
            }),
            i = this && this.__exportStar || function (t, e) {
                for (var r in t) "default" === r || e.hasOwnProperty(r) || n(e, t, r)
            };
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), i(r(272), e), i(r(273), e), i(r(652), e), i(r(183), e), i(r(653), e), i(r(54), e), i(r(654), e), i(r(655), e), i(r(187), e), i(r(20), e)
    }, function (t, e) {}, function (t, e, r) {
        (function (t) {
            ! function (t, e) {
                function assert(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }

                function inherits(t, e) {
                    t.super_ = e;
                    var TempCtor = function () {};
                    TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
                }

                function BN(t, e, r) {
                    if (BN.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                var n;
                "object" == typeof t ? t.exports = BN : e.BN = BN, BN.BN = BN, BN.wordSize = 26;
                try {
                    n = r(614).Buffer
                } catch (t) {}

                function parseHex(t, e, r) {
                    for (var n = 0, i = Math.min(t.length, r), o = e; o < i; o++) {
                        var a = t.charCodeAt(o) - 48;
                        n <<= 4, n |= a >= 49 && a <= 54 ? a - 49 + 10 : a >= 17 && a <= 22 ? a - 17 + 10 : 15 & a
                    }
                    return n
                }

                function parseBase(t, e, r, n) {
                    for (var i = 0, o = Math.min(t.length, r), a = e; a < o; a++) {
                        var s = t.charCodeAt(a) - 48;
                        i *= n, i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s
                    }
                    return i
                }
                BN.isBN = function isBN(t) {
                    return t instanceof BN || null !== t && "object" == typeof t && t.constructor.wordSize === BN.wordSize && Array.isArray(t.words)
                }, BN.max = function max(t, e) {
                    return t.cmp(e) > 0 ? t : e
                }, BN.min = function min(t, e) {
                    return t.cmp(e) < 0 ? t : e
                }, BN.prototype._init = function init(t, e, r) {
                    if ("number" == typeof t) return this._initNumber(t, e, r);
                    if ("object" == typeof t) return this._initArray(t, e, r);
                    "hex" === e && (e = 16), assert(e === (0 | e) && e >= 2 && e <= 36);
                    var n = 0;
                    "-" === (t = t.toString().replace(/\s+/g, ""))[0] && n++, 16 === e ? this._parseHex(t, n) : this._parseBase(t, e, n), "-" === t[0] && (this.negative = 1), this.strip(), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initNumber = function _initNumber(t, e, r) {
                    t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (assert(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initArray = function _initArray(t, e, r) {
                    if (assert("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                    this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o, a = 0;
                    if ("be" === r)
                        for (n = t.length - 1, i = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    else if ("le" === r)
                        for (n = 0, i = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    return this.strip()
                }, BN.prototype._parseHex = function _parseHex(t, e) {
                    this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                    for (var r = 0; r < this.length; r++) this.words[r] = 0;
                    var n, i, o = 0;
                    for (r = t.length - 6, n = 0; r >= e; r -= 6) i = parseHex(t, r, r + 6), this.words[n] |= i << o & 67108863, this.words[n + 1] |= i >>> 26 - o & 4194303, (o += 24) >= 26 && (o -= 26, n++);
                    r + 6 !== e && (i = parseHex(t, e, r + 6), this.words[n] |= i << o & 67108863, this.words[n + 1] |= i >>> 26 - o & 4194303), this.strip()
                }, BN.prototype._parseBase = function _parseBase(t, e, r) {
                    this.words = [0], this.length = 1;
                    for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                    n--, i = i / e | 0;
                    for (var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n) u = parseBase(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== a) {
                        var l = 1;
                        for (u = parseBase(t, c, t.length, e), c = 0; c < a; c++) l *= e;
                        this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                }, BN.prototype.copy = function copy(t) {
                    t.words = new Array(this.length);
                    for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                    t.length = this.length, t.negative = this.negative, t.red = this.red
                }, BN.prototype.clone = function clone() {
                    var t = new BN(null);
                    return this.copy(t), t
                }, BN.prototype._expand = function _expand(t) {
                    for (; this.length < t;) this.words[this.length++] = 0;
                    return this
                }, BN.prototype.strip = function strip() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                    return this._normSign()
                }, BN.prototype._normSign = function _normSign() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                }, BN.prototype.inspect = function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                };
                var i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    o = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    a = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function smallMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, d = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= d; p++) {
                            var m = c - p | 0;
                            l += (a = (i = 0 | t.words[m]) * (o = 0 | e.words[p]) + h) / 67108864 | 0, h = 67108863 & a
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r.strip()
                }
                BN.prototype.toString = function toString(t, e) {
                    var r;
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var n = 0, s = 0, u = 0; u < this.length; u++) {
                            var c = this.words[u],
                                l = (16777215 & (c << n | s)).toString(16);
                            r = 0 !== (s = c >>> 24 - n & 16777215) || u !== this.length - 1 ? i[6 - l.length] + l + r : l + r, (n += 2) >= 26 && (n -= 26, u--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var h = o[t],
                            d = a[t];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero();) {
                            var m = p.modn(d).toString(t);
                            r = (p = p.idivn(d)).isZero() ? m + r : i[h - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    assert(!1, "Base should be between 2 and 36")
                }, BN.prototype.toNumber = function toNumber() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, BN.prototype.toJSON = function toJSON() {
                    return this.toString(16)
                }, BN.prototype.toBuffer = function toBuffer(t, e) {
                    return assert(void 0 !== n), this.toArrayLike(n, t, e)
                }, BN.prototype.toArray = function toArray(t, e) {
                    return this.toArrayLike(Array, t, e)
                }, BN.prototype.toArrayLike = function toArrayLike(t, e, r) {
                    var n = this.byteLength(),
                        i = r || Math.max(1, n);
                    assert(n <= i, "byte array longer than desired length"), assert(i > 0, "Requested array length <= 0"), this.strip();
                    var o, a, s = "le" === e,
                        u = new t(i),
                        c = this.clone();
                    if (s) {
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[a] = o;
                        for (; a < i; a++) u[a] = 0
                    } else {
                        for (a = 0; a < i - n; a++) u[a] = 0;
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[i - a - 1] = o
                    }
                    return u
                }, Math.clz32 ? BN.prototype._countBits = function _countBits(t) {
                    return 32 - Math.clz32(t)
                } : BN.prototype._countBits = function _countBits(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, BN.prototype._zeroBits = function _zeroBits(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r
                }, BN.prototype.bitLength = function bitLength() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return 26 * (this.length - 1) + e
                }, BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8)
                }, BN.prototype.toTwos = function toTwos(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, BN.prototype.fromTwos = function fromTwos(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, BN.prototype.isNeg = function isNeg() {
                    return 0 !== this.negative
                }, BN.prototype.neg = function neg() {
                    return this.clone().ineg()
                }, BN.prototype.ineg = function ineg() {
                    return this.isZero() || (this.negative ^= 1), this
                }, BN.prototype.iuor = function iuor(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this.strip()
                }, BN.prototype.ior = function ior(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuor(t)
                }, BN.prototype.or = function or(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, BN.prototype.uor = function uor(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, BN.prototype.iuand = function iuand(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this.strip()
                }, BN.prototype.iand = function iand(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuand(t)
                }, BN.prototype.and = function and(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, BN.prototype.uand = function uand(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, BN.prototype.iuxor = function iuxor(t) {
                    var e, r;
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this.strip()
                }, BN.prototype.ixor = function ixor(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuxor(t)
                }, BN.prototype.xor = function xor(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, BN.prototype.uxor = function uxor(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, BN.prototype.inotn = function inotn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip()
                }, BN.prototype.notn = function notn(t) {
                    return this.clone().inotn(t)
                }, BN.prototype.setn = function setn(t, e) {
                    assert("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        n = t % 26;
                    return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip()
                }, BN.prototype.iadd = function iadd(t) {
                    var e, r, n;
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, BN.prototype.add = function add(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, BN.prototype.isub = function isub(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e = this.iadd(t);
                        return t.negative = 1, e._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var r, n, i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (r = this, n = t) : (r = t, n = this);
                    for (var o = 0, a = 0; a < n.length; a++) o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    for (; 0 !== o && a < r.length; a++) o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    if (0 === o && a < r.length && r !== this)
                        for (; a < r.length; a++) this.words[a] = r.words[a];
                    return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this.strip()
                }, BN.prototype.sub = function sub(t) {
                    return this.clone().isub(t)
                };
                var s = function comb10MulTo(t, e, r) {
                    var n, i, o, a = t.words,
                        s = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        h = 8191 & l,
                        d = l >>> 13,
                        p = 0 | a[1],
                        m = 8191 & p,
                        y = p >>> 13,
                        b = 0 | a[2],
                        g = 8191 & b,
                        v = b >>> 13,
                        w = 0 | a[3],
                        M = 8191 & w,
                        A = w >>> 13,
                        x = 0 | a[4],
                        B = 8191 & x,
                        E = x >>> 13,
                        k = 0 | a[5],
                        N = 8191 & k,
                        T = k >>> 13,
                        C = 0 | a[6],
                        P = 8191 & C,
                        I = C >>> 13,
                        O = 0 | a[7],
                        D = 8191 & O,
                        j = O >>> 13,
                        L = 0 | a[8],
                        U = 8191 & L,
                        H = L >>> 13,
                        q = 0 | a[9],
                        z = 8191 & q,
                        G = q >>> 13,
                        V = 0 | s[0],
                        J = 8191 & V,
                        W = V >>> 13,
                        Z = 0 | s[1],
                        X = 8191 & Z,
                        Y = Z >>> 13,
                        $ = 0 | s[2],
                        Q = 8191 & $,
                        tt = $ >>> 13,
                        et = 0 | s[3],
                        rt = 8191 & et,
                        nt = et >>> 13,
                        it = 0 | s[4],
                        ot = 8191 & it,
                        st = it >>> 13,
                        ut = 0 | s[5],
                        ct = 8191 & ut,
                        ht = ut >>> 13,
                        dt = 0 | s[6],
                        pt = 8191 & dt,
                        mt = dt >>> 13,
                        yt = 0 | s[7],
                        bt = 8191 & yt,
                        vt = yt >>> 13,
                        wt = 0 | s[8],
                        Mt = 8191 & wt,
                        _t = wt >>> 13,
                        At = 0 | s[9],
                        xt = 8191 & At,
                        Bt = At >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var Et = (c + (n = Math.imul(h, J)) | 0) + ((8191 & (i = (i = Math.imul(h, W)) + Math.imul(d, J) | 0)) << 13) | 0;
                    c = ((o = Math.imul(d, W)) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(m, J), i = (i = Math.imul(m, W)) + Math.imul(y, J) | 0, o = Math.imul(y, W);
                    var kt = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(d, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Y) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(g, J), i = (i = Math.imul(g, W)) + Math.imul(v, J) | 0, o = Math.imul(v, W), n = n + Math.imul(m, X) | 0, i = (i = i + Math.imul(m, Y) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, Y) | 0;
                    var Nt = (c + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, tt) | 0) + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(M, J), i = (i = Math.imul(M, W)) + Math.imul(A, J) | 0, o = Math.imul(A, W), n = n + Math.imul(g, X) | 0, i = (i = i + Math.imul(g, Y) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, Y) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0;
                    var St = (c + (n = n + Math.imul(h, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, nt) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, nt) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(B, J), i = (i = Math.imul(B, W)) + Math.imul(E, J) | 0, o = Math.imul(E, W), n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(g, Q) | 0, i = (i = i + Math.imul(g, tt) | 0) + Math.imul(v, Q) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                    var Tt = (c + (n = n + Math.imul(h, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, st) | 0) + Math.imul(d, ot) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, st) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(N, J), i = (i = Math.imul(N, W)) + Math.imul(T, J) | 0, o = Math.imul(T, W), n = n + Math.imul(B, X) | 0, i = (i = i + Math.imul(B, Y) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(g, rt) | 0, i = (i = i + Math.imul(g, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                    var Ct = (c + (n = n + Math.imul(h, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ht) | 0) + Math.imul(d, ct) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, ht) | 0) + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(P, J), i = (i = Math.imul(P, W)) + Math.imul(I, J) | 0, o = Math.imul(I, W), n = n + Math.imul(N, X) | 0, i = (i = i + Math.imul(N, Y) | 0) + Math.imul(T, X) | 0, o = o + Math.imul(T, Y) | 0, n = n + Math.imul(B, Q) | 0, i = (i = i + Math.imul(B, tt) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(M, rt) | 0, i = (i = i + Math.imul(M, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(g, ot) | 0, i = (i = i + Math.imul(g, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(m, ct) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, ht) | 0;
                    var Pt = (c + (n = n + Math.imul(h, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, mt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, mt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(D, J), i = (i = Math.imul(D, W)) + Math.imul(j, J) | 0, o = Math.imul(j, W), n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(N, Q) | 0, i = (i = i + Math.imul(N, tt) | 0) + Math.imul(T, Q) | 0, o = o + Math.imul(T, tt) | 0, n = n + Math.imul(B, rt) | 0, i = (i = i + Math.imul(B, nt) | 0) + Math.imul(E, rt) | 0, o = o + Math.imul(E, nt) | 0, n = n + Math.imul(M, ot) | 0, i = (i = i + Math.imul(M, st) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(g, ct) | 0, i = (i = i + Math.imul(g, ht) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(m, pt) | 0, i = (i = i + Math.imul(m, mt) | 0) + Math.imul(y, pt) | 0, o = o + Math.imul(y, mt) | 0;
                    var It = (c + (n = n + Math.imul(h, bt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, vt) | 0) + Math.imul(d, bt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, vt) | 0) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(U, J), i = (i = Math.imul(U, W)) + Math.imul(H, J) | 0, o = Math.imul(H, W), n = n + Math.imul(D, X) | 0, i = (i = i + Math.imul(D, Y) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, tt) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = (i = i + Math.imul(N, nt) | 0) + Math.imul(T, rt) | 0, o = o + Math.imul(T, nt) | 0, n = n + Math.imul(B, ot) | 0, i = (i = i + Math.imul(B, st) | 0) + Math.imul(E, ot) | 0, o = o + Math.imul(E, st) | 0, n = n + Math.imul(M, ct) | 0, i = (i = i + Math.imul(M, ht) | 0) + Math.imul(A, ct) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(g, pt) | 0, i = (i = i + Math.imul(g, mt) | 0) + Math.imul(v, pt) | 0, o = o + Math.imul(v, mt) | 0, n = n + Math.imul(m, bt) | 0, i = (i = i + Math.imul(m, vt) | 0) + Math.imul(y, bt) | 0, o = o + Math.imul(y, vt) | 0;
                    var Ot = (c + (n = n + Math.imul(h, Mt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, _t) | 0) + Math.imul(d, Mt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, _t) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(z, J), i = (i = Math.imul(z, W)) + Math.imul(G, J) | 0, o = Math.imul(G, W), n = n + Math.imul(U, X) | 0, i = (i = i + Math.imul(U, Y) | 0) + Math.imul(H, X) | 0, o = o + Math.imul(H, Y) | 0, n = n + Math.imul(D, Q) | 0, i = (i = i + Math.imul(D, tt) | 0) + Math.imul(j, Q) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(P, rt) | 0, i = (i = i + Math.imul(P, nt) | 0) + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = (i = i + Math.imul(N, st) | 0) + Math.imul(T, ot) | 0, o = o + Math.imul(T, st) | 0, n = n + Math.imul(B, ct) | 0, i = (i = i + Math.imul(B, ht) | 0) + Math.imul(E, ct) | 0, o = o + Math.imul(E, ht) | 0, n = n + Math.imul(M, pt) | 0, i = (i = i + Math.imul(M, mt) | 0) + Math.imul(A, pt) | 0, o = o + Math.imul(A, mt) | 0, n = n + Math.imul(g, bt) | 0, i = (i = i + Math.imul(g, vt) | 0) + Math.imul(v, bt) | 0, o = o + Math.imul(v, vt) | 0, n = n + Math.imul(m, Mt) | 0, i = (i = i + Math.imul(m, _t) | 0) + Math.imul(y, Mt) | 0, o = o + Math.imul(y, _t) | 0;
                    var Rt = (c + (n = n + Math.imul(h, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Bt) | 0) + Math.imul(d, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Bt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(z, X), i = (i = Math.imul(z, Y)) + Math.imul(G, X) | 0, o = Math.imul(G, Y), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, tt) | 0) + Math.imul(H, Q) | 0, o = o + Math.imul(H, tt) | 0, n = n + Math.imul(D, rt) | 0, i = (i = i + Math.imul(D, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(P, ot) | 0, i = (i = i + Math.imul(P, st) | 0) + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ct) | 0, i = (i = i + Math.imul(N, ht) | 0) + Math.imul(T, ct) | 0, o = o + Math.imul(T, ht) | 0, n = n + Math.imul(B, pt) | 0, i = (i = i + Math.imul(B, mt) | 0) + Math.imul(E, pt) | 0, o = o + Math.imul(E, mt) | 0, n = n + Math.imul(M, bt) | 0, i = (i = i + Math.imul(M, vt) | 0) + Math.imul(A, bt) | 0, o = o + Math.imul(A, vt) | 0, n = n + Math.imul(g, Mt) | 0, i = (i = i + Math.imul(g, _t) | 0) + Math.imul(v, Mt) | 0, o = o + Math.imul(v, _t) | 0;
                    var Ft = (c + (n = n + Math.imul(m, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, Bt) | 0) + Math.imul(y, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, Bt) | 0) + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(z, Q), i = (i = Math.imul(z, tt)) + Math.imul(G, Q) | 0, o = Math.imul(G, tt), n = n + Math.imul(U, rt) | 0, i = (i = i + Math.imul(U, nt) | 0) + Math.imul(H, rt) | 0, o = o + Math.imul(H, nt) | 0, n = n + Math.imul(D, ot) | 0, i = (i = i + Math.imul(D, st) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, st) | 0, n = n + Math.imul(P, ct) | 0, i = (i = i + Math.imul(P, ht) | 0) + Math.imul(I, ct) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, pt) | 0, i = (i = i + Math.imul(N, mt) | 0) + Math.imul(T, pt) | 0, o = o + Math.imul(T, mt) | 0, n = n + Math.imul(B, bt) | 0, i = (i = i + Math.imul(B, vt) | 0) + Math.imul(E, bt) | 0, o = o + Math.imul(E, vt) | 0, n = n + Math.imul(M, Mt) | 0, i = (i = i + Math.imul(M, _t) | 0) + Math.imul(A, Mt) | 0, o = o + Math.imul(A, _t) | 0;
                    var Dt = (c + (n = n + Math.imul(g, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(g, Bt) | 0) + Math.imul(v, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(v, Bt) | 0) + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(z, rt), i = (i = Math.imul(z, nt)) + Math.imul(G, rt) | 0, o = Math.imul(G, nt), n = n + Math.imul(U, ot) | 0, i = (i = i + Math.imul(U, st) | 0) + Math.imul(H, ot) | 0, o = o + Math.imul(H, st) | 0, n = n + Math.imul(D, ct) | 0, i = (i = i + Math.imul(D, ht) | 0) + Math.imul(j, ct) | 0, o = o + Math.imul(j, ht) | 0, n = n + Math.imul(P, pt) | 0, i = (i = i + Math.imul(P, mt) | 0) + Math.imul(I, pt) | 0, o = o + Math.imul(I, mt) | 0, n = n + Math.imul(N, bt) | 0, i = (i = i + Math.imul(N, vt) | 0) + Math.imul(T, bt) | 0, o = o + Math.imul(T, vt) | 0, n = n + Math.imul(B, Mt) | 0, i = (i = i + Math.imul(B, _t) | 0) + Math.imul(E, Mt) | 0, o = o + Math.imul(E, _t) | 0;
                    var jt = (c + (n = n + Math.imul(M, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, Bt) | 0) + Math.imul(A, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, Bt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(z, ot), i = (i = Math.imul(z, st)) + Math.imul(G, ot) | 0, o = Math.imul(G, st), n = n + Math.imul(U, ct) | 0, i = (i = i + Math.imul(U, ht) | 0) + Math.imul(H, ct) | 0, o = o + Math.imul(H, ht) | 0, n = n + Math.imul(D, pt) | 0, i = (i = i + Math.imul(D, mt) | 0) + Math.imul(j, pt) | 0, o = o + Math.imul(j, mt) | 0, n = n + Math.imul(P, bt) | 0, i = (i = i + Math.imul(P, vt) | 0) + Math.imul(I, bt) | 0, o = o + Math.imul(I, vt) | 0, n = n + Math.imul(N, Mt) | 0, i = (i = i + Math.imul(N, _t) | 0) + Math.imul(T, Mt) | 0, o = o + Math.imul(T, _t) | 0;
                    var Lt = (c + (n = n + Math.imul(B, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, Bt) | 0) + Math.imul(E, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, Bt) | 0) + (i >>> 13) | 0) + (Lt >>> 26) | 0, Lt &= 67108863, n = Math.imul(z, ct), i = (i = Math.imul(z, ht)) + Math.imul(G, ct) | 0, o = Math.imul(G, ht), n = n + Math.imul(U, pt) | 0, i = (i = i + Math.imul(U, mt) | 0) + Math.imul(H, pt) | 0, o = o + Math.imul(H, mt) | 0, n = n + Math.imul(D, bt) | 0, i = (i = i + Math.imul(D, vt) | 0) + Math.imul(j, bt) | 0, o = o + Math.imul(j, vt) | 0, n = n + Math.imul(P, Mt) | 0, i = (i = i + Math.imul(P, _t) | 0) + Math.imul(I, Mt) | 0, o = o + Math.imul(I, _t) | 0;
                    var Ut = (c + (n = n + Math.imul(N, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(N, Bt) | 0) + Math.imul(T, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(T, Bt) | 0) + (i >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, n = Math.imul(z, pt), i = (i = Math.imul(z, mt)) + Math.imul(G, pt) | 0, o = Math.imul(G, mt), n = n + Math.imul(U, bt) | 0, i = (i = i + Math.imul(U, vt) | 0) + Math.imul(H, bt) | 0, o = o + Math.imul(H, vt) | 0, n = n + Math.imul(D, Mt) | 0, i = (i = i + Math.imul(D, _t) | 0) + Math.imul(j, Mt) | 0, o = o + Math.imul(j, _t) | 0;
                    var Ht = (c + (n = n + Math.imul(P, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, Bt) | 0) + Math.imul(I, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, Bt) | 0) + (i >>> 13) | 0) + (Ht >>> 26) | 0, Ht &= 67108863, n = Math.imul(z, bt), i = (i = Math.imul(z, vt)) + Math.imul(G, bt) | 0, o = Math.imul(G, vt), n = n + Math.imul(U, Mt) | 0, i = (i = i + Math.imul(U, _t) | 0) + Math.imul(H, Mt) | 0, o = o + Math.imul(H, _t) | 0;
                    var qt = (c + (n = n + Math.imul(D, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(D, Bt) | 0) + Math.imul(j, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, Bt) | 0) + (i >>> 13) | 0) + (qt >>> 26) | 0, qt &= 67108863, n = Math.imul(z, Mt), i = (i = Math.imul(z, _t)) + Math.imul(G, Mt) | 0, o = Math.imul(G, _t);
                    var zt = (c + (n = n + Math.imul(U, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, Bt) | 0) + Math.imul(H, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(H, Bt) | 0) + (i >>> 13) | 0) + (zt >>> 26) | 0, zt &= 67108863;
                    var Gt = (c + (n = Math.imul(z, xt)) | 0) + ((8191 & (i = (i = Math.imul(z, Bt)) + Math.imul(G, xt) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(G, Bt)) + (i >>> 13) | 0) + (Gt >>> 26) | 0, Gt &= 67108863, u[0] = Et, u[1] = kt, u[2] = Nt, u[3] = St, u[4] = Tt, u[5] = Ct, u[6] = Pt, u[7] = It, u[8] = Ot, u[9] = Rt, u[10] = Ft, u[11] = Dt, u[12] = jt, u[13] = Lt, u[14] = Ut, u[15] = Ht, u[16] = qt, u[17] = zt, u[18] = Gt, 0 !== c && (u[19] = c, r.length++), r
                };

                function jumboMulTo(t, e, r) {
                    return (new FFTM).mulp(t, e, r)
                }

                function FFTM(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (s = smallMulTo), BN.prototype.mulTo = function mulTo(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? s(this, t, e) : r < 63 ? smallMulTo(this, t, e) : r < 1024 ? function bigMulTo(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var a = i;
                            i = 0;
                            for (var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                                var l = o - c,
                                    h = (0 | t.words[l]) * (0 | e.words[c]),
                                    d = 67108863 & h;
                                s = 67108863 & (d = d + s | 0), i += (a = (a = a + (h / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863
                            }
                            r.words[o] = s, n = a, a = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }(this, t, e) : jumboMulTo(this, t, e)
                }, FFTM.prototype.makeRBT = function makeRBT(t) {
                    for (var e = new Array(t), r = BN.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, FFTM.prototype.revBin = function revBin(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, FFTM.prototype.permute = function permute(t, e, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = e[t[a]], i[a] = r[t[a]]
                }, FFTM.prototype.transform = function transform(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var h = u, d = c, p = 0; p < a; p++) {
                                var m = r[l + p],
                                    y = n[l + p],
                                    b = r[l + p + a],
                                    g = n[l + p + a],
                                    v = h * b - d * g;
                                g = h * g + d * b, b = v, r[l + p] = m + b, n[l + p] = y + g, r[l + p + a] = m - b, n[l + p + a] = y - g, p !== s && (v = u * h - c * d, d = u * d + c * h, h = v)
                            }
                }, FFTM.prototype.guessLen13b = function guessLen13b(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, FFTM.prototype.conjugate = function conjugate(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, FFTM.prototype.normalize13b = function normalize13b(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, FFTM.prototype.convert13b = function convert13b(t, e, r, n) {
                    for (var i = 0, o = 0; o < e; o++) i += 0 | t[o], r[2 * o] = 8191 & i, i >>>= 13, r[2 * o + 1] = 8191 & i, i >>>= 13;
                    for (o = 2 * e; o < n; ++o) r[o] = 0;
                    assert(0 === i), assert(0 == (-8192 & i))
                }, FFTM.prototype.stub = function stub(t) {
                    for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, FFTM.prototype.mulp = function mulp(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = new Array(n),
                        s = new Array(n),
                        u = new Array(n),
                        c = new Array(n),
                        l = new Array(n),
                        h = new Array(n),
                        d = r.words;
                    d.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var p = 0; p < n; p++) {
                        var m = s[p] * l[p] - u[p] * h[p];
                        u[p] = s[p] * h[p] + u[p] * l[p], s[p] = m
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, d, o, n, i), this.conjugate(d, o, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                }, BN.prototype.mul = function mul(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                }, BN.prototype.mulf = function mulf(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), jumboMulTo(this, t, e)
                }, BN.prototype.imul = function imul(t) {
                    return this.clone().mulTo(t, this)
                }, BN.prototype.imuln = function imuln(t) {
                    assert("number" == typeof t), assert(t < 67108864);
                    for (var e = 0, r = 0; r < this.length; r++) {
                        var n = (0 | this.words[r]) * t,
                            i = (67108863 & n) + (67108863 & e);
                        e >>= 26, e += n / 67108864 | 0, e += i >>> 26, this.words[r] = 67108863 & i
                    }
                    return 0 !== e && (this.words[r] = e, this.length++), this
                }, BN.prototype.muln = function muln(t) {
                    return this.clone().imuln(t)
                }, BN.prototype.sqr = function sqr() {
                    return this.mul(this)
                }, BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone())
                }, BN.prototype.pow = function pow(t) {
                    var e = function toBitArray(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }(t);
                    if (0 === e.length) return new BN(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, BN.prototype.iushln = function iushln(t) {
                    assert("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        n = (t - r) / 26,
                        i = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & i,
                                s = (0 | this.words[e]) - a << r;
                            this.words[e] = s | o, o = a >>> 26 - r
                        }
                        o && (this.words[e] = o, this.length++)
                    }
                    if (0 !== n) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                        for (e = 0; e < n; e++) this.words[e] = 0;
                        this.length += n
                    }
                    return this.strip()
                }, BN.prototype.ishln = function ishln(t) {
                    return assert(0 === this.negative), this.iushln(t)
                }, BN.prototype.iushrn = function iushrn(t, e, r) {
                    var n;
                    assert("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                    var i = t % 26,
                        o = Math.min((t - i) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> i << i,
                        s = r;
                    if (n -= o, n = Math.max(0, n), s) {
                        for (var u = 0; u < o; u++) s.words[u] = this.words[u];
                        s.length = o
                    }
                    if (0 === o);
                    else if (this.length > o)
                        for (this.length -= o, u = 0; u < this.length; u++) this.words[u] = this.words[u + o];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= n); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - i | l >>> i, c = l & a
                    }
                    return s && 0 !== c && (s.words[s.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                }, BN.prototype.ishrn = function ishrn(t, e, r) {
                    return assert(0 === this.negative), this.iushrn(t, e, r)
                }, BN.prototype.shln = function shln(t) {
                    return this.clone().ishln(t)
                }, BN.prototype.ushln = function ushln(t) {
                    return this.clone().iushln(t)
                }, BN.prototype.shrn = function shrn(t) {
                    return this.clone().ishrn(t)
                }, BN.prototype.ushrn = function ushrn(t) {
                    return this.clone().iushrn(t)
                }, BN.prototype.testn = function testn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }, BN.prototype.imaskn = function imaskn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var n = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= n
                    }
                    return this.strip()
                }, BN.prototype.maskn = function maskn(t) {
                    return this.clone().imaskn(t)
                }, BN.prototype.iaddn = function iaddn(t) {
                    return assert("number" == typeof t), assert(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                }, BN.prototype._iaddn = function _iaddn(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, BN.prototype.isubn = function isubn(t) {
                    if (assert("number" == typeof t), assert(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this.strip()
                }, BN.prototype.addn = function addn(t) {
                    return this.clone().iaddn(t)
                }, BN.prototype.subn = function subn(t) {
                    return this.clone().isubn(t)
                }, BN.prototype.iabs = function iabs() {
                    return this.negative = 0, this
                }, BN.prototype.abs = function abs() {
                    return this.clone().iabs()
                }, BN.prototype._ishlnsubmul = function _ishlnsubmul(t, e, r) {
                    var n, i, o = t.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < t.length; n++) {
                        i = (0 | this.words[n + r]) + a;
                        var s = (0 | t.words[n]) * e;
                        a = ((i -= 67108863 & s) >> 26) - (s / 67108864 | 0), this.words[n + r] = 67108863 & i
                    }
                    for (; n < this.length - r; n++) a = (i = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & i;
                    if (0 === a) return this.strip();
                    for (assert(-1 === a), a = 0, n = 0; n < this.length; n++) a = (i = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & i;
                    return this.negative = 1, this.strip()
                }, BN.prototype._wordDiv = function _wordDiv(t, e) {
                    var r = (this.length, t.length),
                        n = this.clone(),
                        i = t,
                        o = 0 | i.words[i.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                    var a, s = n.length - i.length;
                    if ("mod" !== e) {
                        (a = new BN(null)).length = s + 1, a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++) a.words[u] = 0
                    }
                    var c = n.clone()._ishlnsubmul(i, 1, s);
                    0 === c.negative && (n = c, a && (a.words[s] = 1));
                    for (var l = s - 1; l >= 0; l--) {
                        var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                        for (h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;) h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                        a && (a.words[l] = h)
                    }
                    return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                        div: a || null,
                        mod: n
                    }
                }, BN.prototype.divmod = function divmod(t, e, r) {
                    return assert(!t.isZero()), this.isZero() ? {
                        div: new BN(0),
                        mod: new BN(0)
                    } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), "mod" !== e && (n = o.div.neg()), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(t)), {
                        div: n,
                        mod: i
                    }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), "mod" !== e && (n = o.div.neg()), {
                        div: n,
                        mod: o.mod
                    }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(t)), {
                        div: o.div,
                        mod: i
                    }) : t.length > this.length || this.cmp(t) < 0 ? {
                        div: new BN(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new BN(this.modn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new BN(this.modn(t.words[0]))
                    } : this._wordDiv(t, e);
                    var n, i, o
                }, BN.prototype.div = function div(t) {
                    return this.divmod(t, "div", !1).div
                }, BN.prototype.mod = function mod(t) {
                    return this.divmod(t, "mod", !1).mod
                }, BN.prototype.umod = function umod(t) {
                    return this.divmod(t, "mod", !0).mod
                }, BN.prototype.divRound = function divRound(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, BN.prototype.modn = function modn(t) {
                    assert(t <= 67108863);
                    for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) r = (e * r + (0 | this.words[n])) % t;
                    return r
                }, BN.prototype.idivn = function idivn(t) {
                    assert(t <= 67108863);
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = (0 | this.words[r]) + 67108864 * e;
                        this.words[r] = n / t | 0, e = n % t
                    }
                    return this.strip()
                }, BN.prototype.divn = function divn(t) {
                    return this.clone().idivn(t)
                }, BN.prototype.egcd = function egcd(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n = new BN(1), i = new BN(0), o = new BN(0), a = new BN(1), s = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++s;
                    for (var u = r.clone(), c = e.clone(); !e.isZero();) {
                        for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                        if (l > 0)
                            for (e.iushrn(l); l-- > 0;)(n.isOdd() || i.isOdd()) && (n.iadd(u), i.isub(c)), n.iushrn(1), i.iushrn(1);
                        for (var d = 0, p = 1; 0 == (r.words[0] & p) && d < 26; ++d, p <<= 1);
                        if (d > 0)
                            for (r.iushrn(d); d-- > 0;)(o.isOdd() || a.isOdd()) && (o.iadd(u), a.isub(c)), o.iushrn(1), a.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), n.isub(o), i.isub(a)) : (r.isub(e), o.isub(n), a.isub(i))
                    }
                    return {
                        a: o,
                        b: a,
                        gcd: r.iushln(s)
                    }
                }, BN.prototype._invmp = function _invmp(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n, i = new BN(1), o = new BN(0), a = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var s = 0, u = 1; 0 == (e.words[0] & u) && s < 26; ++s, u <<= 1);
                        if (s > 0)
                            for (e.iushrn(s); s-- > 0;) i.isOdd() && i.iadd(a), i.iushrn(1);
                        for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(a), o.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(o)) : (r.isub(e), o.isub(i))
                    }
                    return (n = 0 === e.cmpn(1) ? i : o).cmpn(0) < 0 && n.iadd(t), n
                }, BN.prototype.gcd = function gcd(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, BN.prototype.invm = function invm(t) {
                    return this.egcd(t).a.umod(t)
                }, BN.prototype.isEven = function isEven() {
                    return 0 == (1 & this.words[0])
                }, BN.prototype.isOdd = function isOdd() {
                    return 1 == (1 & this.words[0])
                }, BN.prototype.andln = function andln(t) {
                    return this.words[0] & t
                }, BN.prototype.bincn = function bincn(t) {
                    assert("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                    for (var i = n, o = r; 0 !== i && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        i = (a += i) >>> 26, a &= 67108863, this.words[o] = a
                    }
                    return 0 !== i && (this.words[o] = i, this.length++), this
                }, BN.prototype.isZero = function isZero() {
                    return 1 === this.length && 0 === this.words[0]
                }, BN.prototype.cmpn = function cmpn(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this.strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), assert(t <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        e = n === t ? 0 : n < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.cmp = function cmp(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.ucmp = function ucmp(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, BN.prototype.gtn = function gtn(t) {
                    return 1 === this.cmpn(t)
                }, BN.prototype.gt = function gt(t) {
                    return 1 === this.cmp(t)
                }, BN.prototype.gten = function gten(t) {
                    return this.cmpn(t) >= 0
                }, BN.prototype.gte = function gte(t) {
                    return this.cmp(t) >= 0
                }, BN.prototype.ltn = function ltn(t) {
                    return -1 === this.cmpn(t)
                }, BN.prototype.lt = function lt(t) {
                    return -1 === this.cmp(t)
                }, BN.prototype.lten = function lten(t) {
                    return this.cmpn(t) <= 0
                }, BN.prototype.lte = function lte(t) {
                    return this.cmp(t) <= 0
                }, BN.prototype.eqn = function eqn(t) {
                    return 0 === this.cmpn(t)
                }, BN.prototype.eq = function eq(t) {
                    return 0 === this.cmp(t)
                }, BN.red = function red(t) {
                    return new Red(t)
                }, BN.prototype.toRed = function toRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, BN.prototype.fromRed = function fromRed() {
                    return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, BN.prototype._forceRed = function _forceRed(t) {
                    return this.red = t, this
                }, BN.prototype.forceRed = function forceRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, BN.prototype.redAdd = function redAdd(t) {
                    return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, BN.prototype.redIAdd = function redIAdd(t) {
                    return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, BN.prototype.redSub = function redSub(t) {
                    return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, BN.prototype.redISub = function redISub(t) {
                    return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, BN.prototype.redShl = function redShl(t) {
                    return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, BN.prototype.redMul = function redMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, BN.prototype.redIMul = function redIMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, BN.prototype.redSqr = function redSqr() {
                    return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, BN.prototype.redISqr = function redISqr() {
                    return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, BN.prototype.redSqrt = function redSqrt() {
                    return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, BN.prototype.redInvm = function redInvm() {
                    return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, BN.prototype.redNeg = function redNeg() {
                    return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, BN.prototype.redPow = function redPow(t) {
                    return assert(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var u = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function MPrime(t, e) {
                    this.name = t, this.p = new BN(e, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function Red(t) {
                    if ("string" == typeof t) {
                        var e = BN._prime(t);
                        this.m = e.p, this.prime = e
                    } else assert(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function Mont(t) {
                    Red.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                MPrime.prototype._tmp = function _tmp() {
                    var t = new BN(null);
                    return t.words = new Array(Math.ceil(this.n / 13)), t
                }, MPrime.prototype.ireduce = function ireduce(t) {
                    var e, r = t;
                    do {
                        this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : r.strip(), r
                }, MPrime.prototype.split = function split(t, e) {
                    t.iushrn(this.n, 0, e)
                }, MPrime.prototype.imulK = function imulK(t) {
                    return t.imul(this.k)
                }, inherits(K256, MPrime), K256.prototype.split = function split(t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++) e.words[n] = t.words[n];
                    if (e.length = r, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                    var i = t.words[9];
                    for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, K256.prototype.imulK = function imulK(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function imulK(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 19 * (0 | t.words[r]) + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, BN._prime = function prime(t) {
                    if (u[t]) return u[t];
                    var prime;
                    if ("k256" === t) prime = new K256;
                    else if ("p224" === t) prime = new P224;
                    else if ("p192" === t) prime = new P192;
                    else {
                        if ("p25519" !== t) throw new Error("Unknown prime " + t);
                        prime = new P25519
                    }
                    return u[t] = prime, prime
                }, Red.prototype._verify1 = function _verify1(t) {
                    assert(0 === t.negative, "red works only with positives"), assert(t.red, "red works only with red numbers")
                }, Red.prototype._verify2 = function _verify2(t, e) {
                    assert(0 == (t.negative | e.negative), "red works only with positives"), assert(t.red && t.red === e.red, "red works only with red numbers")
                }, Red.prototype.imod = function imod(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                }, Red.prototype.neg = function neg(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, Red.prototype.add = function add(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, Red.prototype.iadd = function iadd(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, Red.prototype.sub = function sub(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                }, Red.prototype.isub = function isub(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r
                }, Red.prototype.shl = function shl(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, Red.prototype.imul = function imul(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, Red.prototype.mul = function mul(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, Red.prototype.isqr = function isqr(t) {
                    return this.imul(t, t.clone())
                }, Red.prototype.sqr = function sqr(t) {
                    return this.mul(t, t)
                }, Red.prototype.sqrt = function sqrt(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (assert(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var n = this.m.subn(1), i = 0; !n.isZero() && 0 === n.andln(1);) i++, n.iushrn(1);
                    assert(!n.isZero());
                    var o = new BN(1).toRed(this),
                        a = o.redNeg(),
                        s = this.m.subn(1).iushrn(1),
                        u = this.m.bitLength();
                    for (u = new BN(2 * u * u).toRed(this); 0 !== this.pow(u, s).cmp(a);) u.redIAdd(a);
                    for (var c = this.pow(u, n), l = this.pow(t, n.addn(1).iushrn(1)), h = this.pow(t, n), d = i; 0 !== h.cmp(o);) {
                        for (var p = h, m = 0; 0 !== p.cmp(o); m++) p = p.redSqr();
                        assert(m < d);
                        var y = this.pow(c, new BN(1).iushln(d - m - 1));
                        l = l.redMul(y), c = y.redSqr(), h = h.redMul(c), d = m
                    }
                    return l
                }, Red.prototype.invm = function invm(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, Red.prototype.pow = function pow(t, e) {
                    if (e.isZero()) return new BN(1).toRed(this);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = new Array(16);
                    r[0] = new BN(1).toRed(this), r[1] = t;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], t);
                    var i = r[0],
                        o = 0,
                        a = 0,
                        s = e.bitLength() % 26;
                    for (0 === s && (s = 26), n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = s - 1; c >= 0; c--) {
                            var l = u >> c & 1;
                            i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 === ++a || 0 === n && 0 === c) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0
                        }
                        s = 26
                    }
                    return i
                }, Red.prototype.convertTo = function convertTo(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, Red.prototype.convertFrom = function convertFrom(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, BN.mont = function mont(t) {
                    return new Mont(t)
                }, inherits(Mont, Red), Mont.prototype.convertTo = function convertTo(t) {
                    return this.imod(t.ushln(this.shift))
                }, Mont.prototype.convertFrom = function convertFrom(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, Mont.prototype.imul = function imul(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.mul = function mul(t, e) {
                    if (t.isZero() || e.isZero()) return new BN(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.invm = function invm(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t, this)
        }).call(this, r(8)(t))
    }, function (t, e) {}, function (t, e) {
        const r = "Impossible case. Please create issue.",
            n = "The tweak was out of range or the resulted private key is invalid",
            i = "The tweak was out of range or equal to zero",
            o = "Unknow error on context randomization",
            a = "Private Key is invalid",
            s = "Public Key could not be parsed",
            u = "Public Key serialization error",
            c = "The sum of the public keys is not valid",
            l = "Signature could not be parsed",
            h = "The nonce generation function failed, or the private key was invalid",
            d = "Public key could not be recover",
            p = "Scalar was invalid (zero or overflow)";

        function assert(t, e) {
            if (!t) throw new Error(e)
        }

        function isUint8Array(t, e, r) {
            if (assert(e instanceof Uint8Array, `Expected ${t} to be an Uint8Array`), void 0 !== r)
                if (Array.isArray(r)) {
                    const n = `Expected ${t} to be an Uint8Array with length [${r.join(", ")}]`;
                    assert(r.includes(e.length), n)
                } else {
                    const n = `Expected ${t} to be an Uint8Array with length ${r}`;
                    assert(e.length === r, n)
                }
        }

        function isCompressed(t) {
            assert("Boolean" === toTypeString(t), "Expected compressed to be a Boolean")
        }

        function getAssertedOutput(t = (t => new Uint8Array(t)), e) {
            return "function" == typeof t && (t = t(e)), isUint8Array("output", t, e), t
        }

        function toTypeString(t) {
            return Object.prototype.toString.call(t).slice(8, -1)
        }
        t.exports = t => ({
            contextRandomize(e) {
                switch (assert(null === e || e instanceof Uint8Array, "Expected seed to be an Uint8Array or null"), null !== e && isUint8Array("seed", e, 32), t.contextRandomize(e)) {
                    case 1:
                        throw new Error(o)
                }
            },
            privateKeyVerify: e => (isUint8Array("private key", e, 32), 0 === t.privateKeyVerify(e)),
            privateKeyNegate(e) {
                switch (isUint8Array("private key", e, 32), t.privateKeyNegate(e)) {
                    case 0:
                        return e;
                    case 1:
                        throw new Error(r)
                }
            },
            privateKeyTweakAdd(e, r) {
                switch (isUint8Array("private key", e, 32), isUint8Array("tweak", r, 32), t.privateKeyTweakAdd(e, r)) {
                    case 0:
                        return e;
                    case 1:
                        throw new Error(n)
                }
            },
            privateKeyTweakMul(e, r) {
                switch (isUint8Array("private key", e, 32), isUint8Array("tweak", r, 32), t.privateKeyTweakMul(e, r)) {
                    case 0:
                        return e;
                    case 1:
                        throw new Error(i)
                }
            },
            publicKeyVerify: e => (isUint8Array("public key", e, [33, 65]), 0 === t.publicKeyVerify(e)),
            publicKeyCreate(e, r = !0, n) {
                switch (isUint8Array("private key", e, 32), isCompressed(r), n = getAssertedOutput(n, r ? 33 : 65), t.publicKeyCreate(n, e)) {
                    case 0:
                        return n;
                    case 1:
                        throw new Error(a);
                    case 2:
                        throw new Error(u)
                }
            },
            publicKeyConvert(e, r = !0, n) {
                switch (isUint8Array("public key", e, [33, 65]), isCompressed(r), n = getAssertedOutput(n, r ? 33 : 65), t.publicKeyConvert(n, e)) {
                    case 0:
                        return n;
                    case 1:
                        throw new Error(s);
                    case 2:
                        throw new Error(u)
                }
            },
            publicKeyNegate(e, n = !0, i) {
                switch (isUint8Array("public key", e, [33, 65]), isCompressed(n), i = getAssertedOutput(i, n ? 33 : 65), t.publicKeyNegate(i, e)) {
                    case 0:
                        return i;
                    case 1:
                        throw new Error(s);
                    case 2:
                        throw new Error(r);
                    case 3:
                        throw new Error(u)
                }
            },
            publicKeyCombine(e, r = !0, n) {
                assert(Array.isArray(e), "Expected public keys to be an Array"), assert(e.length > 0, "Expected public keys array will have more than zero items");
                for (const t of e) isUint8Array("public key", t, [33, 65]);
                switch (isCompressed(r), n = getAssertedOutput(n, r ? 33 : 65), t.publicKeyCombine(n, e)) {
                    case 0:
                        return n;
                    case 1:
                        throw new Error(s);
                    case 2:
                        throw new Error(c);
                    case 3:
                        throw new Error(u)
                }
            },
            publicKeyTweakAdd(e, r, i = !0, o) {
                switch (isUint8Array("public key", e, [33, 65]), isUint8Array("tweak", r, 32), isCompressed(i), o = getAssertedOutput(o, i ? 33 : 65), t.publicKeyTweakAdd(o, e, r)) {
                    case 0:
                        return o;
                    case 1:
                        throw new Error(s);
                    case 2:
                        throw new Error(n)
                }
            },
            publicKeyTweakMul(e, r, n = !0, o) {
                switch (isUint8Array("public key", e, [33, 65]), isUint8Array("tweak", r, 32), isCompressed(n), o = getAssertedOutput(o, n ? 33 : 65), t.publicKeyTweakMul(o, e, r)) {
                    case 0:
                        return o;
                    case 1:
                        throw new Error(s);
                    case 2:
                        throw new Error(i)
                }
            },
            signatureNormalize(e) {
                switch (isUint8Array("signature", e, 64), t.signatureNormalize(e)) {
                    case 0:
                        return e;
                    case 1:
                        throw new Error(l)
                }
            },
            signatureExport(e, n) {
                isUint8Array("signature", e, 64);
                const i = {
                    output: n = getAssertedOutput(n, 72),
                    outputlen: 72
                };
                switch (t.signatureExport(i, e)) {
                    case 0:
                        return n.slice(0, i.outputlen);
                    case 1:
                        throw new Error(l);
                    case 2:
                        throw new Error(r)
                }
            },
            signatureImport(e, n) {
                switch (isUint8Array("signature", e), n = getAssertedOutput(n, 64), t.signatureImport(n, e)) {
                    case 0:
                        return n;
                    case 1:
                        throw new Error(l);
                    case 2:
                        throw new Error(r)
                }
            },
            ecdsaSign(e, n, i = {}, o) {
                isUint8Array("message", e, 32), isUint8Array("private key", n, 32), assert("Object" === toTypeString(i), "Expected options to be an Object"), void 0 !== i.data && isUint8Array("options.data", i.data), void 0 !== i.noncefn && assert("Function" === toTypeString(i.noncefn), "Expected options.noncefn to be a Function");
                const a = {
                    signature: o = getAssertedOutput(o, 64),
                    recid: null
                };
                switch (t.ecdsaSign(a, e, n, i.data, i.noncefn)) {
                    case 0:
                        return a;
                    case 1:
                        throw new Error(h);
                    case 2:
                        throw new Error(r)
                }
            },
            ecdsaVerify(e, r, n) {
                switch (isUint8Array("signature", e, 64), isUint8Array("message", r, 32), isUint8Array("public key", n, [33, 65]), t.ecdsaVerify(e, r, n)) {
                    case 0:
                        return !0;
                    case 3:
                        return !1;
                    case 1:
                        throw new Error(l);
                    case 2:
                        throw new Error(s)
                }
            },
            ecdsaRecover(e, n, i, o = !0, a) {
                switch (isUint8Array("signature", e, 64), assert("Number" === toTypeString(n) && n >= 0 && n <= 3, "Expected recovery id to be a Number within interval [0, 3]"), isUint8Array("message", i, 32), isCompressed(o), a = getAssertedOutput(a, o ? 33 : 65), t.ecdsaRecover(a, e, n, i)) {
                    case 0:
                        return a;
                    case 1:
                        throw new Error(l);
                    case 2:
                        throw new Error(d);
                    case 3:
                        throw new Error(r)
                }
            },
            ecdh(e, r, n = {}, i) {
                switch (isUint8Array("public key", e, [33, 65]), isUint8Array("private key", r, 32), assert("Object" === toTypeString(n), "Expected options to be an Object"), void 0 !== n.data && isUint8Array("options.data", n.data), void 0 !== n.hashfn ? (assert("Function" === toTypeString(n.hashfn), "Expected options.hashfn to be a Function"), void 0 !== n.xbuf && isUint8Array("options.xbuf", n.xbuf, 32), void 0 !== n.ybuf && isUint8Array("options.ybuf", n.ybuf, 32), isUint8Array("output", i)) : i = getAssertedOutput(i, 32), t.ecdh(i, e, r, n.data, n.hashfn, n.xbuf, n.ybuf)) {
                    case 0:
                        return i;
                    case 1:
                        throw new Error(s);
                    case 2:
                        throw new Error(p)
                }
            }
        })
    }, function (t, e, r) {
        const n = new(0, r(87).ec)("secp256k1"),
            i = n.curve,
            o = i.n.constructor;

        function loadPublicKey(t) {
            const e = t[0];
            switch (e) {
                case 2:
                case 3:
                    return 33 !== t.length ? null : function loadCompressedPublicKey(t, e) {
                        let r = new o(e);
                        if (r.cmp(i.p) >= 0) return null;
                        r = r.toRed(i.red);
                        let a = r.redSqr().redIMul(r).redIAdd(i.b).redSqrt();
                        return 3 === t !== a.isOdd() && (a = a.redNeg()), n.keyPair({
                            pub: {
                                x: r,
                                y: a
                            }
                        })
                    }(e, t.subarray(1, 33));
                case 4:
                case 6:
                case 7:
                    return 65 !== t.length ? null : function loadUncompressedPublicKey(t, e, r) {
                        let a = new o(e),
                            s = new o(r);
                        if (a.cmp(i.p) >= 0 || s.cmp(i.p) >= 0) return null;
                        if (a = a.toRed(i.red), s = s.toRed(i.red), (6 === t || 7 === t) && s.isOdd() !== (7 === t)) return null;
                        const u = a.redSqr().redIMul(a);
                        return s.redSqr().redISub(u.redIAdd(i.b)).isZero() ? n.keyPair({
                            pub: {
                                x: a,
                                y: s
                            }
                        }) : null
                    }(e, t.subarray(1, 33), t.subarray(33, 65));
                default:
                    return null
            }
        }

        function savePublicKey(t, e) {
            const r = e.encode(null, 33 === t.length);
            for (let e = 0; e < t.length; ++e) t[e] = r[e]
        }
        t.exports = {
            contextRandomize: () => 0,
            privateKeyVerify(t) {
                const e = new o(t);
                return e.cmp(i.n) < 0 && !e.isZero() ? 0 : 1
            },
            privateKeyNegate(t) {
                const e = new o(t),
                    r = i.n.sub(e).umod(i.n).toArrayLike(Uint8Array, "be", 32);
                return t.set(r), 0
            },
            privateKeyTweakAdd(t, e) {
                const r = new o(e);
                if (r.cmp(i.n) >= 0) return 1;
                if (r.iadd(new o(t)), r.cmp(i.n) >= 0 && r.isub(i.n), r.isZero()) return 1;
                const n = r.toArrayLike(Uint8Array, "be", 32);
                return t.set(n), 0
            },
            privateKeyTweakMul(t, e) {
                let r = new o(e);
                if (r.cmp(i.n) >= 0 || r.isZero()) return 1;
                r.imul(new o(t)), r.cmp(i.n) >= 0 && (r = r.umod(i.n));
                const n = r.toArrayLike(Uint8Array, "be", 32);
                return t.set(n), 0
            },
            publicKeyVerify: t => null === loadPublicKey(t) ? 1 : 0,
            publicKeyCreate(t, e) {
                const r = new o(e);
                return r.cmp(i.n) >= 0 || r.isZero() ? 1 : (savePublicKey(t, n.keyFromPrivate(e).getPublic()), 0)
            },
            publicKeyConvert(t, e) {
                const r = loadPublicKey(e);
                return null === r ? 1 : (savePublicKey(t, r.getPublic()), 0)
            },
            publicKeyNegate(t, e) {
                const r = loadPublicKey(e);
                if (null === r) return 1;
                const n = r.getPublic();
                return n.y = n.y.redNeg(), savePublicKey(t, n), 0
            },
            publicKeyCombine(t, e) {
                const r = new Array(e.length);
                for (let t = 0; t < e.length; ++t)
                    if (r[t] = loadPublicKey(e[t]), null === r[t]) return 1;
                let n = r[0].getPublic();
                for (let t = 1; t < r.length; ++t) n = n.add(r[t].pub);
                return n.isInfinity() ? 2 : (savePublicKey(t, n), 0)
            },
            publicKeyTweakAdd(t, e, r) {
                const n = loadPublicKey(e);
                if (null === n) return 1;
                if ((r = new o(r)).cmp(i.n) >= 0) return 2;
                const a = n.getPublic().add(i.g.mul(r));
                return a.isInfinity() ? 2 : (savePublicKey(t, a), 0)
            },
            publicKeyTweakMul(t, e, r) {
                const n = loadPublicKey(e);
                return null === n ? 1 : (r = new o(r)).cmp(i.n) >= 0 || r.isZero() ? 2 : (savePublicKey(t, n.getPublic().mul(r)), 0)
            },
            signatureNormalize(t) {
                const e = new o(t.subarray(0, 32)),
                    r = new o(t.subarray(32, 64));
                return e.cmp(i.n) >= 0 || r.cmp(i.n) >= 0 ? 1 : (1 === r.cmp(n.nh) && t.set(i.n.sub(r).toArrayLike(Uint8Array, "be", 32), 32), 0)
            },
            signatureExport(t, e) {
                const r = e.subarray(0, 32),
                    n = e.subarray(32, 64);
                if (new o(r).cmp(i.n) >= 0) return 1;
                if (new o(n).cmp(i.n) >= 0) return 1;
                const {
                    output: a
                } = t;
                let s = a.subarray(4, 37);
                s[0] = 0, s.set(r, 1);
                let u = 33,
                    c = 0;
                for (; u > 1 && 0 === s[c] && !(128 & s[c + 1]); --u, ++c);
                if (s = s.subarray(c), 128 & s[0]) return 1;
                if (u > 1 && 0 === s[0] && !(128 & s[1])) return 1;
                let l = a.subarray(39, 72);
                l[0] = 0, l.set(n, 1);
                let h = 33,
                    d = 0;
                for (; h > 1 && 0 === l[d] && !(128 & l[d + 1]); --h, ++d);
                return l = l.subarray(d), 128 & l[0] || h > 1 && 0 === l[0] && !(128 & l[1]) ? 1 : (t.outputlen = 6 + u + h, a[0] = 48, a[1] = t.outputlen - 2, a[2] = 2, a[3] = s.length, a.set(s, 4), a[4 + u] = 2, a[5 + u] = l.length, a.set(l, 6 + u), 0)
            },
            signatureImport(t, e) {
                if (e.length < 8) return 1;
                if (e.length > 72) return 1;
                if (48 !== e[0]) return 1;
                if (e[1] !== e.length - 2) return 1;
                if (2 !== e[2]) return 1;
                const r = e[3];
                if (0 === r) return 1;
                if (5 + r >= e.length) return 1;
                if (2 !== e[4 + r]) return 1;
                const n = e[5 + r];
                if (0 === n) return 1;
                if (6 + r + n !== e.length) return 1;
                if (128 & e[4]) return 1;
                if (r > 1 && 0 === e[4] && !(128 & e[5])) return 1;
                if (128 & e[r + 6]) return 1;
                if (n > 1 && 0 === e[r + 6] && !(128 & e[r + 7])) return 1;
                let a = e.subarray(4, 4 + r);
                if (33 === a.length && 0 === a[0] && (a = a.subarray(1)), a.length > 32) return 1;
                let s = e.subarray(6 + r);
                if (33 === s.length && 0 === s[0] && (s = s.slice(1)), s.length > 32) throw new Error("S length is too long");
                let u = new o(a);
                u.cmp(i.n) >= 0 && (u = new o(0));
                let c = new o(e.subarray(6 + r));
                return c.cmp(i.n) >= 0 && (c = new o(0)), t.set(u.toArrayLike(Uint8Array, "be", 32), 0), t.set(c.toArrayLike(Uint8Array, "be", 32), 32), 0
            },
            ecdsaSign(t, e, r, a, s) {
                if (s) {
                    const t = s;
                    s = n => {
                        const i = t(e, r, null, a, n);
                        if (!(i instanceof Uint8Array && 32 === i.length)) throw new Error("This is the way");
                        return new o(i)
                    }
                }
                const u = new o(r);
                if (u.cmp(i.n) >= 0 || u.isZero()) return 1;
                let c;
                try {
                    c = n.sign(e, r, {
                        canonical: !0,
                        k: s,
                        pers: a
                    })
                } catch (t) {
                    return 1
                }
                return t.signature.set(c.r.toArrayLike(Uint8Array, "be", 32), 0), t.signature.set(c.s.toArrayLike(Uint8Array, "be", 32), 32), t.recid = c.recoveryParam, 0
            },
            ecdsaVerify(t, e, r) {
                const a = {
                        r: t.subarray(0, 32),
                        s: t.subarray(32, 64)
                    },
                    s = new o(a.r),
                    u = new o(a.s);
                if (s.cmp(i.n) >= 0 || u.cmp(i.n) >= 0) return 1;
                if (1 === u.cmp(n.nh) || s.isZero() || u.isZero()) return 3;
                const c = loadPublicKey(r);
                if (null === c) return 2;
                const l = c.getPublic();
                return n.verify(e, a, l) ? 0 : 3
            },
            ecdsaRecover(t, e, r, a) {
                const s = {
                        r: e.slice(0, 32),
                        s: e.slice(32, 64)
                    },
                    u = new o(s.r),
                    c = new o(s.s);
                if (u.cmp(i.n) >= 0 || c.cmp(i.n) >= 0) return 1;
                if (u.isZero() || c.isZero()) return 2;
                let l;
                try {
                    l = n.recoverPubKey(a, s, r)
                } catch (t) {
                    return 2
                }
                return savePublicKey(t, l), 0
            },
            ecdh(t, e, r, a, s, u, c) {
                const l = loadPublicKey(e);
                if (null === l) return 1;
                const h = new o(r);
                if (h.cmp(i.n) >= 0 || h.isZero()) return 2;
                const d = l.getPublic().mul(h);
                if (void 0 === s) {
                    const e = d.encode(null, !0),
                        r = n.hash().update(e).digest();
                    for (let e = 0; e < 32; ++e) t[e] = r[e]
                } else {
                    u || (u = new Uint8Array(32));
                    const e = d.getX().toArray("be", 32);
                    for (let t = 0; t < 32; ++t) u[t] = e[t];
                    c || (c = new Uint8Array(32));
                    const r = d.getY().toArray("be", 32);
                    for (let t = 0; t < 32; ++t) c[t] = r[t];
                    const n = s(u, c, a);
                    if (!(n instanceof Uint8Array && n.length === t.length)) return 2;
                    t.set(n)
                }
                return 0
            }
        }
    }, function (t) {
        t.exports = JSON.parse('{"name":"elliptic","version":"6.5.2","description":"EC cryptography","main":"lib/elliptic.js","files":["lib"],"scripts":{"jscs":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","jshint":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","lint":"npm run jscs && npm run jshint","unit":"istanbul test _mocha --reporter=spec test/index.js","test":"npm run lint && npm run unit","version":"grunt dist && git add dist/"},"repository":{"type":"git","url":"git@github.com:indutny/elliptic"},"keywords":["EC","Elliptic","curve","Cryptography"],"author":"Fedor Indutny <fedor@indutny.com>","license":"MIT","bugs":{"url":"https://github.com/indutny/elliptic/issues"},"homepage":"https://github.com/indutny/elliptic","devDependencies":{"brfs":"^1.4.3","coveralls":"^3.0.8","grunt":"^1.0.4","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.2","jscs":"^3.0.7","jshint":"^2.10.3","mocha":"^6.2.2"},"dependencies":{"bn.js":"^4.4.0","brorand":"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0","inherits":"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"}}')
    }, function (t, e) {}, function (t, e) {}, function (t, e, r) {
        var n = r(19),
            i = r(2),
            o = r(1),
            a = r(122),
            s = n.assert;

        function ShortCurve(t) {
            a.call(this, "short", t), this.a = new i(t.a, 16).toRed(this.red), this.b = new i(t.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(t), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4)
        }

        function Point(t, e, r, n) {
            a.BasePoint.call(this, t, "affine"), null === e && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new i(e, 16), this.y = new i(r, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1)
        }

        function JPoint(t, e, r, n) {
            a.BasePoint.call(this, t, "jacobian"), null === e && null === r && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i(0)) : (this.x = new i(e, 16), this.y = new i(r, 16), this.z = new i(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one
        }
        o(ShortCurve, a), t.exports = ShortCurve, ShortCurve.prototype._getEndomorphism = function _getEndomorphism(t) {
            if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                var e, r;
                if (t.beta) e = new i(t.beta, 16).toRed(this.red);
                else {
                    var n = this._getEndoRoots(this.p);
                    e = (e = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red)
                }
                if (t.lambda) r = new i(t.lambda, 16);
                else {
                    var o = this._getEndoRoots(this.n);
                    0 === this.g.mul(o[0]).x.cmp(this.g.x.redMul(e)) ? r = o[0] : (r = o[1], s(0 === this.g.mul(r).x.cmp(this.g.x.redMul(e))))
                }
                return {
                    beta: e,
                    lambda: r,
                    basis: t.basis ? t.basis.map((function (t) {
                        return {
                            a: new i(t.a, 16),
                            b: new i(t.b, 16)
                        }
                    })) : this._getEndoBasis(r)
                }
            }
        }, ShortCurve.prototype._getEndoRoots = function _getEndoRoots(t) {
            var e = t === this.p ? this.red : i.mont(t),
                r = new i(2).toRed(e).redInvm(),
                n = r.redNeg(),
                o = new i(3).toRed(e).redNeg().redSqrt().redMul(r);
            return [n.redAdd(o).fromRed(), n.redSub(o).fromRed()]
        }, ShortCurve.prototype._getEndoBasis = function _getEndoBasis(t) {
            for (var e, r, n, o, a, s, u, c, l, h = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), d = t, p = this.n.clone(), m = new i(1), y = new i(0), b = new i(0), g = new i(1), v = 0; 0 !== d.cmpn(0);) {
                var w = p.div(d);
                c = p.sub(w.mul(d)), l = b.sub(w.mul(m));
                var M = g.sub(w.mul(y));
                if (!n && c.cmp(h) < 0) e = u.neg(), r = m, n = c.neg(), o = l;
                else if (n && 2 == ++v) break;
                u = c, p = d, d = c, b = m, m = l, g = y, y = M
            }
            a = c.neg(), s = l;
            var A = n.sqr().add(o.sqr());
            return a.sqr().add(s.sqr()).cmp(A) >= 0 && (a = e, s = r), n.negative && (n = n.neg(), o = o.neg()), a.negative && (a = a.neg(), s = s.neg()), [{
                a: n,
                b: o
            }, {
                a: a,
                b: s
            }]
        }, ShortCurve.prototype._endoSplit = function _endoSplit(t) {
            var e = this.endo.basis,
                r = e[0],
                n = e[1],
                i = n.b.mul(t).divRound(this.n),
                o = r.b.neg().mul(t).divRound(this.n),
                a = i.mul(r.a),
                s = o.mul(n.a),
                u = i.mul(r.b),
                c = o.mul(n.b);
            return {
                k1: t.sub(a).sub(s),
                k2: u.add(c).neg()
            }
        }, ShortCurve.prototype.pointFromX = function pointFromX(t, e) {
            (t = new i(t, 16)).red || (t = t.toRed(this.red));
            var r = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),
                n = r.redSqrt();
            if (0 !== n.redSqr().redSub(r).cmp(this.zero)) throw new Error("invalid point");
            var o = n.fromRed().isOdd();
            return (e && !o || !e && o) && (n = n.redNeg()), this.point(t, n)
        }, ShortCurve.prototype.validate = function validate(t) {
            if (t.inf) return !0;
            var e = t.x,
                r = t.y,
                n = this.a.redMul(e),
                i = e.redSqr().redMul(e).redIAdd(n).redIAdd(this.b);
            return 0 === r.redSqr().redISub(i).cmpn(0)
        }, ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(t, e, r) {
            for (var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < t.length; o++) {
                var a = this._endoSplit(e[o]),
                    s = t[o],
                    u = s._getBeta();
                a.k1.negative && (a.k1.ineg(), s = s.neg(!0)), a.k2.negative && (a.k2.ineg(), u = u.neg(!0)), n[2 * o] = s, n[2 * o + 1] = u, i[2 * o] = a.k1, i[2 * o + 1] = a.k2
            }
            for (var c = this._wnafMulAdd(1, n, i, 2 * o, r), l = 0; l < 2 * o; l++) n[l] = null, i[l] = null;
            return c
        }, o(Point, a.BasePoint), ShortCurve.prototype.point = function point(t, e, r) {
            return new Point(this, t, e, r)
        }, ShortCurve.prototype.pointFromJSON = function pointFromJSON(t, e) {
            return Point.fromJSON(this, t, e)
        }, Point.prototype._getBeta = function _getBeta() {
            if (this.curve.endo) {
                var t = this.precomputed;
                if (t && t.beta) return t.beta;
                var e = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                if (t) {
                    var r = this.curve,
                        endoMul = function (t) {
                            return r.point(t.x.redMul(r.endo.beta), t.y)
                        };
                    t.beta = e, e.precomputed = {
                        beta: null,
                        naf: t.naf && {
                            wnd: t.naf.wnd,
                            points: t.naf.points.map(endoMul)
                        },
                        doubles: t.doubles && {
                            step: t.doubles.step,
                            points: t.doubles.points.map(endoMul)
                        }
                    }
                }
                return e
            }
        }, Point.prototype.toJSON = function toJSON() {
            return this.precomputed ? [this.x, this.y, this.precomputed && {
                doubles: this.precomputed.doubles && {
                    step: this.precomputed.doubles.step,
                    points: this.precomputed.doubles.points.slice(1)
                },
                naf: this.precomputed.naf && {
                    wnd: this.precomputed.naf.wnd,
                    points: this.precomputed.naf.points.slice(1)
                }
            }] : [this.x, this.y]
        }, Point.fromJSON = function fromJSON(t, e, r) {
            "string" == typeof e && (e = JSON.parse(e));
            var n = t.point(e[0], e[1], r);
            if (!e[2]) return n;

            function obj2point(e) {
                return t.point(e[0], e[1], r)
            }
            var i = e[2];
            return n.precomputed = {
                beta: null,
                doubles: i.doubles && {
                    step: i.doubles.step,
                    points: [n].concat(i.doubles.points.map(obj2point))
                },
                naf: i.naf && {
                    wnd: i.naf.wnd,
                    points: [n].concat(i.naf.points.map(obj2point))
                }
            }, n
        }, Point.prototype.inspect = function inspect() {
            return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
        }, Point.prototype.isInfinity = function isInfinity() {
            return this.inf
        }, Point.prototype.add = function add(t) {
            if (this.inf) return t;
            if (t.inf) return this;
            if (this.eq(t)) return this.dbl();
            if (this.neg().eq(t)) return this.curve.point(null, null);
            if (0 === this.x.cmp(t.x)) return this.curve.point(null, null);
            var e = this.y.redSub(t.y);
            0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));
            var r = e.redSqr().redISub(this.x).redISub(t.x),
                n = e.redMul(this.x.redSub(r)).redISub(this.y);
            return this.curve.point(r, n)
        }, Point.prototype.dbl = function dbl() {
            if (this.inf) return this;
            var t = this.y.redAdd(this.y);
            if (0 === t.cmpn(0)) return this.curve.point(null, null);
            var e = this.curve.a,
                r = this.x.redSqr(),
                n = t.redInvm(),
                i = r.redAdd(r).redIAdd(r).redIAdd(e).redMul(n),
                o = i.redSqr().redISub(this.x.redAdd(this.x)),
                a = i.redMul(this.x.redSub(o)).redISub(this.y);
            return this.curve.point(o, a)
        }, Point.prototype.getX = function getX() {
            return this.x.fromRed()
        }, Point.prototype.getY = function getY() {
            return this.y.fromRed()
        }, Point.prototype.mul = function mul(t) {
            return t = new i(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t)
        }, Point.prototype.mulAdd = function mulAdd(t, e, r) {
            var n = [this, e],
                i = [t, r];
            return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2)
        }, Point.prototype.jmulAdd = function jmulAdd(t, e, r) {
            var n = [this, e],
                i = [t, r];
            return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0)
        }, Point.prototype.eq = function eq(t) {
            return this === t || this.inf === t.inf && (this.inf || 0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y))
        }, Point.prototype.neg = function neg(t) {
            if (this.inf) return this;
            var e = this.curve.point(this.x, this.y.redNeg());
            if (t && this.precomputed) {
                var r = this.precomputed,
                    negate = function (t) {
                        return t.neg()
                    };
                e.precomputed = {
                    naf: r.naf && {
                        wnd: r.naf.wnd,
                        points: r.naf.points.map(negate)
                    },
                    doubles: r.doubles && {
                        step: r.doubles.step,
                        points: r.doubles.points.map(negate)
                    }
                }
            }
            return e
        }, Point.prototype.toJ = function toJ() {
            return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one)
        }, o(JPoint, a.BasePoint), ShortCurve.prototype.jpoint = function jpoint(t, e, r) {
            return new JPoint(this, t, e, r)
        }, JPoint.prototype.toP = function toP() {
            if (this.isInfinity()) return this.curve.point(null, null);
            var t = this.z.redInvm(),
                e = t.redSqr(),
                r = this.x.redMul(e),
                n = this.y.redMul(e).redMul(t);
            return this.curve.point(r, n)
        }, JPoint.prototype.neg = function neg() {
            return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
        }, JPoint.prototype.add = function add(t) {
            if (this.isInfinity()) return t;
            if (t.isInfinity()) return this;
            var e = t.z.redSqr(),
                r = this.z.redSqr(),
                n = this.x.redMul(e),
                i = t.x.redMul(r),
                o = this.y.redMul(e.redMul(t.z)),
                a = t.y.redMul(r.redMul(this.z)),
                s = n.redSub(i),
                u = o.redSub(a);
            if (0 === s.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
            var c = s.redSqr(),
                l = c.redMul(s),
                h = n.redMul(c),
                d = u.redSqr().redIAdd(l).redISub(h).redISub(h),
                p = u.redMul(h.redISub(d)).redISub(o.redMul(l)),
                m = this.z.redMul(t.z).redMul(s);
            return this.curve.jpoint(d, p, m)
        }, JPoint.prototype.mixedAdd = function mixedAdd(t) {
            if (this.isInfinity()) return t.toJ();
            if (t.isInfinity()) return this;
            var e = this.z.redSqr(),
                r = this.x,
                n = t.x.redMul(e),
                i = this.y,
                o = t.y.redMul(e).redMul(this.z),
                a = r.redSub(n),
                s = i.redSub(o);
            if (0 === a.cmpn(0)) return 0 !== s.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
            var u = a.redSqr(),
                c = u.redMul(a),
                l = r.redMul(u),
                h = s.redSqr().redIAdd(c).redISub(l).redISub(l),
                d = s.redMul(l.redISub(h)).redISub(i.redMul(c)),
                p = this.z.redMul(a);
            return this.curve.jpoint(h, d, p)
        }, JPoint.prototype.dblp = function dblp(t) {
            if (0 === t) return this;
            if (this.isInfinity()) return this;
            if (!t) return this.dbl();
            if (this.curve.zeroA || this.curve.threeA) {
                for (var e = this, r = 0; r < t; r++) e = e.dbl();
                return e
            }
            var n = this.curve.a,
                i = this.curve.tinv,
                o = this.x,
                a = this.y,
                s = this.z,
                u = s.redSqr().redSqr(),
                c = a.redAdd(a);
            for (r = 0; r < t; r++) {
                var l = o.redSqr(),
                    h = c.redSqr(),
                    d = h.redSqr(),
                    p = l.redAdd(l).redIAdd(l).redIAdd(n.redMul(u)),
                    m = o.redMul(h),
                    y = p.redSqr().redISub(m.redAdd(m)),
                    b = m.redISub(y),
                    g = p.redMul(b);
                g = g.redIAdd(g).redISub(d);
                var v = c.redMul(s);
                r + 1 < t && (u = u.redMul(d)), o = y, s = v, c = g
            }
            return this.curve.jpoint(o, c.redMul(i), s)
        }, JPoint.prototype.dbl = function dbl() {
            return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
        }, JPoint.prototype._zeroDbl = function _zeroDbl() {
            var t, e, r;
            if (this.zOne) {
                var n = this.x.redSqr(),
                    i = this.y.redSqr(),
                    o = i.redSqr(),
                    a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                a = a.redIAdd(a);
                var s = n.redAdd(n).redIAdd(n),
                    u = s.redSqr().redISub(a).redISub(a),
                    c = o.redIAdd(o);
                c = (c = c.redIAdd(c)).redIAdd(c), t = u, e = s.redMul(a.redISub(u)).redISub(c), r = this.y.redAdd(this.y)
            } else {
                var l = this.x.redSqr(),
                    h = this.y.redSqr(),
                    d = h.redSqr(),
                    p = this.x.redAdd(h).redSqr().redISub(l).redISub(d);
                p = p.redIAdd(p);
                var m = l.redAdd(l).redIAdd(l),
                    y = m.redSqr(),
                    b = d.redIAdd(d);
                b = (b = b.redIAdd(b)).redIAdd(b), t = y.redISub(p).redISub(p), e = m.redMul(p.redISub(t)).redISub(b), r = (r = this.y.redMul(this.z)).redIAdd(r)
            }
            return this.curve.jpoint(t, e, r)
        }, JPoint.prototype._threeDbl = function _threeDbl() {
            var t, e, r;
            if (this.zOne) {
                var n = this.x.redSqr(),
                    i = this.y.redSqr(),
                    o = i.redSqr(),
                    a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                a = a.redIAdd(a);
                var s = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),
                    u = s.redSqr().redISub(a).redISub(a);
                t = u;
                var c = o.redIAdd(o);
                c = (c = c.redIAdd(c)).redIAdd(c), e = s.redMul(a.redISub(u)).redISub(c), r = this.y.redAdd(this.y)
            } else {
                var l = this.z.redSqr(),
                    h = this.y.redSqr(),
                    d = this.x.redMul(h),
                    p = this.x.redSub(l).redMul(this.x.redAdd(l));
                p = p.redAdd(p).redIAdd(p);
                var m = d.redIAdd(d),
                    y = (m = m.redIAdd(m)).redAdd(m);
                t = p.redSqr().redISub(y), r = this.y.redAdd(this.z).redSqr().redISub(h).redISub(l);
                var b = h.redSqr();
                b = (b = (b = b.redIAdd(b)).redIAdd(b)).redIAdd(b), e = p.redMul(m.redISub(t)).redISub(b)
            }
            return this.curve.jpoint(t, e, r)
        }, JPoint.prototype._dbl = function _dbl() {
            var t = this.curve.a,
                e = this.x,
                r = this.y,
                n = this.z,
                i = n.redSqr().redSqr(),
                o = e.redSqr(),
                a = r.redSqr(),
                s = o.redAdd(o).redIAdd(o).redIAdd(t.redMul(i)),
                u = e.redAdd(e),
                c = (u = u.redIAdd(u)).redMul(a),
                l = s.redSqr().redISub(c.redAdd(c)),
                h = c.redISub(l),
                d = a.redSqr();
            d = (d = (d = d.redIAdd(d)).redIAdd(d)).redIAdd(d);
            var p = s.redMul(h).redISub(d),
                m = r.redAdd(r).redMul(n);
            return this.curve.jpoint(l, p, m)
        }, JPoint.prototype.trpl = function trpl() {
            if (!this.curve.zeroA) return this.dbl().add(this);
            var t = this.x.redSqr(),
                e = this.y.redSqr(),
                r = this.z.redSqr(),
                n = e.redSqr(),
                i = t.redAdd(t).redIAdd(t),
                o = i.redSqr(),
                a = this.x.redAdd(e).redSqr().redISub(t).redISub(n),
                s = (a = (a = (a = a.redIAdd(a)).redAdd(a).redIAdd(a)).redISub(o)).redSqr(),
                u = n.redIAdd(n);
            u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
            var c = i.redIAdd(a).redSqr().redISub(o).redISub(s).redISub(u),
                l = e.redMul(c);
            l = (l = l.redIAdd(l)).redIAdd(l);
            var h = this.x.redMul(s).redISub(l);
            h = (h = h.redIAdd(h)).redIAdd(h);
            var d = this.y.redMul(c.redMul(u.redISub(c)).redISub(a.redMul(s)));
            d = (d = (d = d.redIAdd(d)).redIAdd(d)).redIAdd(d);
            var p = this.z.redAdd(a).redSqr().redISub(r).redISub(s);
            return this.curve.jpoint(h, d, p)
        }, JPoint.prototype.mul = function mul(t, e) {
            return t = new i(t, e), this.curve._wnafMul(this, t)
        }, JPoint.prototype.eq = function eq(t) {
            if ("affine" === t.type) return this.eq(t.toJ());
            if (this === t) return !0;
            var e = this.z.redSqr(),
                r = t.z.redSqr();
            if (0 !== this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0)) return !1;
            var n = e.redMul(this.z),
                i = r.redMul(t.z);
            return 0 === this.y.redMul(i).redISub(t.y.redMul(n)).cmpn(0)
        }, JPoint.prototype.eqXToP = function eqXToP(t) {
            var e = this.z.redSqr(),
                r = t.toRed(this.curve.red).redMul(e);
            if (0 === this.x.cmp(r)) return !0;
            for (var n = t.clone(), i = this.curve.redN.redMul(e);;) {
                if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                if (r.redIAdd(i), 0 === this.x.cmp(r)) return !0
            }
        }, JPoint.prototype.inspect = function inspect() {
            return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
        }, JPoint.prototype.isInfinity = function isInfinity() {
            return 0 === this.z.cmpn(0)
        }
    }, function (t, e, r) {
        var n = r(2),
            i = r(1),
            o = r(122),
            a = r(19);

        function MontCurve(t) {
            o.call(this, "mont", t), this.a = new n(t.a, 16).toRed(this.red), this.b = new n(t.b, 16).toRed(this.red), this.i4 = new n(4).toRed(this.red).redInvm(), this.two = new n(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two))
        }

        function Point(t, e, r) {
            o.BasePoint.call(this, t, "projective"), null === e && null === r ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new n(e, 16), this.z = new n(r, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)))
        }
        i(MontCurve, o), t.exports = MontCurve, MontCurve.prototype.validate = function validate(t) {
            var e = t.normalize().x,
                r = e.redSqr(),
                n = r.redMul(e).redAdd(r.redMul(this.a)).redAdd(e);
            return 0 === n.redSqrt().redSqr().cmp(n)
        }, i(Point, o.BasePoint), MontCurve.prototype.decodePoint = function decodePoint(t, e) {
            return this.point(a.toArray(t, e), 1)
        }, MontCurve.prototype.point = function point(t, e) {
            return new Point(this, t, e)
        }, MontCurve.prototype.pointFromJSON = function pointFromJSON(t) {
            return Point.fromJSON(this, t)
        }, Point.prototype.precompute = function precompute() {}, Point.prototype._encode = function _encode() {
            return this.getX().toArray("be", this.curve.p.byteLength())
        }, Point.fromJSON = function fromJSON(t, e) {
            return new Point(t, e[0], e[1] || t.one)
        }, Point.prototype.inspect = function inspect() {
            return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">"
        }, Point.prototype.isInfinity = function isInfinity() {
            return 0 === this.z.cmpn(0)
        }, Point.prototype.dbl = function dbl() {
            var t = this.x.redAdd(this.z).redSqr(),
                e = this.x.redSub(this.z).redSqr(),
                r = t.redSub(e),
                n = t.redMul(e),
                i = r.redMul(e.redAdd(this.curve.a24.redMul(r)));
            return this.curve.point(n, i)
        }, Point.prototype.add = function add() {
            throw new Error("Not supported on Montgomery curve")
        }, Point.prototype.diffAdd = function diffAdd(t, e) {
            var r = this.x.redAdd(this.z),
                n = this.x.redSub(this.z),
                i = t.x.redAdd(t.z),
                o = t.x.redSub(t.z).redMul(r),
                a = i.redMul(n),
                s = e.z.redMul(o.redAdd(a).redSqr()),
                u = e.x.redMul(o.redISub(a).redSqr());
            return this.curve.point(s, u)
        }, Point.prototype.mul = function mul(t) {
            for (var e = t.clone(), r = this, n = this.curve.point(null, null), i = []; 0 !== e.cmpn(0); e.iushrn(1)) i.push(e.andln(1));
            for (var o = i.length - 1; o >= 0; o--) 0 === i[o] ? (r = r.diffAdd(n, this), n = n.dbl()) : (n = r.diffAdd(n, this), r = r.dbl());
            return n
        }, Point.prototype.mulAdd = function mulAdd() {
            throw new Error("Not supported on Montgomery curve")
        }, Point.prototype.jumlAdd = function jumlAdd() {
            throw new Error("Not supported on Montgomery curve")
        }, Point.prototype.eq = function eq(t) {
            return 0 === this.getX().cmp(t.getX())
        }, Point.prototype.normalize = function normalize() {
            return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this
        }, Point.prototype.getX = function getX() {
            return this.normalize(), this.x.fromRed()
        }
    }, function (t, e, r) {
        var n = r(19),
            i = r(2),
            o = r(1),
            a = r(122),
            s = n.assert;

        function EdwardsCurve(t) {
            this.twisted = 1 != (0 | t.a), this.mOneA = this.twisted && -1 == (0 | t.a), this.extended = this.mOneA, a.call(this, "edwards", t), this.a = new i(t.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new i(t.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new i(t.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), s(!this.twisted || 0 === this.c.fromRed().cmpn(1)), this.oneC = 1 == (0 | t.c)
        }

        function Point(t, e, r, n, o) {
            a.BasePoint.call(this, t, "projective"), null === e && null === r && null === n ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = !0) : (this.x = new i(e, 16), this.y = new i(r, 16), this.z = n ? new i(n, 16) : this.curve.one, this.t = o && new i(o, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))))
        }
        o(EdwardsCurve, a), t.exports = EdwardsCurve, EdwardsCurve.prototype._mulA = function _mulA(t) {
            return this.mOneA ? t.redNeg() : this.a.redMul(t)
        }, EdwardsCurve.prototype._mulC = function _mulC(t) {
            return this.oneC ? t : this.c.redMul(t)
        }, EdwardsCurve.prototype.jpoint = function jpoint(t, e, r, n) {
            return this.point(t, e, r, n)
        }, EdwardsCurve.prototype.pointFromX = function pointFromX(t, e) {
            (t = new i(t, 16)).red || (t = t.toRed(this.red));
            var r = t.redSqr(),
                n = this.c2.redSub(this.a.redMul(r)),
                o = this.one.redSub(this.c2.redMul(this.d).redMul(r)),
                a = n.redMul(o.redInvm()),
                s = a.redSqrt();
            if (0 !== s.redSqr().redSub(a).cmp(this.zero)) throw new Error("invalid point");
            var u = s.fromRed().isOdd();
            return (e && !u || !e && u) && (s = s.redNeg()), this.point(t, s)
        }, EdwardsCurve.prototype.pointFromY = function pointFromY(t, e) {
            (t = new i(t, 16)).red || (t = t.toRed(this.red));
            var r = t.redSqr(),
                n = r.redSub(this.c2),
                o = r.redMul(this.d).redMul(this.c2).redSub(this.a),
                a = n.redMul(o.redInvm());
            if (0 === a.cmp(this.zero)) {
                if (e) throw new Error("invalid point");
                return this.point(this.zero, t)
            }
            var s = a.redSqrt();
            if (0 !== s.redSqr().redSub(a).cmp(this.zero)) throw new Error("invalid point");
            return s.fromRed().isOdd() !== e && (s = s.redNeg()), this.point(s, t)
        }, EdwardsCurve.prototype.validate = function validate(t) {
            if (t.isInfinity()) return !0;
            t.normalize();
            var e = t.x.redSqr(),
                r = t.y.redSqr(),
                n = e.redMul(this.a).redAdd(r),
                i = this.c2.redMul(this.one.redAdd(this.d.redMul(e).redMul(r)));
            return 0 === n.cmp(i)
        }, o(Point, a.BasePoint), EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(t) {
            return Point.fromJSON(this, t)
        }, EdwardsCurve.prototype.point = function point(t, e, r, n) {
            return new Point(this, t, e, r, n)
        }, Point.fromJSON = function fromJSON(t, e) {
            return new Point(t, e[0], e[1], e[2])
        }, Point.prototype.inspect = function inspect() {
            return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">"
        }, Point.prototype.isInfinity = function isInfinity() {
            return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || this.zOne && 0 === this.y.cmp(this.curve.c))
        }, Point.prototype._extDbl = function _extDbl() {
            var t = this.x.redSqr(),
                e = this.y.redSqr(),
                r = this.z.redSqr();
            r = r.redIAdd(r);
            var n = this.curve._mulA(t),
                i = this.x.redAdd(this.y).redSqr().redISub(t).redISub(e),
                o = n.redAdd(e),
                a = o.redSub(r),
                s = n.redSub(e),
                u = i.redMul(a),
                c = o.redMul(s),
                l = i.redMul(s),
                h = a.redMul(o);
            return this.curve.point(u, c, h, l)
        }, Point.prototype._projDbl = function _projDbl() {
            var t, e, r, n = this.x.redAdd(this.y).redSqr(),
                i = this.x.redSqr(),
                o = this.y.redSqr();
            if (this.curve.twisted) {
                var a = (c = this.curve._mulA(i)).redAdd(o);
                if (this.zOne) t = n.redSub(i).redSub(o).redMul(a.redSub(this.curve.two)), e = a.redMul(c.redSub(o)), r = a.redSqr().redSub(a).redSub(a);
                else {
                    var s = this.z.redSqr(),
                        u = a.redSub(s).redISub(s);
                    t = n.redSub(i).redISub(o).redMul(u), e = a.redMul(c.redSub(o)), r = a.redMul(u)
                }
            } else {
                var c = i.redAdd(o);
                s = this.curve._mulC(this.z).redSqr(), u = c.redSub(s).redSub(s);
                t = this.curve._mulC(n.redISub(c)).redMul(u), e = this.curve._mulC(c).redMul(i.redISub(o)), r = c.redMul(u)
            }
            return this.curve.point(t, e, r)
        }, Point.prototype.dbl = function dbl() {
            return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl()
        }, Point.prototype._extAdd = function _extAdd(t) {
            var e = this.y.redSub(this.x).redMul(t.y.redSub(t.x)),
                r = this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)),
                n = this.t.redMul(this.curve.dd).redMul(t.t),
                i = this.z.redMul(t.z.redAdd(t.z)),
                o = r.redSub(e),
                a = i.redSub(n),
                s = i.redAdd(n),
                u = r.redAdd(e),
                c = o.redMul(a),
                l = s.redMul(u),
                h = o.redMul(u),
                d = a.redMul(s);
            return this.curve.point(c, l, d, h)
        }, Point.prototype._projAdd = function _projAdd(t) {
            var e, r, n = this.z.redMul(t.z),
                i = n.redSqr(),
                o = this.x.redMul(t.x),
                a = this.y.redMul(t.y),
                s = this.curve.d.redMul(o).redMul(a),
                u = i.redSub(s),
                c = i.redAdd(s),
                l = this.x.redAdd(this.y).redMul(t.x.redAdd(t.y)).redISub(o).redISub(a),
                h = n.redMul(u).redMul(l);
            return this.curve.twisted ? (e = n.redMul(c).redMul(a.redSub(this.curve._mulA(o))), r = u.redMul(c)) : (e = n.redMul(c).redMul(a.redSub(o)), r = this.curve._mulC(u).redMul(c)), this.curve.point(h, e, r)
        }, Point.prototype.add = function add(t) {
            return this.isInfinity() ? t : t.isInfinity() ? this : this.curve.extended ? this._extAdd(t) : this._projAdd(t)
        }, Point.prototype.mul = function mul(t) {
            return this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve._wnafMul(this, t)
        }, Point.prototype.mulAdd = function mulAdd(t, e, r) {
            return this.curve._wnafMulAdd(1, [this, e], [t, r], 2, !1)
        }, Point.prototype.jmulAdd = function jmulAdd(t, e, r) {
            return this.curve._wnafMulAdd(1, [this, e], [t, r], 2, !0)
        }, Point.prototype.normalize = function normalize() {
            if (this.zOne) return this;
            var t = this.z.redInvm();
            return this.x = this.x.redMul(t), this.y = this.y.redMul(t), this.t && (this.t = this.t.redMul(t)), this.z = this.curve.one, this.zOne = !0, this
        }, Point.prototype.neg = function neg() {
            return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg())
        }, Point.prototype.getX = function getX() {
            return this.normalize(), this.x.fromRed()
        }, Point.prototype.getY = function getY() {
            return this.normalize(), this.y.fromRed()
        }, Point.prototype.eq = function eq(t) {
            return this === t || 0 === this.getX().cmp(t.getX()) && 0 === this.getY().cmp(t.getY())
        }, Point.prototype.eqXToP = function eqXToP(t) {
            var e = t.toRed(this.curve.red).redMul(this.z);
            if (0 === this.x.cmp(e)) return !0;
            for (var r = t.clone(), n = this.curve.redN.redMul(this.z);;) {
                if (r.iadd(this.curve.n), r.cmp(this.curve.p) >= 0) return !1;
                if (e.redIAdd(n), 0 === this.x.cmp(e)) return !0
            }
        }, Point.prototype.toP = Point.prototype.normalize, Point.prototype.mixedAdd = Point.prototype.add
    }, function (t, e, r) {
        e.sha1 = r(624), e.sha224 = r(625), e.sha256 = r(277), e.sha384 = r(626), e.sha512 = r(278)
    }, function (t, e, r) {
        var n = r(31),
            i = r(90),
            o = r(276),
            a = n.rotl32,
            s = n.sum32,
            u = n.sum32_5,
            c = o.ft_1,
            l = i.BlockHash,
            h = [1518500249, 1859775393, 2400959708, 3395469782];

        function SHA1() {
            if (!(this instanceof SHA1)) return new SHA1;
            l.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80)
        }
        n.inherits(SHA1, l), t.exports = SHA1, SHA1.blockSize = 512, SHA1.outSize = 160, SHA1.hmacStrength = 80, SHA1.padLength = 64, SHA1.prototype._update = function _update(t, e) {
            for (var r = this.W, n = 0; n < 16; n++) r[n] = t[e + n];
            for (; n < r.length; n++) r[n] = a(r[n - 3] ^ r[n - 8] ^ r[n - 14] ^ r[n - 16], 1);
            var i = this.h[0],
                o = this.h[1],
                l = this.h[2],
                d = this.h[3],
                p = this.h[4];
            for (n = 0; n < r.length; n++) {
                var m = ~~(n / 20),
                    y = u(a(i, 5), c(m, o, l, d), p, r[n], h[m]);
                p = d, d = l, l = a(o, 30), o = i, i = y
            }
            this.h[0] = s(this.h[0], i), this.h[1] = s(this.h[1], o), this.h[2] = s(this.h[2], l), this.h[3] = s(this.h[3], d), this.h[4] = s(this.h[4], p)
        }, SHA1.prototype._digest = function digest(t) {
            return "hex" === t ? n.toHex32(this.h, "big") : n.split32(this.h, "big")
        }
    }, function (t, e, r) {
        var n = r(31),
            i = r(277);

        function SHA224() {
            if (!(this instanceof SHA224)) return new SHA224;
            i.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]
        }
        n.inherits(SHA224, i), t.exports = SHA224, SHA224.blockSize = 512, SHA224.outSize = 224, SHA224.hmacStrength = 192, SHA224.padLength = 64, SHA224.prototype._digest = function digest(t) {
            return "hex" === t ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big")
        }
    }, function (t, e, r) {
        var n = r(31),
            i = r(278);

        function SHA384() {
            if (!(this instanceof SHA384)) return new SHA384;
            i.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428]
        }
        n.inherits(SHA384, i), t.exports = SHA384, SHA384.blockSize = 1024, SHA384.outSize = 384, SHA384.hmacStrength = 192, SHA384.padLength = 128, SHA384.prototype._digest = function digest(t) {
            return "hex" === t ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big")
        }
    }, function (t, e, r) {
        var n = r(31),
            i = r(90),
            o = n.rotl32,
            a = n.sum32,
            s = n.sum32_3,
            u = n.sum32_4,
            c = i.BlockHash;

        function RIPEMD160() {
            if (!(this instanceof RIPEMD160)) return new RIPEMD160;
            c.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little"
        }

        function f(t, e, r, n) {
            return t <= 15 ? e ^ r ^ n : t <= 31 ? e & r | ~e & n : t <= 47 ? (e | ~r) ^ n : t <= 63 ? e & n | r & ~n : e ^ (r | ~n)
        }

        function K(t) {
            return t <= 15 ? 0 : t <= 31 ? 1518500249 : t <= 47 ? 1859775393 : t <= 63 ? 2400959708 : 2840853838
        }

        function Kh(t) {
            return t <= 15 ? 1352829926 : t <= 31 ? 1548603684 : t <= 47 ? 1836072691 : t <= 63 ? 2053994217 : 0
        }
        n.inherits(RIPEMD160, c), e.ripemd160 = RIPEMD160, RIPEMD160.blockSize = 512, RIPEMD160.outSize = 160, RIPEMD160.hmacStrength = 192, RIPEMD160.padLength = 64, RIPEMD160.prototype._update = function update(t, e) {
            for (var r = this.h[0], n = this.h[1], i = this.h[2], c = this.h[3], m = this.h[4], y = r, b = n, g = i, v = c, w = m, M = 0; M < 80; M++) {
                var A = a(o(u(r, f(M, n, i, c), t[l[M] + e], K(M)), d[M]), m);
                r = m, m = c, c = o(i, 10), i = n, n = A, A = a(o(u(y, f(79 - M, b, g, v), t[h[M] + e], Kh(M)), p[M]), w), y = w, w = v, v = o(g, 10), g = b, b = A
            }
            A = s(this.h[1], i, v), this.h[1] = s(this.h[2], c, w), this.h[2] = s(this.h[3], m, y), this.h[3] = s(this.h[4], r, b), this.h[4] = s(this.h[0], n, g), this.h[0] = A
        }, RIPEMD160.prototype._digest = function digest(t) {
            return "hex" === t ? n.toHex32(this.h, "little") : n.split32(this.h, "little")
        };
        var l = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13],
            h = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11],
            d = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6],
            p = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]
    }, function (t, e, r) {
        var n = r(31),
            i = r(17);

        function Hmac(t, e, r) {
            if (!(this instanceof Hmac)) return new Hmac(t, e, r);
            this.Hash = t, this.blockSize = t.blockSize / 8, this.outSize = t.outSize / 8, this.inner = null, this.outer = null, this._init(n.toArray(e, r))
        }
        t.exports = Hmac, Hmac.prototype._init = function init(t) {
            t.length > this.blockSize && (t = (new this.Hash).update(t).digest()), i(t.length <= this.blockSize);
            for (var e = t.length; e < this.blockSize; e++) t.push(0);
            for (e = 0; e < t.length; e++) t[e] ^= 54;
            for (this.inner = (new this.Hash).update(t), e = 0; e < t.length; e++) t[e] ^= 106;
            this.outer = (new this.Hash).update(t)
        }, Hmac.prototype.update = function update(t, e) {
            return this.inner.update(t, e), this
        }, Hmac.prototype.digest = function digest(t) {
            return this.outer.update(this.inner.digest()), this.outer.digest(t)
        }
    }, function (t, e) {
        t.exports = {
            doubles: {
                step: 4,
                points: [
                    ["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],
                    ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],
                    ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],
                    ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],
                    ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],
                    ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],
                    ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],
                    ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],
                    ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],
                    ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],
                    ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],
                    ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],
                    ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],
                    ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],
                    ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],
                    ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],
                    ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],
                    ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],
                    ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],
                    ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],
                    ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],
                    ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],
                    ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],
                    ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],
                    ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],
                    ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],
                    ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],
                    ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],
                    ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],
                    ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],
                    ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],
                    ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],
                    ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],
                    ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],
                    ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],
                    ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],
                    ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],
                    ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],
                    ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],
                    ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],
                    ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],
                    ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],
                    ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],
                    ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],
                    ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],
                    ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],
                    ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],
                    ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],
                    ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],
                    ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],
                    ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],
                    ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],
                    ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],
                    ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],
                    ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],
                    ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],
                    ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],
                    ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],
                    ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],
                    ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],
                    ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],
                    ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],
                    ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],
                    ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],
                    ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]
                ]
            },
            naf: {
                wnd: 7,
                points: [
                    ["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],
                    ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],
                    ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],
                    ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],
                    ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],
                    ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],
                    ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],
                    ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],
                    ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],
                    ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],
                    ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],
                    ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],
                    ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],
                    ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],
                    ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],
                    ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],
                    ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],
                    ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],
                    ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],
                    ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],
                    ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],
                    ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],
                    ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],
                    ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],
                    ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],
                    ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],
                    ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],
                    ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],
                    ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],
                    ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],
                    ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],
                    ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],
                    ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],
                    ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],
                    ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],
                    ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],
                    ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],
                    ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],
                    ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],
                    ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],
                    ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],
                    ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],
                    ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],
                    ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],
                    ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],
                    ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],
                    ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],
                    ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],
                    ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],
                    ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],
                    ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],
                    ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],
                    ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],
                    ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],
                    ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],
                    ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],
                    ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],
                    ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],
                    ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],
                    ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],
                    ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],
                    ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],
                    ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],
                    ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],
                    ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],
                    ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],
                    ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],
                    ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],
                    ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],
                    ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],
                    ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],
                    ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],
                    ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],
                    ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],
                    ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],
                    ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],
                    ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],
                    ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],
                    ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],
                    ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],
                    ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],
                    ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],
                    ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],
                    ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],
                    ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],
                    ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],
                    ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],
                    ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],
                    ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],
                    ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],
                    ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],
                    ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],
                    ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],
                    ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],
                    ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],
                    ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],
                    ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],
                    ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],
                    ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],
                    ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],
                    ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],
                    ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],
                    ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],
                    ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],
                    ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],
                    ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],
                    ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],
                    ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],
                    ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],
                    ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],
                    ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],
                    ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],
                    ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],
                    ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],
                    ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],
                    ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],
                    ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],
                    ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],
                    ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],
                    ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],
                    ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],
                    ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],
                    ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],
                    ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],
                    ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],
                    ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],
                    ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]
                ]
            }
        }
    }, function (t, e, r) {
        var n = r(2),
            i = r(279),
            o = r(19),
            a = r(182),
            s = r(88),
            u = o.assert,
            c = r(631),
            l = r(632);

        function EC(t) {
            if (!(this instanceof EC)) return new EC(t);
            "string" == typeof t && (u(a.hasOwnProperty(t), "Unknown curve " + t), t = a[t]), t instanceof a.PresetCurve && (t = {
                curve: t
            }), this.curve = t.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t.curve.g, this.g.precompute(t.curve.n.bitLength() + 1), this.hash = t.hash || t.curve.hash
        }
        t.exports = EC, EC.prototype.keyPair = function keyPair(t) {
            return new c(this, t)
        }, EC.prototype.keyFromPrivate = function keyFromPrivate(t, e) {
            return c.fromPrivate(this, t, e)
        }, EC.prototype.keyFromPublic = function keyFromPublic(t, e) {
            return c.fromPublic(this, t, e)
        }, EC.prototype.genKeyPair = function genKeyPair(t) {
            t || (t = {});
            for (var e = new i({
                    hash: this.hash,
                    pers: t.pers,
                    persEnc: t.persEnc || "utf8",
                    entropy: t.entropy || s(this.hash.hmacStrength),
                    entropyEnc: t.entropy && t.entropyEnc || "utf8",
                    nonce: this.n.toArray()
                }), r = this.n.byteLength(), o = this.n.sub(new n(2));;) {
                var a = new n(e.generate(r));
                if (!(a.cmp(o) > 0)) return a.iaddn(1), this.keyFromPrivate(a)
            }
        }, EC.prototype._truncateToN = function truncateToN(t, e) {
            var r = 8 * t.byteLength() - this.n.bitLength();
            return r > 0 && (t = t.ushrn(r)), !e && t.cmp(this.n) >= 0 ? t.sub(this.n) : t
        }, EC.prototype.sign = function sign(t, e, r, o) {
            "object" == typeof r && (o = r, r = null), o || (o = {}), e = this.keyFromPrivate(e, r), t = this._truncateToN(new n(t, 16));
            for (var a = this.n.byteLength(), s = e.getPrivate().toArray("be", a), u = t.toArray("be", a), c = new i({
                    hash: this.hash,
                    entropy: s,
                    nonce: u,
                    pers: o.pers,
                    persEnc: o.persEnc || "utf8"
                }), h = this.n.sub(new n(1)), d = 0;; d++) {
                var p = o.k ? o.k(d) : new n(c.generate(this.n.byteLength()));
                if (!((p = this._truncateToN(p, !0)).cmpn(1) <= 0 || p.cmp(h) >= 0)) {
                    var m = this.g.mul(p);
                    if (!m.isInfinity()) {
                        var y = m.getX(),
                            b = y.umod(this.n);
                        if (0 !== b.cmpn(0)) {
                            var g = p.invm(this.n).mul(b.mul(e.getPrivate()).iadd(t));
                            if (0 !== (g = g.umod(this.n)).cmpn(0)) {
                                var v = (m.getY().isOdd() ? 1 : 0) | (0 !== y.cmp(b) ? 2 : 0);
                                return o.canonical && g.cmp(this.nh) > 0 && (g = this.n.sub(g), v ^= 1), new l({
                                    r: b,
                                    s: g,
                                    recoveryParam: v
                                })
                            }
                        }
                    }
                }
            }
        }, EC.prototype.verify = function verify(t, e, r, i) {
            t = this._truncateToN(new n(t, 16)), r = this.keyFromPublic(r, i);
            var o = (e = new l(e, "hex")).r,
                a = e.s;
            if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
            if (a.cmpn(1) < 0 || a.cmp(this.n) >= 0) return !1;
            var s, u = a.invm(this.n),
                c = u.mul(t).umod(this.n),
                h = u.mul(o).umod(this.n);
            return this.curve._maxwellTrick ? !(s = this.g.jmulAdd(c, r.getPublic(), h)).isInfinity() && s.eqXToP(o) : !(s = this.g.mulAdd(c, r.getPublic(), h)).isInfinity() && 0 === s.getX().umod(this.n).cmp(o)
        }, EC.prototype.recoverPubKey = function (t, e, r, i) {
            u((3 & r) === r, "The recovery param is more than two bits"), e = new l(e, i);
            var o = this.n,
                a = new n(t),
                s = e.r,
                c = e.s,
                h = 1 & r,
                d = r >> 1;
            if (s.cmp(this.curve.p.umod(this.curve.n)) >= 0 && d) throw new Error("Unable to find sencond key candinate");
            s = d ? this.curve.pointFromX(s.add(this.curve.n), h) : this.curve.pointFromX(s, h);
            var p = e.r.invm(o),
                m = o.sub(a).mul(p).umod(o),
                y = c.mul(p).umod(o);
            return this.g.mulAdd(m, s, y)
        }, EC.prototype.getKeyRecoveryParam = function (t, e, r, n) {
            if (null !== (e = new l(e, n)).recoveryParam) return e.recoveryParam;
            for (var i = 0; i < 4; i++) {
                var o;
                try {
                    o = this.recoverPubKey(t, e, i)
                } catch (t) {
                    continue
                }
                if (o.eq(r)) return i
            }
            throw new Error("Unable to find valid recovery factor")
        }
    }, function (t, e, r) {
        var n = r(2),
            i = r(19).assert;

        function KeyPair(t, e) {
            this.ec = t, this.priv = null, this.pub = null, e.priv && this._importPrivate(e.priv, e.privEnc), e.pub && this._importPublic(e.pub, e.pubEnc)
        }
        t.exports = KeyPair, KeyPair.fromPublic = function fromPublic(t, e, r) {
            return e instanceof KeyPair ? e : new KeyPair(t, {
                pub: e,
                pubEnc: r
            })
        }, KeyPair.fromPrivate = function fromPrivate(t, e, r) {
            return e instanceof KeyPair ? e : new KeyPair(t, {
                priv: e,
                privEnc: r
            })
        }, KeyPair.prototype.validate = function validate() {
            var t = this.getPublic();
            return t.isInfinity() ? {
                result: !1,
                reason: "Invalid public key"
            } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {
                result: !0,
                reason: null
            } : {
                result: !1,
                reason: "Public key * N != O"
            } : {
                result: !1,
                reason: "Public key is not a point"
            }
        }, KeyPair.prototype.getPublic = function getPublic(t, e) {
            return "string" == typeof t && (e = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), e ? this.pub.encode(e, t) : this.pub
        }, KeyPair.prototype.getPrivate = function getPrivate(t) {
            return "hex" === t ? this.priv.toString(16, 2) : this.priv
        }, KeyPair.prototype._importPrivate = function _importPrivate(t, e) {
            this.priv = new n(t, e || 16), this.priv = this.priv.umod(this.ec.curve.n)
        }, KeyPair.prototype._importPublic = function _importPublic(t, e) {
            if (t.x || t.y) return "mont" === this.ec.curve.type ? i(t.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || i(t.x && t.y, "Need both x and y coordinate"), void(this.pub = this.ec.curve.point(t.x, t.y));
            this.pub = this.ec.curve.decodePoint(t, e)
        }, KeyPair.prototype.derive = function derive(t) {
            return t.mul(this.priv).getX()
        }, KeyPair.prototype.sign = function sign(t, e, r) {
            return this.ec.sign(t, this, e, r)
        }, KeyPair.prototype.verify = function verify(t, e) {
            return this.ec.verify(t, e, this)
        }, KeyPair.prototype.inspect = function inspect() {
            return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
        }
    }, function (t, e, r) {
        var n = r(2),
            i = r(19),
            o = i.assert;

        function Signature(t, e) {
            if (t instanceof Signature) return t;
            this._importDER(t, e) || (o(t.r && t.s, "Signature without r or s"), this.r = new n(t.r, 16), this.s = new n(t.s, 16), void 0 === t.recoveryParam ? this.recoveryParam = null : this.recoveryParam = t.recoveryParam)
        }

        function Position() {
            this.place = 0
        }

        function getLength(t, e) {
            var r = t[e.place++];
            if (!(128 & r)) return r;
            for (var n = 15 & r, i = 0, o = 0, a = e.place; o < n; o++, a++) i <<= 8, i |= t[a];
            return e.place = a, i
        }

        function rmPadding(t) {
            for (var e = 0, r = t.length - 1; !t[e] && !(128 & t[e + 1]) && e < r;) e++;
            return 0 === e ? t : t.slice(e)
        }

        function constructLength(t, e) {
            if (e < 128) t.push(e);
            else {
                var r = 1 + (Math.log(e) / Math.LN2 >>> 3);
                for (t.push(128 | r); --r;) t.push(e >>> (r << 3) & 255);
                t.push(e)
            }
        }
        t.exports = Signature, Signature.prototype._importDER = function _importDER(t, e) {
            t = i.toArray(t, e);
            var r = new Position;
            if (48 !== t[r.place++]) return !1;
            if (getLength(t, r) + r.place !== t.length) return !1;
            if (2 !== t[r.place++]) return !1;
            var o = getLength(t, r),
                a = t.slice(r.place, o + r.place);
            if (r.place += o, 2 !== t[r.place++]) return !1;
            var s = getLength(t, r);
            if (t.length !== s + r.place) return !1;
            var u = t.slice(r.place, s + r.place);
            return 0 === a[0] && 128 & a[1] && (a = a.slice(1)), 0 === u[0] && 128 & u[1] && (u = u.slice(1)), this.r = new n(a), this.s = new n(u), this.recoveryParam = null, !0
        }, Signature.prototype.toDER = function toDER(t) {
            var e = this.r.toArray(),
                r = this.s.toArray();
            for (128 & e[0] && (e = [0].concat(e)), 128 & r[0] && (r = [0].concat(r)), e = rmPadding(e), r = rmPadding(r); !(r[0] || 128 & r[1]);) r = r.slice(1);
            var n = [2];
            constructLength(n, e.length), (n = n.concat(e)).push(2), constructLength(n, r.length);
            var o = n.concat(r),
                a = [48];
            return constructLength(a, o.length), a = a.concat(o), i.encode(a, t)
        }
    }, function (t, e, r) {
        var n = r(89),
            i = r(182),
            o = r(19),
            a = o.assert,
            s = o.parseBytes,
            u = r(634),
            c = r(635);

        function EDDSA(t) {
            if (a("ed25519" === t, "only tested with ed25519 so far"), !(this instanceof EDDSA)) return new EDDSA(t);
            t = i[t].curve;
            this.curve = t, this.g = t.g, this.g.precompute(t.n.bitLength() + 1), this.pointClass = t.point().constructor, this.encodingLength = Math.ceil(t.n.bitLength() / 8), this.hash = n.sha512
        }
        t.exports = EDDSA, EDDSA.prototype.sign = function sign(t, e) {
            t = s(t);
            var r = this.keyFromSecret(e),
                n = this.hashInt(r.messagePrefix(), t),
                i = this.g.mul(n),
                o = this.encodePoint(i),
                a = this.hashInt(o, r.pubBytes(), t).mul(r.priv()),
                u = n.add(a).umod(this.curve.n);
            return this.makeSignature({
                R: i,
                S: u,
                Rencoded: o
            })
        }, EDDSA.prototype.verify = function verify(t, e, r) {
            t = s(t), e = this.makeSignature(e);
            var n = this.keyFromPublic(r),
                i = this.hashInt(e.Rencoded(), n.pubBytes(), t),
                o = this.g.mul(e.S());
            return e.R().add(n.pub().mul(i)).eq(o)
        }, EDDSA.prototype.hashInt = function hashInt() {
            for (var t = this.hash(), e = 0; e < arguments.length; e++) t.update(arguments[e]);
            return o.intFromLE(t.digest()).umod(this.curve.n)
        }, EDDSA.prototype.keyFromPublic = function keyFromPublic(t) {
            return u.fromPublic(this, t)
        }, EDDSA.prototype.keyFromSecret = function keyFromSecret(t) {
            return u.fromSecret(this, t)
        }, EDDSA.prototype.makeSignature = function makeSignature(t) {
            return t instanceof c ? t : new c(this, t)
        }, EDDSA.prototype.encodePoint = function encodePoint(t) {
            var e = t.getY().toArray("le", this.encodingLength);
            return e[this.encodingLength - 1] |= t.getX().isOdd() ? 128 : 0, e
        }, EDDSA.prototype.decodePoint = function decodePoint(t) {
            var e = (t = o.parseBytes(t)).length - 1,
                r = t.slice(0, e).concat(-129 & t[e]),
                n = 0 != (128 & t[e]),
                i = o.intFromLE(r);
            return this.curve.pointFromY(i, n)
        }, EDDSA.prototype.encodeInt = function encodeInt(t) {
            return t.toArray("le", this.encodingLength)
        }, EDDSA.prototype.decodeInt = function decodeInt(t) {
            return o.intFromLE(t)
        }, EDDSA.prototype.isPoint = function isPoint(t) {
            return t instanceof this.pointClass
        }
    }, function (t, e, r) {
        var n = r(19),
            i = n.assert,
            o = n.parseBytes,
            a = n.cachedProperty;

        function KeyPair(t, e) {
            this.eddsa = t, this._secret = o(e.secret), t.isPoint(e.pub) ? this._pub = e.pub : this._pubBytes = o(e.pub)
        }
        KeyPair.fromPublic = function fromPublic(t, e) {
            return e instanceof KeyPair ? e : new KeyPair(t, {
                pub: e
            })
        }, KeyPair.fromSecret = function fromSecret(t, e) {
            return e instanceof KeyPair ? e : new KeyPair(t, {
                secret: e
            })
        }, KeyPair.prototype.secret = function secret() {
            return this._secret
        }, a(KeyPair, "pubBytes", (function pubBytes() {
            return this.eddsa.encodePoint(this.pub())
        })), a(KeyPair, "pub", (function pub() {
            return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv())
        })), a(KeyPair, "privBytes", (function privBytes() {
            var t = this.eddsa,
                e = this.hash(),
                r = t.encodingLength - 1,
                n = e.slice(0, t.encodingLength);
            return n[0] &= 248, n[r] &= 127, n[r] |= 64, n
        })), a(KeyPair, "priv", (function priv() {
            return this.eddsa.decodeInt(this.privBytes())
        })), a(KeyPair, "hash", (function hash() {
            return this.eddsa.hash().update(this.secret()).digest()
        })), a(KeyPair, "messagePrefix", (function messagePrefix() {
            return this.hash().slice(this.eddsa.encodingLength)
        })), KeyPair.prototype.sign = function sign(t) {
            return i(this._secret, "KeyPair can only verify"), this.eddsa.sign(t, this)
        }, KeyPair.prototype.verify = function verify(t, e) {
            return this.eddsa.verify(t, e, this)
        }, KeyPair.prototype.getSecret = function getSecret(t) {
            return i(this._secret, "KeyPair is public only"), n.encode(this.secret(), t)
        }, KeyPair.prototype.getPublic = function getPublic(t) {
            return n.encode(this.pubBytes(), t)
        }, t.exports = KeyPair
    }, function (t, e, r) {
        var n = r(2),
            i = r(19),
            o = i.assert,
            a = i.cachedProperty,
            s = i.parseBytes;

        function Signature(t, e) {
            this.eddsa = t, "object" != typeof e && (e = s(e)), Array.isArray(e) && (e = {
                R: e.slice(0, t.encodingLength),
                S: e.slice(t.encodingLength)
            }), o(e.R && e.S, "Signature without R or S"), t.isPoint(e.R) && (this._R = e.R), e.S instanceof n && (this._S = e.S), this._Rencoded = Array.isArray(e.R) ? e.R : e.Rencoded, this._Sencoded = Array.isArray(e.S) ? e.S : e.Sencoded
        }
        a(Signature, "S", (function S() {
            return this.eddsa.decodeInt(this.Sencoded())
        })), a(Signature, "R", (function R() {
            return this.eddsa.decodePoint(this.Rencoded())
        })), a(Signature, "Rencoded", (function Rencoded() {
            return this.eddsa.encodePoint(this.R())
        })), a(Signature, "Sencoded", (function Sencoded() {
            return this.eddsa.encodeInt(this.S())
        })), Signature.prototype.toBytes = function toBytes() {
            return this.Rencoded().concat(this.Sencoded())
        }, Signature.prototype.toHex = function toHex() {
            return i.encode(this.toBytes(), "hex").toUpperCase()
        }, t.exports = Signature
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = r(15);
        e.getRandomBytes = function getRandomBytes(t) {
            return new Promise((function (e, r) {
                n(t, (function (t, n) {
                    t ? r(t) : e(n)
                }))
            }))
        }, e.getRandomBytesSync = function getRandomBytesSync(t) {
            return n(t)
        }
    }, function (t, e, r) {
        (function (t) {
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.createHashFunction = function createHashFunction(e) {
                return function (r) {
                    var n = e();
                    return n.update(r), t.from(n.digest())
                }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        t.exports = r(639)(r(646))
    }, function (t, e, r) {
        const n = r(640),
            i = r(645);
        t.exports = function (t) {
            const e = n(t),
                r = i(t);
            return function (t, n) {
                switch ("string" == typeof t ? t.toLowerCase() : t) {
                    case "keccak224":
                        return new e(1152, 448, null, 224, n);
                    case "keccak256":
                        return new e(1088, 512, null, 256, n);
                    case "keccak384":
                        return new e(832, 768, null, 384, n);
                    case "keccak512":
                        return new e(576, 1024, null, 512, n);
                    case "sha3-224":
                        return new e(1152, 448, 6, 224, n);
                    case "sha3-256":
                        return new e(1088, 512, 6, 256, n);
                    case "sha3-384":
                        return new e(832, 768, 6, 384, n);
                    case "sha3-512":
                        return new e(576, 1024, 6, 512, n);
                    case "shake128":
                        return new r(1344, 256, 31, n);
                    case "shake256":
                        return new r(1088, 512, 31, n);
                    default:
                        throw new Error("Invald algorithm: " + t)
                }
            }
        }
    }, function (t, e, r) {
        (function (e) {
            const {
                Transform: n
            } = r(91);
            t.exports = t => class Keccak extends n {
                constructor(e, r, n, i, o) {
                    super(o), this._rate = e, this._capacity = r, this._delimitedSuffix = n, this._hashBitLength = i, this._options = o, this._state = new t, this._state.initialize(e, r), this._finalized = !1
                }
                _transform(t, e, r) {
                    let n = null;
                    try {
                        this.update(t, e)
                    } catch (t) {
                        n = t
                    }
                    r(n)
                }
                _flush(t) {
                    let e = null;
                    try {
                        this.push(this.digest())
                    } catch (t) {
                        e = t
                    }
                    t(e)
                }
                update(t, r) {
                    if (!e.isBuffer(t) && "string" != typeof t) throw new TypeError("Data must be a string or a buffer");
                    if (this._finalized) throw new Error("Digest already called");
                    return e.isBuffer(t) || (t = e.from(t, r)), this._state.absorb(t), this
                }
                digest(t) {
                    if (this._finalized) throw new Error("Digest already called");
                    this._finalized = !0, this._delimitedSuffix && this._state.absorbLastFewBits(this._delimitedSuffix);
                    let e = this._state.squeeze(this._hashBitLength / 8);
                    return void 0 !== t && (e = e.toString(t)), this._resetState(), e
                }
                _resetState() {
                    return this._state.initialize(this._rate, this._capacity), this
                }
                _clone() {
                    const t = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options);
                    return this._state.copy(t._state), t._finalized = this._finalized, t
                }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        t.exports = r(177)
    }, function (t, e, r) {
        t.exports = r(52)
    }, function (t, e, r) {
        t.exports = r(85).Transform
    }, function (t, e, r) {
        t.exports = r(85).PassThrough
    }, function (t, e, r) {
        (function (e) {
            const {
                Transform: n
            } = r(91);
            t.exports = t => class Shake extends n {
                constructor(e, r, n, i) {
                    super(i), this._rate = e, this._capacity = r, this._delimitedSuffix = n, this._options = i, this._state = new t, this._state.initialize(e, r), this._finalized = !1
                }
                _transform(t, e, r) {
                    let n = null;
                    try {
                        this.update(t, e)
                    } catch (t) {
                        n = t
                    }
                    r(n)
                }
                _flush() {}
                _read(t) {
                    this.push(this.squeeze(t))
                }
                update(t, r) {
                    if (!e.isBuffer(t) && "string" != typeof t) throw new TypeError("Data must be a string or a buffer");
                    if (this._finalized) throw new Error("Squeeze already called");
                    return e.isBuffer(t) || (t = e.from(t, r)), this._state.absorb(t), this
                }
                squeeze(t, e) {
                    this._finalized || (this._finalized = !0, this._state.absorbLastFewBits(this._delimitedSuffix));
                    let r = this._state.squeeze(t);
                    return void 0 !== e && (r = r.toString(e)), r
                }
                _resetState() {
                    return this._state.initialize(this._rate, this._capacity), this
                }
                _clone() {
                    const t = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options);
                    return this._state.copy(t._state), t._finalized = this._finalized, t
                }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (e) {
            const n = r(647);

            function Keccak() {
                this.state = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], this.blockSize = null, this.count = 0, this.squeezing = !1
            }
            Keccak.prototype.initialize = function (t, e) {
                for (let t = 0; t < 50; ++t) this.state[t] = 0;
                this.blockSize = t / 8, this.count = 0, this.squeezing = !1
            }, Keccak.prototype.absorb = function (t) {
                for (let e = 0; e < t.length; ++e) this.state[~~(this.count / 4)] ^= t[e] << this.count % 4 * 8, this.count += 1, this.count === this.blockSize && (n.p1600(this.state), this.count = 0)
            }, Keccak.prototype.absorbLastFewBits = function (t) {
                this.state[~~(this.count / 4)] ^= t << this.count % 4 * 8, 0 != (128 & t) && this.count === this.blockSize - 1 && n.p1600(this.state), this.state[~~((this.blockSize - 1) / 4)] ^= 128 << (this.blockSize - 1) % 4 * 8, n.p1600(this.state), this.count = 0, this.squeezing = !0
            }, Keccak.prototype.squeeze = function (t) {
                this.squeezing || this.absorbLastFewBits(1);
                const r = e.alloc(t);
                for (let e = 0; e < t; ++e) r[e] = this.state[~~(this.count / 4)] >>> this.count % 4 * 8 & 255, this.count += 1, this.count === this.blockSize && (n.p1600(this.state), this.count = 0);
                return r
            }, Keccak.prototype.copy = function (t) {
                for (let e = 0; e < 50; ++e) t.state[e] = this.state[e];
                t.blockSize = this.blockSize, t.count = this.count, t.squeezing = this.squeezing
            }, t.exports = Keccak
        }).call(this, r(0).Buffer)
    }, function (t, e) {
        const r = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];
        e.p1600 = function (t) {
            for (let e = 0; e < 24; ++e) {
                const n = t[0] ^ t[10] ^ t[20] ^ t[30] ^ t[40],
                    i = t[1] ^ t[11] ^ t[21] ^ t[31] ^ t[41],
                    o = t[2] ^ t[12] ^ t[22] ^ t[32] ^ t[42],
                    a = t[3] ^ t[13] ^ t[23] ^ t[33] ^ t[43],
                    s = t[4] ^ t[14] ^ t[24] ^ t[34] ^ t[44],
                    u = t[5] ^ t[15] ^ t[25] ^ t[35] ^ t[45],
                    c = t[6] ^ t[16] ^ t[26] ^ t[36] ^ t[46],
                    l = t[7] ^ t[17] ^ t[27] ^ t[37] ^ t[47],
                    h = t[8] ^ t[18] ^ t[28] ^ t[38] ^ t[48],
                    d = t[9] ^ t[19] ^ t[29] ^ t[39] ^ t[49];
                let p = h ^ (o << 1 | a >>> 31),
                    m = d ^ (a << 1 | o >>> 31);
                const y = t[0] ^ p,
                    b = t[1] ^ m,
                    g = t[10] ^ p,
                    v = t[11] ^ m,
                    w = t[20] ^ p,
                    M = t[21] ^ m,
                    A = t[30] ^ p,
                    x = t[31] ^ m,
                    B = t[40] ^ p,
                    E = t[41] ^ m;
                p = n ^ (s << 1 | u >>> 31), m = i ^ (u << 1 | s >>> 31);
                const k = t[2] ^ p,
                    N = t[3] ^ m,
                    T = t[12] ^ p,
                    C = t[13] ^ m,
                    P = t[22] ^ p,
                    I = t[23] ^ m,
                    O = t[32] ^ p,
                    D = t[33] ^ m,
                    j = t[42] ^ p,
                    L = t[43] ^ m;
                p = o ^ (c << 1 | l >>> 31), m = a ^ (l << 1 | c >>> 31);
                const U = t[4] ^ p,
                    H = t[5] ^ m,
                    q = t[14] ^ p,
                    z = t[15] ^ m,
                    G = t[24] ^ p,
                    V = t[25] ^ m,
                    J = t[34] ^ p,
                    W = t[35] ^ m,
                    Z = t[44] ^ p,
                    X = t[45] ^ m;
                p = s ^ (h << 1 | d >>> 31), m = u ^ (d << 1 | h >>> 31);
                const Y = t[6] ^ p,
                    $ = t[7] ^ m,
                    Q = t[16] ^ p,
                    tt = t[17] ^ m,
                    et = t[26] ^ p,
                    rt = t[27] ^ m,
                    nt = t[36] ^ p,
                    it = t[37] ^ m,
                    ot = t[46] ^ p,
                    st = t[47] ^ m;
                p = c ^ (n << 1 | i >>> 31), m = l ^ (i << 1 | n >>> 31);
                const ut = t[8] ^ p,
                    ct = t[9] ^ m,
                    ht = t[18] ^ p,
                    dt = t[19] ^ m,
                    pt = t[28] ^ p,
                    mt = t[29] ^ m,
                    yt = t[38] ^ p,
                    bt = t[39] ^ m,
                    vt = t[48] ^ p,
                    wt = t[49] ^ m,
                    Mt = y,
                    _t = b,
                    At = v << 4 | g >>> 28,
                    xt = g << 4 | v >>> 28,
                    Bt = w << 3 | M >>> 29,
                    Et = M << 3 | w >>> 29,
                    kt = x << 9 | A >>> 23,
                    Nt = A << 9 | x >>> 23,
                    St = B << 18 | E >>> 14,
                    Tt = E << 18 | B >>> 14,
                    Ct = k << 1 | N >>> 31,
                    Pt = N << 1 | k >>> 31,
                    It = C << 12 | T >>> 20,
                    Ot = T << 12 | C >>> 20,
                    Rt = P << 10 | I >>> 22,
                    Ft = I << 10 | P >>> 22,
                    Dt = D << 13 | O >>> 19,
                    jt = O << 13 | D >>> 19,
                    Lt = j << 2 | L >>> 30,
                    Ut = L << 2 | j >>> 30,
                    Ht = H << 30 | U >>> 2,
                    qt = U << 30 | H >>> 2,
                    zt = q << 6 | z >>> 26,
                    Gt = z << 6 | q >>> 26,
                    Kt = V << 11 | G >>> 21,
                    Vt = G << 11 | V >>> 21,
                    Jt = J << 15 | W >>> 17,
                    Wt = W << 15 | J >>> 17,
                    Zt = X << 29 | Z >>> 3,
                    Xt = Z << 29 | X >>> 3,
                    Yt = Y << 28 | $ >>> 4,
                    $t = $ << 28 | Y >>> 4,
                    Qt = tt << 23 | Q >>> 9,
                    te = Q << 23 | tt >>> 9,
                    ee = et << 25 | rt >>> 7,
                    re = rt << 25 | et >>> 7,
                    ne = nt << 21 | it >>> 11,
                    ie = it << 21 | nt >>> 11,
                    oe = st << 24 | ot >>> 8,
                    ae = ot << 24 | st >>> 8,
                    se = ut << 27 | ct >>> 5,
                    ue = ct << 27 | ut >>> 5,
                    ce = ht << 20 | dt >>> 12,
                    fe = dt << 20 | ht >>> 12,
                    le = mt << 7 | pt >>> 25,
                    he = pt << 7 | mt >>> 25,
                    de = yt << 8 | bt >>> 24,
                    pe = bt << 8 | yt >>> 24,
                    me = vt << 14 | wt >>> 18,
                    ye = wt << 14 | vt >>> 18;
                t[0] = Mt ^ ~It & Kt, t[1] = _t ^ ~Ot & Vt, t[10] = Yt ^ ~ce & Bt, t[11] = $t ^ ~fe & Et, t[20] = Ct ^ ~zt & ee, t[21] = Pt ^ ~Gt & re, t[30] = se ^ ~At & Rt, t[31] = ue ^ ~xt & Ft, t[40] = Ht ^ ~Qt & le, t[41] = qt ^ ~te & he, t[2] = It ^ ~Kt & ne, t[3] = Ot ^ ~Vt & ie, t[12] = ce ^ ~Bt & Dt, t[13] = fe ^ ~Et & jt, t[22] = zt ^ ~ee & de, t[23] = Gt ^ ~re & pe, t[32] = At ^ ~Rt & Jt, t[33] = xt ^ ~Ft & Wt, t[42] = Qt ^ ~le & kt, t[43] = te ^ ~he & Nt, t[4] = Kt ^ ~ne & me, t[5] = Vt ^ ~ie & ye, t[14] = Bt ^ ~Dt & Zt, t[15] = Et ^ ~jt & Xt, t[24] = ee ^ ~de & St, t[25] = re ^ ~pe & Tt, t[34] = Rt ^ ~Jt & oe, t[35] = Ft ^ ~Wt & ae, t[44] = le ^ ~kt & Lt, t[45] = he ^ ~Nt & Ut, t[6] = ne ^ ~me & Mt, t[7] = ie ^ ~ye & _t, t[16] = Dt ^ ~Zt & Yt, t[17] = jt ^ ~Xt & $t, t[26] = de ^ ~St & Ct, t[27] = pe ^ ~Tt & Pt, t[36] = Jt ^ ~oe & se, t[37] = Wt ^ ~ae & ue, t[46] = kt ^ ~Lt & Ht, t[47] = Nt ^ ~Ut & qt, t[8] = me ^ ~Mt & It, t[9] = ye ^ ~_t & Ot, t[18] = Zt ^ ~Yt & ce, t[19] = Xt ^ ~$t & fe, t[28] = St ^ ~Ct & zt, t[29] = Tt ^ ~Pt & Gt, t[38] = oe ^ ~se & At, t[39] = ae ^ ~ue & xt, t[48] = Lt ^ ~Ht & Qt, t[49] = Ut ^ ~qt & te, t[0] ^= r[2 * e], t[1] ^= r[2 * e + 1]
            }
        }
    }, function (t, e, r) {
        var n = r(1),
            i = r(69),
            o = r(3).Buffer,
            a = [1518500249, 1859775393, -1894007588, -899497514],
            s = new Array(80);

        function Sha() {
            this.init(), this._w = s, i.call(this, 64, 56)
        }

        function rotl30(t) {
            return t << 30 | t >>> 2
        }

        function ft(t, e, r, n) {
            return 0 === t ? e & r | ~e & n : 2 === t ? e & r | e & n | r & n : e ^ r ^ n
        }
        n(Sha, i), Sha.prototype.init = function () {
            return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this
        }, Sha.prototype._update = function (t) {
            for (var e, r = this._w, n = 0 | this._a, i = 0 | this._b, o = 0 | this._c, s = 0 | this._d, u = 0 | this._e, c = 0; c < 16; ++c) r[c] = t.readInt32BE(4 * c);
            for (; c < 80; ++c) r[c] = r[c - 3] ^ r[c - 8] ^ r[c - 14] ^ r[c - 16];
            for (var l = 0; l < 80; ++l) {
                var h = ~~(l / 20),
                    d = 0 | ((e = n) << 5 | e >>> 27) + ft(h, i, o, s) + u + r[l] + a[h];
                u = s, s = o, o = rotl30(i), i = n, n = d
            }
            this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = o + this._c | 0, this._d = s + this._d | 0, this._e = u + this._e | 0
        }, Sha.prototype._hash = function () {
            var t = o.allocUnsafe(20);
            return t.writeInt32BE(0 | this._a, 0), t.writeInt32BE(0 | this._b, 4), t.writeInt32BE(0 | this._c, 8), t.writeInt32BE(0 | this._d, 12), t.writeInt32BE(0 | this._e, 16), t
        }, t.exports = Sha
    }, function (t, e, r) {
        var n = r(1),
            i = r(69),
            o = r(3).Buffer,
            a = [1518500249, 1859775393, -1894007588, -899497514],
            s = new Array(80);

        function Sha1() {
            this.init(), this._w = s, i.call(this, 64, 56)
        }

        function rotl5(t) {
            return t << 5 | t >>> 27
        }

        function rotl30(t) {
            return t << 30 | t >>> 2
        }

        function ft(t, e, r, n) {
            return 0 === t ? e & r | ~e & n : 2 === t ? e & r | e & n | r & n : e ^ r ^ n
        }
        n(Sha1, i), Sha1.prototype.init = function () {
            return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this
        }, Sha1.prototype._update = function (t) {
            for (var e, r = this._w, n = 0 | this._a, i = 0 | this._b, o = 0 | this._c, s = 0 | this._d, u = 0 | this._e, c = 0; c < 16; ++c) r[c] = t.readInt32BE(4 * c);
            for (; c < 80; ++c) r[c] = (e = r[c - 3] ^ r[c - 8] ^ r[c - 14] ^ r[c - 16]) << 1 | e >>> 31;
            for (var l = 0; l < 80; ++l) {
                var h = ~~(l / 20),
                    d = rotl5(n) + ft(h, i, o, s) + u + r[l] + a[h] | 0;
                u = s, s = o, o = rotl30(i), i = n, n = d
            }
            this._a = n + this._a | 0, this._b = i + this._b | 0, this._c = o + this._c | 0, this._d = s + this._d | 0, this._e = u + this._e | 0
        }, Sha1.prototype._hash = function () {
            var t = o.allocUnsafe(20);
            return t.writeInt32BE(0 | this._a, 0), t.writeInt32BE(0 | this._b, 4), t.writeInt32BE(0 | this._c, 8), t.writeInt32BE(0 | this._d, 12), t.writeInt32BE(0 | this._e, 16), t
        }, t.exports = Sha1
    }, function (t, e, r) {
        var n = r(1),
            i = r(282),
            o = r(69),
            a = r(3).Buffer,
            s = new Array(64);

        function Sha224() {
            this.init(), this._w = s, o.call(this, 64, 56)
        }
        n(Sha224, i), Sha224.prototype.init = function () {
            return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this
        }, Sha224.prototype._hash = function () {
            var t = a.allocUnsafe(28);
            return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t
        }, t.exports = Sha224
    }, function (t, e, r) {
        var n = r(1),
            i = r(283),
            o = r(69),
            a = r(3).Buffer,
            s = new Array(160);

        function Sha384() {
            this.init(), this._w = s, o.call(this, 128, 112)
        }
        n(Sha384, i), Sha384.prototype.init = function () {
            return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this
        }, Sha384.prototype._hash = function () {
            var t = a.allocUnsafe(48);

            function writeInt64BE(e, r, n) {
                t.writeInt32BE(e, n), t.writeInt32BE(r, n + 4)
            }
            return writeInt64BE(this._ah, this._al, 0), writeInt64BE(this._bh, this._bl, 8), writeInt64BE(this._ch, this._cl, 16), writeInt64BE(this._dh, this._dl, 24), writeInt64BE(this._eh, this._el, 32), writeInt64BE(this._fh, this._fl, 40), t
        }, t.exports = Sha384
    }, function (t, e, r) {
        (function (t) {
            var n = this && this.__importDefault || function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.Address = void 0;
            var i = n(r(18)),
                o = n(r(53)),
                a = r(54),
                s = r(273),
                u = function () {
                    function Address(t) {
                        i.default(20 === t.length, "Invalid address length"), this.buf = t
                    }
                    return Address.zero = function () {
                        return new Address(a.zeros(20))
                    }, Address.fromString = function (t) {
                        return i.default(s.isValidAddress(t), "Invalid address"), new Address(a.toBuffer(t))
                    }, Address.fromPublicKey = function (e) {
                        return i.default(t.isBuffer(e), "Public key should be Buffer"), new Address(s.pubToAddress(e))
                    }, Address.fromPrivateKey = function (e) {
                        return i.default(t.isBuffer(e), "Private key should be Buffer"), new Address(s.privateToAddress(e))
                    }, Address.generate = function (e, r) {
                        return i.default(o.default.isBN(r)), new Address(s.generateAddress(e.buf, r.toArrayLike(t)))
                    }, Address.generate2 = function (e, r, n) {
                        return i.default(t.isBuffer(r)), i.default(t.isBuffer(n)), new Address(s.generateAddress2(e.buf, r, n))
                    }, Address.prototype.equals = function (t) {
                        return this.buf.equals(t.buf)
                    }, Address.prototype.isZero = function () {
                        return this.equals(Address.zero())
                    }, Address.prototype.isPrecompileOrSystemAddress = function () {
                        var t = new o.default(this.buf),
                            e = new o.default(0),
                            r = new o.default("ffff", "hex");
                        return t.gte(e) && t.lte(r)
                    }, Address.prototype.toString = function () {
                        return "0x" + this.buf.toString("hex")
                    }, Address.prototype.toBuffer = function () {
                        return t.from(this.buf)
                    }, Address
                }();
            e.Address = u
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (t) {
            var n = this && this.__importDefault || function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.hashPersonalMessage = e.isValidSignature = e.fromRpcSig = e.toCompactSig = e.toRpcSig = e.ecrecover = e.ecsign = void 0;
            var i = r(121),
                o = n(r(53)),
                a = r(54),
                s = r(183),
                u = r(123),
                c = r(187);

            function calculateSigRecovery(t, e) {
                var r = c.toType(t, c.TypeOutput.BN);
                if (!e) return r.subn(27);
                var n = c.toType(e, c.TypeOutput.BN);
                return r.sub(n.muln(2).addn(35))
            }

            function isValidSigRecovery(t) {
                var e = new o.default(t);
                return e.eqn(0) || e.eqn(1)
            }
            e.ecsign = function ecsign(e, r, n) {
                var o = i.ecdsaSign(e, r),
                    a = o.signature,
                    s = o.recid,
                    u = t.from(a.slice(0, 32)),
                    l = t.from(a.slice(32, 64));
                if (!n || "number" == typeof n) {
                    if (n && !Number.isSafeInteger(n)) throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");
                    return {
                        r: u,
                        s: l,
                        v: n ? s + (2 * n + 35) : s + 27
                    }
                }
                return {
                    r: u,
                    s: l,
                    v: c.toType(n, c.TypeOutput.BN).muln(2).addn(35).addn(s).toArrayLike(t)
                }
            }, e.ecrecover = function (e, r, n, o, s) {
                var u = t.concat([a.setLengthLeft(n, 32), a.setLengthLeft(o, 32)], 64),
                    c = calculateSigRecovery(r, s);
                if (!isValidSigRecovery(c)) throw new Error("Invalid signature v value");
                var l = i.ecdsaRecover(u, c.toNumber(), e);
                return t.from(i.publicKeyConvert(l, !1).slice(1))
            }, e.toRpcSig = function (e, r, n, i) {
                if (!isValidSigRecovery(calculateSigRecovery(e, i))) throw new Error("Invalid signature v value");
                return a.bufferToHex(t.concat([a.setLengthLeft(r, 32), a.setLengthLeft(n, 32), a.toBuffer(e)]))
            }, e.toCompactSig = function (e, r, n, i) {
                if (!isValidSigRecovery(calculateSigRecovery(e, i))) throw new Error("Invalid signature v value");
                var o = c.toType(e, c.TypeOutput.Number),
                    s = n;
                return (o > 28 && o % 2 == 1 || 1 === o || 28 === o) && ((s = t.from(n))[0] |= 128), a.bufferToHex(t.concat([a.setLengthLeft(r, 32), a.setLengthLeft(s, 32)]))
            }, e.fromRpcSig = function (t) {
                var e, r, n, i = a.toBuffer(t);
                if (i.length >= 65) e = i.slice(0, 32), r = i.slice(32, 64), n = a.bufferToInt(i.slice(64));
                else {
                    if (64 !== i.length) throw new Error("Invalid signature length");
                    e = i.slice(0, 32), r = i.slice(32, 64), n = a.bufferToInt(i.slice(32, 33)) >> 7, r[0] &= 127
                }
                return n < 27 && (n += 27), {
                    v: n,
                    r: e,
                    s: r
                }
            }, e.isValidSignature = function (t, e, r, n, i) {
                void 0 === n && (n = !0);
                var a = new o.default("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0", 16),
                    s = new o.default("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141", 16);
                if (32 !== e.length || 32 !== r.length) return !1;
                if (!isValidSigRecovery(calculateSigRecovery(t, i))) return !1;
                var u = new o.default(e),
                    c = new o.default(r);
                return !(u.isZero() || u.gt(s) || c.isZero() || c.gt(s)) && (!n || 1 !== c.cmp(a))
            }, e.hashPersonalMessage = function (e) {
                u.assertIsBuffer(e);
                var r = t.from("Ethereum Signed Message:\n" + e.length.toString(), "utf-8");
                return s.keccak(t.concat([r, e]))
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (t) {
            var n = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
                    void 0 === n && (n = r), Object.defineProperty(t, n, {
                        enumerable: !0,
                        get: function () {
                            return e[r]
                        }
                    })
                } : function (t, e, r, n) {
                    void 0 === n && (n = r), t[n] = e[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function (t, e) {
                    Object.defineProperty(t, "default", {
                        enumerable: !0,
                        value: e
                    })
                } : function (t, e) {
                    t.default = e
                }),
                o = this && this.__importStar || function (t) {
                    if (t && t.__esModule) return t;
                    var e = {};
                    if (null != t)
                        for (var r in t) "default" !== r && Object.hasOwnProperty.call(t, r) && n(e, t, r);
                    return i(e, t), e
                },
                a = this && this.__importDefault || function (t) {
                    return t && t.__esModule ? t : {
                        default: t
                    }
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.defineProperties = void 0;
            var s = a(r(18)),
                u = o(r(20)),
                c = o(r(120)),
                l = r(54);
            e.defineProperties = function (e, r, n) {
                if (e.raw = [], e._fields = [], e.toJSON = function (t) {
                        if (void 0 === t && (t = !1), t) {
                            var r = {};
                            return e._fields.forEach((function (t) {
                                r[t] = "0x" + e[t].toString("hex")
                            })), r
                        }
                        return l.baToJSON(e.raw)
                    }, e.serialize = function serialize() {
                        return c.encode(e.raw)
                    }, r.forEach((function (r, n) {
                        function getter() {
                            return e.raw[n]
                        }

                        function setter(i) {
                            "00" !== (i = l.toBuffer(i)).toString("hex") || r.allowZero || (i = t.allocUnsafe(0)), r.allowLess && r.length ? (i = l.unpadBuffer(i), s.default(r.length >= i.length, "The field " + r.name + " must not have more " + r.length + " bytes")) : r.allowZero && 0 === i.length || !r.length || s.default(r.length === i.length, "The field " + r.name + " must have byte length of " + r.length), e.raw[n] = i
                        }
                        e._fields.push(r.name), Object.defineProperty(e, r.name, {
                            enumerable: !0,
                            configurable: !0,
                            get: getter,
                            set: setter
                        }), r.default && (e[r.name] = r.default), r.alias && Object.defineProperty(e, r.alias, {
                            enumerable: !1,
                            configurable: !0,
                            set: setter,
                            get: getter
                        })
                    })), n)
                    if ("string" == typeof n && (n = t.from(u.stripHexPrefix(n), "hex")), t.isBuffer(n) && (n = c.decode(n)), Array.isArray(n)) {
                        if (n.length > e._fields.length) throw new Error("wrong number of fields in data");
                        n.forEach((function (t, r) {
                            e[e._fields[r]] = l.toBuffer(t)
                        }))
                    } else {
                        if ("object" != typeof n) throw new Error("invalid data");
                        var i = Object.keys(n);
                        r.forEach((function (t) {
                            -1 !== i.indexOf(t.name) && (e[t.name] = n[t.name]), -1 !== i.indexOf(t.alias) && (e[t.alias] = n[t.alias])
                        }))
                    }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
                void 0 === n && (n = r), Object.defineProperty(t, n, {
                    enumerable: !0,
                    get: function () {
                        return e[r]
                    }
                })
            } : function (t, e, r, n) {
                void 0 === n && (n = r), t[n] = e[r]
            }),
            i = this && this.__setModuleDefault || (Object.create ? function (t, e) {
                Object.defineProperty(t, "default", {
                    enumerable: !0,
                    value: e
                })
            } : function (t, e) {
                t.default = e
            }),
            o = this && this.__importStar || function (t) {
                if (t && t.__esModule) return t;
                var e = {};
                if (null != t)
                    for (var r in t) "default" !== r && Object.hasOwnProperty.call(t, r) && n(e, t, r);
                return i(e, t), e
            },
            a = this && this.__importDefault || function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.rlp = e.BN = void 0;
        var s = a(r(53));
        e.BN = s.default;
        var u = o(r(120));
        e.rlp = u
    }, function (t, e, r) {
        var n = this && this.__values || function (t) {
                var e = "function" == typeof Symbol && Symbol.iterator,
                    r = e && t[e],
                    n = 0;
                if (r) return r.call(t);
                if (t && "number" == typeof t.length) return {
                    next: function () {
                        return t && n >= t.length && (t = void 0), {
                            value: t && t[n++],
                            done: !t
                        }
                    }
                };
                throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.")
            },
            i = this && this.__importDefault || function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.chains = e._getInitializedChains = void 0;
        var o = i(r(657)),
            a = i(r(658)),
            s = i(r(659)),
            u = i(r(660)),
            c = i(r(661)),
            l = i(r(662));

        function _getInitializedChains(t) {
            var e, r, i = {
                    1: "mainnet",
                    3: "ropsten",
                    4: "rinkeby",
                    42: "kovan",
                    5: "goerli",
                    123: "calaveras"
                },
                h = {
                    mainnet: o.default,
                    ropsten: a.default,
                    rinkeby: s.default,
                    kovan: u.default,
                    goerli: c.default,
                    calaveras: l.default
                };
            if (t) try {
                for (var d = n(t), p = d.next(); !p.done; p = d.next()) {
                    var m = p.value,
                        y = m.name;
                    i[m.chainId.toString()] = y, h[y] = m
                }
            } catch (t) {
                e = {
                    error: t
                }
            } finally {
                try {
                    p && !p.done && (r = d.return) && r.call(d)
                } finally {
                    if (e) throw e.error
                }
            }
            return h.names = i, h
        }
        e._getInitializedChains = _getInitializedChains, e.chains = _getInitializedChains()
    }, function (t) {
        t.exports = JSON.parse('{"name":"mainnet","chainId":1,"networkId":1,"defaultHardfork":"istanbul","consensus":{"type":"pow","algorithm":"ethash","ethash":{}},"comment":"The Ethereum main chain","url":"https://ethstats.net/","genesis":{"hash":"0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3","timestamp":null,"gasLimit":5000,"difficulty":17179869184,"nonce":"0x0000000000000042","extraData":"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa","stateRoot":"0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0xfc64ec04"},{"name":"homestead","block":1150000,"forkHash":"0x97c2c34c"},{"name":"dao","block":1920000,"forkHash":"0x91d1f948"},{"name":"tangerineWhistle","block":2463000,"forkHash":"0x7a64da13"},{"name":"spuriousDragon","block":2675000,"forkHash":"0x3edd5b10"},{"name":"byzantium","block":4370000,"forkHash":"0xa00bc324"},{"name":"constantinople","block":7280000,"forkHash":"0x668db0af"},{"name":"petersburg","block":7280000,"forkHash":"0x668db0af"},{"name":"istanbul","block":9069000,"forkHash":"0x879d6e30"},{"name":"muirGlacier","block":9200000,"forkHash":"0xe029e991"},{"name":"berlin","block":12244000,"forkHash":"0x0eb440f6"},{"name":"london","block":12965000,"forkHash":"0xb715077d"}],"bootstrapNodes":[{"ip":"18.138.108.67","port":30303,"id":"d860a01f9722d78051619d1e2351aba3f43f943f6f00718d1b9baa4101932a1f5011f16bb2b1bb35db20d6fe28fa0bf09636d26a87d31de9ec6203eeedb1f666","location":"ap-southeast-1-001","comment":"bootnode-aws-ap-southeast-1-001"},{"ip":"3.209.45.79","port":30303,"id":"22a8232c3abc76a16ae9d6c3b164f98775fe226f0917b0ca871128a74a8e9630b458460865bab457221f1d448dd9791d24c4e5d88786180ac185df813a68d4de","location":"us-east-1-001","comment":"bootnode-aws-us-east-1-001"},{"ip":"34.255.23.113","port":30303,"id":"ca6de62fce278f96aea6ec5a2daadb877e51651247cb96ee310a318def462913b653963c155a0ef6c7d50048bba6e6cea881130857413d9f50a621546b590758","location":"eu-west-1-001","comment":"bootnode-aws-eu-west-1-001"},{"ip":"35.158.244.151","port":30303,"id":"279944d8dcd428dffaa7436f25ca0ca43ae19e7bcf94a8fb7d1641651f92d121e972ac2e8f381414b80cc8e5555811c2ec6e1a99bb009b3f53c4c69923e11bd8","location":"eu-central-1-001","comment":"bootnode-aws-eu-central-1-001"},{"ip":"52.187.207.27","port":30303,"id":"8499da03c47d637b20eee24eec3c356c9a2e6148d6fe25ca195c7949ab8ec2c03e3556126b0d7ed644675e78c4318b08691b7b57de10e5f0d40d05b09238fa0a","location":"australiaeast-001","comment":"bootnode-azure-australiaeast-001"},{"ip":"191.234.162.198","port":30303,"id":"103858bdb88756c71f15e9b5e09b56dc1be52f0a5021d46301dbbfb7e130029cc9d0d6f73f693bc29b665770fff7da4d34f3c6379fe12721b5d7a0bcb5ca1fc1","location":"brazilsouth-001","comment":"bootnode-azure-brazilsouth-001"},{"ip":"52.231.165.108","port":30303,"id":"715171f50508aba88aecd1250af392a45a330af91d7b90701c436b618c86aaa1589c9184561907bebbb56439b8f8787bc01f49a7c77276c58c1b09822d75e8e8","location":"koreasouth-001","comment":"bootnode-azure-koreasouth-001"},{"ip":"104.42.217.25","port":30303,"id":"5d6d7cd20d6da4bb83a1d28cadb5d409b64edf314c0335df658c1a54e32c7c4a7ab7823d57c39b6a757556e68ff1df17c748b698544a55cb488b52479a92b60f","location":"westus-001","comment":"bootnode-azure-westus-001"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net"]}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"ropsten","chainId":3,"networkId":3,"defaultHardfork":"istanbul","consensus":{"type":"pow","algorithm":"ethash","ethash":{}},"comment":"PoW test network","url":"https://github.com/ethereum/ropsten","genesis":{"hash":"0x41941023680923e0fe4d74a34bdac8141f2540e3ae90623718e47d66d1ca4a2d","timestamp":null,"gasLimit":16777216,"difficulty":1048576,"nonce":"0x0000000000000042","extraData":"0x3535353535353535353535353535353535353535353535353535353535353535","stateRoot":"0x217b0bbcfb72e2d57e28f33cb361b9983513177755dc3f33ce3e7022ed62b77b"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0x30c7ddbc"},{"name":"homestead","block":0,"forkHash":"0x30c7ddbc"},{"name":"dao","block":null,"forkHash":null},{"name":"tangerineWhistle","block":0,"forkHash":"0x30c7ddbc"},{"name":"spuriousDragon","block":10,"forkHash":"0x63760190"},{"name":"byzantium","block":1700000,"forkHash":"0x3ea159c7"},{"name":"constantinople","block":4230000,"forkHash":"0x97b544f3"},{"name":"petersburg","block":4939394,"forkHash":"0xd6e2149b"},{"name":"istanbul","block":6485846,"forkHash":"0x4bc66396"},{"name":"muirGlacier","block":7117117,"forkHash":"0x6727ef90"},{"name":"berlin","block":9812189,"forkHash":"0xa157d377"},{"name":"london","block":10499401,"forkHash":"0x7119b6b3"}],"bootstrapNodes":[{"ip":"52.176.7.10","port":30303,"id":"30b7ab30a01c124a6cceca36863ece12c4f5fa68e3ba9b0b51407ccc002eeed3b3102d20a88f1c1d3c3154e2449317b8ef95090e77b312d5cc39354f86d5d606","location":"","comment":"US-Azure geth"},{"ip":"52.176.100.77","port":30303,"id":"865a63255b3bb68023b6bffd5095118fcc13e79dcf014fe4e47e065c350c7cc72af2e53eff895f11ba1bbb6a2b33271c1116ee870f266618eadfc2e78aa7349c","location":"","comment":"US-Azure parity"},{"ip":"52.232.243.152","port":30303,"id":"6332792c4a00e3e4ee0926ed89e0d27ef985424d97b6a45bf0f23e51f0dcb5e66b875777506458aea7af6f9e4ffb69f43f3778ee73c81ed9d34c51c4b16b0b0f","location":"","comment":"Parity"},{"ip":"192.81.208.223","port":30303,"id":"94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09","location":"","comment":"@gpip"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.ropsten.ethdisco.net"]}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"rinkeby","chainId":4,"networkId":4,"defaultHardfork":"istanbul","consensus":{"type":"poa","algorithm":"clique","clique":{"period":15,"epoch":30000}},"comment":"PoA test network","url":"https://www.rinkeby.io","genesis":{"hash":"0x6341fd3daf94b748c72ced5a5b26028f2474f5f00d824504e4fa37a75767e177","timestamp":"0x58ee40ba","gasLimit":4700000,"difficulty":1,"nonce":"0x0000000000000000","extraData":"0x52657370656374206d7920617574686f7269746168207e452e436172746d616e42eb768f2244c8811c63729a21a3569731535f067ffc57839b00206d1ad20c69a1981b489f772031b279182d99e65703f0076e4812653aab85fca0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","stateRoot":"0x53580584816f617295ea26c0e17641e0120cab2f0a8ffb53a866fd53aa8e8c2d"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0x3b8e0691"},{"name":"homestead","block":1,"forkHash":"0x60949295"},{"name":"dao","block":null,"forkHash":null},{"name":"tangerineWhistle","block":2,"forkHash":"0x8bde40dd"},{"name":"spuriousDragon","block":3,"forkHash":"0xcb3a64bb"},{"name":"byzantium","block":1035301,"forkHash":"0x8d748b57"},{"name":"constantinople","block":3660663,"forkHash":"0xe49cab14"},{"name":"petersburg","block":4321234,"forkHash":"0xafec6b27"},{"name":"istanbul","block":5435345,"forkHash":"0xcbdb8838"},{"name":"berlin","block":8290928,"forkHash":"0x6910c8bd"},{"name":"london","block":8897988,"forkHash":"0x8e29f2f3"}],"bootstrapNodes":[{"ip":"52.169.42.101","port":30303,"id":"a24ac7c5484ef4ed0c5eb2d36620ba4e4aa13b8c84684e1b4aab0cebea2ae45cb4d375b77eab56516d34bfbd3c1a833fc51296ff084b770b94fb9028c4d25ccf","location":"","comment":"IE"},{"ip":"52.3.158.184","port":30303,"id":"343149e4feefa15d882d9fe4ac7d88f885bd05ebb735e547f12e12080a9fa07c8014ca6fd7f373123488102fe5e34111f8509cf0b7de3f5b44339c9f25e87cb8","location":"","comment":"INFURA"},{"ip":"159.89.28.211","port":30303,"id":"b6b28890b006743680c52e64e0d16db57f28124885595fa03a562be1d2bf0f3a1da297d56b13da25fb992888fd556d4c1a27b1f39d531bde7de1921c90061cc6","location":"","comment":"AKASHA"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.rinkeby.ethdisco.net"]}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"kovan","chainId":42,"networkId":42,"defaultHardfork":"istanbul","consensus":{"type":"poa","algorithm":"aura","aura":{}},"comment":"Parity PoA test network","url":"https://kovan-testnet.github.io/website/","genesis":{"hash":"0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9","timestamp":null,"gasLimit":6000000,"difficulty":131072,"nonce":"0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","extraData":"0x","stateRoot":"0x2480155b48a1cea17d67dbfdfaafe821c1d19cdd478c5358e8ec56dec24502b2"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0x010ffe56"},{"name":"homestead","block":0,"forkHash":"0x010ffe56"},{"name":"dao","block":null,"forkHash":"0x010ffe56"},{"name":"tangerineWhistle","block":0,"forkHash":"0x010ffe56"},{"name":"spuriousDragon","block":0,"forkHash":"0x010ffe56"},{"name":"byzantium","block":5067000,"forkHash":"0x7f83c620"},{"name":"constantinople","block":9200000,"forkHash":"0xa94e3dc4"},{"name":"petersburg","block":10255201,"forkHash":"0x186874aa"},{"name":"istanbul","block":14111141,"forkHash":"0x7f6599a6"},{"name":"berlin","block":null,"forkHash":null},{"name":"london","block":null,"forkHash":null}],"bootstrapNodes":[{"ip":"116.203.116.241","port":30303,"id":"16898006ba2cd4fa8bf9a3dfe32684c178fa861df144bfc21fe800dc4838a03e342056951fa9fd533dcb0be1219e306106442ff2cf1f7e9f8faa5f2fc1a3aa45","location":"","comment":"1"},{"ip":"3.217.96.11","port":30303,"id":"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0","location":"","comment":"2"},{"ip":"108.61.170.124","port":30303,"id":"740e1c8ea64e71762c71a463a04e2046070a0c9394fcab5891d41301dc473c0cff00ebab5a9bc87fbcb610ab98ac18225ff897bc8b7b38def5975d5ceb0a7d7c","location":"","comment":"3"},{"ip":"157.230.31.163","port":30303,"id":"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0","location":"","comment":"4"}]}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"goerli","chainId":5,"networkId":5,"defaultHardfork":"istanbul","consensus":{"type":"poa","algorithm":"clique","clique":{"period":15,"epoch":30000}},"comment":"Cross-client PoA test network","url":"https://github.com/goerli/testnet","genesis":{"hash":"0xbf7e331f7f7c1dd2e05159666b3bf8bc7a8a3a9eb1d518969eab529dd9b88c1a","timestamp":"0x5c51a607","gasLimit":10485760,"difficulty":1,"nonce":"0x0000000000000000","extraData":"0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","stateRoot":"0x5d6cded585e73c4e322c30c2f782a336316f17dd85a4863b9d838d2d4b8b3008"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0xa3f5ab08"},{"name":"homestead","block":0,"forkHash":"0xa3f5ab08"},{"name":"dao","block":null,"forkHash":"0xa3f5ab08"},{"name":"tangerineWhistle","block":0,"forkHash":"0xa3f5ab08"},{"name":"spuriousDragon","block":0,"forkHash":"0xa3f5ab08"},{"name":"byzantium","block":0,"forkHash":"0xa3f5ab08"},{"name":"constantinople","block":0,"forkHash":"0xa3f5ab08"},{"name":"petersburg","block":0,"forkHash":"0xa3f5ab08"},{"name":"istanbul","block":1561651,"forkHash":"0xc25efa5c"},{"name":"berlin","block":4460644,"forkHash":"0x757a1c47"},{"name":"london","block":5062605,"forkHash":"0xb8c6299d"}],"bootstrapNodes":[{"ip":"51.141.78.53","port":30303,"id":"011f758e6552d105183b1761c5e2dea0111bc20fd5f6422bc7f91e0fabbec9a6595caf6239b37feb773dddd3f87240d99d859431891e4a642cf2a0a9e6cbb98a","location":"","comment":"Upstream bootnode 1"},{"ip":"13.93.54.137","port":30303,"id":"176b9417f511d05b6b2cf3e34b756cf0a7096b3094572a8f6ef4cdcb9d1f9d00683bf0f83347eebdf3b81c3521c2332086d9592802230bf528eaf606a1d9677b","location":"","comment":"Upstream bootnode 2"},{"ip":"94.237.54.114","port":30313,"id":"46add44b9f13965f7b9875ac6b85f016f341012d84f975377573800a863526f4da19ae2c620ec73d11591fa9510e992ecc03ad0751f53cc02f7c7ed6d55c7291","location":"","comment":"Upstream bootnode 3"},{"ip":"18.218.250.66","port":30313,"id":"b5948a2d3e9d486c4d75bf32713221c2bd6cf86463302339299bd227dc2e276cd5a1c7ca4f43a0e9122fe9af884efed563bd2a1fd28661f3b5f5ad7bf1de5949","location":"","comment":"Upstream bootnode 4"},{"ip":"3.11.147.67","port":30303,"id":"a61215641fb8714a373c80edbfa0ea8878243193f57c96eeb44d0bc019ef295abd4e044fd619bfc4c59731a73fb79afe84e9ab6da0c743ceb479cbb6d263fa91","location":"","comment":"Ethereum Foundation bootnode"},{"ip":"51.15.116.226","port":30303,"id":"a869b02cec167211fb4815a82941db2e7ed2936fd90e78619c53eb17753fcf0207463e3419c264e2a1dd8786de0df7e68cf99571ab8aeb7c4e51367ef186b1dd","location":"","comment":"Goerli Initiative bootnode"},{"ip":"51.15.119.157","port":30303,"id":"807b37ee4816ecf407e9112224494b74dd5933625f655962d892f2f0f02d7fbbb3e2a94cf87a96609526f30c998fd71e93e2f53015c558ffc8b03eceaf30ee33","location":"","comment":"Goerli Initiative bootnode"},{"ip":"51.15.119.157","port":40303,"id":"a59e33ccd2b3e52d578f1fbd70c6f9babda2650f0760d6ff3b37742fdcdfdb3defba5d56d315b40c46b70198c7621e63ffa3f987389c7118634b0fefbbdfa7fd","location":"","comment":"Goerli Initiative bootnode"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net"]}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"calaveras","chainId":123,"networkId":123,"defaultHardfork":"berlin","consensus":{"type":"poa","algorithm":"clique","clique":{"period":30,"epoch":30000}},"comment":"The Calaveras testnet chain","url":"https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/client-integration-testnets/calaveras.md","genesis":{"hash":"0xeb9233d066c275efcdfed8037f4fc082770176aefdbcb7691c71da412a5670f2","gasLimit":"0x47b760","difficulty":"0x1","nonce":"0x0000000000000000","extraData":"0x00000000000000000000000000000000000000000000000000000000000000005211cea3870c7ba7c6c44b185e62eecdb864cd8c560228ce57d31efbf64c200b2c200aacec78cf17a7148e784fe95a7a750335f8b9572ee28d72e7650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","stateRoot":"0x664c93de37eb4a72953ea42b8c046cdb64c9f0b0bca5505ade8d970d49ebdb8c","timestamp":"0x60b3877f"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0xe34c4aff"},{"name":"homestead","block":0,"forkHash":"0xe34c4aff"},{"name":"dao","block":null,"forkHash":"0xe34c4aff"},{"name":"tangerineWhistle","block":0,"forkHash":"0xe34c4aff"},{"name":"spuriousDragon","block":0,"forkHash":"0xe34c4aff"},{"name":"byzantium","block":0,"forkHash":"0xe34c4aff"},{"name":"constantinople","block":0,"forkHash":"0xe34c4aff"},{"name":"petersburg","block":0,"forkHash":"0xe34c4aff"},{"name":"istanbul","block":0,"forkHash":"0xe34c4aff"},{"name":"berlin","block":0,"forkHash":"0xe34c4aff"},{"name":"london","block":500,"forkHash":"0x173783e4"}],"bootstrapNodes":[{"ip":"3.21.156.138","port":30303,"id":"39eb08bbfad87481553c471a63ff2a4b4885fffa4ff50f1cf46744d9ad6e2f764ede146fe4df563fa9ccda1a46b9b1a88fb08135e1bf1d71b320912499da773d","location":"","comment":"Calaveras bootnode 1"},{"ip":"3.9.20.133","port":30303,"id":"9e1096aa59862a6f164994cb5cb16f5124d6c992cdbf4535ff7dea43ea1512afe5448dca9df1b7ab0726129603f1a3336b631e4d7a1a44c94daddd03241587f9","location":"","comment":"Calaveras bootnode 2"}]}')
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.hardforks = void 0, e.hardforks = [
            ["chainstart", r(664)],
            ["homestead", r(665)],
            ["dao", r(666)],
            ["tangerineWhistle", r(667)],
            ["spuriousDragon", r(668)],
            ["byzantium", r(669)],
            ["constantinople", r(670)],
            ["petersburg", r(671)],
            ["istanbul", r(672)],
            ["muirGlacier", r(673)],
            ["berlin", r(674)],
            ["london", r(675)]
        ]
    }, function (t) {
        t.exports = JSON.parse('{"name":"chainstart","comment":"Start of the Ethereum main chain","url":"","status":"","gasConfig":{"minGasLimit":{"v":5000,"d":"Minimum the gas limit may ever be"},"gasLimitBoundDivisor":{"v":1024,"d":"The bound divisor of the gas limit, used in update calculations"},"maxRefundQuotient":{"v":2,"d":"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"}},"gasPrices":{"base":{"v":2,"d":"Gas base cost, used e.g. for ChainID opcode (Istanbul)"},"tierStep":{"v":[0,2,3,5,8,10,20],"d":"Once per operation, for a selection of them"},"exp":{"v":10,"d":"Base fee of the EXP opcode"},"expByte":{"v":10,"d":"Times ceil(log256(exponent)) for the EXP instruction"},"sha3":{"v":30,"d":"Base fee of the SHA3 opcode"},"sha3Word":{"v":6,"d":"Once per word of the SHA3 operation\'s data"},"sload":{"v":50,"d":"Base fee of the SLOAD opcode"},"sstoreSet":{"v":20000,"d":"Once per SSTORE operation if the zeroness changes from zero"},"sstoreReset":{"v":5000,"d":"Once per SSTORE operation if the zeroness does not change from zero"},"sstoreRefund":{"v":15000,"d":"Once per SSTORE operation if the zeroness changes to zero"},"jumpdest":{"v":1,"d":"Base fee of the JUMPDEST opcode"},"log":{"v":375,"d":"Base fee of the LOG opcode"},"logData":{"v":8,"d":"Per byte in a LOG* operation\'s data"},"logTopic":{"v":375,"d":"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas"},"create":{"v":32000,"d":"Base fee of the CREATE opcode"},"call":{"v":40,"d":"Base fee of the CALL opcode"},"callStipend":{"v":2300,"d":"Free gas given at beginning of call"},"callValueTransfer":{"v":9000,"d":"Paid for CALL when the value transfor is non-zero"},"callNewAccount":{"v":25000,"d":"Paid for CALL when the destination address didn\'t exist prior"},"selfdestructRefund":{"v":24000,"d":"Refunded following a selfdestruct operation"},"memory":{"v":3,"d":"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL"},"quadCoeffDiv":{"v":512,"d":"Divisor for the quadratic particle of the memory cost equation"},"createData":{"v":200,"d":""},"tx":{"v":21000,"d":"Per transaction. NOTE: Not payable on data of calls between transactions"},"txCreation":{"v":32000,"d":"The cost of creating a contract via tx"},"txDataZero":{"v":4,"d":"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions"},"txDataNonZero":{"v":68,"d":"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},"copy":{"v":3,"d":"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added"},"ecRecover":{"v":3000,"d":""},"sha256":{"v":60,"d":""},"sha256Word":{"v":12,"d":""},"ripemd160":{"v":600,"d":""},"ripemd160Word":{"v":120,"d":""},"identity":{"v":15,"d":""},"identityWord":{"v":3,"d":""},"stop":{"v":0,"d":"Base fee of the STOP opcode"},"add":{"v":3,"d":"Base fee of the ADD opcode"},"mul":{"v":5,"d":"Base fee of the MUL opcode"},"sub":{"v":3,"d":"Base fee of the SUB opcode"},"div":{"v":5,"d":"Base fee of the DIV opcode"},"sdiv":{"v":5,"d":"Base fee of the SDIV opcode"},"mod":{"v":5,"d":"Base fee of the MOD opcode"},"smod":{"v":5,"d":"Base fee of the SMOD opcode"},"addmod":{"v":8,"d":"Base fee of the ADDMOD opcode"},"mulmod":{"v":8,"d":"Base fee of the MULMOD opcode"},"signextend":{"v":5,"d":"Base fee of the SIGNEXTEND opcode"},"lt":{"v":3,"d":"Base fee of the LT opcode"},"gt":{"v":3,"d":"Base fee of the GT opcode"},"slt":{"v":3,"d":"Base fee of the SLT opcode"},"sgt":{"v":3,"d":"Base fee of the SGT opcode"},"eq":{"v":3,"d":"Base fee of the EQ opcode"},"iszero":{"v":3,"d":"Base fee of the ISZERO opcode"},"and":{"v":3,"d":"Base fee of the AND opcode"},"or":{"v":3,"d":"Base fee of the OR opcode"},"xor":{"v":3,"d":"Base fee of the XOR opcode"},"not":{"v":3,"d":"Base fee of the NOT opcode"},"byte":{"v":3,"d":"Base fee of the BYTE opcode"},"address":{"v":2,"d":"Base fee of the ADDRESS opcode"},"balance":{"v":20,"d":"Base fee of the BALANCE opcode"},"origin":{"v":2,"d":"Base fee of the ORIGIN opcode"},"caller":{"v":2,"d":"Base fee of the CALLER opcode"},"callvalue":{"v":2,"d":"Base fee of the CALLVALUE opcode"},"calldataload":{"v":3,"d":"Base fee of the CALLDATALOAD opcode"},"calldatasize":{"v":2,"d":"Base fee of the CALLDATASIZE opcode"},"calldatacopy":{"v":3,"d":"Base fee of the CALLDATACOPY opcode"},"codesize":{"v":2,"d":"Base fee of the CODESIZE opcode"},"codecopy":{"v":3,"d":"Base fee of the CODECOPY opcode"},"gasprice":{"v":2,"d":"Base fee of the GASPRICE opcode"},"extcodesize":{"v":20,"d":"Base fee of the EXTCODESIZE opcode"},"extcodecopy":{"v":20,"d":"Base fee of the EXTCODECOPY opcode"},"blockhash":{"v":20,"d":"Base fee of the BLOCKHASH opcode"},"coinbase":{"v":2,"d":"Base fee of the COINBASE opcode"},"timestamp":{"v":2,"d":"Base fee of the TIMESTAMP opcode"},"number":{"v":2,"d":"Base fee of the NUMBER opcode"},"difficulty":{"v":2,"d":"Base fee of the DIFFICULTY opcode"},"gaslimit":{"v":2,"d":"Base fee of the GASLIMIT opcode"},"pop":{"v":2,"d":"Base fee of the POP opcode"},"mload":{"v":3,"d":"Base fee of the MLOAD opcode"},"mstore":{"v":3,"d":"Base fee of the MSTORE opcode"},"mstore8":{"v":3,"d":"Base fee of the MSTORE8 opcode"},"sstore":{"v":0,"d":"Base fee of the SSTORE opcode"},"jump":{"v":8,"d":"Base fee of the JUMP opcode"},"jumpi":{"v":10,"d":"Base fee of the JUMPI opcode"},"pc":{"v":2,"d":"Base fee of the PC opcode"},"msize":{"v":2,"d":"Base fee of the MSIZE opcode"},"gas":{"v":2,"d":"Base fee of the GAS opcode"},"push":{"v":3,"d":"Base fee of the PUSH opcode"},"dup":{"v":3,"d":"Base fee of the DUP opcode"},"swap":{"v":3,"d":"Base fee of the SWAP opcode"},"callcode":{"v":40,"d":"Base fee of the CALLCODE opcode"},"return":{"v":0,"d":"Base fee of the RETURN opcode"},"invalid":{"v":0,"d":"Base fee of the INVALID opcode"},"selfdestruct":{"v":0,"d":"Base fee of the SELFDESTRUCT opcode"}},"vm":{"stackLimit":{"v":1024,"d":"Maximum size of VM stack allowed"},"callCreateDepth":{"v":1024,"d":"Maximum depth of call/create stack"},"maxExtraDataSize":{"v":32,"d":"Maximum size extra data may be after Genesis"}},"pow":{"minimumDifficulty":{"v":131072,"d":"The minimum that the difficulty may ever be"},"difficultyBoundDivisor":{"v":2048,"d":"The bound divisor of the difficulty, used in the update calculations"},"durationLimit":{"v":13,"d":"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not"},"epochDuration":{"v":30000,"d":"Duration between proof-of-work epochs"},"timebombPeriod":{"v":100000,"d":"Exponential difficulty timebomb period"},"minerReward":{"v":"5000000000000000000","d":"the amount a miner get rewarded for mining a block"},"difficultyBombDelay":{"v":0,"d":"the amount of blocks to delay the difficulty bomb with"}}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"homestead","comment":"Homestead hardfork with protocol and network changes","url":"https://eips.ethereum.org/EIPS/eip-606","status":"Final","gasConfig":{},"gasPrices":{"delegatecall":{"v":40,"d":"Base fee of the DELEGATECALL opcode"}},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"dao","comment":"DAO rescue hardfork","url":"https://eips.ethereum.org/EIPS/eip-779","status":"Final","gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"tangerineWhistle","comment":"Hardfork with gas cost changes for IO-heavy operations","url":"https://eips.ethereum.org/EIPS/eip-608","status":"Final","gasConfig":{},"gasPrices":{"sload":{"v":200,"d":"Once per SLOAD operation"},"call":{"v":700,"d":"Once per CALL operation & message call transaction"},"extcodesize":{"v":700,"d":"Base fee of the EXTCODESIZE opcode"},"extcodecopy":{"v":700,"d":"Base fee of the EXTCODECOPY opcode"},"balance":{"v":400,"d":"Base fee of the BALANCE opcode"},"delegatecall":{"v":700,"d":"Base fee of the DELEGATECALL opcode"},"callcode":{"v":700,"d":"Base fee of the CALLCODE opcode"},"selfdestruct":{"v":5000,"d":"Base fee of the SELFDESTRUCT opcode"}},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"spuriousDragon","comment":"HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit","url":"https://eips.ethereum.org/EIPS/eip-607","status":"Final","gasConfig":{},"gasPrices":{"expByte":{"v":50,"d":"Times ceil(log256(exponent)) for the EXP instruction"}},"vm":{"maxCodeSize":{"v":24576,"d":"Maximum length of contract code"}},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"byzantium","comment":"Hardfork with new precompiles, instructions and other protocol changes","url":"https://eips.ethereum.org/EIPS/eip-609","status":"Final","gasConfig":{},"gasPrices":{"modexpGquaddivisor":{"v":20,"d":"Gquaddivisor from modexp precompile for gas calculation"},"ecAdd":{"v":500,"d":"Gas costs for curve addition precompile"},"ecMul":{"v":40000,"d":"Gas costs for curve multiplication precompile"},"ecPairing":{"v":100000,"d":"Base gas costs for curve pairing precompile"},"ecPairingWord":{"v":80000,"d":"Gas costs regarding curve pairing precompile input length"},"revert":{"v":0,"d":"Base fee of the REVERT opcode"},"staticcall":{"v":700,"d":"Base fee of the STATICCALL opcode"},"returndatasize":{"v":2,"d":"Base fee of the RETURNDATASIZE opcode"},"returndatacopy":{"v":3,"d":"Base fee of the RETURNDATACOPY opcode"}},"vm":{},"pow":{"minerReward":{"v":"3000000000000000000","d":"the amount a miner get rewarded for mining a block"},"difficultyBombDelay":{"v":3000000,"d":"the amount of blocks to delay the difficulty bomb with"}}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"constantinople","comment":"Postponed hardfork including EIP-1283 (SSTORE gas metering changes)","url":"https://eips.ethereum.org/EIPS/eip-1013","status":"Final","gasConfig":{},"gasPrices":{"netSstoreNoopGas":{"v":200,"d":"Once per SSTORE operation if the value doesn\'t change"},"netSstoreInitGas":{"v":20000,"d":"Once per SSTORE operation from clean zero"},"netSstoreCleanGas":{"v":5000,"d":"Once per SSTORE operation from clean non-zero"},"netSstoreDirtyGas":{"v":200,"d":"Once per SSTORE operation from dirty"},"netSstoreClearRefund":{"v":15000,"d":"Once per SSTORE operation for clearing an originally existing storage slot"},"netSstoreResetRefund":{"v":4800,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"netSstoreResetClearRefund":{"v":19800,"d":"Once per SSTORE operation for resetting to the original zero value"},"shl":{"v":3,"d":"Base fee of the SHL opcode"},"shr":{"v":3,"d":"Base fee of the SHR opcode"},"sar":{"v":3,"d":"Base fee of the SAR opcode"},"extcodehash":{"v":400,"d":"Base fee of the EXTCODEHASH opcode"},"create2":{"v":32000,"d":"Base fee of the CREATE2 opcode"}},"vm":{},"pow":{"minerReward":{"v":"2000000000000000000","d":"The amount a miner gets rewarded for mining a block"},"difficultyBombDelay":{"v":5000000,"d":"the amount of blocks to delay the difficulty bomb with"}}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"petersburg","comment":"Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople","url":"https://eips.ethereum.org/EIPS/eip-1716","status":"Draft","gasConfig":{},"gasPrices":{"netSstoreNoopGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreInitGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreCleanGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreDirtyGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreClearRefund":{"v":null,"d":"Removed along EIP-1283"},"netSstoreResetRefund":{"v":null,"d":"Removed along EIP-1283"},"netSstoreResetClearRefund":{"v":null,"d":"Removed along EIP-1283"}},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"istanbul","comment":"HF targeted for December 2019 following the Constantinople/Petersburg HF","url":"https://eips.ethereum.org/EIPS/eip-1679","status":"Draft","gasConfig":{},"gasPrices":{"blake2Round":{"v":1,"d":"Gas cost per round for the Blake2 F precompile"},"ecAdd":{"v":150,"d":"Gas costs for curve addition precompile"},"ecMul":{"v":6000,"d":"Gas costs for curve multiplication precompile"},"ecPairing":{"v":45000,"d":"Base gas costs for curve pairing precompile"},"ecPairingWord":{"v":34000,"d":"Gas costs regarding curve pairing precompile input length"},"txDataNonZero":{"v":16,"d":"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},"sstoreSentryGasEIP2200":{"v":2300,"d":"Minimum gas required to be present for an SSTORE call, not consumed"},"sstoreNoopGasEIP2200":{"v":800,"d":"Once per SSTORE operation if the value doesn\'t change"},"sstoreDirtyGasEIP2200":{"v":800,"d":"Once per SSTORE operation if a dirty value is changed"},"sstoreInitGasEIP2200":{"v":20000,"d":"Once per SSTORE operation from clean zero to non-zero"},"sstoreInitRefundEIP2200":{"v":19200,"d":"Once per SSTORE operation for resetting to the original zero value"},"sstoreCleanGasEIP2200":{"v":5000,"d":"Once per SSTORE operation from clean non-zero to something else"},"sstoreCleanRefundEIP2200":{"v":4200,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"sstoreClearRefundEIP2200":{"v":15000,"d":"Once per SSTORE operation for clearing an originally existing storage slot"},"balance":{"v":700,"d":"Base fee of the BALANCE opcode"},"extcodehash":{"v":700,"d":"Base fee of the EXTCODEHASH opcode"},"chainid":{"v":2,"d":"Base fee of the CHAINID opcode"},"selfbalance":{"v":5,"d":"Base fee of the SELFBALANCE opcode"},"sload":{"v":800,"d":"Base fee of the SLOAD opcode"}},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"muirGlacier","comment":"HF to delay the difficulty bomb","url":"https://eips.ethereum.org/EIPS/eip-2384","status":"Final","gasConfig":{},"gasPrices":{},"vm":{},"pow":{"difficultyBombDelay":{"v":9000000,"d":"the amount of blocks to delay the difficulty bomb with"}}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"berlin","comment":"HF targeted for July 2020 following the Muir Glacier HF","url":"https://eips.ethereum.org/EIPS/eip-2070","status":"Draft","eips":[2565,2929,2718,2930]}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"london","comment":"HF targeted for July 2021 following the Berlin fork","url":"https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md","status":"Draft","eips":[1559,3198,3529,3541]}')
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.EIPs = void 0, e.EIPs = {
            1559: r(677),
            2315: r(678),
            2537: r(679),
            2565: r(680),
            2718: r(681),
            2929: r(682),
            2930: r(683),
            3198: r(684),
            3529: r(685),
            3541: r(686),
            3554: r(687)
        }
    }, function (t) {
        t.exports = JSON.parse('{"name":"EIP-1559","number":1559,"comment":"Fee market change for ETH 1.0 chain","url":"https://eips.ethereum.org/EIPS/eip-1559","status":"Review","minimumHardfork":"berlin","requiredEIPs":[2930],"gasConfig":{"baseFeeMaxChangeDenominator":{"v":8,"d":"Maximum base fee change denominator"},"elasticityMultiplier":{"v":2,"d":"Maximum block gas target elasticity"},"initialBaseFee":{"v":1000000000,"d":"Initial base fee on first EIP1559 block"}},"gasPrices":{},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"EIP-2315","number":2315,"comment":"Simple subroutines for the EVM","url":"https://eips.ethereum.org/EIPS/eip-2315","status":"Draft","minimumHardfork":"istanbul","gasConfig":{},"gasPrices":{"beginsub":{"v":2,"d":"Base fee of the BEGINSUB opcode"},"returnsub":{"v":5,"d":"Base fee of the RETURNSUB opcode"},"jumpsub":{"v":10,"d":"Base fee of the JUMPSUB opcode"}},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"EIP-2537","number":2537,"comment":"BLS12-381 precompiles","url":"https://eips.ethereum.org/EIPS/eip-2537","status":"Draft","minimumHardfork":"chainstart","gasConfig":{},"gasPrices":{"Bls12381G1AddGas":{"v":600,"d":"Gas cost of a single BLS12-381 G1 addition precompile-call"},"Bls12381G1MulGas":{"v":12000,"d":"Gas cost of a single BLS12-381 G1 multiplication precompile-call"},"Bls12381G2AddGas":{"v":4500,"d":"Gas cost of a single BLS12-381 G2 addition precompile-call"},"Bls12381G2MulGas":{"v":55000,"d":"Gas cost of a single BLS12-381 G2 multiplication precompile-call"},"Bls12381PairingBaseGas":{"v":115000,"d":"Base gas cost of BLS12-381 pairing check"},"Bls12381PairingPerPairGas":{"v":23000,"d":"Per-pair gas cost of BLS12-381 pairing check"},"Bls12381MapG1Gas":{"v":5500,"d":"Gas cost of BLS12-381 map field element to G1"},"Bls12381MapG2Gas":{"v":110000,"d":"Gas cost of BLS12-381 map field element to G2"},"Bls12381MultiExpGasDiscount":{"v":[[1,1200],[2,888],[3,764],[4,641],[5,594],[6,547],[7,500],[8,453],[9,438],[10,423],[11,408],[12,394],[13,379],[14,364],[15,349],[16,334],[17,330],[18,326],[19,322],[20,318],[21,314],[22,310],[23,306],[24,302],[25,298],[26,294],[27,289],[28,285],[29,281],[30,277],[31,273],[32,269],[33,268],[34,266],[35,265],[36,263],[37,262],[38,260],[39,259],[40,257],[41,256],[42,254],[43,253],[44,251],[45,250],[46,248],[47,247],[48,245],[49,244],[50,242],[51,241],[52,239],[53,238],[54,236],[55,235],[56,233],[57,232],[58,231],[59,229],[60,228],[61,226],[62,225],[63,223],[64,222],[65,221],[66,220],[67,219],[68,219],[69,218],[70,217],[71,216],[72,216],[73,215],[74,214],[75,213],[76,213],[77,212],[78,211],[79,211],[80,210],[81,209],[82,208],[83,208],[84,207],[85,206],[86,205],[87,205],[88,204],[89,203],[90,202],[91,202],[92,201],[93,200],[94,199],[95,199],[96,198],[97,197],[98,196],[99,196],[100,195],[101,194],[102,193],[103,193],[104,192],[105,191],[106,191],[107,190],[108,189],[109,188],[110,188],[111,187],[112,186],[113,185],[114,185],[115,184],[116,183],[117,182],[118,182],[119,181],[120,180],[121,179],[122,179],[123,178],[124,177],[125,176],[126,176],[127,175],[128,174]],"d":"Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair"}},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"EIP-2565","number":2565,"comment":"ModExp gas cost","url":"https://eips.ethereum.org/EIPS/eip-2565","status":"Last call","minimumHardfork":"byzantium","gasConfig":{},"gasPrices":{"modexpGquaddivisor":{"v":3,"d":"Gquaddivisor from modexp precompile for gas calculation"}},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"EIP-2718","comment":"Typed Transaction Envelope","url":"https://eips.ethereum.org/EIPS/eip-2718","status":"Draft","minimumHardfork":"chainstart","gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"EIP-2929","comment":"Gas cost increases for state access opcodes","url":"https://eips.ethereum.org/EIPS/eip-2929","status":"Draft","minimumHardfork":"chainstart","gasConfig":{},"gasPrices":{"coldsload":{"v":2100,"d":"Gas cost of the first read of storage from a given location (per transaction)"},"coldaccountaccess":{"v":2600,"d":"Gas cost of the first read of a given address (per transaction)"},"warmstorageread":{"v":100,"d":"Gas cost of reading storage locations which have already loaded \'cold\'"},"sstoreCleanGasEIP2200":{"v":2900,"d":"Once per SSTORE operation from clean non-zero to something else"},"sstoreNoopGasEIP2200":{"v":100,"d":"Once per SSTORE operation if the value doesn\'t change"},"sstoreDirtyGasEIP2200":{"v":100,"d":"Once per SSTORE operation if a dirty value is changed"},"sstoreInitRefundEIP2200":{"v":19900,"d":"Once per SSTORE operation for resetting to the original zero value"},"sstoreCleanRefundEIP2200":{"v":4900,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"call":{"v":0,"d":"Base fee of the CALL opcode"},"callcode":{"v":0,"d":"Base fee of the CALLCODE opcode"},"delegatecall":{"v":0,"d":"Base fee of the DELEGATECALL opcode"},"staticcall":{"v":0,"d":"Base fee of the STATICCALL opcode"},"balance":{"v":0,"d":"Base fee of the BALANCE opcode"},"extcodesize":{"v":0,"d":"Base fee of the EXTCODESIZE opcode"},"extcodecopy":{"v":0,"d":"Base fee of the EXTCODECOPY opcode"},"extcodehash":{"v":0,"d":"Base fee of the EXTCODEHASH opcode"},"sload":{"v":0,"d":"Base fee of the SLOAD opcode"},"sstore":{"v":0,"d":"Base fee of the SSTORE opcode"}},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"EIP-2930","comment":"Optional access lists","url":"https://eips.ethereum.org/EIPS/eip-2930","status":"Draft","minimumHardfork":"istanbul","requiredEIPs":[2718,2929],"gasConfig":{},"gasPrices":{"accessListStorageKeyCost":{"v":1900,"d":"Gas cost per storage key in an Access List transaction"},"accessListAddressCost":{"v":2400,"d":"Gas cost per storage key in an Access List transaction"}},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"EIP-3198","number":3198,"comment":"BASEFEE opcode","url":"https://eips.ethereum.org/EIPS/eip-3198","status":"Review","minimumHardfork":"london","gasConfig":{},"gasPrices":{"basefee":{"v":2,"d":"Gas cost of the BASEFEE opcode"}},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"EIP-3529","comment":"Reduction in refunds","url":"https://eips.ethereum.org/EIPS/eip-3529","status":"Draft","minimumHardfork":"berlin","requiredEIPs":[2929],"gasConfig":{"maxRefundQuotient":{"v":5,"d":"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"}},"gasPrices":{"selfdestructRefund":{"v":0,"d":"Refunded following a selfdestruct operation"},"sstoreClearRefundEIP2200":{"v":4800,"d":"Once per SSTORE operation for clearing an originally existing storage slot"}},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"EIP-3541","comment":"Reject new contracts starting with the 0xEF byte","url":"https://eips.ethereum.org/EIPS/eip-3541","status":"Draft","minimumHardfork":"berlin","requiredEIPs":[],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"EIP-3554","comment":"Reduction in refunds","url":"Difficulty Bomb Delay to December 1st 2021","status":"Draft","minimumHardfork":"muirGlacier","requiredEIPs":[],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{"difficultyBombDelay":{"v":9500000,"d":"the amount of blocks to delay the difficulty bomb with"}}}')
    }, function (t) {
        t.exports = JSON.parse('{"name":"elliptic","version":"6.5.3","description":"EC cryptography","main":"lib/elliptic.js","files":["lib"],"scripts":{"jscs":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","jshint":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","lint":"npm run jscs && npm run jshint","unit":"istanbul test _mocha --reporter=spec test/index.js","test":"npm run lint && npm run unit","version":"grunt dist && git add dist/"},"repository":{"type":"git","url":"git@github.com:indutny/elliptic"},"keywords":["EC","Elliptic","curve","Cryptography"],"author":"Fedor Indutny <fedor@indutny.com>","license":"MIT","bugs":{"url":"https://github.com/indutny/elliptic/issues"},"homepage":"https://github.com/indutny/elliptic","devDependencies":{"brfs":"^1.4.3","coveralls":"^3.0.8","grunt":"^1.0.4","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.2","jscs":"^3.0.7","jshint":"^2.10.3","mocha":"^6.2.2"},"dependencies":{"bn.js":"^4.4.0","brorand":"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0","inherits":"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"}}')
    }, function (t, e, r) {
        var n = r(21),
            i = r(2),
            o = r(1),
            a = r(124),
            s = n.assert;

        function ShortCurve(t) {
            a.call(this, "short", t), this.a = new i(t.a, 16).toRed(this.red), this.b = new i(t.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(t), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4)
        }

        function Point(t, e, r, n) {
            a.BasePoint.call(this, t, "affine"), null === e && null === r ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new i(e, 16), this.y = new i(r, 16), n && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1)
        }

        function JPoint(t, e, r, n) {
            a.BasePoint.call(this, t, "jacobian"), null === e && null === r && null === n ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i(0)) : (this.x = new i(e, 16), this.y = new i(r, 16), this.z = new i(n, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one
        }
        o(ShortCurve, a), t.exports = ShortCurve, ShortCurve.prototype._getEndomorphism = function _getEndomorphism(t) {
            if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                var e, r;
                if (t.beta) e = new i(t.beta, 16).toRed(this.red);
                else {
                    var n = this._getEndoRoots(this.p);
                    e = (e = n[0].cmp(n[1]) < 0 ? n[0] : n[1]).toRed(this.red)
                }
                if (t.lambda) r = new i(t.lambda, 16);
                else {
                    var o = this._getEndoRoots(this.n);
                    0 === this.g.mul(o[0]).x.cmp(this.g.x.redMul(e)) ? r = o[0] : (r = o[1], s(0 === this.g.mul(r).x.cmp(this.g.x.redMul(e))))
                }
                return {
                    beta: e,
                    lambda: r,
                    basis: t.basis ? t.basis.map((function (t) {
                        return {
                            a: new i(t.a, 16),
                            b: new i(t.b, 16)
                        }
                    })) : this._getEndoBasis(r)
                }
            }
        }, ShortCurve.prototype._getEndoRoots = function _getEndoRoots(t) {
            var e = t === this.p ? this.red : i.mont(t),
                r = new i(2).toRed(e).redInvm(),
                n = r.redNeg(),
                o = new i(3).toRed(e).redNeg().redSqrt().redMul(r);
            return [n.redAdd(o).fromRed(), n.redSub(o).fromRed()]
        }, ShortCurve.prototype._getEndoBasis = function _getEndoBasis(t) {
            for (var e, r, n, o, a, s, u, c, l, h = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), d = t, p = this.n.clone(), m = new i(1), y = new i(0), b = new i(0), g = new i(1), v = 0; 0 !== d.cmpn(0);) {
                var w = p.div(d);
                c = p.sub(w.mul(d)), l = b.sub(w.mul(m));
                var M = g.sub(w.mul(y));
                if (!n && c.cmp(h) < 0) e = u.neg(), r = m, n = c.neg(), o = l;
                else if (n && 2 == ++v) break;
                u = c, p = d, d = c, b = m, m = l, g = y, y = M
            }
            a = c.neg(), s = l;
            var A = n.sqr().add(o.sqr());
            return a.sqr().add(s.sqr()).cmp(A) >= 0 && (a = e, s = r), n.negative && (n = n.neg(), o = o.neg()), a.negative && (a = a.neg(), s = s.neg()), [{
                a: n,
                b: o
            }, {
                a: a,
                b: s
            }]
        }, ShortCurve.prototype._endoSplit = function _endoSplit(t) {
            var e = this.endo.basis,
                r = e[0],
                n = e[1],
                i = n.b.mul(t).divRound(this.n),
                o = r.b.neg().mul(t).divRound(this.n),
                a = i.mul(r.a),
                s = o.mul(n.a),
                u = i.mul(r.b),
                c = o.mul(n.b);
            return {
                k1: t.sub(a).sub(s),
                k2: u.add(c).neg()
            }
        }, ShortCurve.prototype.pointFromX = function pointFromX(t, e) {
            (t = new i(t, 16)).red || (t = t.toRed(this.red));
            var r = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),
                n = r.redSqrt();
            if (0 !== n.redSqr().redSub(r).cmp(this.zero)) throw new Error("invalid point");
            var o = n.fromRed().isOdd();
            return (e && !o || !e && o) && (n = n.redNeg()), this.point(t, n)
        }, ShortCurve.prototype.validate = function validate(t) {
            if (t.inf) return !0;
            var e = t.x,
                r = t.y,
                n = this.a.redMul(e),
                i = e.redSqr().redMul(e).redIAdd(n).redIAdd(this.b);
            return 0 === r.redSqr().redISub(i).cmpn(0)
        }, ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(t, e, r) {
            for (var n = this._endoWnafT1, i = this._endoWnafT2, o = 0; o < t.length; o++) {
                var a = this._endoSplit(e[o]),
                    s = t[o],
                    u = s._getBeta();
                a.k1.negative && (a.k1.ineg(), s = s.neg(!0)), a.k2.negative && (a.k2.ineg(), u = u.neg(!0)), n[2 * o] = s, n[2 * o + 1] = u, i[2 * o] = a.k1, i[2 * o + 1] = a.k2
            }
            for (var c = this._wnafMulAdd(1, n, i, 2 * o, r), l = 0; l < 2 * o; l++) n[l] = null, i[l] = null;
            return c
        }, o(Point, a.BasePoint), ShortCurve.prototype.point = function point(t, e, r) {
            return new Point(this, t, e, r)
        }, ShortCurve.prototype.pointFromJSON = function pointFromJSON(t, e) {
            return Point.fromJSON(this, t, e)
        }, Point.prototype._getBeta = function _getBeta() {
            if (this.curve.endo) {
                var t = this.precomputed;
                if (t && t.beta) return t.beta;
                var e = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                if (t) {
                    var r = this.curve,
                        endoMul = function (t) {
                            return r.point(t.x.redMul(r.endo.beta), t.y)
                        };
                    t.beta = e, e.precomputed = {
                        beta: null,
                        naf: t.naf && {
                            wnd: t.naf.wnd,
                            points: t.naf.points.map(endoMul)
                        },
                        doubles: t.doubles && {
                            step: t.doubles.step,
                            points: t.doubles.points.map(endoMul)
                        }
                    }
                }
                return e
            }
        }, Point.prototype.toJSON = function toJSON() {
            return this.precomputed ? [this.x, this.y, this.precomputed && {
                doubles: this.precomputed.doubles && {
                    step: this.precomputed.doubles.step,
                    points: this.precomputed.doubles.points.slice(1)
                },
                naf: this.precomputed.naf && {
                    wnd: this.precomputed.naf.wnd,
                    points: this.precomputed.naf.points.slice(1)
                }
            }] : [this.x, this.y]
        }, Point.fromJSON = function fromJSON(t, e, r) {
            "string" == typeof e && (e = JSON.parse(e));
            var n = t.point(e[0], e[1], r);
            if (!e[2]) return n;

            function obj2point(e) {
                return t.point(e[0], e[1], r)
            }
            var i = e[2];
            return n.precomputed = {
                beta: null,
                doubles: i.doubles && {
                    step: i.doubles.step,
                    points: [n].concat(i.doubles.points.map(obj2point))
                },
                naf: i.naf && {
                    wnd: i.naf.wnd,
                    points: [n].concat(i.naf.points.map(obj2point))
                }
            }, n
        }, Point.prototype.inspect = function inspect() {
            return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">"
        }, Point.prototype.isInfinity = function isInfinity() {
            return this.inf
        }, Point.prototype.add = function add(t) {
            if (this.inf) return t;
            if (t.inf) return this;
            if (this.eq(t)) return this.dbl();
            if (this.neg().eq(t)) return this.curve.point(null, null);
            if (0 === this.x.cmp(t.x)) return this.curve.point(null, null);
            var e = this.y.redSub(t.y);
            0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));
            var r = e.redSqr().redISub(this.x).redISub(t.x),
                n = e.redMul(this.x.redSub(r)).redISub(this.y);
            return this.curve.point(r, n)
        }, Point.prototype.dbl = function dbl() {
            if (this.inf) return this;
            var t = this.y.redAdd(this.y);
            if (0 === t.cmpn(0)) return this.curve.point(null, null);
            var e = this.curve.a,
                r = this.x.redSqr(),
                n = t.redInvm(),
                i = r.redAdd(r).redIAdd(r).redIAdd(e).redMul(n),
                o = i.redSqr().redISub(this.x.redAdd(this.x)),
                a = i.redMul(this.x.redSub(o)).redISub(this.y);
            return this.curve.point(o, a)
        }, Point.prototype.getX = function getX() {
            return this.x.fromRed()
        }, Point.prototype.getY = function getY() {
            return this.y.fromRed()
        }, Point.prototype.mul = function mul(t) {
            return t = new i(t, 16), this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t)
        }, Point.prototype.mulAdd = function mulAdd(t, e, r) {
            var n = [this, e],
                i = [t, r];
            return this.curve.endo ? this.curve._endoWnafMulAdd(n, i) : this.curve._wnafMulAdd(1, n, i, 2)
        }, Point.prototype.jmulAdd = function jmulAdd(t, e, r) {
            var n = [this, e],
                i = [t, r];
            return this.curve.endo ? this.curve._endoWnafMulAdd(n, i, !0) : this.curve._wnafMulAdd(1, n, i, 2, !0)
        }, Point.prototype.eq = function eq(t) {
            return this === t || this.inf === t.inf && (this.inf || 0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y))
        }, Point.prototype.neg = function neg(t) {
            if (this.inf) return this;
            var e = this.curve.point(this.x, this.y.redNeg());
            if (t && this.precomputed) {
                var r = this.precomputed,
                    negate = function (t) {
                        return t.neg()
                    };
                e.precomputed = {
                    naf: r.naf && {
                        wnd: r.naf.wnd,
                        points: r.naf.points.map(negate)
                    },
                    doubles: r.doubles && {
                        step: r.doubles.step,
                        points: r.doubles.points.map(negate)
                    }
                }
            }
            return e
        }, Point.prototype.toJ = function toJ() {
            return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one)
        }, o(JPoint, a.BasePoint), ShortCurve.prototype.jpoint = function jpoint(t, e, r) {
            return new JPoint(this, t, e, r)
        }, JPoint.prototype.toP = function toP() {
            if (this.isInfinity()) return this.curve.point(null, null);
            var t = this.z.redInvm(),
                e = t.redSqr(),
                r = this.x.redMul(e),
                n = this.y.redMul(e).redMul(t);
            return this.curve.point(r, n)
        }, JPoint.prototype.neg = function neg() {
            return this.curve.jpoint(this.x, this.y.redNeg(), this.z)
        }, JPoint.prototype.add = function add(t) {
            if (this.isInfinity()) return t;
            if (t.isInfinity()) return this;
            var e = t.z.redSqr(),
                r = this.z.redSqr(),
                n = this.x.redMul(e),
                i = t.x.redMul(r),
                o = this.y.redMul(e.redMul(t.z)),
                a = t.y.redMul(r.redMul(this.z)),
                s = n.redSub(i),
                u = o.redSub(a);
            if (0 === s.cmpn(0)) return 0 !== u.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
            var c = s.redSqr(),
                l = c.redMul(s),
                h = n.redMul(c),
                d = u.redSqr().redIAdd(l).redISub(h).redISub(h),
                p = u.redMul(h.redISub(d)).redISub(o.redMul(l)),
                m = this.z.redMul(t.z).redMul(s);
            return this.curve.jpoint(d, p, m)
        }, JPoint.prototype.mixedAdd = function mixedAdd(t) {
            if (this.isInfinity()) return t.toJ();
            if (t.isInfinity()) return this;
            var e = this.z.redSqr(),
                r = this.x,
                n = t.x.redMul(e),
                i = this.y,
                o = t.y.redMul(e).redMul(this.z),
                a = r.redSub(n),
                s = i.redSub(o);
            if (0 === a.cmpn(0)) return 0 !== s.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
            var u = a.redSqr(),
                c = u.redMul(a),
                l = r.redMul(u),
                h = s.redSqr().redIAdd(c).redISub(l).redISub(l),
                d = s.redMul(l.redISub(h)).redISub(i.redMul(c)),
                p = this.z.redMul(a);
            return this.curve.jpoint(h, d, p)
        }, JPoint.prototype.dblp = function dblp(t) {
            if (0 === t) return this;
            if (this.isInfinity()) return this;
            if (!t) return this.dbl();
            if (this.curve.zeroA || this.curve.threeA) {
                for (var e = this, r = 0; r < t; r++) e = e.dbl();
                return e
            }
            var n = this.curve.a,
                i = this.curve.tinv,
                o = this.x,
                a = this.y,
                s = this.z,
                u = s.redSqr().redSqr(),
                c = a.redAdd(a);
            for (r = 0; r < t; r++) {
                var l = o.redSqr(),
                    h = c.redSqr(),
                    d = h.redSqr(),
                    p = l.redAdd(l).redIAdd(l).redIAdd(n.redMul(u)),
                    m = o.redMul(h),
                    y = p.redSqr().redISub(m.redAdd(m)),
                    b = m.redISub(y),
                    g = p.redMul(b);
                g = g.redIAdd(g).redISub(d);
                var v = c.redMul(s);
                r + 1 < t && (u = u.redMul(d)), o = y, s = v, c = g
            }
            return this.curve.jpoint(o, c.redMul(i), s)
        }, JPoint.prototype.dbl = function dbl() {
            return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl()
        }, JPoint.prototype._zeroDbl = function _zeroDbl() {
            var t, e, r;
            if (this.zOne) {
                var n = this.x.redSqr(),
                    i = this.y.redSqr(),
                    o = i.redSqr(),
                    a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                a = a.redIAdd(a);
                var s = n.redAdd(n).redIAdd(n),
                    u = s.redSqr().redISub(a).redISub(a),
                    c = o.redIAdd(o);
                c = (c = c.redIAdd(c)).redIAdd(c), t = u, e = s.redMul(a.redISub(u)).redISub(c), r = this.y.redAdd(this.y)
            } else {
                var l = this.x.redSqr(),
                    h = this.y.redSqr(),
                    d = h.redSqr(),
                    p = this.x.redAdd(h).redSqr().redISub(l).redISub(d);
                p = p.redIAdd(p);
                var m = l.redAdd(l).redIAdd(l),
                    y = m.redSqr(),
                    b = d.redIAdd(d);
                b = (b = b.redIAdd(b)).redIAdd(b), t = y.redISub(p).redISub(p), e = m.redMul(p.redISub(t)).redISub(b), r = (r = this.y.redMul(this.z)).redIAdd(r)
            }
            return this.curve.jpoint(t, e, r)
        }, JPoint.prototype._threeDbl = function _threeDbl() {
            var t, e, r;
            if (this.zOne) {
                var n = this.x.redSqr(),
                    i = this.y.redSqr(),
                    o = i.redSqr(),
                    a = this.x.redAdd(i).redSqr().redISub(n).redISub(o);
                a = a.redIAdd(a);
                var s = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),
                    u = s.redSqr().redISub(a).redISub(a);
                t = u;
                var c = o.redIAdd(o);
                c = (c = c.redIAdd(c)).redIAdd(c), e = s.redMul(a.redISub(u)).redISub(c), r = this.y.redAdd(this.y)
            } else {
                var l = this.z.redSqr(),
                    h = this.y.redSqr(),
                    d = this.x.redMul(h),
                    p = this.x.redSub(l).redMul(this.x.redAdd(l));
                p = p.redAdd(p).redIAdd(p);
                var m = d.redIAdd(d),
                    y = (m = m.redIAdd(m)).redAdd(m);
                t = p.redSqr().redISub(y), r = this.y.redAdd(this.z).redSqr().redISub(h).redISub(l);
                var b = h.redSqr();
                b = (b = (b = b.redIAdd(b)).redIAdd(b)).redIAdd(b), e = p.redMul(m.redISub(t)).redISub(b)
            }
            return this.curve.jpoint(t, e, r)
        }, JPoint.prototype._dbl = function _dbl() {
            var t = this.curve.a,
                e = this.x,
                r = this.y,
                n = this.z,
                i = n.redSqr().redSqr(),
                o = e.redSqr(),
                a = r.redSqr(),
                s = o.redAdd(o).redIAdd(o).redIAdd(t.redMul(i)),
                u = e.redAdd(e),
                c = (u = u.redIAdd(u)).redMul(a),
                l = s.redSqr().redISub(c.redAdd(c)),
                h = c.redISub(l),
                d = a.redSqr();
            d = (d = (d = d.redIAdd(d)).redIAdd(d)).redIAdd(d);
            var p = s.redMul(h).redISub(d),
                m = r.redAdd(r).redMul(n);
            return this.curve.jpoint(l, p, m)
        }, JPoint.prototype.trpl = function trpl() {
            if (!this.curve.zeroA) return this.dbl().add(this);
            var t = this.x.redSqr(),
                e = this.y.redSqr(),
                r = this.z.redSqr(),
                n = e.redSqr(),
                i = t.redAdd(t).redIAdd(t),
                o = i.redSqr(),
                a = this.x.redAdd(e).redSqr().redISub(t).redISub(n),
                s = (a = (a = (a = a.redIAdd(a)).redAdd(a).redIAdd(a)).redISub(o)).redSqr(),
                u = n.redIAdd(n);
            u = (u = (u = u.redIAdd(u)).redIAdd(u)).redIAdd(u);
            var c = i.redIAdd(a).redSqr().redISub(o).redISub(s).redISub(u),
                l = e.redMul(c);
            l = (l = l.redIAdd(l)).redIAdd(l);
            var h = this.x.redMul(s).redISub(l);
            h = (h = h.redIAdd(h)).redIAdd(h);
            var d = this.y.redMul(c.redMul(u.redISub(c)).redISub(a.redMul(s)));
            d = (d = (d = d.redIAdd(d)).redIAdd(d)).redIAdd(d);
            var p = this.z.redAdd(a).redSqr().redISub(r).redISub(s);
            return this.curve.jpoint(h, d, p)
        }, JPoint.prototype.mul = function mul(t, e) {
            return t = new i(t, e), this.curve._wnafMul(this, t)
        }, JPoint.prototype.eq = function eq(t) {
            if ("affine" === t.type) return this.eq(t.toJ());
            if (this === t) return !0;
            var e = this.z.redSqr(),
                r = t.z.redSqr();
            if (0 !== this.x.redMul(r).redISub(t.x.redMul(e)).cmpn(0)) return !1;
            var n = e.redMul(this.z),
                i = r.redMul(t.z);
            return 0 === this.y.redMul(i).redISub(t.y.redMul(n)).cmpn(0)
        }, JPoint.prototype.eqXToP = function eqXToP(t) {
            var e = this.z.redSqr(),
                r = t.toRed(this.curve.red).redMul(e);
            if (0 === this.x.cmp(r)) return !0;
            for (var n = t.clone(), i = this.curve.redN.redMul(e);;) {
                if (n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0) return !1;
                if (r.redIAdd(i), 0 === this.x.cmp(r)) return !0
            }
        }, JPoint.prototype.inspect = function inspect() {
            return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">"
        }, JPoint.prototype.isInfinity = function isInfinity() {
            return 0 === this.z.cmpn(0)
        }
    }, function (t, e, r) {
        var n = r(2),
            i = r(1),
            o = r(124),
            a = r(21);

        function MontCurve(t) {
            o.call(this, "mont", t), this.a = new n(t.a, 16).toRed(this.red), this.b = new n(t.b, 16).toRed(this.red), this.i4 = new n(4).toRed(this.red).redInvm(), this.two = new n(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two))
        }

        function Point(t, e, r) {
            o.BasePoint.call(this, t, "projective"), null === e && null === r ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new n(e, 16), this.z = new n(r, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)))
        }
        i(MontCurve, o), t.exports = MontCurve, MontCurve.prototype.validate = function validate(t) {
            var e = t.normalize().x,
                r = e.redSqr(),
                n = r.redMul(e).redAdd(r.redMul(this.a)).redAdd(e);
            return 0 === n.redSqrt().redSqr().cmp(n)
        }, i(Point, o.BasePoint), MontCurve.prototype.decodePoint = function decodePoint(t, e) {
            return this.point(a.toArray(t, e), 1)
        }, MontCurve.prototype.point = function point(t, e) {
            return new Point(this, t, e)
        }, MontCurve.prototype.pointFromJSON = function pointFromJSON(t) {
            return Point.fromJSON(this, t)
        }, Point.prototype.precompute = function precompute() {}, Point.prototype._encode = function _encode() {
            return this.getX().toArray("be", this.curve.p.byteLength())
        }, Point.fromJSON = function fromJSON(t, e) {
            return new Point(t, e[0], e[1] || t.one)
        }, Point.prototype.inspect = function inspect() {
            return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">"
        }, Point.prototype.isInfinity = function isInfinity() {
            return 0 === this.z.cmpn(0)
        }, Point.prototype.dbl = function dbl() {
            var t = this.x.redAdd(this.z).redSqr(),
                e = this.x.redSub(this.z).redSqr(),
                r = t.redSub(e),
                n = t.redMul(e),
                i = r.redMul(e.redAdd(this.curve.a24.redMul(r)));
            return this.curve.point(n, i)
        }, Point.prototype.add = function add() {
            throw new Error("Not supported on Montgomery curve")
        }, Point.prototype.diffAdd = function diffAdd(t, e) {
            var r = this.x.redAdd(this.z),
                n = this.x.redSub(this.z),
                i = t.x.redAdd(t.z),
                o = t.x.redSub(t.z).redMul(r),
                a = i.redMul(n),
                s = e.z.redMul(o.redAdd(a).redSqr()),
                u = e.x.redMul(o.redISub(a).redSqr());
            return this.curve.point(s, u)
        }, Point.prototype.mul = function mul(t) {
            for (var e = t.clone(), r = this, n = this.curve.point(null, null), i = []; 0 !== e.cmpn(0); e.iushrn(1)) i.push(e.andln(1));
            for (var o = i.length - 1; o >= 0; o--) 0 === i[o] ? (r = r.diffAdd(n, this), n = n.dbl()) : (n = r.diffAdd(n, this), r = r.dbl());
            return n
        }, Point.prototype.mulAdd = function mulAdd() {
            throw new Error("Not supported on Montgomery curve")
        }, Point.prototype.jumlAdd = function jumlAdd() {
            throw new Error("Not supported on Montgomery curve")
        }, Point.prototype.eq = function eq(t) {
            return 0 === this.getX().cmp(t.getX())
        }, Point.prototype.normalize = function normalize() {
            return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this
        }, Point.prototype.getX = function getX() {
            return this.normalize(), this.x.fromRed()
        }
    }, function (t, e, r) {
        var n = r(21),
            i = r(2),
            o = r(1),
            a = r(124),
            s = n.assert;

        function EdwardsCurve(t) {
            this.twisted = 1 != (0 | t.a), this.mOneA = this.twisted && -1 == (0 | t.a), this.extended = this.mOneA, a.call(this, "edwards", t), this.a = new i(t.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new i(t.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new i(t.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), s(!this.twisted || 0 === this.c.fromRed().cmpn(1)), this.oneC = 1 == (0 | t.c)
        }

        function Point(t, e, r, n, o) {
            a.BasePoint.call(this, t, "projective"), null === e && null === r && null === n ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = !0) : (this.x = new i(e, 16), this.y = new i(r, 16), this.z = n ? new i(n, 16) : this.curve.one, this.t = o && new i(o, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))))
        }
        o(EdwardsCurve, a), t.exports = EdwardsCurve, EdwardsCurve.prototype._mulA = function _mulA(t) {
            return this.mOneA ? t.redNeg() : this.a.redMul(t)
        }, EdwardsCurve.prototype._mulC = function _mulC(t) {
            return this.oneC ? t : this.c.redMul(t)
        }, EdwardsCurve.prototype.jpoint = function jpoint(t, e, r, n) {
            return this.point(t, e, r, n)
        }, EdwardsCurve.prototype.pointFromX = function pointFromX(t, e) {
            (t = new i(t, 16)).red || (t = t.toRed(this.red));
            var r = t.redSqr(),
                n = this.c2.redSub(this.a.redMul(r)),
                o = this.one.redSub(this.c2.redMul(this.d).redMul(r)),
                a = n.redMul(o.redInvm()),
                s = a.redSqrt();
            if (0 !== s.redSqr().redSub(a).cmp(this.zero)) throw new Error("invalid point");
            var u = s.fromRed().isOdd();
            return (e && !u || !e && u) && (s = s.redNeg()), this.point(t, s)
        }, EdwardsCurve.prototype.pointFromY = function pointFromY(t, e) {
            (t = new i(t, 16)).red || (t = t.toRed(this.red));
            var r = t.redSqr(),
                n = r.redSub(this.c2),
                o = r.redMul(this.d).redMul(this.c2).redSub(this.a),
                a = n.redMul(o.redInvm());
            if (0 === a.cmp(this.zero)) {
                if (e) throw new Error("invalid point");
                return this.point(this.zero, t)
            }
            var s = a.redSqrt();
            if (0 !== s.redSqr().redSub(a).cmp(this.zero)) throw new Error("invalid point");
            return s.fromRed().isOdd() !== e && (s = s.redNeg()), this.point(s, t)
        }, EdwardsCurve.prototype.validate = function validate(t) {
            if (t.isInfinity()) return !0;
            t.normalize();
            var e = t.x.redSqr(),
                r = t.y.redSqr(),
                n = e.redMul(this.a).redAdd(r),
                i = this.c2.redMul(this.one.redAdd(this.d.redMul(e).redMul(r)));
            return 0 === n.cmp(i)
        }, o(Point, a.BasePoint), EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(t) {
            return Point.fromJSON(this, t)
        }, EdwardsCurve.prototype.point = function point(t, e, r, n) {
            return new Point(this, t, e, r, n)
        }, Point.fromJSON = function fromJSON(t, e) {
            return new Point(t, e[0], e[1], e[2])
        }, Point.prototype.inspect = function inspect() {
            return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">"
        }, Point.prototype.isInfinity = function isInfinity() {
            return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || this.zOne && 0 === this.y.cmp(this.curve.c))
        }, Point.prototype._extDbl = function _extDbl() {
            var t = this.x.redSqr(),
                e = this.y.redSqr(),
                r = this.z.redSqr();
            r = r.redIAdd(r);
            var n = this.curve._mulA(t),
                i = this.x.redAdd(this.y).redSqr().redISub(t).redISub(e),
                o = n.redAdd(e),
                a = o.redSub(r),
                s = n.redSub(e),
                u = i.redMul(a),
                c = o.redMul(s),
                l = i.redMul(s),
                h = a.redMul(o);
            return this.curve.point(u, c, h, l)
        }, Point.prototype._projDbl = function _projDbl() {
            var t, e, r, n = this.x.redAdd(this.y).redSqr(),
                i = this.x.redSqr(),
                o = this.y.redSqr();
            if (this.curve.twisted) {
                var a = (c = this.curve._mulA(i)).redAdd(o);
                if (this.zOne) t = n.redSub(i).redSub(o).redMul(a.redSub(this.curve.two)), e = a.redMul(c.redSub(o)), r = a.redSqr().redSub(a).redSub(a);
                else {
                    var s = this.z.redSqr(),
                        u = a.redSub(s).redISub(s);
                    t = n.redSub(i).redISub(o).redMul(u), e = a.redMul(c.redSub(o)), r = a.redMul(u)
                }
            } else {
                var c = i.redAdd(o);
                s = this.curve._mulC(this.z).redSqr(), u = c.redSub(s).redSub(s);
                t = this.curve._mulC(n.redISub(c)).redMul(u), e = this.curve._mulC(c).redMul(i.redISub(o)), r = c.redMul(u)
            }
            return this.curve.point(t, e, r)
        }, Point.prototype.dbl = function dbl() {
            return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl()
        }, Point.prototype._extAdd = function _extAdd(t) {
            var e = this.y.redSub(this.x).redMul(t.y.redSub(t.x)),
                r = this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)),
                n = this.t.redMul(this.curve.dd).redMul(t.t),
                i = this.z.redMul(t.z.redAdd(t.z)),
                o = r.redSub(e),
                a = i.redSub(n),
                s = i.redAdd(n),
                u = r.redAdd(e),
                c = o.redMul(a),
                l = s.redMul(u),
                h = o.redMul(u),
                d = a.redMul(s);
            return this.curve.point(c, l, d, h)
        }, Point.prototype._projAdd = function _projAdd(t) {
            var e, r, n = this.z.redMul(t.z),
                i = n.redSqr(),
                o = this.x.redMul(t.x),
                a = this.y.redMul(t.y),
                s = this.curve.d.redMul(o).redMul(a),
                u = i.redSub(s),
                c = i.redAdd(s),
                l = this.x.redAdd(this.y).redMul(t.x.redAdd(t.y)).redISub(o).redISub(a),
                h = n.redMul(u).redMul(l);
            return this.curve.twisted ? (e = n.redMul(c).redMul(a.redSub(this.curve._mulA(o))), r = u.redMul(c)) : (e = n.redMul(c).redMul(a.redSub(o)), r = this.curve._mulC(u).redMul(c)), this.curve.point(h, e, r)
        }, Point.prototype.add = function add(t) {
            return this.isInfinity() ? t : t.isInfinity() ? this : this.curve.extended ? this._extAdd(t) : this._projAdd(t)
        }, Point.prototype.mul = function mul(t) {
            return this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve._wnafMul(this, t)
        }, Point.prototype.mulAdd = function mulAdd(t, e, r) {
            return this.curve._wnafMulAdd(1, [this, e], [t, r], 2, !1)
        }, Point.prototype.jmulAdd = function jmulAdd(t, e, r) {
            return this.curve._wnafMulAdd(1, [this, e], [t, r], 2, !0)
        }, Point.prototype.normalize = function normalize() {
            if (this.zOne) return this;
            var t = this.z.redInvm();
            return this.x = this.x.redMul(t), this.y = this.y.redMul(t), this.t && (this.t = this.t.redMul(t)), this.z = this.curve.one, this.zOne = !0, this
        }, Point.prototype.neg = function neg() {
            return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg())
        }, Point.prototype.getX = function getX() {
            return this.normalize(), this.x.fromRed()
        }, Point.prototype.getY = function getY() {
            return this.normalize(), this.y.fromRed()
        }, Point.prototype.eq = function eq(t) {
            return this === t || 0 === this.getX().cmp(t.getX()) && 0 === this.getY().cmp(t.getY())
        }, Point.prototype.eqXToP = function eqXToP(t) {
            var e = t.toRed(this.curve.red).redMul(this.z);
            if (0 === this.x.cmp(e)) return !0;
            for (var r = t.clone(), n = this.curve.redN.redMul(this.z);;) {
                if (r.iadd(this.curve.n), r.cmp(this.curve.p) >= 0) return !1;
                if (e.redIAdd(n), 0 === this.x.cmp(e)) return !0
            }
        }, Point.prototype.toP = Point.prototype.normalize, Point.prototype.mixedAdd = Point.prototype.add
    }, function (t, e) {
        t.exports = {
            doubles: {
                step: 4,
                points: [
                    ["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],
                    ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],
                    ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],
                    ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],
                    ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],
                    ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],
                    ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],
                    ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],
                    ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],
                    ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],
                    ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],
                    ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],
                    ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],
                    ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],
                    ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],
                    ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],
                    ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],
                    ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],
                    ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],
                    ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],
                    ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],
                    ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],
                    ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],
                    ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],
                    ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],
                    ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],
                    ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],
                    ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],
                    ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],
                    ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],
                    ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],
                    ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],
                    ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],
                    ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],
                    ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],
                    ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],
                    ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],
                    ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],
                    ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],
                    ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],
                    ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],
                    ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],
                    ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],
                    ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],
                    ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],
                    ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],
                    ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],
                    ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],
                    ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],
                    ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],
                    ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],
                    ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],
                    ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],
                    ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],
                    ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],
                    ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],
                    ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],
                    ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],
                    ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],
                    ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],
                    ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],
                    ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],
                    ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],
                    ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],
                    ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]
                ]
            },
            naf: {
                wnd: 7,
                points: [
                    ["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],
                    ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],
                    ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],
                    ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],
                    ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],
                    ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],
                    ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],
                    ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],
                    ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],
                    ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],
                    ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],
                    ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],
                    ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],
                    ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],
                    ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],
                    ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],
                    ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],
                    ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],
                    ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],
                    ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],
                    ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],
                    ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],
                    ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],
                    ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],
                    ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],
                    ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],
                    ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],
                    ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],
                    ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],
                    ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],
                    ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],
                    ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],
                    ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],
                    ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],
                    ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],
                    ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],
                    ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],
                    ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],
                    ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],
                    ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],
                    ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],
                    ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],
                    ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],
                    ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],
                    ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],
                    ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],
                    ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],
                    ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],
                    ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],
                    ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],
                    ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],
                    ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],
                    ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],
                    ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],
                    ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],
                    ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],
                    ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],
                    ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],
                    ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],
                    ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],
                    ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],
                    ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],
                    ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],
                    ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],
                    ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],
                    ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],
                    ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],
                    ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],
                    ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],
                    ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],
                    ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],
                    ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],
                    ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],
                    ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],
                    ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],
                    ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],
                    ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],
                    ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],
                    ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],
                    ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],
                    ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],
                    ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],
                    ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],
                    ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],
                    ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],
                    ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],
                    ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],
                    ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],
                    ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],
                    ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],
                    ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],
                    ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],
                    ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],
                    ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],
                    ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],
                    ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],
                    ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],
                    ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],
                    ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],
                    ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],
                    ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],
                    ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],
                    ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],
                    ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],
                    ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],
                    ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],
                    ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],
                    ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],
                    ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],
                    ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],
                    ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],
                    ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],
                    ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],
                    ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],
                    ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],
                    ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],
                    ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],
                    ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],
                    ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],
                    ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],
                    ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],
                    ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],
                    ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],
                    ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],
                    ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],
                    ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],
                    ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]
                ]
            }
        }
    }, function (t, e, r) {
        var n = r(2),
            i = r(279),
            o = r(21),
            a = r(188),
            s = r(88),
            u = o.assert,
            c = r(694),
            l = r(695);

        function EC(t) {
            if (!(this instanceof EC)) return new EC(t);
            "string" == typeof t && (u(a.hasOwnProperty(t), "Unknown curve " + t), t = a[t]), t instanceof a.PresetCurve && (t = {
                curve: t
            }), this.curve = t.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t.curve.g, this.g.precompute(t.curve.n.bitLength() + 1), this.hash = t.hash || t.curve.hash
        }
        t.exports = EC, EC.prototype.keyPair = function keyPair(t) {
            return new c(this, t)
        }, EC.prototype.keyFromPrivate = function keyFromPrivate(t, e) {
            return c.fromPrivate(this, t, e)
        }, EC.prototype.keyFromPublic = function keyFromPublic(t, e) {
            return c.fromPublic(this, t, e)
        }, EC.prototype.genKeyPair = function genKeyPair(t) {
            t || (t = {});
            for (var e = new i({
                    hash: this.hash,
                    pers: t.pers,
                    persEnc: t.persEnc || "utf8",
                    entropy: t.entropy || s(this.hash.hmacStrength),
                    entropyEnc: t.entropy && t.entropyEnc || "utf8",
                    nonce: this.n.toArray()
                }), r = this.n.byteLength(), o = this.n.sub(new n(2));;) {
                var a = new n(e.generate(r));
                if (!(a.cmp(o) > 0)) return a.iaddn(1), this.keyFromPrivate(a)
            }
        }, EC.prototype._truncateToN = function truncateToN(t, e) {
            var r = 8 * t.byteLength() - this.n.bitLength();
            return r > 0 && (t = t.ushrn(r)), !e && t.cmp(this.n) >= 0 ? t.sub(this.n) : t
        }, EC.prototype.sign = function sign(t, e, r, o) {
            "object" == typeof r && (o = r, r = null), o || (o = {}), e = this.keyFromPrivate(e, r), t = this._truncateToN(new n(t, 16));
            for (var a = this.n.byteLength(), s = e.getPrivate().toArray("be", a), u = t.toArray("be", a), c = new i({
                    hash: this.hash,
                    entropy: s,
                    nonce: u,
                    pers: o.pers,
                    persEnc: o.persEnc || "utf8"
                }), h = this.n.sub(new n(1)), d = 0;; d++) {
                var p = o.k ? o.k(d) : new n(c.generate(this.n.byteLength()));
                if (!((p = this._truncateToN(p, !0)).cmpn(1) <= 0 || p.cmp(h) >= 0)) {
                    var m = this.g.mul(p);
                    if (!m.isInfinity()) {
                        var y = m.getX(),
                            b = y.umod(this.n);
                        if (0 !== b.cmpn(0)) {
                            var g = p.invm(this.n).mul(b.mul(e.getPrivate()).iadd(t));
                            if (0 !== (g = g.umod(this.n)).cmpn(0)) {
                                var v = (m.getY().isOdd() ? 1 : 0) | (0 !== y.cmp(b) ? 2 : 0);
                                return o.canonical && g.cmp(this.nh) > 0 && (g = this.n.sub(g), v ^= 1), new l({
                                    r: b,
                                    s: g,
                                    recoveryParam: v
                                })
                            }
                        }
                    }
                }
            }
        }, EC.prototype.verify = function verify(t, e, r, i) {
            t = this._truncateToN(new n(t, 16)), r = this.keyFromPublic(r, i);
            var o = (e = new l(e, "hex")).r,
                a = e.s;
            if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
            if (a.cmpn(1) < 0 || a.cmp(this.n) >= 0) return !1;
            var s, u = a.invm(this.n),
                c = u.mul(t).umod(this.n),
                h = u.mul(o).umod(this.n);
            return this.curve._maxwellTrick ? !(s = this.g.jmulAdd(c, r.getPublic(), h)).isInfinity() && s.eqXToP(o) : !(s = this.g.mulAdd(c, r.getPublic(), h)).isInfinity() && 0 === s.getX().umod(this.n).cmp(o)
        }, EC.prototype.recoverPubKey = function (t, e, r, i) {
            u((3 & r) === r, "The recovery param is more than two bits"), e = new l(e, i);
            var o = this.n,
                a = new n(t),
                s = e.r,
                c = e.s,
                h = 1 & r,
                d = r >> 1;
            if (s.cmp(this.curve.p.umod(this.curve.n)) >= 0 && d) throw new Error("Unable to find sencond key candinate");
            s = d ? this.curve.pointFromX(s.add(this.curve.n), h) : this.curve.pointFromX(s, h);
            var p = e.r.invm(o),
                m = o.sub(a).mul(p).umod(o),
                y = c.mul(p).umod(o);
            return this.g.mulAdd(m, s, y)
        }, EC.prototype.getKeyRecoveryParam = function (t, e, r, n) {
            if (null !== (e = new l(e, n)).recoveryParam) return e.recoveryParam;
            for (var i = 0; i < 4; i++) {
                var o;
                try {
                    o = this.recoverPubKey(t, e, i)
                } catch (t) {
                    continue
                }
                if (o.eq(r)) return i
            }
            throw new Error("Unable to find valid recovery factor")
        }
    }, function (t, e, r) {
        var n = r(2),
            i = r(21).assert;

        function KeyPair(t, e) {
            this.ec = t, this.priv = null, this.pub = null, e.priv && this._importPrivate(e.priv, e.privEnc), e.pub && this._importPublic(e.pub, e.pubEnc)
        }
        t.exports = KeyPair, KeyPair.fromPublic = function fromPublic(t, e, r) {
            return e instanceof KeyPair ? e : new KeyPair(t, {
                pub: e,
                pubEnc: r
            })
        }, KeyPair.fromPrivate = function fromPrivate(t, e, r) {
            return e instanceof KeyPair ? e : new KeyPair(t, {
                priv: e,
                privEnc: r
            })
        }, KeyPair.prototype.validate = function validate() {
            var t = this.getPublic();
            return t.isInfinity() ? {
                result: !1,
                reason: "Invalid public key"
            } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {
                result: !0,
                reason: null
            } : {
                result: !1,
                reason: "Public key * N != O"
            } : {
                result: !1,
                reason: "Public key is not a point"
            }
        }, KeyPair.prototype.getPublic = function getPublic(t, e) {
            return "string" == typeof t && (e = t, t = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), e ? this.pub.encode(e, t) : this.pub
        }, KeyPair.prototype.getPrivate = function getPrivate(t) {
            return "hex" === t ? this.priv.toString(16, 2) : this.priv
        }, KeyPair.prototype._importPrivate = function _importPrivate(t, e) {
            this.priv = new n(t, e || 16), this.priv = this.priv.umod(this.ec.curve.n)
        }, KeyPair.prototype._importPublic = function _importPublic(t, e) {
            if (t.x || t.y) return "mont" === this.ec.curve.type ? i(t.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || i(t.x && t.y, "Need both x and y coordinate"), void(this.pub = this.ec.curve.point(t.x, t.y));
            this.pub = this.ec.curve.decodePoint(t, e)
        }, KeyPair.prototype.derive = function derive(t) {
            return t.mul(this.priv).getX()
        }, KeyPair.prototype.sign = function sign(t, e, r) {
            return this.ec.sign(t, this, e, r)
        }, KeyPair.prototype.verify = function verify(t, e) {
            return this.ec.verify(t, e, this)
        }, KeyPair.prototype.inspect = function inspect() {
            return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >"
        }
    }, function (t, e, r) {
        var n = r(2),
            i = r(21),
            o = i.assert;

        function Signature(t, e) {
            if (t instanceof Signature) return t;
            this._importDER(t, e) || (o(t.r && t.s, "Signature without r or s"), this.r = new n(t.r, 16), this.s = new n(t.s, 16), void 0 === t.recoveryParam ? this.recoveryParam = null : this.recoveryParam = t.recoveryParam)
        }

        function Position() {
            this.place = 0
        }

        function getLength(t, e) {
            var r = t[e.place++];
            if (!(128 & r)) return r;
            var n = 15 & r;
            if (0 === n || n > 4) return !1;
            for (var i = 0, o = 0, a = e.place; o < n; o++, a++) i <<= 8, i |= t[a], i >>>= 0;
            return !(i <= 127) && (e.place = a, i)
        }

        function rmPadding(t) {
            for (var e = 0, r = t.length - 1; !t[e] && !(128 & t[e + 1]) && e < r;) e++;
            return 0 === e ? t : t.slice(e)
        }

        function constructLength(t, e) {
            if (e < 128) t.push(e);
            else {
                var r = 1 + (Math.log(e) / Math.LN2 >>> 3);
                for (t.push(128 | r); --r;) t.push(e >>> (r << 3) & 255);
                t.push(e)
            }
        }
        t.exports = Signature, Signature.prototype._importDER = function _importDER(t, e) {
            t = i.toArray(t, e);
            var r = new Position;
            if (48 !== t[r.place++]) return !1;
            var o = getLength(t, r);
            if (!1 === o) return !1;
            if (o + r.place !== t.length) return !1;
            if (2 !== t[r.place++]) return !1;
            var a = getLength(t, r);
            if (!1 === a) return !1;
            var s = t.slice(r.place, a + r.place);
            if (r.place += a, 2 !== t[r.place++]) return !1;
            var u = getLength(t, r);
            if (!1 === u) return !1;
            if (t.length !== u + r.place) return !1;
            var c = t.slice(r.place, u + r.place);
            if (0 === s[0]) {
                if (!(128 & s[1])) return !1;
                s = s.slice(1)
            }
            if (0 === c[0]) {
                if (!(128 & c[1])) return !1;
                c = c.slice(1)
            }
            return this.r = new n(s), this.s = new n(c), this.recoveryParam = null, !0
        }, Signature.prototype.toDER = function toDER(t) {
            var e = this.r.toArray(),
                r = this.s.toArray();
            for (128 & e[0] && (e = [0].concat(e)), 128 & r[0] && (r = [0].concat(r)), e = rmPadding(e), r = rmPadding(r); !(r[0] || 128 & r[1]);) r = r.slice(1);
            var n = [2];
            constructLength(n, e.length), (n = n.concat(e)).push(2), constructLength(n, r.length);
            var o = n.concat(r),
                a = [48];
            return constructLength(a, o.length), a = a.concat(o), i.encode(a, t)
        }
    }, function (t, e, r) {
        var n = r(89),
            i = r(188),
            o = r(21),
            a = o.assert,
            s = o.parseBytes,
            u = r(697),
            c = r(698);

        function EDDSA(t) {
            if (a("ed25519" === t, "only tested with ed25519 so far"), !(this instanceof EDDSA)) return new EDDSA(t);
            t = i[t].curve;
            this.curve = t, this.g = t.g, this.g.precompute(t.n.bitLength() + 1), this.pointClass = t.point().constructor, this.encodingLength = Math.ceil(t.n.bitLength() / 8), this.hash = n.sha512
        }
        t.exports = EDDSA, EDDSA.prototype.sign = function sign(t, e) {
            t = s(t);
            var r = this.keyFromSecret(e),
                n = this.hashInt(r.messagePrefix(), t),
                i = this.g.mul(n),
                o = this.encodePoint(i),
                a = this.hashInt(o, r.pubBytes(), t).mul(r.priv()),
                u = n.add(a).umod(this.curve.n);
            return this.makeSignature({
                R: i,
                S: u,
                Rencoded: o
            })
        }, EDDSA.prototype.verify = function verify(t, e, r) {
            t = s(t), e = this.makeSignature(e);
            var n = this.keyFromPublic(r),
                i = this.hashInt(e.Rencoded(), n.pubBytes(), t),
                o = this.g.mul(e.S());
            return e.R().add(n.pub().mul(i)).eq(o)
        }, EDDSA.prototype.hashInt = function hashInt() {
            for (var t = this.hash(), e = 0; e < arguments.length; e++) t.update(arguments[e]);
            return o.intFromLE(t.digest()).umod(this.curve.n)
        }, EDDSA.prototype.keyFromPublic = function keyFromPublic(t) {
            return u.fromPublic(this, t)
        }, EDDSA.prototype.keyFromSecret = function keyFromSecret(t) {
            return u.fromSecret(this, t)
        }, EDDSA.prototype.makeSignature = function makeSignature(t) {
            return t instanceof c ? t : new c(this, t)
        }, EDDSA.prototype.encodePoint = function encodePoint(t) {
            var e = t.getY().toArray("le", this.encodingLength);
            return e[this.encodingLength - 1] |= t.getX().isOdd() ? 128 : 0, e
        }, EDDSA.prototype.decodePoint = function decodePoint(t) {
            var e = (t = o.parseBytes(t)).length - 1,
                r = t.slice(0, e).concat(-129 & t[e]),
                n = 0 != (128 & t[e]),
                i = o.intFromLE(r);
            return this.curve.pointFromY(i, n)
        }, EDDSA.prototype.encodeInt = function encodeInt(t) {
            return t.toArray("le", this.encodingLength)
        }, EDDSA.prototype.decodeInt = function decodeInt(t) {
            return o.intFromLE(t)
        }, EDDSA.prototype.isPoint = function isPoint(t) {
            return t instanceof this.pointClass
        }
    }, function (t, e, r) {
        var n = r(21),
            i = n.assert,
            o = n.parseBytes,
            a = n.cachedProperty;

        function KeyPair(t, e) {
            this.eddsa = t, this._secret = o(e.secret), t.isPoint(e.pub) ? this._pub = e.pub : this._pubBytes = o(e.pub)
        }
        KeyPair.fromPublic = function fromPublic(t, e) {
            return e instanceof KeyPair ? e : new KeyPair(t, {
                pub: e
            })
        }, KeyPair.fromSecret = function fromSecret(t, e) {
            return e instanceof KeyPair ? e : new KeyPair(t, {
                secret: e
            })
        }, KeyPair.prototype.secret = function secret() {
            return this._secret
        }, a(KeyPair, "pubBytes", (function pubBytes() {
            return this.eddsa.encodePoint(this.pub())
        })), a(KeyPair, "pub", (function pub() {
            return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv())
        })), a(KeyPair, "privBytes", (function privBytes() {
            var t = this.eddsa,
                e = this.hash(),
                r = t.encodingLength - 1,
                n = e.slice(0, t.encodingLength);
            return n[0] &= 248, n[r] &= 127, n[r] |= 64, n
        })), a(KeyPair, "priv", (function priv() {
            return this.eddsa.decodeInt(this.privBytes())
        })), a(KeyPair, "hash", (function hash() {
            return this.eddsa.hash().update(this.secret()).digest()
        })), a(KeyPair, "messagePrefix", (function messagePrefix() {
            return this.hash().slice(this.eddsa.encodingLength)
        })), KeyPair.prototype.sign = function sign(t) {
            return i(this._secret, "KeyPair can only verify"), this.eddsa.sign(t, this)
        }, KeyPair.prototype.verify = function verify(t, e) {
            return this.eddsa.verify(t, e, this)
        }, KeyPair.prototype.getSecret = function getSecret(t) {
            return i(this._secret, "KeyPair is public only"), n.encode(this.secret(), t)
        }, KeyPair.prototype.getPublic = function getPublic(t) {
            return n.encode(this.pubBytes(), t)
        }, t.exports = KeyPair
    }, function (t, e, r) {
        var n = r(2),
            i = r(21),
            o = i.assert,
            a = i.cachedProperty,
            s = i.parseBytes;

        function Signature(t, e) {
            this.eddsa = t, "object" != typeof e && (e = s(e)), Array.isArray(e) && (e = {
                R: e.slice(0, t.encodingLength),
                S: e.slice(t.encodingLength)
            }), o(e.R && e.S, "Signature without R or S"), t.isPoint(e.R) && (this._R = e.R), e.S instanceof n && (this._S = e.S), this._Rencoded = Array.isArray(e.R) ? e.R : e.Rencoded, this._Sencoded = Array.isArray(e.S) ? e.S : e.Sencoded
        }
        a(Signature, "S", (function S() {
            return this.eddsa.decodeInt(this.Sencoded())
        })), a(Signature, "R", (function R() {
            return this.eddsa.decodePoint(this.Rencoded())
        })), a(Signature, "Rencoded", (function Rencoded() {
            return this.eddsa.encodePoint(this.R())
        })), a(Signature, "Sencoded", (function Sencoded() {
            return this.eddsa.encodeInt(this.S())
        })), Signature.prototype.toBytes = function toBytes() {
            return this.Rencoded().concat(this.Sencoded())
        }, Signature.prototype.toHex = function toHex() {
            return i.encode(this.toBytes(), "hex").toUpperCase()
        }, t.exports = Signature
    }, function (t, e, r) {
        var n = r(125),
            i = r(12),
            o = r(190).subscriptions,
            a = r(92),
            s = r(35),
            u = r(289),
            c = r(714),
            l = r(773),
            h = r(774),
            d = r(286),
            p = r(775),
            m = r(300),
            y = r(855),
            b = i.formatters,
            blockCall = function (t) {
                return "string" == typeof t[0] && 0 === t[0].indexOf("0x") ? "eth_getBlockByHash" : "eth_getBlockByNumber"
            },
            transactionFromBlockCall = function (t) {
                return "string" == typeof t[0] && 0 === t[0].indexOf("0x") ? "eth_getTransactionByBlockHashAndIndex" : "eth_getTransactionByBlockNumberAndIndex"
            },
            uncleCall = function (t) {
                return "string" == typeof t[0] && 0 === t[0].indexOf("0x") ? "eth_getUncleByBlockHashAndIndex" : "eth_getUncleByBlockNumberAndIndex"
            },
            getBlockTransactionCountCall = function (t) {
                return "string" == typeof t[0] && 0 === t[0].indexOf("0x") ? "eth_getBlockTransactionCountByHash" : "eth_getBlockTransactionCountByNumber"
            },
            uncleCountCall = function (t) {
                return "string" == typeof t[0] && 0 === t[0].indexOf("0x") ? "eth_getUncleCountByBlockHash" : "eth_getUncleCountByBlockNumber"
            },
            g = function Eth() {
                var t = this;
                n.packageInit(this, arguments);
                var e = this.setRequestManager;
                this.setRequestManager = function (r) {
                    return e(r), t.net.setRequestManager(r), t.personal.setRequestManager(r), t.accounts.setRequestManager(r), t.Contract._requestManager = t._requestManager, t.Contract.currentProvider = t._provider, !0
                };
                var r = this.setProvider;
                this.setProvider = function () {
                    r.apply(t, arguments), t.setRequestManager(t._requestManager), t.ens._detectedAddress = null, t.ens._lastSyncCheck = null
                };
                var i, g, v, w = !1,
                    M = null,
                    A = "latest",
                    x = 50,
                    B = 24,
                    E = 750,
                    k = 100;
                Object.defineProperty(this, "handleRevert", {
                    get: function () {
                        return w
                    },
                    set: function (e) {
                        w = e, t.Contract.handleRevert = w, C.forEach((function (t) {
                            t.handleRevert = w
                        }))
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultCommon", {
                    get: function () {
                        return v
                    },
                    set: function (e) {
                        v = e, t.Contract.defaultCommon = v, C.forEach((function (t) {
                            t.defaultCommon = v
                        }))
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultHardfork", {
                    get: function () {
                        return g
                    },
                    set: function (e) {
                        g = e, t.Contract.defaultHardfork = g, C.forEach((function (t) {
                            t.defaultHardfork = g
                        }))
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultChain", {
                    get: function () {
                        return i
                    },
                    set: function (e) {
                        i = e, t.Contract.defaultChain = i, C.forEach((function (t) {
                            t.defaultChain = i
                        }))
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "transactionPollingTimeout", {
                    get: function () {
                        return E
                    },
                    set: function (e) {
                        E = e, t.Contract.transactionPollingTimeout = E, C.forEach((function (t) {
                            t.transactionPollingTimeout = E
                        }))
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "transactionConfirmationBlocks", {
                    get: function () {
                        return B
                    },
                    set: function (e) {
                        B = e, t.Contract.transactionConfirmationBlocks = B, C.forEach((function (t) {
                            t.transactionConfirmationBlocks = B
                        }))
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "transactionBlockTimeout", {
                    get: function () {
                        return x
                    },
                    set: function (e) {
                        x = e, t.Contract.transactionBlockTimeout = x, C.forEach((function (t) {
                            t.transactionBlockTimeout = x
                        }))
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultAccount", {
                    get: function () {
                        return M
                    },
                    set: function (e) {
                        return e && (M = s.toChecksumAddress(b.inputAddressFormatter(e))), t.Contract.defaultAccount = M, t.personal.defaultAccount = M, C.forEach((function (t) {
                            t.defaultAccount = M
                        })), e
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultBlock", {
                    get: function () {
                        return A
                    },
                    set: function (e) {
                        return A = e, t.Contract.defaultBlock = A, t.personal.defaultBlock = A, C.forEach((function (t) {
                            t.defaultBlock = A
                        })), e
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "maxListenersWarningThreshold", {
                    get: function () {
                        return k
                    },
                    set: function (e) {
                        t.currentProvider && t.currentProvider.setMaxListeners && (k = e, t.currentProvider.setMaxListeners(e))
                    },
                    enumerable: !0
                }), this.clearSubscriptions = t._requestManager.clearSubscriptions.bind(t._requestManager), this.removeSubscriptionById = t._requestManager.removeSubscription.bind(t._requestManager), this.net = new u(this), this.net.getNetworkType = y.bind(this), this.accounts = new p(this), this.personal = new l(this), this.personal.defaultAccount = this.defaultAccount, this.maxListenersWarningThreshold = k;
                var N = this,
                    T = function Contract() {
                        h.apply(this, arguments);
                        var t = this,
                            e = N.setProvider;
                        N.setProvider = function () {
                            e.apply(N, arguments), n.packageInit(t, [N])
                        }
                    };
                T.setProvider = function () {
                    h.setProvider.apply(this, arguments)
                }, T.prototype = Object.create(h.prototype), T.prototype.constructor = T, this.Contract = T, this.Contract.defaultAccount = this.defaultAccount, this.Contract.defaultBlock = this.defaultBlock, this.Contract.transactionBlockTimeout = this.transactionBlockTimeout, this.Contract.transactionConfirmationBlocks = this.transactionConfirmationBlocks, this.Contract.transactionPollingTimeout = this.transactionPollingTimeout, this.Contract.handleRevert = this.handleRevert, this.Contract._requestManager = this._requestManager, this.Contract._ethAccounts = this.accounts, this.Contract.currentProvider = this._requestManager.provider, this.Iban = d, this.abi = m, this.ens = new c(this);
                var C = [new a({
                    name: "getNodeInfo",
                    call: "web3_clientVersion"
                }), new a({
                    name: "getProtocolVersion",
                    call: "eth_protocolVersion",
                    params: 0
                }), new a({
                    name: "getCoinbase",
                    call: "eth_coinbase",
                    params: 0
                }), new a({
                    name: "isMining",
                    call: "eth_mining",
                    params: 0
                }), new a({
                    name: "getHashrate",
                    call: "eth_hashrate",
                    params: 0,
                    outputFormatter: s.hexToNumber
                }), new a({
                    name: "isSyncing",
                    call: "eth_syncing",
                    params: 0,
                    outputFormatter: b.outputSyncingFormatter
                }), new a({
                    name: "getGasPrice",
                    call: "eth_gasPrice",
                    params: 0,
                    outputFormatter: b.outputBigNumberFormatter
                }), new a({
                    name: "getFeeHistory",
                    call: "eth_feeHistory",
                    params: 3,
                    inputFormatter: [s.toNumber, b.inputBlockNumberFormatter, null]
                }), new a({
                    name: "getAccounts",
                    call: "eth_accounts",
                    params: 0,
                    outputFormatter: s.toChecksumAddress
                }), new a({
                    name: "getBlockNumber",
                    call: "eth_blockNumber",
                    params: 0,
                    outputFormatter: s.hexToNumber
                }), new a({
                    name: "getBalance",
                    call: "eth_getBalance",
                    params: 2,
                    inputFormatter: [b.inputAddressFormatter, b.inputDefaultBlockNumberFormatter],
                    outputFormatter: b.outputBigNumberFormatter
                }), new a({
                    name: "getStorageAt",
                    call: "eth_getStorageAt",
                    params: 3,
                    inputFormatter: [b.inputAddressFormatter, s.numberToHex, b.inputDefaultBlockNumberFormatter]
                }), new a({
                    name: "getCode",
                    call: "eth_getCode",
                    params: 2,
                    inputFormatter: [b.inputAddressFormatter, b.inputDefaultBlockNumberFormatter]
                }), new a({
                    name: "getBlock",
                    call: blockCall,
                    params: 2,
                    inputFormatter: [b.inputBlockNumberFormatter, function (t) {
                        return !!t
                    }],
                    outputFormatter: b.outputBlockFormatter
                }), new a({
                    name: "getUncle",
                    call: uncleCall,
                    params: 2,
                    inputFormatter: [b.inputBlockNumberFormatter, s.numberToHex],
                    outputFormatter: b.outputBlockFormatter
                }), new a({
                    name: "getBlockTransactionCount",
                    call: getBlockTransactionCountCall,
                    params: 1,
                    inputFormatter: [b.inputBlockNumberFormatter],
                    outputFormatter: s.hexToNumber
                }), new a({
                    name: "getBlockUncleCount",
                    call: uncleCountCall,
                    params: 1,
                    inputFormatter: [b.inputBlockNumberFormatter],
                    outputFormatter: s.hexToNumber
                }), new a({
                    name: "getTransaction",
                    call: "eth_getTransactionByHash",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: b.outputTransactionFormatter
                }), new a({
                    name: "getTransactionFromBlock",
                    call: transactionFromBlockCall,
                    params: 2,
                    inputFormatter: [b.inputBlockNumberFormatter, s.numberToHex],
                    outputFormatter: b.outputTransactionFormatter
                }), new a({
                    name: "getTransactionReceipt",
                    call: "eth_getTransactionReceipt",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: b.outputTransactionReceiptFormatter
                }), new a({
                    name: "getTransactionCount",
                    call: "eth_getTransactionCount",
                    params: 2,
                    inputFormatter: [b.inputAddressFormatter, b.inputDefaultBlockNumberFormatter],
                    outputFormatter: s.hexToNumber
                }), new a({
                    name: "sendSignedTransaction",
                    call: "eth_sendRawTransaction",
                    params: 1,
                    inputFormatter: [null],
                    abiCoder: m
                }), new a({
                    name: "signTransaction",
                    call: "eth_signTransaction",
                    params: 1,
                    inputFormatter: [b.inputTransactionFormatter]
                }), new a({
                    name: "sendTransaction",
                    call: "eth_sendTransaction",
                    params: 1,
                    inputFormatter: [b.inputTransactionFormatter],
                    abiCoder: m
                }), new a({
                    name: "sign",
                    call: "eth_sign",
                    params: 2,
                    inputFormatter: [b.inputSignFormatter, b.inputAddressFormatter],
                    transformPayload: function (t) {
                        return t.params.reverse(), t
                    }
                }), new a({
                    name: "call",
                    call: "eth_call",
                    params: 2,
                    inputFormatter: [b.inputCallFormatter, b.inputDefaultBlockNumberFormatter],
                    abiCoder: m
                }), new a({
                    name: "estimateGas",
                    call: "eth_estimateGas",
                    params: 1,
                    inputFormatter: [b.inputCallFormatter],
                    outputFormatter: s.hexToNumber
                }), new a({
                    name: "submitWork",
                    call: "eth_submitWork",
                    params: 3
                }), new a({
                    name: "getWork",
                    call: "eth_getWork",
                    params: 0
                }), new a({
                    name: "getPastLogs",
                    call: "eth_getLogs",
                    params: 1,
                    inputFormatter: [b.inputLogFormatter],
                    outputFormatter: b.outputLogFormatter
                }), new a({
                    name: "getChainId",
                    call: "eth_chainId",
                    params: 0,
                    outputFormatter: s.hexToNumber
                }), new a({
                    name: "requestAccounts",
                    call: "eth_requestAccounts",
                    params: 0,
                    outputFormatter: s.toChecksumAddress
                }), new a({
                    name: "getProof",
                    call: "eth_getProof",
                    params: 3,
                    inputFormatter: [b.inputAddressFormatter, b.inputStorageKeysFormatter, b.inputDefaultBlockNumberFormatter],
                    outputFormatter: b.outputProofFormatter
                }), new a({
                    name: "getPendingTransactions",
                    call: "eth_pendingTransactions",
                    params: 0,
                    outputFormatter: b.outputTransactionFormatter
                }), new o({
                    name: "subscribe",
                    type: "eth",
                    subscriptions: {
                        newBlockHeaders: {
                            subscriptionName: "newHeads",
                            params: 0,
                            outputFormatter: b.outputBlockFormatter
                        },
                        pendingTransactions: {
                            subscriptionName: "newPendingTransactions",
                            params: 0
                        },
                        logs: {
                            params: 1,
                            inputFormatter: [b.inputLogFormatter],
                            outputFormatter: b.outputLogFormatter,
                            subscriptionHandler: function (t) {
                                t.removed ? this.emit("changed", t) : this.emit("data", t), "function" == typeof this.callback && this.callback(null, t, this)
                            }
                        },
                        syncing: {
                            params: 0,
                            outputFormatter: b.outputSyncingFormatter,
                            subscriptionHandler: function (t) {
                                var e = this;
                                !0 !== this._isSyncing ? (this._isSyncing = !0, this.emit("changed", e._isSyncing), "function" == typeof this.callback && this.callback(null, e._isSyncing, this), setTimeout((function () {
                                    e.emit("data", t), "function" == typeof e.callback && e.callback(null, t, e)
                                }), 0)) : (this.emit("data", t), "function" == typeof e.callback && this.callback(null, t, this), clearTimeout(this._isSyncingTimeout), this._isSyncingTimeout = setTimeout((function () {
                                    t.currentBlock > t.highestBlock - 200 && (e._isSyncing = !1, e.emit("changed", e._isSyncing), "function" == typeof e.callback && e.callback(null, e._isSyncing, e))
                                }), 500))
                            }
                        }
                    }
                })];
                C.forEach((function (e) {
                    e.attachToObject(t), e.setRequestManager(t._requestManager, t.accounts), e.defaultBlock = t.defaultBlock, e.defaultAccount = t.defaultAccount, e.transactionBlockTimeout = t.transactionBlockTimeout, e.transactionConfirmationBlocks = t.transactionConfirmationBlocks, e.transactionPollingTimeout = t.transactionPollingTimeout, e.handleRevert = t.handleRevert
                }))
            };
        n.addProviders(g), t.exports = g
    }, function (t, e, r) {
        const {
            callbackify: n
        } = r(59);
        var i = r(12).errors,
            o = r(287),
            a = r(705),
            s = r(706),
            u = function RequestManager(t, e) {
                this.provider = null, this.providers = RequestManager.providers, this.setProvider(t, e), this.subscriptions = new Map
            };
        u.givenProvider = s, u.providers = {
            WebsocketProvider: r(707),
            HttpProvider: r(709),
            IpcProvider: r(710)
        }, u.prototype.setProvider = function (t, e) {
            var r = this;
            if (t && "string" == typeof t && this.providers)
                if (/^http(s)?:\/\//i.test(t)) t = new this.providers.HttpProvider(t);
                else if (/^ws(s)?:\/\//i.test(t)) t = new this.providers.WebsocketProvider(t);
            else if (t && "object" == typeof e && "function" == typeof e.connect) t = new this.providers.IpcProvider(t, e);
            else if (t) throw new Error("Can't autodetect provider for \"" + t + '"');
            if (this.provider && this.provider.connected && this.clearSubscriptions(), this.provider = t || null, this.provider && this.provider.on) {
                "function" == typeof t.request ? this.provider.on("message", (function (t) {
                    if (t && "eth_subscription" === t.type && t.data) {
                        const e = t.data;
                        e.subscription && r.subscriptions.has(e.subscription) && r.subscriptions.get(e.subscription).callback(null, e.result)
                    }
                })) : this.provider.on("data", (function data(t, e) {
                    (t = t || e).method && t.params && t.params.subscription && r.subscriptions.has(t.params.subscription) && r.subscriptions.get(t.params.subscription).callback(null, t.params.result)
                })), this.provider.on("connect", (function connect() {
                    r.subscriptions.forEach((function (t) {
                        t.subscription.resubscribe()
                    }))
                })), this.provider.on("error", (function error(error) {
                    r.subscriptions.forEach((function (t) {
                        t.callback(error)
                    }))
                }));
                const e = function disconnect(t) {
                    r._isCleanCloseEvent(t) && !r._isIpcCloseError(t) || (r.subscriptions.forEach((function (e) {
                        e.callback(i.ConnectionCloseError(t)), r.subscriptions.delete(e.subscription.id)
                    })), r.provider && r.provider.emit && r.provider.emit("error", i.ConnectionCloseError(t))), r.provider && r.provider.emit && r.provider.emit("end", t)
                };
                this.provider.on("close", e), this.provider.on("disconnect", e)
            }
        }, u.prototype.send = function (t, e) {
            if (e = e || function () {}, !this.provider) return e(i.InvalidProvider());
            const {
                method: r,
                params: a
            } = t, s = o.toPayload(r, a), u = this._jsonrpcResultCallback(e, s);
            if (this.provider.request) {
                n(this.provider.request.bind(this.provider))({
                    method: r,
                    params: a
                }, e)
            } else if (this.provider.sendAsync) this.provider.sendAsync(s, u);
            else {
                if (!this.provider.send) throw new Error("Provider does not have a request or send method to use.");
                this.provider.send(s, u)
            }
        }, u.prototype.sendBatch = function (t, e) {
            if (!this.provider) return e(i.InvalidProvider());
            var r = o.toBatchPayload(t);
            this.provider[this.provider.sendAsync ? "sendAsync" : "send"](r, (function (t, r) {
                return t ? e(t) : Array.isArray(r) ? void e(null, r) : e(i.InvalidResponse(r))
            }))
        }, u.prototype.addSubscription = function (t, e) {
            if (!this.provider.on) throw new Error("The provider doesn't support subscriptions: " + this.provider.constructor.name);
            this.subscriptions.set(t.id, {
                callback: e,
                subscription: t
            })
        }, u.prototype.removeSubscription = function (t, e) {
            if (this.subscriptions.has(t)) {
                var r = this.subscriptions.get(t).subscription.options.type;
                return this.subscriptions.delete(t), void this.send({
                    method: r + "_unsubscribe",
                    params: [t]
                }, e)
            }
            "function" == typeof e && e(null)
        }, u.prototype.clearSubscriptions = function (t) {
            try {
                var e = this;
                return this.subscriptions.size > 0 && this.subscriptions.forEach((function (r, n) {
                    t && "syncing" === r.name || e.removeSubscription(n)
                })), this.provider.reset && this.provider.reset(), !0
            } catch (t) {
                throw new Error("Error while clearing subscriptions: " + t)
            }
        }, u.prototype._isCleanCloseEvent = function (t) {
            return "object" == typeof t && ([1e3].includes(t.code) || !0 === t.wasClean)
        }, u.prototype._isIpcCloseError = function (t) {
            return "boolean" == typeof t && t
        }, u.prototype._jsonrpcResultCallback = function (t, e) {
            return function (r, n) {
                return n && n.id && e.id !== n.id ? t(new Error(`Wrong response id ${n.id} (expected: ${e.id}) in ${JSON.stringify(e)}`)) : r ? t(r) : n && n.error ? t(i.ErrorResponse(n)) : o.isValidResponse(n) ? void t(null, n.result) : t(i.InvalidResponse(n))
            }
        }, t.exports = {
            Manager: u,
            BatchManager: a
        }
    }, function (t, e, r) {
        t.exports = {
            ErrorResponse: function (t) {
                var e = t && t.error && t.error.message ? t.error.message : JSON.stringify(t),
                    r = t.error && t.error.data ? t.error.data : null,
                    n = new Error("Returned error: " + e);
                return n.data = r, n
            },
            InvalidNumberOfParams: function (t, e, r) {
                return new Error('Invalid number of parameters for "' + r + '". Got ' + t + " expected " + e + "!")
            },
            InvalidConnection: function (t, e) {
                return this.ConnectionError("CONNECTION ERROR: Couldn't connect to node " + t + ".", e)
            },
            InvalidProvider: function () {
                return new Error("Provider not set or invalid")
            },
            InvalidResponse: function (t) {
                var e = t && t.error && t.error.message ? t.error.message : "Invalid JSON RPC response: " + JSON.stringify(t);
                return new Error(e)
            },
            ConnectionTimeout: function (t) {
                return new Error("CONNECTION TIMEOUT: timeout of " + t + " ms achived")
            },
            ConnectionNotOpenError: function (t) {
                return this.ConnectionError("connection not open on send()", t)
            },
            ConnectionCloseError: function (t) {
                return "object" == typeof t && t.code && t.reason ? this.ConnectionError("CONNECTION ERROR: The connection got closed with the close code `" + t.code + "` and the following reason string `" + t.reason + "`", t) : new Error("CONNECTION ERROR: The connection closed unexpectedly")
            },
            MaxAttemptsReachedOnReconnectingError: function () {
                return new Error("Maximum number of reconnect attempts reached!")
            },
            PendingRequestsOnReconnectingError: function () {
                return new Error("CONNECTION ERROR: Provider started to reconnect before the response got received!")
            },
            ConnectionError: function (t, e) {
                const r = new Error(t);
                return e && (r.code = e.code, r.reason = e.reason), r
            },
            RevertInstructionError: function (t, e) {
                var r = new Error("Your request got reverted with the following reason string: " + t);
                return r.reason = t, r.signature = e, r
            },
            TransactionRevertInstructionError: function (t, e, r) {
                var n = new Error("Transaction has been reverted by the EVM:\n" + JSON.stringify(r, null, 2));
                return n.reason = t, n.signature = e, n.receipt = r, n
            },
            TransactionError: function (t, e) {
                var r = new Error(t);
                return r.receipt = e, r
            },
            NoContractAddressFoundError: function (t) {
                return this.TransactionError("The transaction receipt didn't contain a contract address.", t)
            },
            ContractCodeNotStoredError: function (t) {
                return this.TransactionError("The contract code couldn't be stored, please check your gas limit.", t)
            },
            TransactionRevertedWithoutReasonError: function (t) {
                return this.TransactionError("Transaction has been reverted by the EVM:\n" + JSON.stringify(t, null, 2), t)
            },
            TransactionOutOfGasError: function (t) {
                return this.TransactionError("Transaction ran out of gas. Please provide more gas:\n" + JSON.stringify(t, null, 2), t)
            },
            ResolverMethodMissingError: function (t, e) {
                return new Error("The resolver at " + t + 'does not implement requested method: "' + e + '".')
            },
            ContractMissingABIError: function () {
                return new Error("You must provide the json interface of the contract when instantiating a contract object.")
            },
            ContractOnceRequiresCallbackError: function () {
                return new Error("Once requires a callback as the second parameter.")
            },
            ContractEventDoesNotExistError: function (t) {
                return new Error('Event "' + t + "\" doesn't exist in this contract.")
            },
            ContractReservedEventError: function (t) {
                return new Error('The event "' + t + "\" is a reserved event name, you can't use it.")
            },
            ContractMissingDeployDataError: function () {
                return new Error('No "data" specified in neither the given options, nor the default options.')
            },
            ContractNoAddressDefinedError: function () {
                return new Error("This contract object doesn't have address set yet, please set an address first.")
            },
            ContractNoFromAddressDefinedError: function () {
                return new Error('No "from" address specified in neither the given options, nor the default options.')
            }
        }
    }, function (t, e, r) {
        var n = r(35),
            i = r(286),
            outputBigNumberFormatter = function (t) {
                return n.toBN(t).toString(10)
            },
            inputBlockNumberFormatter = function (t) {
                if (void 0 !== t) return function (t) {
                    return "latest" === t || "pending" === t || "earliest" === t
                }(t) ? t : "genesis" === t ? "0x0" : n.isHexStrict(t) ? "string" == typeof t ? t.toLowerCase() : t : n.numberToHex(t)
            },
            _txInputFormatter = function (t) {
                if (t.to && (t.to = inputAddressFormatter(t.to)), t.data && t.input) throw new Error('You can\'t have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.');
                if (!t.data && t.input && (t.data = t.input, delete t.input), t.data && !t.data.startsWith("0x") && (t.data = "0x" + t.data), t.data && !n.isHex(t.data)) throw new Error("The data field must be HEX encoded data.");
                return (t.gas || t.gasLimit) && (t.gas = t.gas || t.gasLimit), (t.maxPriorityFeePerGas || t.maxFeePerGas) && delete t.gasPrice, ["gasPrice", "gas", "value", "maxPriorityFeePerGas", "maxFeePerGas", "nonce"].filter((function (e) {
                    return void 0 !== t[e]
                })).forEach((function (e) {
                    t[e] = n.numberToHex(t[e])
                })), t
            },
            outputTransactionFormatter = function (t) {
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), t.nonce = n.hexToNumber(t.nonce), t.gas = n.hexToNumber(t.gas), t.gasPrice && (t.gasPrice = outputBigNumberFormatter(t.gasPrice)), t.maxFeePerGas && (t.maxFeePerGas = outputBigNumberFormatter(t.maxFeePerGas)), t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = outputBigNumberFormatter(t.maxPriorityFeePerGas)), t.type && (t.type = n.hexToNumber(t.type)), t.value = outputBigNumberFormatter(t.value), t.to && n.isAddress(t.to) ? t.to = n.toChecksumAddress(t.to) : t.to = null, t.from && (t.from = n.toChecksumAddress(t.from)), t
            },
            outputLogFormatter = function (t) {
                if ("string" == typeof t.blockHash && "string" == typeof t.transactionHash && "string" == typeof t.logIndex) {
                    var e = n.sha3(t.blockHash.replace("0x", "") + t.transactionHash.replace("0x", "") + t.logIndex.replace("0x", ""));
                    t.id = "log_" + e.replace("0x", "").substr(0, 8)
                } else t.id || (t.id = null);
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), null !== t.logIndex && (t.logIndex = n.hexToNumber(t.logIndex)), t.address && (t.address = n.toChecksumAddress(t.address)), t
            },
            inputAddressFormatter = function (t) {
                var e = new i(t);
                if (e.isValid() && e.isDirect()) return e.toAddress().toLowerCase();
                if (n.isAddress(t)) return "0x" + t.toLowerCase().replace("0x", "");
                throw new Error(`Provided address ${t} is invalid, the capitalization checksum test failed, or it's an indirect IBAN address which can't be converted.`)
            };
        t.exports = {
            inputDefaultBlockNumberFormatter: function (t) {
                return inputBlockNumberFormatter(this && null == t ? this.defaultBlock : t)
            },
            inputBlockNumberFormatter: inputBlockNumberFormatter,
            inputCallFormatter: function (t) {
                var e = (t = _txInputFormatter(t)).from || (this ? this.defaultAccount : null);
                return e && (t.from = inputAddressFormatter(e)), t
            },
            inputTransactionFormatter: function (t) {
                if ("number" != typeof (t = _txInputFormatter(t)).from && (!t.from || "object" != typeof t.from)) {
                    if (t.from = t.from || (this ? this.defaultAccount : null), !t.from && "number" != typeof t.from) throw new Error('The send transactions "from" field must be defined!');
                    t.from = inputAddressFormatter(t.from)
                }
                return t
            },
            inputAddressFormatter: inputAddressFormatter,
            inputPostFormatter: function (t) {
                return t.ttl && (t.ttl = n.numberToHex(t.ttl)), t.workToProve && (t.workToProve = n.numberToHex(t.workToProve)), t.priority && (t.priority = n.numberToHex(t.priority)), Array.isArray(t.topics) || (t.topics = t.topics ? [t.topics] : []), t.topics = t.topics.map((function (t) {
                    return 0 === t.indexOf("0x") ? t : n.fromUtf8(t)
                })), t
            },
            inputLogFormatter: function (t) {
                var toTopic = function (t) {
                    return null == t ? null : 0 === (t = String(t)).indexOf("0x") ? t : n.fromUtf8(t)
                };
                return void 0 === t && (t = {}), void 0 === t.fromBlock && (t = {
                    ...t,
                    fromBlock: "latest"
                }), (t.fromBlock || 0 === t.fromBlock) && (t.fromBlock = inputBlockNumberFormatter(t.fromBlock)), (t.toBlock || 0 === t.toBlock) && (t.toBlock = inputBlockNumberFormatter(t.toBlock)), t.topics = t.topics || [], t.topics = t.topics.map((function (t) {
                    return Array.isArray(t) ? t.map(toTopic) : toTopic(t)
                })), toTopic = null, t.address && (t.address = Array.isArray(t.address) ? t.address.map((function (t) {
                    return inputAddressFormatter(t)
                })) : inputAddressFormatter(t.address)), t
            },
            inputSignFormatter: function (t) {
                return n.isHexStrict(t) ? t : n.utf8ToHex(t)
            },
            inputStorageKeysFormatter: function (t) {
                return t.map(n.numberToHex)
            },
            outputProofFormatter: function (t) {
                return t.address = n.toChecksumAddress(t.address), t.nonce = n.hexToNumberString(t.nonce), t.balance = n.hexToNumberString(t.balance), t
            },
            outputBigNumberFormatter: outputBigNumberFormatter,
            outputTransactionFormatter: outputTransactionFormatter,
            outputTransactionReceiptFormatter: function (t) {
                if ("object" != typeof t) throw new Error("Received receipt is invalid: " + t);
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), t.cumulativeGasUsed = n.hexToNumber(t.cumulativeGasUsed), t.gasUsed = n.hexToNumber(t.gasUsed), Array.isArray(t.logs) && (t.logs = t.logs.map(outputLogFormatter)), t.contractAddress && (t.contractAddress = n.toChecksumAddress(t.contractAddress)), void 0 !== t.status && null !== t.status && (t.status = Boolean(parseInt(t.status))), t
            },
            outputBlockFormatter: function (t) {
                return t.gasLimit = n.hexToNumber(t.gasLimit), t.gasUsed = n.hexToNumber(t.gasUsed), t.size = n.hexToNumber(t.size), t.timestamp = n.hexToNumber(t.timestamp), null !== t.number && (t.number = n.hexToNumber(t.number)), t.difficulty && (t.difficulty = outputBigNumberFormatter(t.difficulty)), t.totalDifficulty && (t.totalDifficulty = outputBigNumberFormatter(t.totalDifficulty)), Array.isArray(t.transactions) && t.transactions.forEach((function (t) {
                    if ("string" != typeof t) return outputTransactionFormatter(t)
                })), t.miner && (t.miner = n.toChecksumAddress(t.miner)), t
            },
            outputLogFormatter: outputLogFormatter,
            outputPostFormatter: function (t) {
                return t.expiry = n.hexToNumber(t.expiry), t.sent = n.hexToNumber(t.sent), t.ttl = n.hexToNumber(t.ttl), t.workProved = n.hexToNumber(t.workProved), t.topics || (t.topics = []), t.topics = t.topics.map((function (t) {
                    return n.toUtf8(t)
                })), t
            },
            outputSyncingFormatter: function (t) {
                return t.startingBlock = n.hexToNumber(t.startingBlock), t.currentBlock = n.hexToNumber(t.currentBlock), t.highestBlock = n.hexToNumber(t.highestBlock), t.knownStates && (t.knownStates = n.hexToNumber(t.knownStates), t.pulledStates = n.hexToNumber(t.pulledStates)), t
            }
        }
    }, function (t, e) {}, function (t, e, r) {
        var n = r(126),
            i = r(285),
            _parseNumber = function (t) {
                var e = typeof t;
                if ("string" === e) return i.isHexStrict(t) ? new n(t.replace(/0x/i, ""), 16) : new n(t, 10);
                if ("number" === e) return new n(t);
                if (i.isBigNumber(t)) return new n(t.toString(10));
                if (i.isBN(t)) return t;
                throw new Error(t + " is not a number")
            },
            _solidityPack = function (t, e, r) {
                var o, a;
                if ("bytes" === (t = function (t) {
                        return t.startsWith("int[") ? "int256" + t.slice(3) : "int" === t ? "int256" : t.startsWith("uint[") ? "uint256" + t.slice(4) : "uint" === t ? "uint256" : t.startsWith("fixed[") ? "fixed128x128" + t.slice(5) : "fixed" === t ? "fixed128x128" : t.startsWith("ufixed[") ? "ufixed128x128" + t.slice(6) : "ufixed" === t ? "ufixed128x128" : t
                    }(t))) {
                    if (e.replace(/^0x/i, "").length % 2 != 0) throw new Error("Invalid bytes characters " + e.length);
                    return e
                }
                if ("string" === t) return i.utf8ToHex(e);
                if ("bool" === t) return e ? "01" : "00";
                if (t.startsWith("address")) {
                    if (o = r ? 64 : 40, !i.isAddress(e)) throw new Error(e + " is not a valid address, or the checksum is invalid.");
                    return i.leftPad(e.toLowerCase(), o)
                }
                if (o = function (t) {
                        var e = /^\D+(\d+).*$/.exec(t);
                        return e ? parseInt(e[1], 10) : null
                    }(t), t.startsWith("bytes")) {
                    if (!o) throw new Error("bytes[] not yet supported in solidity");
                    if (r && (o = 32), o < 1 || o > 32 || o < e.replace(/^0x/i, "").length / 2) throw new Error("Invalid bytes" + o + " for " + e);
                    return i.rightPad(e, 2 * o)
                }
                if (t.startsWith("uint")) {
                    if (o % 8 || o < 8 || o > 256) throw new Error("Invalid uint" + o + " size");
                    if ((a = _parseNumber(e)).bitLength() > o) throw new Error("Supplied uint exceeds width: " + o + " vs " + a.bitLength());
                    if (a.lt(new n(0))) throw new Error("Supplied uint " + a.toString() + " is negative");
                    return o ? i.leftPad(a.toString("hex"), o / 8 * 2) : a
                }
                if (t.startsWith("int")) {
                    if (o % 8 || o < 8 || o > 256) throw new Error("Invalid int" + o + " size");
                    if ((a = _parseNumber(e)).bitLength() > o) throw new Error("Supplied int exceeds width: " + o + " vs " + a.bitLength());
                    return a.lt(new n(0)) ? a.toTwos(o).toString("hex") : o ? i.leftPad(a.toString("hex"), o / 8 * 2) : a
                }
                throw new Error("Unsupported or invalid type: " + t)
            },
            _processSolidityEncodePackedArgs = function (t) {
                if (Array.isArray(t)) throw new Error("Autodetection of array types is not supported.");
                var e, r, o = "";
                if (t && "object" == typeof t && (t.hasOwnProperty("v") || t.hasOwnProperty("t") || t.hasOwnProperty("value") || t.hasOwnProperty("type")) ? (e = t.hasOwnProperty("t") ? t.t : t.type, o = t.hasOwnProperty("v") ? t.v : t.value) : (e = i.toHex(t, !0), o = i.toHex(t), e.startsWith("int") || e.startsWith("uint") || (e = "bytes")), !e.startsWith("int") && !e.startsWith("uint") || "string" != typeof o || /^(-)?0x/i.test(o) || (o = new n(o)), Array.isArray(o)) {
                    if ((r = function (t) {
                            var e = /^\D+\d*\[(\d+)\]$/.exec(t);
                            return e ? parseInt(e[1], 10) : null
                        }(e)) && o.length !== r) throw new Error(e + " is not matching the given array " + JSON.stringify(o));
                    r = o.length
                }
                return Array.isArray(o) ? o.map((function (t) {
                    return _solidityPack(e, t, r).toString("hex").replace("0x", "")
                })).join("") : _solidityPack(e, o, r).toString("hex").replace("0x", "")
            };
        t.exports = {
            soliditySha3: function () {
                var t = Array.prototype.slice.call(arguments),
                    e = t.map(_processSolidityEncodePackedArgs);
                return i.sha3("0x" + e.join(""))
            },
            soliditySha3Raw: function () {
                return i.sha3Raw("0x" + Array.prototype.slice.call(arguments).map(_processSolidityEncodePackedArgs).join(""))
            },
            encodePacked: function () {
                var t = Array.prototype.slice.call(arguments),
                    e = t.map(_processSolidityEncodePackedArgs);
                return "0x" + e.join("").toLowerCase()
            }
        }
    }, function (t, e, r) {
        var n = r(287),
            i = r(12).errors,
            Batch = function (t) {
                this.requestManager = t, this.requests = []
            };
        Batch.prototype.add = function (t) {
            this.requests.push(t)
        }, Batch.prototype.execute = function () {
            var t = this.requests;
            this.requestManager.sendBatch(t, (function (e, r) {
                r = r || [], t.map((function (t, e) {
                    return r[e] || {}
                })).forEach((function (e, r) {
                    if (t[r].callback) {
                        if (e && e.error) return t[r].callback(i.ErrorResponse(e));
                        if (!n.isValidResponse(e)) return t[r].callback(i.InvalidResponse(e));
                        try {
                            t[r].callback(null, t[r].format ? t[r].format(e.result) : e.result)
                        } catch (e) {
                            t[r].callback(e)
                        }
                    }
                }))
            }))
        }, t.exports = Batch
    }, function (t, e, r) {
        var n, i = null;
        try {
            n = Function("return this")()
        } catch (t) {
            n = window
        }
        void 0 !== n.ethereum ? i = n.ethereum : void 0 !== n.web3 && n.web3.currentProvider && (n.web3.currentProvider.sendAsync && (n.web3.currentProvider.send = n.web3.currentProvider.sendAsync, delete n.web3.currentProvider.sendAsync), !n.web3.currentProvider.on && n.web3.currentProvider.connection && "ipcProviderWrapper" === n.web3.currentProvider.connection.constructor.name && (n.web3.currentProvider.on = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            switch (t) {
                case "data":
                    this.connection.on("data", (function (t) {
                        var r = "";
                        t = t.toString();
                        try {
                            r = JSON.parse(t)
                        } catch (r) {
                            return e(new Error("Couldn't parse response data" + t))
                        }
                        r.id || -1 === r.method.indexOf("_subscription") || e(null, r)
                    }));
                    break;
                default:
                    this.connection.on(t, e)
            }
        }), i = n.web3.currentProvider), t.exports = i
    }, function (t, e, r) {
        var n = r(189),
            i = r(708),
            o = r(12).errors,
            a = r(83).w3cwebsocket,
            s = function WebsocketProvider(t, e) {
                n.call(this), e = e || {}, this.url = t, this._customTimeout = e.timeout || 15e3, this.headers = e.headers || {}, this.protocol = e.protocol || void 0, this.reconnectOptions = Object.assign({
                    auto: !1,
                    delay: 5e3,
                    maxAttempts: !1,
                    onTimeout: !1
                }, e.reconnect), this.clientConfig = e.clientConfig || void 0, this.requestOptions = e.requestOptions || void 0, this.DATA = "data", this.CLOSE = "close", this.ERROR = "error", this.CONNECT = "connect", this.RECONNECT = "reconnect", this.connection = null, this.requestQueue = new Map, this.responseQueue = new Map, this.reconnectAttempts = 0, this.reconnecting = !1;
                var r = i.parseURL(t);
                r.username && r.password && (this.headers.authorization = "Basic " + i.btoa(r.username + ":" + r.password)), r.auth && (this.headers.authorization = "Basic " + i.btoa(r.auth)), Object.defineProperty(this, "connected", {
                    get: function () {
                        return this.connection && this.connection.readyState === this.connection.OPEN
                    },
                    enumerable: !0
                }), this.connect()
            };
        (s.prototype = Object.create(n.prototype)).constructor = s, s.prototype.connect = function () {
            this.connection = new a(this.url, this.protocol, void 0, this.headers, this.requestOptions, this.clientConfig), this._addSocketListeners()
        }, s.prototype._onMessage = function (t) {
            var e = this;
            this._parseResponse("string" == typeof t.data ? t.data : "").forEach((function (t) {
                if (t.method && -1 !== t.method.indexOf("_subscription")) e.emit(e.DATA, t);
                else {
                    var r = t.id;
                    Array.isArray(t) && (r = t[0].id), e.responseQueue.has(r) && (void 0 !== e.responseQueue.get(r).callback && e.responseQueue.get(r).callback(!1, t), e.responseQueue.delete(r))
                }
            }))
        }, s.prototype._onConnect = function () {
            if (this.emit(this.CONNECT), this.reconnectAttempts = 0, this.reconnecting = !1, this.requestQueue.size > 0) {
                var t = this;
                this.requestQueue.forEach((function (e, r) {
                    t.send(e.payload, e.callback), t.requestQueue.delete(r)
                }))
            }
        }, s.prototype._onClose = function (t) {
            var e = this;
            !this.reconnectOptions.auto || [1e3, 1001].includes(t.code) && !1 !== t.wasClean ? (this.emit(this.CLOSE, t), this.requestQueue.size > 0 && this.requestQueue.forEach((function (r, n) {
                r.callback(o.ConnectionNotOpenError(t)), e.requestQueue.delete(n)
            })), this.responseQueue.size > 0 && this.responseQueue.forEach((function (r, n) {
                r.callback(o.InvalidConnection("on WS", t)), e.responseQueue.delete(n)
            })), this._removeSocketListeners(), this.removeAllListeners()) : this.reconnect()
        }, s.prototype._addSocketListeners = function () {
            this.connection.addEventListener("message", this._onMessage.bind(this)), this.connection.addEventListener("open", this._onConnect.bind(this)), this.connection.addEventListener("close", this._onClose.bind(this))
        }, s.prototype._removeSocketListeners = function () {
            this.connection.removeEventListener("message", this._onMessage), this.connection.removeEventListener("open", this._onConnect), this.connection.removeEventListener("close", this._onClose)
        }, s.prototype._parseResponse = function (t) {
            var e = this,
                r = [];
            return t.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach((function (t) {
                e.lastChunk && (t = e.lastChunk + t);
                var n = null;
                try {
                    n = JSON.parse(t)
                } catch (r) {
                    return e.lastChunk = t, clearTimeout(e.lastChunkTimeout), void(e.lastChunkTimeout = setTimeout((function () {
                        e.reconnectOptions.auto && e.reconnectOptions.onTimeout ? e.reconnect() : (e.emit(e.ERROR, o.ConnectionTimeout(e._customTimeout)), e.requestQueue.size > 0 && e.requestQueue.forEach((function (t, r) {
                            t.callback(o.ConnectionTimeout(e._customTimeout)), e.requestQueue.delete(r)
                        })))
                    }), e._customTimeout))
                }
                clearTimeout(e.lastChunkTimeout), e.lastChunk = null, n && r.push(n)
            })), r
        }, s.prototype.send = function (t, e) {
            var r = t.id,
                n = {
                    payload: t,
                    callback: e
                };
            if (Array.isArray(t) && (r = t[0].id), this.connection.readyState === this.connection.CONNECTING || this.reconnecting) this.requestQueue.set(r, n);
            else {
                if (this.connection.readyState !== this.connection.OPEN) return this.requestQueue.delete(r), this.emit(this.ERROR, o.ConnectionNotOpenError()), void n.callback(o.ConnectionNotOpenError());
                this.responseQueue.set(r, n), this.requestQueue.delete(r);
                try {
                    this.connection.send(JSON.stringify(n.payload))
                } catch (t) {
                    n.callback(t), this.responseQueue.delete(r)
                }
            }
        }, s.prototype.reset = function () {
            this.responseQueue.clear(), this.requestQueue.clear(), this.removeAllListeners(), this._removeSocketListeners(), this._addSocketListeners()
        }, s.prototype.disconnect = function (t, e) {
            this._removeSocketListeners(), this.connection.close(t || 1e3, e)
        }, s.prototype.supportsSubscriptions = function () {
            return !0
        }, s.prototype.reconnect = function () {
            var t = this;
            this.reconnecting = !0, this.responseQueue.size > 0 && this.responseQueue.forEach((function (e, r) {
                e.callback(o.PendingRequestsOnReconnectingError()), t.responseQueue.delete(r)
            })), !this.reconnectOptions.maxAttempts || this.reconnectAttempts < this.reconnectOptions.maxAttempts ? setTimeout((function () {
                t.reconnectAttempts++, t._removeSocketListeners(), t.emit(t.RECONNECT, t.reconnectAttempts), t.connect()
            }), this.reconnectOptions.delay) : (this.emit(this.ERROR, o.MaxAttemptsReachedOnReconnectingError()), this.reconnecting = !1, this.requestQueue.size > 0 && this.requestQueue.forEach((function (e, r) {
                e.callback(o.MaxAttemptsReachedOnReconnectingError()), t.requestQueue.delete(r)
            })))
        }, t.exports = s
    }, function (t, e, r) {
        (function (e, n) {
            var i = "[object process]" === Object.prototype.toString.call(void 0 !== e ? e : 0),
                o = "undefined" != typeof navigator && "ReactNative" === navigator.product,
                a = null,
                s = null;
            if (i || o) {
                a = function (t) {
                    return n.from(t).toString("base64")
                };
                var u = r(16);
                if (u.URL) {
                    var c = u.URL;
                    s = function (t) {
                        return new c(t)
                    }
                } else s = r(16).parse
            } else a = btoa.bind(window), s = function (t) {
                return new URL(t)
            };
            t.exports = {
                parseURL: s,
                btoa: a
            }
        }).call(this, r(7), r(0).Buffer)
    }, function (t, e, r) {
        var n = r(12).errors,
            i = r(84).XMLHttpRequest,
            o = r(51),
            a = r(68),
            s = function HttpProvider(t, e) {
                e = e || {}, this.withCredentials = e.withCredentials || !1, this.timeout = e.timeout || 0, this.headers = e.headers, this.agent = e.agent, this.connected = !1;
                const r = !1 !== e.keepAlive;
                this.host = t || "http://localhost:8545", this.agent || ("https" === this.host.substring(0, 5) ? this.httpsAgent = new a.Agent({
                    keepAlive: r
                }) : this.httpAgent = new o.Agent({
                    keepAlive: r
                }))
            };
        s.prototype._prepareRequest = function () {
            var t;
            if ("undefined" != typeof XMLHttpRequest) t = new XMLHttpRequest;
            else {
                t = new i;
                var e = {
                    httpsAgent: this.httpsAgent,
                    httpAgent: this.httpAgent,
                    baseUrl: this.baseUrl
                };
                this.agent && (e.httpsAgent = this.agent.https, e.httpAgent = this.agent.http, e.baseUrl = this.agent.baseUrl), t.nodejsSet(e)
            }
            return t.open("POST", this.host, !0), t.setRequestHeader("Content-Type", "application/json"), t.timeout = this.timeout, t.withCredentials = this.withCredentials, this.headers && this.headers.forEach((function (e) {
                t.setRequestHeader(e.name, e.value)
            })), t
        }, s.prototype.send = function (t, e) {
            var r = this,
                i = this._prepareRequest();
            i.onreadystatechange = function () {
                if (4 === i.readyState && 1 !== i.timeout) {
                    var t = i.responseText,
                        o = null;
                    try {
                        t = JSON.parse(t)
                    } catch (t) {
                        o = n.InvalidResponse(i.responseText)
                    }
                    r.connected = !0, e(o, t)
                }
            }, i.ontimeout = function () {
                r.connected = !1, e(n.ConnectionTimeout(this.timeout))
            };
            try {
                i.send(JSON.stringify(t))
            } catch (t) {
                this.connected = !1, e(n.InvalidConnection(this.host))
            }
        }, s.prototype.disconnect = function () {}, s.prototype.supportsSubscriptions = function () {
            return !1
        }, t.exports = s
    }, function (t, e, r) {
        var n = r(12).errors,
            i = r(711),
            o = function IpcProvider(t, e) {
                var r = this;
                this.responseCallbacks = {}, this.notificationCallbacks = [], this.path = t, this.connected = !1, this.connection = e.connect({
                    path: this.path
                }), this.addDefaultEvents();
                var callback = function (t) {
                    var e = null;
                    Array.isArray(t) ? t.forEach((function (t) {
                        r.responseCallbacks[t.id] && (e = t.id)
                    })) : e = t.id, e || -1 === t.method.indexOf("_subscription") ? r.responseCallbacks[e] && (r.responseCallbacks[e](null, t), delete r.responseCallbacks[e]) : r.notificationCallbacks.forEach((function (e) {
                        "function" == typeof e && e(t)
                    }))
                };
                "Socket" === e.constructor.name ? i(this.connection).done(callback) : this.connection.on("data", (function (t) {
                    r._parseResponse(t.toString()).forEach(callback)
                }))
            };
        o.prototype.addDefaultEvents = function () {
            var t = this;
            this.connection.on("connect", (function () {
                t.connected = !0
            })), this.connection.on("close", (function () {
                t.connected = !1
            })), this.connection.on("error", (function () {
                t._timeout()
            })), this.connection.on("end", (function () {
                t._timeout()
            })), this.connection.on("timeout", (function () {
                t._timeout()
            }))
        }, o.prototype._parseResponse = function (t) {
            var e = this,
                r = [];
            return t.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach((function (t) {
                e.lastChunk && (t = e.lastChunk + t);
                var i = null;
                try {
                    i = JSON.parse(t)
                } catch (r) {
                    return e.lastChunk = t, clearTimeout(e.lastChunkTimeout), void(e.lastChunkTimeout = setTimeout((function () {
                        throw e._timeout(), n.InvalidResponse(t)
                    }), 15e3))
                }
                clearTimeout(e.lastChunkTimeout), e.lastChunk = null, i && r.push(i)
            })), r
        }, o.prototype._addResponseCallback = function (t, e) {
            var r = t.id || t[0].id,
                n = t.method || t[0].method;
            this.responseCallbacks[r] = e, this.responseCallbacks[r].method = n
        }, o.prototype._timeout = function () {
            for (var t in this.responseCallbacks) this.responseCallbacks.hasOwnProperty(t) && (this.responseCallbacks[t](n.InvalidConnection("on IPC")), delete this.responseCallbacks[t])
        }, o.prototype.reconnect = function () {
            this.connection.connect({
                path: this.path
            })
        }, o.prototype.send = function (t, e) {
            this.connection.writable || this.connection.connect({
                path: this.path
            }), this.connection.write(JSON.stringify(t)), this._addResponseCallback(t, e)
        }, o.prototype.on = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            switch (t) {
                case "data":
                    this.notificationCallbacks.push(e);
                    break;
                default:
                    this.connection.on(t, e)
            }
        }, o.prototype.once = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            this.connection.once(t, e)
        }, o.prototype.removeListener = function (t, e) {
            var r = this;
            switch (t) {
                case "data":
                    this.notificationCallbacks.forEach((function (t, n) {
                        t === e && r.notificationCallbacks.splice(n, 1)
                    }));
                    break;
                default:
                    this.connection.removeListener(t, e)
            }
        }, o.prototype.removeAllListeners = function (t) {
            switch (t) {
                case "data":
                    this.notificationCallbacks = [];
                    break;
                default:
                    this.connection.removeAllListeners(t)
            }
        }, o.prototype.reset = function () {
            this._timeout(), this.notificationCallbacks = [], this.connection.removeAllListeners("error"), this.connection.removeAllListeners("end"), this.connection.removeAllListeners("timeout"), this.addDefaultEvents()
        }, o.prototype.supportsSubscriptions = function () {
            return !0
        }, t.exports = o
    }, function (t, e, r) {
        ! function webpackUniversalModuleDefinition(e, r) {
            t.exports = r()
        }("undefined" != typeof self && self, (function () {
            return function (t) {
                var e = {};

                function __webpack_require__(r) {
                    if (e[r]) return e[r].exports;
                    var n = e[r] = {
                        i: r,
                        l: !1,
                        exports: {}
                    };
                    return t[r].call(n.exports, n, n.exports, __webpack_require__), n.l = !0, n.exports
                }
                return __webpack_require__.m = t, __webpack_require__.c = e, __webpack_require__.d = function (t, e, r) {
                    __webpack_require__.o(t, e) || Object.defineProperty(t, e, {
                        configurable: !1,
                        enumerable: !0,
                        get: r
                    })
                }, __webpack_require__.n = function (t) {
                    var e = t && t.__esModule ? function getDefault() {
                        return t.default
                    } : function getModuleExports() {
                        return t
                    };
                    return __webpack_require__.d(e, "a", e), e
                }, __webpack_require__.o = function (t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e)
                }, __webpack_require__.p = "", __webpack_require__(__webpack_require__.s = 7)
            }([function (t, e, r) {
                r.d(e, "j", (function () {
                    return i
                })), r.d(e, "d", (function () {
                    return compose2
                })), r.d(e, "c", (function () {
                    return attr
                })), r.d(e, "h", (function () {
                    return o
                })), r.d(e, "b", (function () {
                    return apply
                })), r.d(e, "k", (function () {
                    return varArgs
                })), r.d(e, "e", (function () {
                    return flip
                })), r.d(e, "g", (function () {
                    return lazyIntersection
                })), r.d(e, "i", (function () {
                    return noop
                })), r.d(e, "a", (function () {
                    return always
                })), r.d(e, "f", (function () {
                    return functor
                }));
                var n = r(1),
                    i = varArgs((function (t, e) {
                        var r = e.length;
                        return varArgs((function (n) {
                            for (var i = 0; i < n.length; i++) e[r + i] = n[i];
                            return e.length = r + n.length, t.apply(this, e)
                        }))
                    }));
                varArgs((function (t) {
                    var e = Object(n.c)(t);

                    function next(t, e) {
                        return [apply(t, e)]
                    }
                    return varArgs((function (t) {
                        return Object(n.f)(next, t, e)[0]
                    }))
                }));

                function compose2(t, e) {
                    return function () {
                        return t.call(this, e.apply(this, arguments))
                    }
                }

                function attr(t) {
                    return function (e) {
                        return e[t]
                    }
                }
                var o = varArgs((function (t) {
                    return varArgs((function (e) {
                        for (var r, n = 0; n < attr("length")(t); n++)
                            if (r = apply(e, t[n])) return r
                    }))
                }));

                function apply(t, e) {
                    return e.apply(void 0, t)
                }

                function varArgs(t) {
                    var e = t.length - 1,
                        r = Array.prototype.slice;
                    if (0 === e) return function () {
                        return t.call(this, r.call(arguments))
                    };
                    if (1 === e) return function () {
                        return t.call(this, arguments[0], r.call(arguments, 1))
                    };
                    var n = Array(t.length);
                    return function () {
                        for (var i = 0; i < e; i++) n[i] = arguments[i];
                        return n[e] = r.call(arguments, e), t.apply(this, n)
                    }
                }

                function flip(t) {
                    return function (e, r) {
                        return t(r, e)
                    }
                }

                function lazyIntersection(t, e) {
                    return function (r) {
                        return t(r) && e(r)
                    }
                }

                function noop() {}

                function always() {
                    return !0
                }

                function functor(t) {
                    return function () {
                        return t
                    }
                }
            }, function (t, e, r) {
                r.d(e, "d", (function () {
                    return cons
                })), r.d(e, "g", (function () {
                    return i
                })), r.d(e, "l", (function () {
                    return o
                })), r.d(e, "c", (function () {
                    return arrayAsList
                })), r.d(e, "h", (function () {
                    return a
                })), r.d(e, "i", (function () {
                    return listAsArray
                })), r.d(e, "j", (function () {
                    return map
                })), r.d(e, "f", (function () {
                    return foldR
                })), r.d(e, "m", (function () {
                    return without
                })), r.d(e, "a", (function () {
                    return all
                })), r.d(e, "b", (function () {
                    return applyEach
                })), r.d(e, "k", (function () {
                    return reverseList
                })), r.d(e, "e", (function () {
                    return first
                }));
                var n = r(0);

                function cons(t, e) {
                    return [t, e]
                }
                var i = Object(n.c)(0),
                    o = Object(n.c)(1);

                function arrayAsList(t) {
                    return reverseList(t.reduce(Object(n.e)(cons), null))
                }
                var a = Object(n.k)(arrayAsList);

                function listAsArray(t) {
                    return foldR((function (t, e) {
                        return t.unshift(e), t
                    }), [], t)
                }

                function map(t, e) {
                    return e ? cons(t(i(e)), map(t, o(e))) : null
                }

                function foldR(t, e, r) {
                    return r ? t(foldR(t, e, o(r)), i(r)) : e
                }

                function without(t, e, r) {
                    return function withoutInner(t, r) {
                        return t ? e(i(t)) ? (r(i(t)), o(t)) : cons(i(t), withoutInner(o(t), r)) : null
                    }(t, r || n.i)
                }

                function all(t, e) {
                    return !e || t(i(e)) && all(t, o(e))
                }

                function applyEach(t, e) {
                    t && (i(t).apply(null, e), applyEach(o(t), e))
                }

                function reverseList(t) {
                    return function reverseInner(t, e) {
                        return t ? reverseInner(o(t), cons(i(t), e)) : e
                    }(t, null)
                }

                function first(t, e) {
                    return e && (t(i(e)) ? i(e) : first(t, o(e)))
                }
            }, function (t, e, r) {
                r.d(e, "c", (function () {
                    return isOfType
                })), r.d(e, "e", (function () {
                    return o
                })), r.d(e, "d", (function () {
                    return a
                })), r.d(e, "a", (function () {
                    return defined
                })), r.d(e, "b", (function () {
                    return hasAllProperties
                }));
                var n = r(1),
                    i = r(0);

                function isOfType(t, e) {
                    return e && e.constructor === t
                }
                var o = Object(i.c)("length"),
                    a = Object(i.j)(isOfType, String);

                function defined(t) {
                    return void 0 !== t
                }

                function hasAllProperties(t, e) {
                    return e instanceof Object && Object(n.a)((function (t) {
                        return t in e
                    }), t)
                }
            }, function (t, e, r) {
                r.d(e, "f", (function () {
                    return i
                })), r.d(e, "d", (function () {
                    return o
                })), r.d(e, "g", (function () {
                    return a
                })), r.d(e, "e", (function () {
                    return s
                })), r.d(e, "b", (function () {
                    return u
                })), r.d(e, "h", (function () {
                    return c
                })), r.d(e, "i", (function () {
                    return l
                })), r.d(e, "c", (function () {
                    return h
                })), r.d(e, "m", (function () {
                    return d
                })), r.d(e, "n", (function () {
                    return p
                })), r.d(e, "a", (function () {
                    return m
                })), r.d(e, "j", (function () {
                    return y
                })), r.d(e, "l", (function () {
                    return b
                })), r.d(e, "k", (function () {
                    return g
                })), r.d(e, "o", (function () {
                    return errorReport
                }));
                var n = 1,
                    i = n++,
                    o = n++,
                    a = n++,
                    s = n++,
                    u = "fail",
                    c = n++,
                    l = n++,
                    h = "start",
                    d = "data",
                    p = "end",
                    m = n++,
                    y = n++,
                    b = n++,
                    g = n++;

                function errorReport(t, e, r) {
                    try {
                        var n = JSON.parse(e)
                    } catch (t) {}
                    return {
                        statusCode: t,
                        body: e,
                        jsonBody: n,
                        thrown: r
                    }
                }
            }, function (t, e, r) {
                r.d(e, "b", (function () {
                    return namedNode
                })), r.d(e, "a", (function () {
                    return i
                })), r.d(e, "c", (function () {
                    return o
                }));
                var n = r(0);

                function namedNode(t, e) {
                    return {
                        key: t,
                        node: e
                    }
                }
                var i = Object(n.c)("key"),
                    o = Object(n.c)("node")
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return oboe
                }));
                var n = r(1),
                    i = r(0),
                    o = r(2),
                    a = r(8),
                    s = r(9);

                function oboe(t) {
                    var e = Object(n.h)("resume", "pause", "pipe"),
                        r = Object(i.j)(o.b, e);
                    return t ? r(t) || Object(o.d)(t) ? Object(a.a)(s.a, t) : Object(a.a)(s.a, t.url, t.method, t.body, t.headers, t.withCredentials, t.cached) : Object(s.a)()
                }
                oboe.drop = function () {
                    return oboe.drop
                }
            }, function (t, e, r) {
                r.d(e, "b", (function () {
                    return incrementalContentBuilder
                })), r.d(e, "a", (function () {
                    return s
                }));
                var n = r(3),
                    i = r(4),
                    o = r(2),
                    a = r(1),
                    s = {};

                function incrementalContentBuilder(t) {
                    var e = t(n.f).emit,
                        r = t(n.d).emit,
                        u = t(n.i).emit,
                        c = t(n.h).emit;

                    function appendBuiltContent(t, e, r) {
                        Object(i.c)(Object(a.g)(t))[e] = r
                    }

                    function keyFound(t, r, n) {
                        t && appendBuiltContent(t, r, n);
                        var o = Object(a.d)(Object(i.b)(r, n), t);
                        return e(o), o
                    }
                    var l = {};
                    return l[n.l] = function nodeOpened(t, e) {
                        if (!t) return u(e), keyFound(t, s, e);
                        var r = function arrayIndicesAreKeys(t, e) {
                                var r = Object(i.c)(Object(a.g)(t));
                                return Object(o.c)(Array, r) ? keyFound(t, Object(o.e)(r), e) : t
                            }(t, e),
                            n = Object(a.l)(r),
                            c = Object(i.a)(Object(a.g)(r));
                        return appendBuiltContent(n, c, e), Object(a.d)(Object(i.b)(c, e), n)
                    }, l[n.k] = function nodeClosed(t) {
                        return r(t), Object(a.l)(t) || c(Object(i.c)(Object(a.g)(t)))
                    }, l[n.j] = keyFound, l
                }
            }, function (t, e, r) {
                Object.defineProperty(e, "__esModule", {
                    value: !0
                });
                var n = r(5);
                e.default = n.a
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return applyDefaults
                }));
                var n = r(2);

                function applyDefaults(t, e, r, i, o, a, s) {
                    return o = o ? JSON.parse(JSON.stringify(o)) : {}, i ? (Object(n.d)(i) || (i = JSON.stringify(i), o["Content-Type"] = o["Content-Type"] || "application/json"), o["Content-Length"] = o["Content-Length"] || i.length) : i = null, t(r || "GET", function modifiedUrl(t, e) {
                        return !1 === e && (-1 === t.indexOf("?") ? t += "?" : t += "&", t += "_=" + (new Date).getTime()), t
                    }(e, s), i, o, a || !1)
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return wire
                }));
                var n = r(10),
                    i = r(12),
                    o = r(6),
                    a = r(13),
                    s = r(14),
                    u = r(16),
                    c = r(17),
                    l = r(18);

                function wire(t, e, r, h, d) {
                    var p = Object(n.a)();
                    return e && Object(l.b)(p, Object(l.a)(), t, e, r, h, d), Object(c.a)(p), Object(i.a)(p, Object(o.b)(p)), Object(a.a)(p, s.a), Object(u.a)(p, e)
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return pubSub
                }));
                var n = r(11),
                    i = r(0);

                function pubSub() {
                    var t = {},
                        e = newSingle("newListener"),
                        r = newSingle("removeListener");

                    function newSingle(i) {
                        return t[i] = Object(n.a)(i, e, r), t[i]
                    }

                    function pubSubInstance(e) {
                        return t[e] || newSingle(e)
                    }
                    return ["emit", "on", "un"].forEach((function (t) {
                        pubSubInstance[t] = Object(i.k)((function (e, r) {
                            Object(i.b)(r, pubSubInstance(e)[t])
                        }))
                    })), pubSubInstance
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return singleEventPubSub
                }));
                var n = r(1),
                    i = r(2),
                    o = r(0);

                function singleEventPubSub(t, e, r) {
                    var a, s;

                    function hasId(t) {
                        return function (e) {
                            return e.id === t
                        }
                    }
                    return {
                        on: function (r, i) {
                            var o = {
                                listener: r,
                                id: i || r
                            };
                            return e && e.emit(t, r, o.id), a = Object(n.d)(o, a), s = Object(n.d)(r, s), this
                        },
                        emit: function () {
                            Object(n.b)(s, arguments)
                        },
                        un: function (e) {
                            var i;
                            a = Object(n.m)(a, hasId(e), (function (t) {
                                i = t
                            })), i && (s = Object(n.m)(s, (function (t) {
                                return t === i.listener
                            })), r && r.emit(t, i.listener, i.id))
                        },
                        listeners: function () {
                            return s
                        },
                        hasListener: function (t) {
                            var e = t ? hasId(t) : o.a;
                            return Object(i.a)(Object(n.e)(e, a))
                        }
                    }
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return ascentManager
                }));
                var n = r(4),
                    i = r(3),
                    o = r(1);

                function ascentManager(t, e) {
                    var r, a = {};

                    function stateAfter(t) {
                        return function (e) {
                            r = t(r, e)
                        }
                    }
                    for (var s in e) t(s).on(stateAfter(e[s]), a);
                    t(i.g).on((function (t) {
                        var e = Object(o.g)(r),
                            i = Object(n.a)(e),
                            a = Object(o.l)(r);
                        a && (Object(n.c)(Object(o.g)(a))[i] = t)
                    })), t(i.e).on((function () {
                        var t = Object(o.g)(r),
                            e = Object(n.a)(t),
                            i = Object(o.l)(r);
                        i && delete Object(n.c)(Object(o.g)(i))[e]
                    })), t(i.a).on((function () {
                        for (var r in e) t(r).un(a)
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return patternAdapter
                }));
                var n = r(3),
                    i = r(1),
                    o = r(4);

                function patternAdapter(t, e) {
                    var r = {
                        node: t(n.d),
                        path: t(n.f)
                    };

                    function addUnderlyingListener(e, r, n) {
                        var a = t(e).emit;
                        r.on((function (t) {
                            var e = n(t);
                            !1 !== e && function emitMatchingNode(t, e, r) {
                                var n = Object(i.k)(r);
                                t(e, Object(i.i)(Object(i.l)(Object(i.j)(o.a, n))), Object(i.i)(Object(i.j)(o.c, n)))
                            }(a, Object(o.c)(e), t)
                        }), e), t("removeListener").on((function (n) {
                            n === e && (t(n).listeners() || r.un(e))
                        }))
                    }
                    t("newListener").on((function (t) {
                        var n = /(node|path):(.*)/.exec(t);
                        if (n) {
                            var i = r[n[1]];
                            i.hasListener(t) || addUnderlyingListener(t, i, e(n[2]))
                        }
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return c
                }));
                var n = r(0),
                    i = r(1),
                    o = r(4),
                    a = r(2),
                    s = r(6),
                    u = r(15),
                    c = Object(u.a)((function (t, e, r, u, c) {
                        var l = Object(n.d)(o.a, i.g),
                            h = Object(n.d)(o.c, i.g);

                        function capture(t, e) {
                            return !!e[1] ? Object(n.g)(t, i.g) : t
                        }

                        function skip1(t) {
                            if (t === n.a) return n.a;
                            return Object(n.g)((function notAtRoot(t) {
                                return l(t) !== s.a
                            }), Object(n.d)(t, i.l))
                        }

                        function rootExpr() {
                            return function (t) {
                                return l(t) === s.a
                            }
                        }

                        function generateClauseReaderIfTokenFound(t, e, r, n, o) {
                            var s = t(r);
                            if (s) {
                                var u = function expressionsReader(t, e, r) {
                                    return Object(i.f)((function (t, e) {
                                        return e(t, r)
                                    }), e, t)
                                }(e, n, s);
                                return o(r.substr(Object(a.e)(s[0])), u)
                            }
                        }

                        function clauseMatcher(t, e) {
                            return Object(n.j)(generateClauseReaderIfTokenFound, t, e)
                        }
                        var d = Object(n.h)(clauseMatcher(t, Object(i.h)(capture, (function duckTypeClause(t, e) {
                            var r = e[3];
                            if (!r) return t;
                            var o = Object(n.j)(a.b, Object(i.c)(r.split(/\W+/))),
                                s = Object(n.d)(o, h);
                            return Object(n.g)(s, t)
                        }), (function nameClause(t, e) {
                            var r = e[2],
                                i = r && "*" !== r ? function (t) {
                                    return String(l(t)) === r
                                } : n.a;
                            return Object(n.g)(i, t)
                        }), skip1)), clauseMatcher(e, Object(i.h)((function skipMany(t) {
                            if (t === n.a) return n.a;
                            var e = rootExpr(),
                                r = t,
                                i = skip1((function (t) {
                                    return o(t)
                                })),
                                o = Object(n.h)(e, r, i);
                            return o
                        }))), clauseMatcher(r, Object(i.h)()), clauseMatcher(u, Object(i.h)(capture, rootExpr)), clauseMatcher(c, Object(i.h)((function statementExpr(t) {
                            return function (e) {
                                var r = t(e);
                                return !0 === r ? Object(i.g)(e) : r
                            }
                        }))), (function (t) {
                            throw Error('"' + t + '" could not be tokenised')
                        }));

                        function returnFoundParser(t, e) {
                            return e
                        }

                        function compileJsonPathToFunction(t, e) {
                            return d(t, e, t ? compileJsonPathToFunction : returnFoundParser)
                        }
                        return function (t) {
                            try {
                                return compileJsonPathToFunction(t, n.a)
                            } catch (e) {
                                throw Error('Could not compile "' + t + '" because ' + e.message)
                            }
                        }
                    }))
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return y
                }));
                var n, i, o, a, s, u, c, l, h, d, p, m = r(0),
                    y = (n = Object(m.k)((function (t) {
                        return t.unshift(/^/),
                            function regexDescriptor(t) {
                                return t.exec.bind(t)
                            }(RegExp(t.map(Object(m.c)("source")).join("")))
                    })), a = n(i = /(\$?)/, /([\w-_]+|\*)/, o = /(?:{([\w ]*?)})?/), s = n(i, /\["([^"]+)"\]/, o), u = n(i, /\[(\d+|\*)\]/, o), c = n(i, /()/, /{([\w ]*?)}/), l = n(/\.\./), h = n(/\./), d = n(i, /!/), p = n(/$/), function (t) {
                        return t(Object(m.h)(a, s, u, c), l, h, d, p)
                    })
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return instanceApi
                }));
                var n = r(3),
                    i = r(0),
                    o = r(2),
                    a = r(5);

                function instanceApi(t, e) {
                    var r, s = /^(node|path):./,
                        u = t(n.h),
                        c = t(n.e).emit,
                        l = t(n.g).emit,
                        h = Object(i.k)((function (e, n) {
                            if (r[e]) Object(i.b)(n, r[e]);
                            else {
                                var o = t(e),
                                    a = n[0];
                                s.test(e) ? addForgettableCallback(o, wrapCallbackToSwapNodeIfSomethingReturned(a)) : o.on(a)
                            }
                            return r
                        }));

                    function addForgettableCallback(t, e, n) {
                        n = n || e;
                        var o = protectedCallback(e);
                        return t.on((function () {
                            var e = !1;
                            r.forget = function () {
                                e = !0
                            }, Object(i.b)(arguments, o), delete r.forget, e && t.un(n)
                        }), n), r
                    }

                    function protectedCallback(t) {
                        return function () {
                            try {
                                return t.apply(r, arguments)
                            } catch (t) {
                                setTimeout((function () {
                                    throw new Error(t.message)
                                }))
                            }
                        }
                    }

                    function wrapCallbackToSwapNodeIfSomethingReturned(t) {
                        return function () {
                            var e = t.apply(this, arguments);
                            Object(o.a)(e) && (e === a.a.drop ? c() : l(e))
                        }
                    }

                    function addSingleNodeOrPathListener(e, r, n) {
                        var i;
                        i = "node" === e ? wrapCallbackToSwapNodeIfSomethingReturned(n) : n, addForgettableCallback(function fullyQualifiedPatternMatchEvent(e, r) {
                            return t(e + ":" + r)
                        }(e, r), i, n)
                    }

                    function addNodeOrPathListenerApi(t, e, n) {
                        return Object(o.d)(e) ? addSingleNodeOrPathListener(t, e, n) : function addMultipleNodeOrPathListeners(t, e) {
                            for (var r in e) addSingleNodeOrPathListener(t, r, e[r])
                        }(t, e), r
                    }
                    return t(n.i).on((function (t) {
                        r.root = Object(i.f)(t)
                    })), t(n.c).on((function (t, e) {
                        r.header = function (t) {
                            return t ? e[t] : e
                        }
                    })), r = {
                        on: h,
                        addListener: h,
                        removeListener: function (e, n, i) {
                            if ("done" === e) u.un(n);
                            else if ("node" === e || "path" === e) t.un(e + ":" + n, i);
                            else {
                                var o = n;
                                t(e).un(o)
                            }
                            return r
                        },
                        emit: t.emit,
                        node: Object(i.j)(addNodeOrPathListenerApi, "node"),
                        path: Object(i.j)(addNodeOrPathListenerApi, "path"),
                        done: Object(i.j)(addForgettableCallback, u),
                        start: Object(i.j)((function addProtectedCallback(e, n) {
                            return t(e).on(protectedCallback(n), n), r
                        }), n.c),
                        fail: t(n.b).on,
                        abort: t(n.a).emit,
                        header: i.i,
                        root: i.i,
                        source: e
                    }
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return clarinet
                }));
                var n = r(3);

                function clarinet(t) {
                    var e, r, i, o, a = t(n.j).emit,
                        s = t(n.l).emit,
                        u = t(n.k).emit,
                        c = t(n.b).emit,
                        l = /[\\"\n]/g,
                        h = 0,
                        d = h++,
                        p = h++,
                        m = h++,
                        y = h++,
                        b = h++,
                        g = h++,
                        v = h++,
                        w = h++,
                        M = h++,
                        A = h++,
                        x = h++,
                        B = h++,
                        E = h++,
                        k = h++,
                        N = h++,
                        T = h++,
                        C = h++,
                        P = h++,
                        I = h++,
                        O = h++,
                        D = 65536,
                        j = "",
                        L = !1,
                        U = !1,
                        H = d,
                        q = [],
                        z = null,
                        G = 0,
                        V = 0,
                        J = 0,
                        W = 0,
                        Z = 1;

                    function emitError(t) {
                        void 0 !== o && (s(o), u(), o = void 0), e = Error(t + "\nLn: " + Z + "\nCol: " + W + "\nChr: " + r), c(Object(n.o)(void 0, void 0, e))
                    }

                    function whitespace(t) {
                        return "\r" === t || "\n" === t || " " === t || "\t" === t
                    }
                    t(n.m).on((function handleData(t) {
                        if (e) return;
                        if (U) return emitError("Cannot write after close");
                        var n = 0;
                        r = t[0];
                        for (; r && (n > 0 && (i = r), r = t[n++]);) switch (J++, "\n" === r ? (Z++, W = 0) : W++, H) {
                            case d:
                                if ("{" === r) H = m;
                                else if ("[" === r) H = b;
                                else if (!whitespace(r)) return emitError("Non-whitespace before {[.");
                                continue;
                            case w:
                            case m:
                                if (whitespace(r)) continue;
                                if (H === w) q.push(M);
                                else {
                                    if ("}" === r) {
                                        s({}), u(), H = q.pop() || p;
                                        continue
                                    }
                                    q.push(y)
                                }
                                if ('"' !== r) return emitError('Malformed object key should start with " ');
                                H = v;
                                continue;
                            case M:
                            case y:
                                if (whitespace(r)) continue;
                                if (":" === r) H === y ? (q.push(y), void 0 !== o && (s({}), a(o), o = void 0), V++) : void 0 !== o && (a(o), o = void 0), H = p;
                                else if ("}" === r) void 0 !== o && (s(o), u(), o = void 0), u(), V--, H = q.pop() || p;
                                else {
                                    if ("," !== r) return emitError("Bad object");
                                    H === y && q.push(y), void 0 !== o && (s(o), u(), o = void 0), H = w
                                }
                                continue;
                            case b:
                            case p:
                                if (whitespace(r)) continue;
                                if (H === b) {
                                    if (s([]), V++, H = p, "]" === r) {
                                        u(), V--, H = q.pop() || p;
                                        continue
                                    }
                                    q.push(g)
                                }
                                if ('"' === r) H = v;
                                else if ("{" === r) H = m;
                                else if ("[" === r) H = b;
                                else if ("t" === r) H = A;
                                else if ("f" === r) H = E;
                                else if ("n" === r) H = C;
                                else if ("-" === r) j += r;
                                else if ("0" === r) j += r, H = 20;
                                else {
                                    if (-1 === "123456789".indexOf(r)) return emitError("Bad value");
                                    j += r, H = 20
                                }
                                continue;
                            case g:
                                if ("," === r) q.push(g), void 0 !== o && (s(o), u(), o = void 0), H = p;
                                else {
                                    if ("]" !== r) {
                                        if (whitespace(r)) continue;
                                        return emitError("Bad array")
                                    }
                                    void 0 !== o && (s(o), u(), o = void 0), u(), V--, H = q.pop() || p
                                }
                                continue;
                            case v:
                                void 0 === o && (o = "");
                                var c = n - 1;
                                t: for (;;) {
                                    for (; G > 0;)
                                        if (z += r, r = t.charAt(n++), 4 === G ? (o += String.fromCharCode(parseInt(z, 16)), G = 0, c = n - 1) : G++, !r) break t;
                                    if ('"' === r && !L) {
                                        H = q.pop() || p, o += t.substring(c, n - 1);
                                        break
                                    }
                                    if (!("\\" !== r || L || (L = !0, o += t.substring(c, n - 1), r = t.charAt(n++)))) break;
                                    if (L) {
                                        if (L = !1, "n" === r ? o += "\n" : "r" === r ? o += "\r" : "t" === r ? o += "\t" : "f" === r ? o += "\f" : "b" === r ? o += "\b" : "u" === r ? (G = 1, z = "") : o += r, r = t.charAt(n++), c = n - 1, r) continue;
                                        break
                                    }
                                    l.lastIndex = n;
                                    var h = l.exec(t);
                                    if (!h) {
                                        n = t.length + 1, o += t.substring(c, n - 1);
                                        break
                                    }
                                    if (n = h.index + 1, !(r = t.charAt(h.index))) {
                                        o += t.substring(c, n - 1);
                                        break
                                    }
                                }
                                continue;
                            case A:
                                if (!r) continue;
                                if ("r" !== r) return emitError("Invalid true started with t" + r);
                                H = x;
                                continue;
                            case x:
                                if (!r) continue;
                                if ("u" !== r) return emitError("Invalid true started with tr" + r);
                                H = B;
                                continue;
                            case B:
                                if (!r) continue;
                                if ("e" !== r) return emitError("Invalid true started with tru" + r);
                                s(!0), u(), H = q.pop() || p;
                                continue;
                            case E:
                                if (!r) continue;
                                if ("a" !== r) return emitError("Invalid false started with f" + r);
                                H = k;
                                continue;
                            case k:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid false started with fa" + r);
                                H = N;
                                continue;
                            case N:
                                if (!r) continue;
                                if ("s" !== r) return emitError("Invalid false started with fal" + r);
                                H = T;
                                continue;
                            case T:
                                if (!r) continue;
                                if ("e" !== r) return emitError("Invalid false started with fals" + r);
                                s(!1), u(), H = q.pop() || p;
                                continue;
                            case C:
                                if (!r) continue;
                                if ("u" !== r) return emitError("Invalid null started with n" + r);
                                H = P;
                                continue;
                            case P:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid null started with nu" + r);
                                H = I;
                                continue;
                            case I:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid null started with nul" + r);
                                s(null), u(), H = q.pop() || p;
                                continue;
                            case O:
                                if ("." !== r) return emitError("Leading zero not followed by .");
                                j += r, H = 20;
                                continue;
                            case 20:
                                if (-1 !== "0123456789".indexOf(r)) j += r;
                                else if ("." === r) {
                                    if (-1 !== j.indexOf(".")) return emitError("Invalid number has two dots");
                                    j += r
                                } else if ("e" === r || "E" === r) {
                                    if (-1 !== j.indexOf("e") || -1 !== j.indexOf("E")) return emitError("Invalid number has two exponential");
                                    j += r
                                } else if ("+" === r || "-" === r) {
                                    if ("e" !== i && "E" !== i) return emitError("Invalid symbol in number");
                                    j += r
                                } else j && (s(parseFloat(j)), u(), j = ""), n--, H = q.pop() || p;
                                continue;
                            default:
                                return emitError("Unknown state: " + H)
                        }
                        J >= D && function checkBufferLength() {
                            var t = 0;
                            void 0 !== o && o.length > 65536 && (emitError("Max buffer length exceeded: textNode"), t = Math.max(t, o.length)), j.length > 65536 && (emitError("Max buffer length exceeded: numberNode"), t = Math.max(t, j.length)), D = 65536 - t + J
                        }()
                    })), t(n.n).on((function handleStreamEnd() {
                        if (H === d) return s({}), u(), void(U = !0);
                        H === p && 0 === V || emitError("Unexpected end");
                        void 0 !== o && (s(o), u(), o = void 0);
                        U = !0
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return httpTransport
                })), r.d(e, "b", (function () {
                    return streamingHttp
                }));
                var n = r(19),
                    i = r(3),
                    o = r(2),
                    a = r(20),
                    s = r(0);

                function httpTransport() {
                    return new XMLHttpRequest
                }

                function streamingHttp(t, e, r, u, c, l, h) {
                    var d = t(i.m).emit,
                        p = t(i.b).emit,
                        m = 0,
                        y = !0;

                    function handleProgress() {
                        if ("2" === String(e.status)[0]) {
                            var t = e.responseText,
                                r = (" " + t.substr(m)).substr(1);
                            r && d(r), m = Object(o.e)(t)
                        }
                    }

                    function sendStartIfNotAlready(e) {
                        try {
                            y && t(i.c).emit(e.status, Object(a.a)(e.getAllResponseHeaders())), y = !1
                        } catch (t) {}
                    }
                    t(i.a).on((function () {
                        e.onreadystatechange = null, e.abort()
                    })), "onprogress" in e && (e.onprogress = handleProgress), e.onreadystatechange = function () {
                        switch (e.readyState) {
                            case 2:
                            case 3:
                                return sendStartIfNotAlready(e);
                            case 4:
                                sendStartIfNotAlready(e), "2" === String(e.status)[0] ? (handleProgress(), t(i.n).emit()) : p(Object(i.o)(e.status, e.responseText))
                        }
                    };
                    try {
                        for (var b in e.open(r, u, !0), l) e.setRequestHeader(b, l[b]);
                        Object(n.a)(window.location, Object(n.b)(u)) || e.setRequestHeader("X-Requested-With", "XMLHttpRequest"), e.withCredentials = h, e.send(c)
                    } catch (t) {
                        window.setTimeout(Object(s.j)(p, Object(i.o)(void 0, void 0, t)), 0)
                    }
                }
            }, function (t, e, r) {
                function isCrossOrigin(t, e) {
                    function portOf(e) {
                        return String(e.port || function defaultPort(t) {
                            return {
                                "http:": 80,
                                "https:": 443
                            } [t]
                        }(e.protocol || t.protocol))
                    }
                    return !!(e.protocol && e.protocol !== t.protocol || e.host && e.host !== t.host || e.host && portOf(e) !== portOf(t))
                }

                function parseUrlOrigin(t) {
                    var e = /(\w+:)?(?:\/\/)([\w.-]+)?(?::(\d+))?\/?/.exec(t) || [];
                    return {
                        protocol: e[1] || "",
                        host: e[2] || "",
                        port: e[3] || ""
                    }
                }
                r.d(e, "a", (function () {
                    return isCrossOrigin
                })), r.d(e, "b", (function () {
                    return parseUrlOrigin
                }))
            }, function (t, e, r) {
                function parseResponseHeaders(t) {
                    var e = {};
                    return t && t.split("\r\n").forEach((function (t) {
                        var r = t.indexOf(": ");
                        e[t.substring(0, r)] = t.substring(r + 2)
                    })), e
                }
                r.d(e, "a", (function () {
                    return parseResponseHeaders
                }))
            }]).default
        }))
    }, function (t, e, r) {
        var n = r(12).formatters,
            i = r(92),
            o = r(35);
        t.exports = function (t) {
            var ex = function (e) {
                var r;
                return e.property ? (t[e.property] || (t[e.property] = {}), r = t[e.property]) : r = t, e.methods && e.methods.forEach((function (e) {
                    e instanceof i || (e = new i(e)), e.attachToObject(r), e.setRequestManager(t._requestManager)
                })), t
            };
            return ex.formatters = n, ex.utils = o, ex.Method = i, ex
        }
    }, function (t, e, r) {
        var n = r(12).errors,
            i = r(189),
            o = r(12).formatters;

        function identity(t) {
            return t
        }

        function Subscription(t) {
            i.call(this), this.id = null, this.callback = identity, this.arguments = null, this.lastBlock = null, this.options = {
                subscription: t.subscription,
                type: t.type,
                requestManager: t.requestManager
            }
        }
        Subscription.prototype = Object.create(i.prototype), Subscription.prototype.constructor = Subscription, Subscription.prototype._extractCallback = function (t) {
            if ("function" == typeof t[t.length - 1]) return t.pop()
        }, Subscription.prototype._validateArgs = function (t) {
            var e = this.options.subscription;
            if (e || (e = {}), e.params || (e.params = 0), t.length !== e.params) throw n.InvalidNumberOfParams(t.length, e.params, e.subscriptionName)
        }, Subscription.prototype._formatInput = function (t) {
            var e = this.options.subscription;
            return e && e.inputFormatter ? e.inputFormatter.map((function (e, r) {
                return e ? e(t[r]) : t[r]
            })) : t
        }, Subscription.prototype._formatOutput = function (t) {
            var e = this.options.subscription;
            return e && e.outputFormatter && t ? e.outputFormatter(t) : t
        }, Subscription.prototype._toPayload = function (t) {
            var e = [];
            if (this.callback = this._extractCallback(t) || identity, this.subscriptionMethod || (this.subscriptionMethod = t.shift(), this.options.subscription.subscriptionName && (this.subscriptionMethod = this.options.subscription.subscriptionName)), this.arguments || (this.arguments = this._formatInput(t), this._validateArgs(this.arguments), t = []), e.push(this.subscriptionMethod), e = e.concat(this.arguments), t.length) throw new Error("Only a callback is allowed as parameter on an already instantiated subscription.");
            return {
                method: this.options.type + "_subscribe",
                params: e
            }
        }, Subscription.prototype.unsubscribe = function (t) {
            this.options.requestManager.removeSubscription(this.id, t), this.id = null, this.lastBlock = null, this.removeAllListeners()
        }, Subscription.prototype.subscribe = function () {
            var t = this,
                e = Array.prototype.slice.call(arguments),
                r = this._toPayload(e);
            if (!r) return this;
            if (!this.options.requestManager.provider) return setTimeout((function () {
                var e = new Error("No provider set.");
                t.callback(e, null, t), t.emit("error", e)
            }), 0), this;
            if (!this.options.requestManager.provider.on) return setTimeout((function () {
                var e = new Error("The current provider doesn't support subscriptions: " + t.options.requestManager.provider.constructor.name);
                t.callback(e, null, t), t.emit("error", e)
            }), 0), this;
            if (this.lastBlock && this.options.params && "object" == typeof this.options.params && (r.params[1] = this.options.params, r.params[1].fromBlock = o.inputBlockNumberFormatter(this.lastBlock + 1)), this.id && this.unsubscribe(), this.options.params = r.params[1], "logs" === r.params[0] && r.params[1] && "object" == typeof r.params[1] && r.params[1].hasOwnProperty("fromBlock") && isFinite(r.params[1].fromBlock)) {
                var n = Object.assign({}, r.params[1]);
                this.options.requestManager.send({
                    method: "eth_getLogs",
                    params: [n]
                }, (function (e, r) {
                    e ? setTimeout((function () {
                        t.callback(e, null, t), t.emit("error", e)
                    }), 0) : r.forEach((function (e) {
                        var r = t._formatOutput(e);
                        t.callback(null, r, t), t.emit("data", r)
                    }))
                }))
            }
            return "object" == typeof r.params[1] && delete r.params[1].fromBlock, this.options.requestManager.send(r, (function (e, n) {
                !e && n ? (t.id = n, t.method = r.params[0], t.emit("connected", n), t.options.requestManager.addSubscription(t, (function (e, r) {
                    e ? (t.callback(e, !1, t), t.emit("error", e)) : (Array.isArray(r) || (r = [r]), r.forEach((function (e) {
                        var r = t._formatOutput(e);
                        if (t.lastBlock = r && "object" == typeof r ? r.blockNumber : null, "function" == typeof t.options.subscription.subscriptionHandler) return t.options.subscription.subscriptionHandler.call(t, r);
                        t.emit("data", r), t.callback(null, r, t)
                    })))
                }))) : setTimeout((function () {
                    t.callback(e, !1, t), t.emit("error", e)
                }), 0)
            })), this
        }, Subscription.prototype.resubscribe = function () {
            this.options.requestManager.removeSubscription(this.id), this.id = null, this.subscribe(this.callback)
        }, t.exports = Subscription
    }, function (t, e, r) {
        var n = r(715);
        t.exports = n
    }, function (t, e, r) {
        var n = r(290),
            i = r(10).formatters,
            o = r(43),
            a = r(721),
            s = r(740),
            u = r(741);

        function ENS(t) {
            this.eth = t;
            var e = null;
            this._detectedAddress = null, this._lastSyncCheck = null, Object.defineProperty(this, "registry", {
                get: function () {
                    return new a(this)
                },
                enumerable: !0
            }), Object.defineProperty(this, "resolverMethodHandler", {
                get: function () {
                    return new s(this.registry)
                },
                enumerable: !0
            }), Object.defineProperty(this, "registryAddress", {
                get: function () {
                    return e
                },
                set: function (t) {
                    e = null !== t ? i.inputAddressFormatter(t) : t
                },
                enumerable: !0
            })
        }
        ENS.prototype.supportsInterface = function (t, e, r) {
            return this.getResolver(t).then((function (t) {
                return o.isHexStrict(e) || (e = o.sha3(e).slice(0, 10)), t.methods.supportsInterface(e).call(r)
            })).catch((function (t) {
                if ("function" != typeof r) throw t;
                r(t, null)
            }))
        }, ENS.prototype.resolver = function (t, e) {
            return this.registry.resolver(t, e)
        }, ENS.prototype.getResolver = function (t, e) {
            return this.registry.getResolver(t, e)
        }, ENS.prototype.setResolver = function (t, e, r, n) {
            return this.registry.setResolver(t, e, r, n)
        }, ENS.prototype.setRecord = function (t, e, r, n, i, o) {
            return this.registry.setRecord(t, e, r, n, i, o)
        }, ENS.prototype.setSubnodeRecord = function (t, e, r, n, i, o, a) {
            return this.registry.setSubnodeRecord(t, e, r, n, i, o, a)
        }, ENS.prototype.setApprovalForAll = function (t, e, r, n) {
            return this.registry.setApprovalForAll(t, e, r, n)
        }, ENS.prototype.isApprovedForAll = function (t, e, r) {
            return this.registry.isApprovedForAll(t, e, r)
        }, ENS.prototype.recordExists = function (t, e) {
            return this.registry.recordExists(t, e)
        }, ENS.prototype.setSubnodeOwner = function (t, e, r, n, i) {
            return this.registry.setSubnodeOwner(t, e, r, n, i)
        }, ENS.prototype.getTTL = function (t, e) {
            return this.registry.getTTL(t, e)
        }, ENS.prototype.setTTL = function (t, e, r, n) {
            return this.registry.setTTL(t, e, r, n)
        }, ENS.prototype.getOwner = function (t, e) {
            return this.registry.getOwner(t, e)
        }, ENS.prototype.setOwner = function (t, e, r, n) {
            return this.registry.setOwner(t, e, r, n)
        }, ENS.prototype.getAddress = function (t, e) {
            return this.resolverMethodHandler.method(t, "addr", []).call(e)
        }, ENS.prototype.setAddress = function (t, e, r, n) {
            return this.resolverMethodHandler.method(t, "setAddr", [e]).send(r, n)
        }, ENS.prototype.getPubkey = function (t, e) {
            return this.resolverMethodHandler.method(t, "pubkey", [], null, e).call(e)
        }, ENS.prototype.setPubkey = function (t, e, r, n, i) {
            return this.resolverMethodHandler.method(t, "setPubkey", [e, r]).send(n, i)
        }, ENS.prototype.getContent = function (t, e) {
            return this.resolverMethodHandler.method(t, "content", []).call(e)
        }, ENS.prototype.setContent = function (t, e, r, n) {
            return this.resolverMethodHandler.method(t, "setContent", [e]).send(r, n)
        }, ENS.prototype.getContenthash = function (t, e) {
            return this.resolverMethodHandler.method(t, "contenthash", [], u.decode).call(e)
        }, ENS.prototype.setContenthash = function (t, e, r, n) {
            var i;
            try {
                i = u.encode(e)
            } catch (t) {
                var o = new Error("Could not encode " + e + ". See docs for supported hash protocols.");
                if ("function" == typeof n) return void n(o, null);
                throw o
            }
            return this.resolverMethodHandler.method(t, "setContenthash", [i]).send(r, n)
        }, ENS.prototype.getMultihash = function (t, e) {
            return this.resolverMethodHandler.method(t, "multihash", []).call(e)
        }, ENS.prototype.setMultihash = function (t, e, r, n) {
            return this.resolverMethodHandler.method(t, "multihash", [e]).send(r, n)
        }, ENS.prototype.checkNetwork = async function () {
            var t = new Date / 1e3;
            if (!this._lastSyncCheck || t - this._lastSyncCheck > 3600) {
                var e = t - (await this.eth.getBlock("latest")).timestamp;
                if (e > 3600) throw new Error("Network not synced; last block was " + e + " seconds ago");
                this._lastSyncCheck = t
            }
            if (this.registryAddress) return this.registryAddress;
            if (!this._detectedAddress) {
                var r = await this.eth.net.getNetworkType(),
                    i = n.addresses[r];
                if (void 0 === i) throw new Error("ENS is not supported on network " + r);
                return this._detectedAddress = i, this._detectedAddress
            }
            return this._detectedAddress
        }, t.exports = ENS
    }, function (t, e, r) {
        t.exports = {
            ErrorResponse: function (t) {
                var e = t && t.error && t.error.message ? t.error.message : JSON.stringify(t),
                    r = t.error && t.error.data ? t.error.data : null,
                    n = new Error("Returned error: " + e);
                return n.data = r, n
            },
            InvalidNumberOfParams: function (t, e, r) {
                return new Error('Invalid number of parameters for "' + r + '". Got ' + t + " expected " + e + "!")
            },
            InvalidConnection: function (t, e) {
                return this.ConnectionError("CONNECTION ERROR: Couldn't connect to node " + t + ".", e)
            },
            InvalidProvider: function () {
                return new Error("Provider not set or invalid")
            },
            InvalidResponse: function (t) {
                var e = t && t.error && t.error.message ? t.error.message : "Invalid JSON RPC response: " + JSON.stringify(t);
                return new Error(e)
            },
            ConnectionTimeout: function (t) {
                return new Error("CONNECTION TIMEOUT: timeout of " + t + " ms achived")
            },
            ConnectionNotOpenError: function (t) {
                return this.ConnectionError("connection not open on send()", t)
            },
            ConnectionCloseError: function (t) {
                return "object" == typeof t && t.code && t.reason ? this.ConnectionError("CONNECTION ERROR: The connection got closed with the close code `" + t.code + "` and the following reason string `" + t.reason + "`", t) : new Error("CONNECTION ERROR: The connection closed unexpectedly")
            },
            MaxAttemptsReachedOnReconnectingError: function () {
                return new Error("Maximum number of reconnect attempts reached!")
            },
            PendingRequestsOnReconnectingError: function () {
                return new Error("CONNECTION ERROR: Provider started to reconnect before the response got received!")
            },
            ConnectionError: function (t, e) {
                const r = new Error(t);
                return e && (r.code = e.code, r.reason = e.reason), r
            },
            RevertInstructionError: function (t, e) {
                var r = new Error("Your request got reverted with the following reason string: " + t);
                return r.reason = t, r.signature = e, r
            },
            TransactionRevertInstructionError: function (t, e, r) {
                var n = new Error("Transaction has been reverted by the EVM:\n" + JSON.stringify(r, null, 2));
                return n.reason = t, n.signature = e, n.receipt = r, n
            },
            TransactionError: function (t, e) {
                var r = new Error(t);
                return r.receipt = e, r
            },
            NoContractAddressFoundError: function (t) {
                return this.TransactionError("The transaction receipt didn't contain a contract address.", t)
            },
            ContractCodeNotStoredError: function (t) {
                return this.TransactionError("The contract code couldn't be stored, please check your gas limit.", t)
            },
            TransactionRevertedWithoutReasonError: function (t) {
                return this.TransactionError("Transaction has been reverted by the EVM:\n" + JSON.stringify(t, null, 2), t)
            },
            TransactionOutOfGasError: function (t) {
                return this.TransactionError("Transaction ran out of gas. Please provide more gas:\n" + JSON.stringify(t, null, 2), t)
            },
            ResolverMethodMissingError: function (t, e) {
                return new Error("The resolver at " + t + 'does not implement requested method: "' + e + '".')
            },
            ContractMissingABIError: function () {
                return new Error("You must provide the json interface of the contract when instantiating a contract object.")
            },
            ContractOnceRequiresCallbackError: function () {
                return new Error("Once requires a callback as the second parameter.")
            },
            ContractEventDoesNotExistError: function (t) {
                return new Error('Event "' + t + "\" doesn't exist in this contract.")
            },
            ContractReservedEventError: function (t) {
                return new Error('The event "' + t + "\" is a reserved event name, you can't use it.")
            },
            ContractMissingDeployDataError: function () {
                return new Error('No "data" specified in neither the given options, nor the default options.')
            },
            ContractNoAddressDefinedError: function () {
                return new Error("This contract object doesn't have address set yet, please set an address first.")
            },
            ContractNoFromAddressDefinedError: function () {
                return new Error('No "from" address specified in neither the given options, nor the default options.')
            }
        }
    }, function (t, e, r) {
        var n = r(43),
            i = r(720),
            outputBigNumberFormatter = function (t) {
                return n.toBN(t).toString(10)
            },
            inputBlockNumberFormatter = function (t) {
                if (void 0 !== t) return function (t) {
                    return "latest" === t || "pending" === t || "earliest" === t
                }(t) ? t : "genesis" === t ? "0x0" : n.isHexStrict(t) ? "string" == typeof t ? t.toLowerCase() : t : n.numberToHex(t)
            },
            _txInputFormatter = function (t) {
                if (t.to && (t.to = inputAddressFormatter(t.to)), t.data && t.input) throw new Error('You can\'t have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.');
                if (!t.data && t.input && (t.data = t.input, delete t.input), t.data && !t.data.startsWith("0x") && (t.data = "0x" + t.data), t.data && !n.isHex(t.data)) throw new Error("The data field must be HEX encoded data.");
                return (t.gas || t.gasLimit) && (t.gas = t.gas || t.gasLimit), (t.maxPriorityFeePerGas || t.maxFeePerGas) && delete t.gasPrice, ["gasPrice", "gas", "value", "maxPriorityFeePerGas", "maxFeePerGas", "nonce"].filter((function (e) {
                    return void 0 !== t[e]
                })).forEach((function (e) {
                    t[e] = n.numberToHex(t[e])
                })), t
            },
            outputTransactionFormatter = function (t) {
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), t.nonce = n.hexToNumber(t.nonce), t.gas = n.hexToNumber(t.gas), t.gasPrice && (t.gasPrice = outputBigNumberFormatter(t.gasPrice)), t.maxFeePerGas && (t.maxFeePerGas = outputBigNumberFormatter(t.maxFeePerGas)), t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = outputBigNumberFormatter(t.maxPriorityFeePerGas)), t.type && (t.type = n.hexToNumber(t.type)), t.value = outputBigNumberFormatter(t.value), t.to && n.isAddress(t.to) ? t.to = n.toChecksumAddress(t.to) : t.to = null, t.from && (t.from = n.toChecksumAddress(t.from)), t
            },
            outputLogFormatter = function (t) {
                if ("string" == typeof t.blockHash && "string" == typeof t.transactionHash && "string" == typeof t.logIndex) {
                    var e = n.sha3(t.blockHash.replace("0x", "") + t.transactionHash.replace("0x", "") + t.logIndex.replace("0x", ""));
                    t.id = "log_" + e.replace("0x", "").substr(0, 8)
                } else t.id || (t.id = null);
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), null !== t.logIndex && (t.logIndex = n.hexToNumber(t.logIndex)), t.address && (t.address = n.toChecksumAddress(t.address)), t
            },
            inputAddressFormatter = function (t) {
                var e = new i(t);
                if (e.isValid() && e.isDirect()) return e.toAddress().toLowerCase();
                if (n.isAddress(t)) return "0x" + t.toLowerCase().replace("0x", "");
                throw new Error(`Provided address ${t} is invalid, the capitalization checksum test failed, or it's an indirect IBAN address which can't be converted.`)
            };
        t.exports = {
            inputDefaultBlockNumberFormatter: function (t) {
                return inputBlockNumberFormatter(this && null == t ? this.defaultBlock : t)
            },
            inputBlockNumberFormatter: inputBlockNumberFormatter,
            inputCallFormatter: function (t) {
                var e = (t = _txInputFormatter(t)).from || (this ? this.defaultAccount : null);
                return e && (t.from = inputAddressFormatter(e)), t
            },
            inputTransactionFormatter: function (t) {
                if ("number" != typeof (t = _txInputFormatter(t)).from && (!t.from || "object" != typeof t.from)) {
                    if (t.from = t.from || (this ? this.defaultAccount : null), !t.from && "number" != typeof t.from) throw new Error('The send transactions "from" field must be defined!');
                    t.from = inputAddressFormatter(t.from)
                }
                return t
            },
            inputAddressFormatter: inputAddressFormatter,
            inputPostFormatter: function (t) {
                return t.ttl && (t.ttl = n.numberToHex(t.ttl)), t.workToProve && (t.workToProve = n.numberToHex(t.workToProve)), t.priority && (t.priority = n.numberToHex(t.priority)), Array.isArray(t.topics) || (t.topics = t.topics ? [t.topics] : []), t.topics = t.topics.map((function (t) {
                    return 0 === t.indexOf("0x") ? t : n.fromUtf8(t)
                })), t
            },
            inputLogFormatter: function (t) {
                var toTopic = function (t) {
                    return null == t ? null : 0 === (t = String(t)).indexOf("0x") ? t : n.fromUtf8(t)
                };
                return void 0 === t && (t = {}), void 0 === t.fromBlock && (t = {
                    ...t,
                    fromBlock: "latest"
                }), (t.fromBlock || 0 === t.fromBlock) && (t.fromBlock = inputBlockNumberFormatter(t.fromBlock)), (t.toBlock || 0 === t.toBlock) && (t.toBlock = inputBlockNumberFormatter(t.toBlock)), t.topics = t.topics || [], t.topics = t.topics.map((function (t) {
                    return Array.isArray(t) ? t.map(toTopic) : toTopic(t)
                })), toTopic = null, t.address && (t.address = Array.isArray(t.address) ? t.address.map((function (t) {
                    return inputAddressFormatter(t)
                })) : inputAddressFormatter(t.address)), t
            },
            inputSignFormatter: function (t) {
                return n.isHexStrict(t) ? t : n.utf8ToHex(t)
            },
            inputStorageKeysFormatter: function (t) {
                return t.map(n.numberToHex)
            },
            outputProofFormatter: function (t) {
                return t.address = n.toChecksumAddress(t.address), t.nonce = n.hexToNumberString(t.nonce), t.balance = n.hexToNumberString(t.balance), t
            },
            outputBigNumberFormatter: outputBigNumberFormatter,
            outputTransactionFormatter: outputTransactionFormatter,
            outputTransactionReceiptFormatter: function (t) {
                if ("object" != typeof t) throw new Error("Received receipt is invalid: " + t);
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), t.cumulativeGasUsed = n.hexToNumber(t.cumulativeGasUsed), t.gasUsed = n.hexToNumber(t.gasUsed), Array.isArray(t.logs) && (t.logs = t.logs.map(outputLogFormatter)), t.contractAddress && (t.contractAddress = n.toChecksumAddress(t.contractAddress)), void 0 !== t.status && null !== t.status && (t.status = Boolean(parseInt(t.status))), t
            },
            outputBlockFormatter: function (t) {
                return t.gasLimit = n.hexToNumber(t.gasLimit), t.gasUsed = n.hexToNumber(t.gasUsed), t.size = n.hexToNumber(t.size), t.timestamp = n.hexToNumber(t.timestamp), null !== t.number && (t.number = n.hexToNumber(t.number)), t.difficulty && (t.difficulty = outputBigNumberFormatter(t.difficulty)), t.totalDifficulty && (t.totalDifficulty = outputBigNumberFormatter(t.totalDifficulty)), Array.isArray(t.transactions) && t.transactions.forEach((function (t) {
                    if ("string" != typeof t) return outputTransactionFormatter(t)
                })), t.miner && (t.miner = n.toChecksumAddress(t.miner)), t
            },
            outputLogFormatter: outputLogFormatter,
            outputPostFormatter: function (t) {
                return t.expiry = n.hexToNumber(t.expiry), t.sent = n.hexToNumber(t.sent), t.ttl = n.hexToNumber(t.ttl), t.workProved = n.hexToNumber(t.workProved), t.topics || (t.topics = []), t.topics = t.topics.map((function (t) {
                    return n.toUtf8(t)
                })), t
            },
            outputSyncingFormatter: function (t) {
                return t.startingBlock = n.hexToNumber(t.startingBlock), t.currentBlock = n.hexToNumber(t.currentBlock), t.highestBlock = n.hexToNumber(t.highestBlock), t.knownStates && (t.knownStates = n.hexToNumber(t.knownStates), t.pulledStates = n.hexToNumber(t.pulledStates)), t
            }
        }
    }, function (t, e) {}, function (t, e, r) {
        var n = r(127),
            i = r(291),
            _parseNumber = function (t) {
                var e = typeof t;
                if ("string" === e) return i.isHexStrict(t) ? new n(t.replace(/0x/i, ""), 16) : new n(t, 10);
                if ("number" === e) return new n(t);
                if (i.isBigNumber(t)) return new n(t.toString(10));
                if (i.isBN(t)) return t;
                throw new Error(t + " is not a number")
            },
            _solidityPack = function (t, e, r) {
                var o, a;
                if ("bytes" === (t = function (t) {
                        return t.startsWith("int[") ? "int256" + t.slice(3) : "int" === t ? "int256" : t.startsWith("uint[") ? "uint256" + t.slice(4) : "uint" === t ? "uint256" : t.startsWith("fixed[") ? "fixed128x128" + t.slice(5) : "fixed" === t ? "fixed128x128" : t.startsWith("ufixed[") ? "ufixed128x128" + t.slice(6) : "ufixed" === t ? "ufixed128x128" : t
                    }(t))) {
                    if (e.replace(/^0x/i, "").length % 2 != 0) throw new Error("Invalid bytes characters " + e.length);
                    return e
                }
                if ("string" === t) return i.utf8ToHex(e);
                if ("bool" === t) return e ? "01" : "00";
                if (t.startsWith("address")) {
                    if (o = r ? 64 : 40, !i.isAddress(e)) throw new Error(e + " is not a valid address, or the checksum is invalid.");
                    return i.leftPad(e.toLowerCase(), o)
                }
                if (o = function (t) {
                        var e = /^\D+(\d+).*$/.exec(t);
                        return e ? parseInt(e[1], 10) : null
                    }(t), t.startsWith("bytes")) {
                    if (!o) throw new Error("bytes[] not yet supported in solidity");
                    if (r && (o = 32), o < 1 || o > 32 || o < e.replace(/^0x/i, "").length / 2) throw new Error("Invalid bytes" + o + " for " + e);
                    return i.rightPad(e, 2 * o)
                }
                if (t.startsWith("uint")) {
                    if (o % 8 || o < 8 || o > 256) throw new Error("Invalid uint" + o + " size");
                    if ((a = _parseNumber(e)).bitLength() > o) throw new Error("Supplied uint exceeds width: " + o + " vs " + a.bitLength());
                    if (a.lt(new n(0))) throw new Error("Supplied uint " + a.toString() + " is negative");
                    return o ? i.leftPad(a.toString("hex"), o / 8 * 2) : a
                }
                if (t.startsWith("int")) {
                    if (o % 8 || o < 8 || o > 256) throw new Error("Invalid int" + o + " size");
                    if ((a = _parseNumber(e)).bitLength() > o) throw new Error("Supplied int exceeds width: " + o + " vs " + a.bitLength());
                    return a.lt(new n(0)) ? a.toTwos(o).toString("hex") : o ? i.leftPad(a.toString("hex"), o / 8 * 2) : a
                }
                throw new Error("Unsupported or invalid type: " + t)
            },
            _processSolidityEncodePackedArgs = function (t) {
                if (Array.isArray(t)) throw new Error("Autodetection of array types is not supported.");
                var e, r, o = "";
                if (t && "object" == typeof t && (t.hasOwnProperty("v") || t.hasOwnProperty("t") || t.hasOwnProperty("value") || t.hasOwnProperty("type")) ? (e = t.hasOwnProperty("t") ? t.t : t.type, o = t.hasOwnProperty("v") ? t.v : t.value) : (e = i.toHex(t, !0), o = i.toHex(t), e.startsWith("int") || e.startsWith("uint") || (e = "bytes")), !e.startsWith("int") && !e.startsWith("uint") || "string" != typeof o || /^(-)?0x/i.test(o) || (o = new n(o)), Array.isArray(o)) {
                    if ((r = function (t) {
                            var e = /^\D+\d*\[(\d+)\]$/.exec(t);
                            return e ? parseInt(e[1], 10) : null
                        }(e)) && o.length !== r) throw new Error(e + " is not matching the given array " + JSON.stringify(o));
                    r = o.length
                }
                return Array.isArray(o) ? o.map((function (t) {
                    return _solidityPack(e, t, r).toString("hex").replace("0x", "")
                })).join("") : _solidityPack(e, o, r).toString("hex").replace("0x", "")
            };
        t.exports = {
            soliditySha3: function () {
                var t = Array.prototype.slice.call(arguments),
                    e = t.map(_processSolidityEncodePackedArgs);
                return i.sha3("0x" + e.join(""))
            },
            soliditySha3Raw: function () {
                return i.sha3Raw("0x" + Array.prototype.slice.call(arguments).map(_processSolidityEncodePackedArgs).join(""))
            },
            encodePacked: function () {
                var t = Array.prototype.slice.call(arguments),
                    e = t.map(_processSolidityEncodePackedArgs);
                return "0x" + e.join("").toLowerCase()
            }
        }
    }, function (t, e, r) {
        const n = r(43),
            i = r(127),
            iso13616Prepare = function (t) {
                const e = "A".charCodeAt(0),
                    r = "Z".charCodeAt(0);
                return (t = (t = t.toUpperCase()).substr(4) + t.substr(0, 4)).split("").map((function (t) {
                    const n = t.charCodeAt(0);
                    return n >= e && n <= r ? n - e + 10 : t
                })).join("")
            },
            mod9710 = function (t) {
                let e, r = t;
                for (; r.length > 2;) e = r.slice(0, 9), r = parseInt(e, 10) % 97 + r.slice(e.length);
                return parseInt(r, 10) % 97
            };
        class Iban {
            constructor(t) {
                this._iban = t
            }
            static toAddress(t) {
                if (!(t = new Iban(t)).isDirect()) throw new Error("IBAN is indirect and can't be converted");
                return t.toAddress()
            }
            static toIban(t) {
                return Iban.fromAddress(t).toString()
            }
            static fromAddress(t) {
                if (!n.isAddress(t)) throw new Error("Provided address is not a valid address: " + t);
                t = t.replace("0x", "").replace("0X", "");
                const e = function (t, e) {
                    let r = t;
                    for (; r.length < 2 * e;) r = "0" + r;
                    return r
                }(new i(t, 16).toString(36), 15);
                return Iban.fromBban(e.toUpperCase())
            }
            static fromBban(t) {
                const e = ("0" + (98 - mod9710(iso13616Prepare("XE00" + t)))).slice(-2);
                return new Iban("XE" + e + t)
            }
            static createIndirect(t) {
                return Iban.fromBban("ETH" + t.institution + t.identifier)
            }
            static isValid(t) {
                return new Iban(t).isValid()
            }
            isValid() {
                return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban) && 1 === mod9710(iso13616Prepare(this._iban))
            }
            isDirect() {
                return 34 === this._iban.length || 35 === this._iban.length
            }
            isIndirect() {
                return 20 === this._iban.length
            }
            checksum() {
                return this._iban.substr(2, 2)
            }
            institution() {
                return this.isIndirect() ? this._iban.substr(7, 4) : ""
            }
            client() {
                return this.isIndirect() ? this._iban.substr(11) : ""
            }
            toAddress() {
                if (this.isDirect()) {
                    const t = this._iban.substr(4),
                        e = new i(t, 36);
                    return n.toChecksumAddress(e.toString(16, 20))
                }
                return ""
            }
            toString() {
                return this._iban
            }
        }
        t.exports = Iban
    }, function (t, e, r) {
        var n = r(722),
            i = r(295),
            o = r(128),
            a = r(10).formatters,
            s = r(43),
            u = r(738),
            c = r(739);

        function Registry(t) {
            var e = this;
            this.ens = t, this.contract = t.checkNetwork().then((function (t) {
                var r = new n(u, t);
                return r.setProvider(e.ens.eth.currentProvider), r
            }))
        }
        Registry.prototype.owner = function (t, e) {
            return console.warn('Deprecated: Please use the "getOwner" method instead of "owner".'), this.getOwner(t, e)
        }, Registry.prototype.getOwner = function (t, e) {
            var r = new o(!0);
            return this.contract.then((function (e) {
                return e.methods.owner(i.hash(t)).call()
            })).then((function (t) {
                "function" != typeof e ? r.resolve(t) : e(t, t)
            })).catch((function (t) {
                "function" != typeof e ? r.reject(t) : e(t, null)
            })), r.eventEmitter
        }, Registry.prototype.setOwner = function (t, e, r, n) {
            var s = new o(!0);
            return this.contract.then((function (n) {
                return n.methods.setOwner(i.hash(t), a.inputAddressFormatter(e)).send(r)
            })).then((function (t) {
                "function" != typeof n ? s.resolve(t) : n(t, t)
            })).catch((function (t) {
                "function" != typeof n ? s.reject(t) : n(t, null)
            })), s.eventEmitter
        }, Registry.prototype.getTTL = function (t, e) {
            var r = new o(!0);
            return this.contract.then((function (e) {
                return e.methods.ttl(i.hash(t)).call()
            })).then((function (t) {
                "function" != typeof e ? r.resolve(t) : e(t, t)
            })).catch((function (t) {
                "function" != typeof e ? r.reject(t) : e(t, null)
            })), r.eventEmitter
        }, Registry.prototype.setTTL = function (t, e, r, n) {
            var a = new o(!0);
            return this.contract.then((function (n) {
                return n.methods.setTTL(i.hash(t), e).send(r)
            })).then((function (t) {
                "function" != typeof n ? a.resolve(t) : n(t, t)
            })).catch((function (t) {
                "function" != typeof n ? a.reject(t) : n(t, null)
            })), a.eventEmitter
        }, Registry.prototype.setSubnodeOwner = function (t, e, r, n, u) {
            var c = new o(!0);
            return s.isHexStrict(e) || (e = s.sha3(e)), this.contract.then((function (o) {
                return o.methods.setSubnodeOwner(i.hash(t), e, a.inputAddressFormatter(r)).send(n)
            })).then((function (t) {
                "function" != typeof u ? c.resolve(t) : u(t, t)
            })).catch((function (t) {
                "function" != typeof u ? c.reject(t) : u(t, null)
            })), c.eventEmitter
        }, Registry.prototype.setRecord = function (t, e, r, n, s, u) {
            var c = new o(!0);
            return this.contract.then((function (o) {
                return o.methods.setRecord(i.hash(t), a.inputAddressFormatter(e), a.inputAddressFormatter(r), n).send(s)
            })).then((function (t) {
                "function" != typeof u ? c.resolve(t) : u(t, t)
            })).catch((function (t) {
                "function" != typeof u ? c.reject(t) : u(t, null)
            })), c.eventEmitter
        }, Registry.prototype.setSubnodeRecord = function (t, e, r, n, u, c, l) {
            var h = new o(!0);
            return s.isHexStrict(e) || (e = s.sha3(e)), this.contract.then((function (o) {
                return o.methods.setSubnodeRecord(i.hash(t), e, a.inputAddressFormatter(r), a.inputAddressFormatter(n), u).send(c)
            })).then((function (t) {
                "function" != typeof l ? h.resolve(t) : l(t, t)
            })).catch((function (t) {
                "function" != typeof l ? h.reject(t) : l(t, null)
            })), h.eventEmitter
        }, Registry.prototype.setApprovalForAll = function (t, e, r, n) {
            var i = new o(!0);
            return this.contract.then((function (n) {
                return n.methods.setApprovalForAll(a.inputAddressFormatter(t), e).send(r)
            })).then((function (t) {
                "function" != typeof n ? i.resolve(t) : n(t, t)
            })).catch((function (t) {
                "function" != typeof n ? i.reject(t) : n(t, null)
            })), i.eventEmitter
        }, Registry.prototype.isApprovedForAll = function (t, e, r) {
            var n = new o(!0);
            return this.contract.then((function (r) {
                return r.methods.isApprovedForAll(a.inputAddressFormatter(t), a.inputAddressFormatter(e)).call()
            })).then((function (t) {
                "function" != typeof r ? n.resolve(t) : r(t, t)
            })).catch((function (t) {
                "function" != typeof r ? n.reject(t) : r(t, null)
            })), n.eventEmitter
        }, Registry.prototype.recordExists = function (t, e) {
            var r = new o(!0);
            return this.contract.then((function (e) {
                return e.methods.recordExists(i.hash(t)).call()
            })).then((function (t) {
                "function" != typeof e ? r.resolve(t) : e(t, t)
            })).catch((function (t) {
                "function" != typeof e ? r.reject(t) : e(t, null)
            })), r.eventEmitter
        }, Registry.prototype.resolver = function (t, e) {
            return console.warn('Deprecated: Please use the "getResolver" method instead of "resolver".'), this.getResolver(t, e)
        }, Registry.prototype.getResolver = function (t, e) {
            var r = this;
            return this.contract.then((function (e) {
                return e.methods.resolver(i.hash(t)).call()
            })).then((function (t) {
                var i = new n(c, t);
                if (i.setProvider(r.ens.eth.currentProvider), "function" != typeof e) return i;
                e(i, i)
            })).catch((function (t) {
                if ("function" != typeof e) throw t;
                e(t, null)
            }))
        }, Registry.prototype.setResolver = function (t, e, r, n) {
            var s = new o(!0);
            return this.contract.then((function (n) {
                return n.methods.setResolver(i.hash(t), a.inputAddressFormatter(e)).send(r)
            })).then((function (t) {
                "function" != typeof n ? s.resolve(t) : n(t, t)
            })).catch((function (t) {
                "function" != typeof n ? s.reject(t) : n(t, null)
            })), s.eventEmitter
        }, t.exports = Registry
    }, function (t, e, r) {
        var n = r(723),
            i = r(293),
            o = r(43),
            a = r(294).subscription,
            s = r(10).formatters,
            u = r(10).errors,
            c = r(128),
            l = r(734),
            h = function Contract(t, e, r) {
                var i = this,
                    a = Array.prototype.slice.call(arguments);
                if (!(this instanceof Contract)) throw new Error('Please use the "new" keyword to instantiate a web3.eth.Contract() object!');
                if (this.setProvider = function () {
                        n.packageInit(i, arguments), i.clearSubscriptions = i._requestManager.clearSubscriptions
                    }, n.packageInit(this, [this.constructor]), this.clearSubscriptions = this._requestManager.clearSubscriptions, !t || !Array.isArray(t)) throw u.ContractMissingABIError();
                this.options = {};
                var c = a[a.length - 1];
                c && "object" == typeof c && !Array.isArray(c) && (r = c, this.options = {
                    ...this.options,
                    ...this._getOrSetDefaultOptions(r)
                }, e && "object" == typeof e && (e = null)), Object.defineProperty(this.options, "address", {
                    set: function (t) {
                        t && (i._address = o.toChecksumAddress(s.inputAddressFormatter(t)))
                    },
                    get: function () {
                        return i._address
                    },
                    enumerable: !0
                }), Object.defineProperty(this.options, "jsonInterface", {
                    set: function (t) {
                        return i.methods = {}, i.events = {}, i._jsonInterface = t.map((function (t) {
                            var e, r;
                            if (t.constant = "view" === t.stateMutability || "pure" === t.stateMutability || t.constant, t.payable = "payable" === t.stateMutability || t.payable, t.name && (r = o._jsonInterfaceMethodToString(t)), "function" === t.type) {
                                if (t.signature = l.encodeFunctionSignature(r), e = i._createTxObject.bind({
                                        method: t,
                                        parent: i
                                    }), i.methods[t.name]) {
                                    var n = i._createTxObject.bind({
                                        method: t,
                                        parent: i,
                                        nextMethod: i.methods[t.name]
                                    });
                                    i.methods[t.name] = n
                                } else i.methods[t.name] = e;
                                i.methods[t.signature] = e, i.methods[r] = e
                            } else if ("event" === t.type) {
                                t.signature = l.encodeEventSignature(r);
                                var a = i._on.bind(i, t.signature);
                                i.events[t.name] && "bound " !== i.events[t.name].name || (i.events[t.name] = a), i.events[t.signature] = a, i.events[r] = a
                            }
                            return t
                        })), i.events.allEvents = i._on.bind(i, "allevents"), i._jsonInterface
                    },
                    get: function () {
                        return i._jsonInterface
                    },
                    enumerable: !0
                });
                var h = this.constructor.defaultAccount,
                    d = this.constructor.defaultBlock || "latest";
                Object.defineProperty(this, "handleRevert", {
                    get: function () {
                        return !1 === i.options.handleRevert || !0 === i.options.handleRevert ? i.options.handleRevert : this.constructor.handleRevert
                    },
                    set: function (t) {
                        i.options.handleRevert = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultCommon", {
                    get: function () {
                        return i.options.common || this.constructor.defaultCommon
                    },
                    set: function (t) {
                        i.options.common = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultHardfork", {
                    get: function () {
                        return i.options.hardfork || this.constructor.defaultHardfork
                    },
                    set: function (t) {
                        i.options.hardfork = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultChain", {
                    get: function () {
                        return i.options.chain || this.constructor.defaultChain
                    },
                    set: function (t) {
                        i.options.chain = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "transactionPollingTimeout", {
                    get: function () {
                        return 0 === i.options.transactionPollingTimeout ? i.options.transactionPollingTimeout : i.options.transactionPollingTimeout || this.constructor.transactionPollingTimeout
                    },
                    set: function (t) {
                        i.options.transactionPollingTimeout = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "transactionConfirmationBlocks", {
                    get: function () {
                        return 0 === i.options.transactionConfirmationBlocks ? i.options.transactionConfirmationBlocks : i.options.transactionConfirmationBlocks || this.constructor.transactionConfirmationBlocks
                    },
                    set: function (t) {
                        i.options.transactionConfirmationBlocks = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "transactionBlockTimeout", {
                    get: function () {
                        return 0 === i.options.transactionBlockTimeout ? i.options.transactionBlockTimeout : i.options.transactionBlockTimeout || this.constructor.transactionBlockTimeout
                    },
                    set: function (t) {
                        i.options.transactionBlockTimeout = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultAccount", {
                    get: function () {
                        return h
                    },
                    set: function (t) {
                        return t && (h = o.toChecksumAddress(s.inputAddressFormatter(t))), t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultBlock", {
                    get: function () {
                        return d
                    },
                    set: function (t) {
                        return d = t, t
                    },
                    enumerable: !0
                }), this.methods = {}, this.events = {}, this._address = null, this._jsonInterface = [], this.options.address = e, this.options.jsonInterface = t
            };
        h.setProvider = function (t, e) {
            n.packageInit(this, [t]), this._ethAccounts = e
        }, h.prototype._getCallback = function getCallback(t) {
            if (t && t[t.length - 1] && "function" == typeof t[t.length - 1]) return t.pop()
        }, h.prototype._checkListener = function (t, e) {
            if (e === t) throw u.ContractReservedEventError(t)
        }, h.prototype._getOrSetDefaultOptions = function getOrSetDefaultOptions(t) {
            var e = t.gasPrice ? String(t.gasPrice) : null,
                r = t.from ? o.toChecksumAddress(s.inputAddressFormatter(t.from)) : null;
            return t.data = t.data || this.options.data, t.from = r || this.options.from, t.gasPrice = e || this.options.gasPrice, t.gas = t.gas || t.gasLimit || this.options.gas, delete t.gasLimit, t
        }, h.prototype._encodeEventABI = function (t, e) {
            var r = (e = e || {}).filter || {},
                n = {};
            if (["fromBlock", "toBlock"].filter((function (t) {
                    return void 0 !== e[t]
                })).forEach((function (t) {
                    n[t] = s.inputBlockNumberFormatter(e[t])
                })), Array.isArray(e.topics)) n.topics = e.topics;
            else {
                if (n.topics = [], t && !t.anonymous && "ALLEVENTS" !== t.name && n.topics.push(t.signature), "ALLEVENTS" !== t.name) {
                    var i = t.inputs.filter((function (t) {
                        return !0 === t.indexed
                    })).map((function (t) {
                        var e = r[t.name];
                        return e ? Array.isArray(e) ? e.map((function (e) {
                            return l.encodeParameter(t.type, e)
                        })) : l.encodeParameter(t.type, e) : null
                    }));
                    n.topics = n.topics.concat(i)
                }
                n.topics.length || delete n.topics
            }
            return this.options.address && (n.address = this.options.address.toLowerCase()), n
        }, h.prototype._decodeEventABI = function (t) {
            var e = this;
            t.data = t.data || "", t.topics = t.topics || [];
            var r = s.outputLogFormatter(t);
            if ("ALLEVENTS" === e.name && (e = e.jsonInterface.find((function (e) {
                    return e.signature === t.topics[0]
                })) || {
                    anonymous: !0
                }), e.inputs = e.inputs || [], !e.anonymous) {
                let r = 0;
                e.inputs.forEach(t => t.indexed ? r++ : null), r > 0 && t.topics.length !== r + 1 && (e = {
                    anonymous: !0,
                    inputs: []
                })
            }
            var n = e.anonymous ? t.topics : t.topics.slice(1);
            return r.returnValues = l.decodeLog(e.inputs, t.data, n), delete r.returnValues.__length__, r.event = e.name, r.signature = e.anonymous || !t.topics[0] ? null : t.topics[0], r.raw = {
                data: r.data,
                topics: r.topics
            }, delete r.data, delete r.topics, r
        }, h.prototype._encodeMethodABI = function _encodeMethodABI() {
            var t = this._method.signature,
                e = this.arguments || [],
                r = !1,
                n = this._parent.options.jsonInterface.filter((function (e) {
                    return "constructor" === t && e.type === t || (e.signature === t || e.signature === t.replace("0x", "") || e.name === t) && "function" === e.type
                })).map((function (t) {
                    var n = Array.isArray(t.inputs) ? t.inputs.length : 0;
                    if (n !== e.length) throw new Error("The number of arguments is not matching the methods required number. You need to pass " + n + " arguments.");
                    return "function" === t.type && (r = t.signature), Array.isArray(t.inputs) ? t.inputs : []
                })).map((function (t) {
                    return l.encodeParameters(t, e).replace("0x", "")
                }))[0] || "";
            if ("constructor" === t) {
                if (!this._deployData) throw new Error("The contract has no contract data option set. This is necessary to append the constructor parameters.");
                return this._deployData.startsWith("0x") || (this._deployData = "0x" + this._deployData), this._deployData + n
            }
            var i = r ? r + n : n;
            if (!i) throw new Error("Couldn't find a matching contract method named \"" + this._method.name + '".');
            return i
        }, h.prototype._decodeMethodReturn = function (t, e) {
            if (!e) return null;
            e = e.length >= 2 ? e.slice(2) : e;
            var r = l.decodeParameters(t, e);
            return 1 === r.__length__ ? r[0] : (delete r.__length__, r)
        }, h.prototype.deploy = function (t, e) {
            if ((t = t || {}).arguments = t.arguments || [], !(t = this._getOrSetDefaultOptions(t)).data) {
                if ("function" == typeof e) return e(u.ContractMissingDeployDataError());
                throw u.ContractMissingDeployDataError()
            }
            var r = this.options.jsonInterface.find(t => "constructor" === t.type) || {};
            return r.signature = "constructor", this._createTxObject.apply({
                method: r,
                parent: this,
                deployData: t.data,
                _ethAccounts: this.constructor._ethAccounts
            }, t.arguments)
        }, h.prototype._generateEventOptions = function () {
            var t = Array.prototype.slice.call(arguments),
                e = this._getCallback(t),
                r = "object" === (!!t[t.length - 1] && typeof t[t.length - 1]) ? t.pop() : {},
                n = "string" == typeof t[0] ? t[0] : "allevents",
                i = "allevents" === n.toLowerCase() ? {
                    name: "ALLEVENTS",
                    jsonInterface: this.options.jsonInterface
                } : this.options.jsonInterface.find((function (t) {
                    return "event" === t.type && (t.name === n || t.signature === "0x" + n.replace("0x", ""))
                }));
            if (!i) throw u.ContractEventDoesNotExistError(n);
            if (!o.isAddress(this.options.address)) throw u.ContractNoAddressDefinedError();
            return {
                params: this._encodeEventABI(i, r),
                event: i,
                callback: e
            }
        }, h.prototype.clone = function () {
            return new this.constructor(this.options.jsonInterface, this.options.address, this.options)
        }, h.prototype.once = function (t, e, r) {
            var n = Array.prototype.slice.call(arguments);
            if (!(r = this._getCallback(n))) throw u.ContractOnceRequiresCallbackError();
            e && delete e.fromBlock, this._on(t, e, (function (t, e, n) {
                n.unsubscribe(), "function" == typeof r && r(t, e, n)
            }))
        }, h.prototype._on = function () {
            var t = this._generateEventOptions.apply(this, arguments);
            t.params && t.params.toBlock && (delete t.params.toBlock, console.warn("Invalid option: toBlock. Use getPastEvents for specific range.")), this._checkListener("newListener", t.event.name), this._checkListener("removeListener", t.event.name);
            var e = new a({
                subscription: {
                    params: 1,
                    inputFormatter: [s.inputLogFormatter],
                    outputFormatter: this._decodeEventABI.bind(t.event),
                    subscriptionHandler: function (t) {
                        t.removed ? this.emit("changed", t) : this.emit("data", t), "function" == typeof this.callback && this.callback(null, t, this)
                    }
                },
                type: "eth",
                requestManager: this._requestManager
            });
            return e.subscribe("logs", t.params, t.callback || function () {}), e
        }, h.prototype.getPastEvents = function () {
            var t = this._generateEventOptions.apply(this, arguments),
                e = new i({
                    name: "getPastLogs",
                    call: "eth_getLogs",
                    params: 1,
                    inputFormatter: [s.inputLogFormatter],
                    outputFormatter: this._decodeEventABI.bind(t.event)
                });
            e.setRequestManager(this._requestManager);
            var r = e.buildCall();
            return e = null, r(t.params, t.callback)
        }, h.prototype._createTxObject = function _createTxObject() {
            var t = Array.prototype.slice.call(arguments),
                e = {};
            if ("function" === this.method.type && (e.call = this.parent._executeMethod.bind(e, "call"), e.call.request = this.parent._executeMethod.bind(e, "call", !0)), e.send = this.parent._executeMethod.bind(e, "send"), e.send.request = this.parent._executeMethod.bind(e, "send", !0), e.encodeABI = this.parent._encodeMethodABI.bind(e), e.estimateGas = this.parent._executeMethod.bind(e, "estimate"), t && this.method.inputs && t.length !== this.method.inputs.length) {
                if (this.nextMethod) return this.nextMethod.apply(null, t);
                throw u.InvalidNumberOfParams(t.length, this.method.inputs.length, this.method.name)
            }
            return e.arguments = t || [], e._method = this.method, e._parent = this.parent, e._ethAccounts = this.parent.constructor._ethAccounts || this._ethAccounts, this.deployData && (e._deployData = this.deployData), e
        }, h.prototype._processExecuteArguments = function _processExecuteArguments(t, e) {
            var r = {};
            if (r.type = t.shift(), r.callback = this._parent._getCallback(t), "call" !== r.type || !0 === t[t.length - 1] || "string" != typeof t[t.length - 1] && !isFinite(t[t.length - 1]) || (r.defaultBlock = t.pop()), r.options = "object" === (!!t[t.length - 1] && typeof t[t.length - 1]) ? t.pop() : {}, r.generateRequest = !0 === t[t.length - 1] && t.pop(), r.options = this._parent._getOrSetDefaultOptions(r.options), r.options.data = this.encodeABI(), !this._deployData && !o.isAddress(this._parent.options.address)) throw u.ContractNoAddressDefinedError();
            return this._deployData || (r.options.to = this._parent.options.address), r.options.data ? r : o._fireError(new Error("Couldn't find a matching contract method, or the number of parameters is wrong."), e.eventEmitter, e.reject, r.callback)
        }, h.prototype._executeMethod = function _executeMethod() {
            var t = this,
                e = this._parent._processExecuteArguments.call(this, Array.prototype.slice.call(arguments), r),
                r = c("send" !== e.type),
                n = t.constructor._ethAccounts || t._ethAccounts;
            if (e.generateRequest) {
                var a = {
                    params: [s.inputCallFormatter.call(this._parent, e.options)],
                    callback: e.callback
                };
                return "call" === e.type ? (a.params.push(s.inputDefaultBlockNumberFormatter.call(this._parent, e.defaultBlock)), a.method = "eth_call", a.format = this._parent._decodeMethodReturn.bind(null, this._method.outputs)) : a.method = "eth_sendTransaction", a
            }
            switch (e.type) {
                case "estimate":
                    var h = new i({
                        name: "estimateGas",
                        call: "eth_estimateGas",
                        params: 1,
                        inputFormatter: [s.inputCallFormatter],
                        outputFormatter: o.hexToNumber,
                        requestManager: t._parent._requestManager,
                        accounts: n,
                        defaultAccount: t._parent.defaultAccount,
                        defaultBlock: t._parent.defaultBlock
                    }).createFunction();
                    return h(e.options, e.callback);
                case "call":
                    var d = new i({
                        name: "call",
                        call: "eth_call",
                        params: 2,
                        inputFormatter: [s.inputCallFormatter, s.inputDefaultBlockNumberFormatter],
                        outputFormatter: function (e) {
                            return t._parent._decodeMethodReturn(t._method.outputs, e)
                        },
                        requestManager: t._parent._requestManager,
                        accounts: n,
                        defaultAccount: t._parent.defaultAccount,
                        defaultBlock: t._parent.defaultBlock,
                        handleRevert: t._parent.handleRevert,
                        abiCoder: l
                    }).createFunction();
                    return d(e.options, e.defaultBlock, e.callback);
                case "send":
                    if (!o.isAddress(e.options.from)) return o._fireError(u.ContractNoFromAddressDefinedError(), r.eventEmitter, r.reject, e.callback);
                    if ("boolean" == typeof this._method.payable && !this._method.payable && e.options.value && e.options.value > 0) return o._fireError(new Error("Can not send value to non-payable contract method or constructor"), r.eventEmitter, r.reject, e.callback);
                    var p = {
                            receiptFormatter: function (e) {
                                if (Array.isArray(e.logs)) {
                                    var r = e.logs.map(e => t._parent._decodeEventABI.call({
                                        name: "ALLEVENTS",
                                        jsonInterface: t._parent.options.jsonInterface
                                    }, e));
                                    e.events = {};
                                    var n = 0;
                                    r.forEach((function (t) {
                                        t.event ? e.events[t.event] ? Array.isArray(e.events[t.event]) ? e.events[t.event].push(t) : e.events[t.event] = [e.events[t.event], t] : e.events[t.event] = t : (e.events[n] = t, n++)
                                    })), delete e.logs
                                }
                                return e
                            },
                            contractDeployFormatter: function (e) {
                                var r = t._parent.clone();
                                return r.options.address = e.contractAddress, r
                            }
                        },
                        m = new i({
                            name: "sendTransaction",
                            call: "eth_sendTransaction",
                            params: 1,
                            inputFormatter: [s.inputTransactionFormatter],
                            requestManager: t._parent._requestManager,
                            accounts: t.constructor._ethAccounts || t._ethAccounts,
                            defaultAccount: t._parent.defaultAccount,
                            defaultBlock: t._parent.defaultBlock,
                            transactionBlockTimeout: t._parent.transactionBlockTimeout,
                            transactionConfirmationBlocks: t._parent.transactionConfirmationBlocks,
                            transactionPollingTimeout: t._parent.transactionPollingTimeout,
                            defaultCommon: t._parent.defaultCommon,
                            defaultChain: t._parent.defaultChain,
                            defaultHardfork: t._parent.defaultHardfork,
                            handleRevert: t._parent.handleRevert,
                            extraFormatters: p,
                            abiCoder: l
                        }).createFunction();
                    return m(e.options, e.callback);
                default:
                    throw new Error('Method "' + e.type + '" not implemented.')
            }
        }, t.exports = h
    }, function (t, e, r) {
        const n = r(724),
            i = r(732);
        t.exports = {
            packageInit: (t, e) => {
                if (e = Array.prototype.slice.call(e), !t) throw new Error('You need to instantiate using the "new" keyword.');
                Object.defineProperty(t, "currentProvider", {
                    get: () => t._provider,
                    set: e => t.setProvider(e),
                    enumerable: !0,
                    configurable: !0
                }), e[0] && e[0]._requestManager ? t._requestManager = e[0]._requestManager : t._requestManager = new n.Manager(e[0], e[1]), t.givenProvider = n.Manager.givenProvider, t.providers = n.Manager.providers, t._provider = t._requestManager.provider, t.setProvider || (t.setProvider = (e, r) => (t._requestManager.setProvider(e, r), t._provider = t._requestManager.provider, !0)), t.setRequestManager = e => {
                    t._requestManager = e, t._provider = e.provider
                }, t.BatchRequest = n.BatchManager.bind(null, t._requestManager), t.extend = i(t)
            },
            addProviders: t => {
                t.givenProvider = n.Manager.givenProvider, t.providers = n.Manager.providers
            }
        }
    }, function (t, e, r) {
        const {
            callbackify: n
        } = r(59);
        var i = r(10).errors,
            o = r(292),
            a = r(725),
            s = r(726),
            u = function RequestManager(t, e) {
                this.provider = null, this.providers = RequestManager.providers, this.setProvider(t, e), this.subscriptions = new Map
            };
        u.givenProvider = s, u.providers = {
            WebsocketProvider: r(727),
            HttpProvider: r(729),
            IpcProvider: r(730)
        }, u.prototype.setProvider = function (t, e) {
            var r = this;
            if (t && "string" == typeof t && this.providers)
                if (/^http(s)?:\/\//i.test(t)) t = new this.providers.HttpProvider(t);
                else if (/^ws(s)?:\/\//i.test(t)) t = new this.providers.WebsocketProvider(t);
            else if (t && "object" == typeof e && "function" == typeof e.connect) t = new this.providers.IpcProvider(t, e);
            else if (t) throw new Error("Can't autodetect provider for \"" + t + '"');
            if (this.provider && this.provider.connected && this.clearSubscriptions(), this.provider = t || null, this.provider && this.provider.on) {
                "function" == typeof t.request ? this.provider.on("message", (function (t) {
                    if (t && "eth_subscription" === t.type && t.data) {
                        const e = t.data;
                        e.subscription && r.subscriptions.has(e.subscription) && r.subscriptions.get(e.subscription).callback(null, e.result)
                    }
                })) : this.provider.on("data", (function data(t, e) {
                    (t = t || e).method && t.params && t.params.subscription && r.subscriptions.has(t.params.subscription) && r.subscriptions.get(t.params.subscription).callback(null, t.params.result)
                })), this.provider.on("connect", (function connect() {
                    r.subscriptions.forEach((function (t) {
                        t.subscription.resubscribe()
                    }))
                })), this.provider.on("error", (function error(error) {
                    r.subscriptions.forEach((function (t) {
                        t.callback(error)
                    }))
                }));
                const e = function disconnect(t) {
                    r._isCleanCloseEvent(t) && !r._isIpcCloseError(t) || (r.subscriptions.forEach((function (e) {
                        e.callback(i.ConnectionCloseError(t)), r.subscriptions.delete(e.subscription.id)
                    })), r.provider && r.provider.emit && r.provider.emit("error", i.ConnectionCloseError(t))), r.provider && r.provider.emit && r.provider.emit("end", t)
                };
                this.provider.on("close", e), this.provider.on("disconnect", e)
            }
        }, u.prototype.send = function (t, e) {
            if (e = e || function () {}, !this.provider) return e(i.InvalidProvider());
            const {
                method: r,
                params: a
            } = t, s = o.toPayload(r, a), u = this._jsonrpcResultCallback(e, s);
            if (this.provider.request) {
                n(this.provider.request.bind(this.provider))({
                    method: r,
                    params: a
                }, e)
            } else if (this.provider.sendAsync) this.provider.sendAsync(s, u);
            else {
                if (!this.provider.send) throw new Error("Provider does not have a request or send method to use.");
                this.provider.send(s, u)
            }
        }, u.prototype.sendBatch = function (t, e) {
            if (!this.provider) return e(i.InvalidProvider());
            var r = o.toBatchPayload(t);
            this.provider[this.provider.sendAsync ? "sendAsync" : "send"](r, (function (t, r) {
                return t ? e(t) : Array.isArray(r) ? void e(null, r) : e(i.InvalidResponse(r))
            }))
        }, u.prototype.addSubscription = function (t, e) {
            if (!this.provider.on) throw new Error("The provider doesn't support subscriptions: " + this.provider.constructor.name);
            this.subscriptions.set(t.id, {
                callback: e,
                subscription: t
            })
        }, u.prototype.removeSubscription = function (t, e) {
            if (this.subscriptions.has(t)) {
                var r = this.subscriptions.get(t).subscription.options.type;
                return this.subscriptions.delete(t), void this.send({
                    method: r + "_unsubscribe",
                    params: [t]
                }, e)
            }
            "function" == typeof e && e(null)
        }, u.prototype.clearSubscriptions = function (t) {
            try {
                var e = this;
                return this.subscriptions.size > 0 && this.subscriptions.forEach((function (r, n) {
                    t && "syncing" === r.name || e.removeSubscription(n)
                })), this.provider.reset && this.provider.reset(), !0
            } catch (t) {
                throw new Error("Error while clearing subscriptions: " + t)
            }
        }, u.prototype._isCleanCloseEvent = function (t) {
            return "object" == typeof t && ([1e3].includes(t.code) || !0 === t.wasClean)
        }, u.prototype._isIpcCloseError = function (t) {
            return "boolean" == typeof t && t
        }, u.prototype._jsonrpcResultCallback = function (t, e) {
            return function (r, n) {
                return n && n.id && e.id !== n.id ? t(new Error(`Wrong response id ${n.id} (expected: ${e.id}) in ${JSON.stringify(e)}`)) : r ? t(r) : n && n.error ? t(i.ErrorResponse(n)) : o.isValidResponse(n) ? void t(null, n.result) : t(i.InvalidResponse(n))
            }
        }, t.exports = {
            Manager: u,
            BatchManager: a
        }
    }, function (t, e, r) {
        var n = r(292),
            i = r(10).errors,
            Batch = function (t) {
                this.requestManager = t, this.requests = []
            };
        Batch.prototype.add = function (t) {
            this.requests.push(t)
        }, Batch.prototype.execute = function () {
            var t = this.requests;
            this.requestManager.sendBatch(t, (function (e, r) {
                r = r || [], t.map((function (t, e) {
                    return r[e] || {}
                })).forEach((function (e, r) {
                    if (t[r].callback) {
                        if (e && e.error) return t[r].callback(i.ErrorResponse(e));
                        if (!n.isValidResponse(e)) return t[r].callback(i.InvalidResponse(e));
                        try {
                            t[r].callback(null, t[r].format ? t[r].format(e.result) : e.result)
                        } catch (e) {
                            t[r].callback(e)
                        }
                    }
                }))
            }))
        }, t.exports = Batch
    }, function (t, e, r) {
        var n, i = null;
        try {
            n = Function("return this")()
        } catch (t) {
            n = window
        }
        void 0 !== n.ethereum ? i = n.ethereum : void 0 !== n.web3 && n.web3.currentProvider && (n.web3.currentProvider.sendAsync && (n.web3.currentProvider.send = n.web3.currentProvider.sendAsync, delete n.web3.currentProvider.sendAsync), !n.web3.currentProvider.on && n.web3.currentProvider.connection && "ipcProviderWrapper" === n.web3.currentProvider.connection.constructor.name && (n.web3.currentProvider.on = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            switch (t) {
                case "data":
                    this.connection.on("data", (function (t) {
                        var r = "";
                        t = t.toString();
                        try {
                            r = JSON.parse(t)
                        } catch (r) {
                            return e(new Error("Couldn't parse response data" + t))
                        }
                        r.id || -1 === r.method.indexOf("_subscription") || e(null, r)
                    }));
                    break;
                default:
                    this.connection.on(t, e)
            }
        }), i = n.web3.currentProvider), t.exports = i
    }, function (t, e, r) {
        var n = r(191),
            i = r(728),
            o = r(10).errors,
            a = r(83).w3cwebsocket,
            s = function WebsocketProvider(t, e) {
                n.call(this), e = e || {}, this.url = t, this._customTimeout = e.timeout || 15e3, this.headers = e.headers || {}, this.protocol = e.protocol || void 0, this.reconnectOptions = Object.assign({
                    auto: !1,
                    delay: 5e3,
                    maxAttempts: !1,
                    onTimeout: !1
                }, e.reconnect), this.clientConfig = e.clientConfig || void 0, this.requestOptions = e.requestOptions || void 0, this.DATA = "data", this.CLOSE = "close", this.ERROR = "error", this.CONNECT = "connect", this.RECONNECT = "reconnect", this.connection = null, this.requestQueue = new Map, this.responseQueue = new Map, this.reconnectAttempts = 0, this.reconnecting = !1;
                var r = i.parseURL(t);
                r.username && r.password && (this.headers.authorization = "Basic " + i.btoa(r.username + ":" + r.password)), r.auth && (this.headers.authorization = "Basic " + i.btoa(r.auth)), Object.defineProperty(this, "connected", {
                    get: function () {
                        return this.connection && this.connection.readyState === this.connection.OPEN
                    },
                    enumerable: !0
                }), this.connect()
            };
        (s.prototype = Object.create(n.prototype)).constructor = s, s.prototype.connect = function () {
            this.connection = new a(this.url, this.protocol, void 0, this.headers, this.requestOptions, this.clientConfig), this._addSocketListeners()
        }, s.prototype._onMessage = function (t) {
            var e = this;
            this._parseResponse("string" == typeof t.data ? t.data : "").forEach((function (t) {
                if (t.method && -1 !== t.method.indexOf("_subscription")) e.emit(e.DATA, t);
                else {
                    var r = t.id;
                    Array.isArray(t) && (r = t[0].id), e.responseQueue.has(r) && (void 0 !== e.responseQueue.get(r).callback && e.responseQueue.get(r).callback(!1, t), e.responseQueue.delete(r))
                }
            }))
        }, s.prototype._onConnect = function () {
            if (this.emit(this.CONNECT), this.reconnectAttempts = 0, this.reconnecting = !1, this.requestQueue.size > 0) {
                var t = this;
                this.requestQueue.forEach((function (e, r) {
                    t.send(e.payload, e.callback), t.requestQueue.delete(r)
                }))
            }
        }, s.prototype._onClose = function (t) {
            var e = this;
            !this.reconnectOptions.auto || [1e3, 1001].includes(t.code) && !1 !== t.wasClean ? (this.emit(this.CLOSE, t), this.requestQueue.size > 0 && this.requestQueue.forEach((function (r, n) {
                r.callback(o.ConnectionNotOpenError(t)), e.requestQueue.delete(n)
            })), this.responseQueue.size > 0 && this.responseQueue.forEach((function (r, n) {
                r.callback(o.InvalidConnection("on WS", t)), e.responseQueue.delete(n)
            })), this._removeSocketListeners(), this.removeAllListeners()) : this.reconnect()
        }, s.prototype._addSocketListeners = function () {
            this.connection.addEventListener("message", this._onMessage.bind(this)), this.connection.addEventListener("open", this._onConnect.bind(this)), this.connection.addEventListener("close", this._onClose.bind(this))
        }, s.prototype._removeSocketListeners = function () {
            this.connection.removeEventListener("message", this._onMessage), this.connection.removeEventListener("open", this._onConnect), this.connection.removeEventListener("close", this._onClose)
        }, s.prototype._parseResponse = function (t) {
            var e = this,
                r = [];
            return t.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach((function (t) {
                e.lastChunk && (t = e.lastChunk + t);
                var n = null;
                try {
                    n = JSON.parse(t)
                } catch (r) {
                    return e.lastChunk = t, clearTimeout(e.lastChunkTimeout), void(e.lastChunkTimeout = setTimeout((function () {
                        e.reconnectOptions.auto && e.reconnectOptions.onTimeout ? e.reconnect() : (e.emit(e.ERROR, o.ConnectionTimeout(e._customTimeout)), e.requestQueue.size > 0 && e.requestQueue.forEach((function (t, r) {
                            t.callback(o.ConnectionTimeout(e._customTimeout)), e.requestQueue.delete(r)
                        })))
                    }), e._customTimeout))
                }
                clearTimeout(e.lastChunkTimeout), e.lastChunk = null, n && r.push(n)
            })), r
        }, s.prototype.send = function (t, e) {
            var r = t.id,
                n = {
                    payload: t,
                    callback: e
                };
            if (Array.isArray(t) && (r = t[0].id), this.connection.readyState === this.connection.CONNECTING || this.reconnecting) this.requestQueue.set(r, n);
            else {
                if (this.connection.readyState !== this.connection.OPEN) return this.requestQueue.delete(r), this.emit(this.ERROR, o.ConnectionNotOpenError()), void n.callback(o.ConnectionNotOpenError());
                this.responseQueue.set(r, n), this.requestQueue.delete(r);
                try {
                    this.connection.send(JSON.stringify(n.payload))
                } catch (t) {
                    n.callback(t), this.responseQueue.delete(r)
                }
            }
        }, s.prototype.reset = function () {
            this.responseQueue.clear(), this.requestQueue.clear(), this.removeAllListeners(), this._removeSocketListeners(), this._addSocketListeners()
        }, s.prototype.disconnect = function (t, e) {
            this._removeSocketListeners(), this.connection.close(t || 1e3, e)
        }, s.prototype.supportsSubscriptions = function () {
            return !0
        }, s.prototype.reconnect = function () {
            var t = this;
            this.reconnecting = !0, this.responseQueue.size > 0 && this.responseQueue.forEach((function (e, r) {
                e.callback(o.PendingRequestsOnReconnectingError()), t.responseQueue.delete(r)
            })), !this.reconnectOptions.maxAttempts || this.reconnectAttempts < this.reconnectOptions.maxAttempts ? setTimeout((function () {
                t.reconnectAttempts++, t._removeSocketListeners(), t.emit(t.RECONNECT, t.reconnectAttempts), t.connect()
            }), this.reconnectOptions.delay) : (this.emit(this.ERROR, o.MaxAttemptsReachedOnReconnectingError()), this.reconnecting = !1, this.requestQueue.size > 0 && this.requestQueue.forEach((function (e, r) {
                e.callback(o.MaxAttemptsReachedOnReconnectingError()), t.requestQueue.delete(r)
            })))
        }, t.exports = s
    }, function (t, e, r) {
        (function (e, n) {
            var i = "[object process]" === Object.prototype.toString.call(void 0 !== e ? e : 0),
                o = "undefined" != typeof navigator && "ReactNative" === navigator.product,
                a = null,
                s = null;
            if (i || o) {
                a = function (t) {
                    return n.from(t).toString("base64")
                };
                var u = r(16);
                if (u.URL) {
                    var c = u.URL;
                    s = function (t) {
                        return new c(t)
                    }
                } else s = r(16).parse
            } else a = btoa.bind(window), s = function (t) {
                return new URL(t)
            };
            t.exports = {
                parseURL: s,
                btoa: a
            }
        }).call(this, r(7), r(0).Buffer)
    }, function (t, e, r) {
        var n = r(10).errors,
            i = r(84).XMLHttpRequest,
            o = r(51),
            a = r(68),
            s = function HttpProvider(t, e) {
                e = e || {}, this.withCredentials = e.withCredentials || !1, this.timeout = e.timeout || 0, this.headers = e.headers, this.agent = e.agent, this.connected = !1;
                const r = !1 !== e.keepAlive;
                this.host = t || "http://localhost:8545", this.agent || ("https" === this.host.substring(0, 5) ? this.httpsAgent = new a.Agent({
                    keepAlive: r
                }) : this.httpAgent = new o.Agent({
                    keepAlive: r
                }))
            };
        s.prototype._prepareRequest = function () {
            var t;
            if ("undefined" != typeof XMLHttpRequest) t = new XMLHttpRequest;
            else {
                t = new i;
                var e = {
                    httpsAgent: this.httpsAgent,
                    httpAgent: this.httpAgent,
                    baseUrl: this.baseUrl
                };
                this.agent && (e.httpsAgent = this.agent.https, e.httpAgent = this.agent.http, e.baseUrl = this.agent.baseUrl), t.nodejsSet(e)
            }
            return t.open("POST", this.host, !0), t.setRequestHeader("Content-Type", "application/json"), t.timeout = this.timeout, t.withCredentials = this.withCredentials, this.headers && this.headers.forEach((function (e) {
                t.setRequestHeader(e.name, e.value)
            })), t
        }, s.prototype.send = function (t, e) {
            var r = this,
                i = this._prepareRequest();
            i.onreadystatechange = function () {
                if (4 === i.readyState && 1 !== i.timeout) {
                    var t = i.responseText,
                        o = null;
                    try {
                        t = JSON.parse(t)
                    } catch (t) {
                        o = n.InvalidResponse(i.responseText)
                    }
                    r.connected = !0, e(o, t)
                }
            }, i.ontimeout = function () {
                r.connected = !1, e(n.ConnectionTimeout(this.timeout))
            };
            try {
                i.send(JSON.stringify(t))
            } catch (t) {
                this.connected = !1, e(n.InvalidConnection(this.host))
            }
        }, s.prototype.disconnect = function () {}, s.prototype.supportsSubscriptions = function () {
            return !1
        }, t.exports = s
    }, function (t, e, r) {
        var n = r(10).errors,
            i = r(731),
            o = function IpcProvider(t, e) {
                var r = this;
                this.responseCallbacks = {}, this.notificationCallbacks = [], this.path = t, this.connected = !1, this.connection = e.connect({
                    path: this.path
                }), this.addDefaultEvents();
                var callback = function (t) {
                    var e = null;
                    Array.isArray(t) ? t.forEach((function (t) {
                        r.responseCallbacks[t.id] && (e = t.id)
                    })) : e = t.id, e || -1 === t.method.indexOf("_subscription") ? r.responseCallbacks[e] && (r.responseCallbacks[e](null, t), delete r.responseCallbacks[e]) : r.notificationCallbacks.forEach((function (e) {
                        "function" == typeof e && e(t)
                    }))
                };
                "Socket" === e.constructor.name ? i(this.connection).done(callback) : this.connection.on("data", (function (t) {
                    r._parseResponse(t.toString()).forEach(callback)
                }))
            };
        o.prototype.addDefaultEvents = function () {
            var t = this;
            this.connection.on("connect", (function () {
                t.connected = !0
            })), this.connection.on("close", (function () {
                t.connected = !1
            })), this.connection.on("error", (function () {
                t._timeout()
            })), this.connection.on("end", (function () {
                t._timeout()
            })), this.connection.on("timeout", (function () {
                t._timeout()
            }))
        }, o.prototype._parseResponse = function (t) {
            var e = this,
                r = [];
            return t.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach((function (t) {
                e.lastChunk && (t = e.lastChunk + t);
                var i = null;
                try {
                    i = JSON.parse(t)
                } catch (r) {
                    return e.lastChunk = t, clearTimeout(e.lastChunkTimeout), void(e.lastChunkTimeout = setTimeout((function () {
                        throw e._timeout(), n.InvalidResponse(t)
                    }), 15e3))
                }
                clearTimeout(e.lastChunkTimeout), e.lastChunk = null, i && r.push(i)
            })), r
        }, o.prototype._addResponseCallback = function (t, e) {
            var r = t.id || t[0].id,
                n = t.method || t[0].method;
            this.responseCallbacks[r] = e, this.responseCallbacks[r].method = n
        }, o.prototype._timeout = function () {
            for (var t in this.responseCallbacks) this.responseCallbacks.hasOwnProperty(t) && (this.responseCallbacks[t](n.InvalidConnection("on IPC")), delete this.responseCallbacks[t])
        }, o.prototype.reconnect = function () {
            this.connection.connect({
                path: this.path
            })
        }, o.prototype.send = function (t, e) {
            this.connection.writable || this.connection.connect({
                path: this.path
            }), this.connection.write(JSON.stringify(t)), this._addResponseCallback(t, e)
        }, o.prototype.on = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            switch (t) {
                case "data":
                    this.notificationCallbacks.push(e);
                    break;
                default:
                    this.connection.on(t, e)
            }
        }, o.prototype.once = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            this.connection.once(t, e)
        }, o.prototype.removeListener = function (t, e) {
            var r = this;
            switch (t) {
                case "data":
                    this.notificationCallbacks.forEach((function (t, n) {
                        t === e && r.notificationCallbacks.splice(n, 1)
                    }));
                    break;
                default:
                    this.connection.removeListener(t, e)
            }
        }, o.prototype.removeAllListeners = function (t) {
            switch (t) {
                case "data":
                    this.notificationCallbacks = [];
                    break;
                default:
                    this.connection.removeAllListeners(t)
            }
        }, o.prototype.reset = function () {
            this._timeout(), this.notificationCallbacks = [], this.connection.removeAllListeners("error"), this.connection.removeAllListeners("end"), this.connection.removeAllListeners("timeout"), this.addDefaultEvents()
        }, o.prototype.supportsSubscriptions = function () {
            return !0
        }, t.exports = o
    }, function (t, e, r) {
        ! function webpackUniversalModuleDefinition(e, r) {
            t.exports = r()
        }("undefined" != typeof self && self, (function () {
            return function (t) {
                var e = {};

                function __webpack_require__(r) {
                    if (e[r]) return e[r].exports;
                    var n = e[r] = {
                        i: r,
                        l: !1,
                        exports: {}
                    };
                    return t[r].call(n.exports, n, n.exports, __webpack_require__), n.l = !0, n.exports
                }
                return __webpack_require__.m = t, __webpack_require__.c = e, __webpack_require__.d = function (t, e, r) {
                    __webpack_require__.o(t, e) || Object.defineProperty(t, e, {
                        configurable: !1,
                        enumerable: !0,
                        get: r
                    })
                }, __webpack_require__.n = function (t) {
                    var e = t && t.__esModule ? function getDefault() {
                        return t.default
                    } : function getModuleExports() {
                        return t
                    };
                    return __webpack_require__.d(e, "a", e), e
                }, __webpack_require__.o = function (t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e)
                }, __webpack_require__.p = "", __webpack_require__(__webpack_require__.s = 7)
            }([function (t, e, r) {
                r.d(e, "j", (function () {
                    return i
                })), r.d(e, "d", (function () {
                    return compose2
                })), r.d(e, "c", (function () {
                    return attr
                })), r.d(e, "h", (function () {
                    return o
                })), r.d(e, "b", (function () {
                    return apply
                })), r.d(e, "k", (function () {
                    return varArgs
                })), r.d(e, "e", (function () {
                    return flip
                })), r.d(e, "g", (function () {
                    return lazyIntersection
                })), r.d(e, "i", (function () {
                    return noop
                })), r.d(e, "a", (function () {
                    return always
                })), r.d(e, "f", (function () {
                    return functor
                }));
                var n = r(1),
                    i = varArgs((function (t, e) {
                        var r = e.length;
                        return varArgs((function (n) {
                            for (var i = 0; i < n.length; i++) e[r + i] = n[i];
                            return e.length = r + n.length, t.apply(this, e)
                        }))
                    }));
                varArgs((function (t) {
                    var e = Object(n.c)(t);

                    function next(t, e) {
                        return [apply(t, e)]
                    }
                    return varArgs((function (t) {
                        return Object(n.f)(next, t, e)[0]
                    }))
                }));

                function compose2(t, e) {
                    return function () {
                        return t.call(this, e.apply(this, arguments))
                    }
                }

                function attr(t) {
                    return function (e) {
                        return e[t]
                    }
                }
                var o = varArgs((function (t) {
                    return varArgs((function (e) {
                        for (var r, n = 0; n < attr("length")(t); n++)
                            if (r = apply(e, t[n])) return r
                    }))
                }));

                function apply(t, e) {
                    return e.apply(void 0, t)
                }

                function varArgs(t) {
                    var e = t.length - 1,
                        r = Array.prototype.slice;
                    if (0 === e) return function () {
                        return t.call(this, r.call(arguments))
                    };
                    if (1 === e) return function () {
                        return t.call(this, arguments[0], r.call(arguments, 1))
                    };
                    var n = Array(t.length);
                    return function () {
                        for (var i = 0; i < e; i++) n[i] = arguments[i];
                        return n[e] = r.call(arguments, e), t.apply(this, n)
                    }
                }

                function flip(t) {
                    return function (e, r) {
                        return t(r, e)
                    }
                }

                function lazyIntersection(t, e) {
                    return function (r) {
                        return t(r) && e(r)
                    }
                }

                function noop() {}

                function always() {
                    return !0
                }

                function functor(t) {
                    return function () {
                        return t
                    }
                }
            }, function (t, e, r) {
                r.d(e, "d", (function () {
                    return cons
                })), r.d(e, "g", (function () {
                    return i
                })), r.d(e, "l", (function () {
                    return o
                })), r.d(e, "c", (function () {
                    return arrayAsList
                })), r.d(e, "h", (function () {
                    return a
                })), r.d(e, "i", (function () {
                    return listAsArray
                })), r.d(e, "j", (function () {
                    return map
                })), r.d(e, "f", (function () {
                    return foldR
                })), r.d(e, "m", (function () {
                    return without
                })), r.d(e, "a", (function () {
                    return all
                })), r.d(e, "b", (function () {
                    return applyEach
                })), r.d(e, "k", (function () {
                    return reverseList
                })), r.d(e, "e", (function () {
                    return first
                }));
                var n = r(0);

                function cons(t, e) {
                    return [t, e]
                }
                var i = Object(n.c)(0),
                    o = Object(n.c)(1);

                function arrayAsList(t) {
                    return reverseList(t.reduce(Object(n.e)(cons), null))
                }
                var a = Object(n.k)(arrayAsList);

                function listAsArray(t) {
                    return foldR((function (t, e) {
                        return t.unshift(e), t
                    }), [], t)
                }

                function map(t, e) {
                    return e ? cons(t(i(e)), map(t, o(e))) : null
                }

                function foldR(t, e, r) {
                    return r ? t(foldR(t, e, o(r)), i(r)) : e
                }

                function without(t, e, r) {
                    return function withoutInner(t, r) {
                        return t ? e(i(t)) ? (r(i(t)), o(t)) : cons(i(t), withoutInner(o(t), r)) : null
                    }(t, r || n.i)
                }

                function all(t, e) {
                    return !e || t(i(e)) && all(t, o(e))
                }

                function applyEach(t, e) {
                    t && (i(t).apply(null, e), applyEach(o(t), e))
                }

                function reverseList(t) {
                    return function reverseInner(t, e) {
                        return t ? reverseInner(o(t), cons(i(t), e)) : e
                    }(t, null)
                }

                function first(t, e) {
                    return e && (t(i(e)) ? i(e) : first(t, o(e)))
                }
            }, function (t, e, r) {
                r.d(e, "c", (function () {
                    return isOfType
                })), r.d(e, "e", (function () {
                    return o
                })), r.d(e, "d", (function () {
                    return a
                })), r.d(e, "a", (function () {
                    return defined
                })), r.d(e, "b", (function () {
                    return hasAllProperties
                }));
                var n = r(1),
                    i = r(0);

                function isOfType(t, e) {
                    return e && e.constructor === t
                }
                var o = Object(i.c)("length"),
                    a = Object(i.j)(isOfType, String);

                function defined(t) {
                    return void 0 !== t
                }

                function hasAllProperties(t, e) {
                    return e instanceof Object && Object(n.a)((function (t) {
                        return t in e
                    }), t)
                }
            }, function (t, e, r) {
                r.d(e, "f", (function () {
                    return i
                })), r.d(e, "d", (function () {
                    return o
                })), r.d(e, "g", (function () {
                    return a
                })), r.d(e, "e", (function () {
                    return s
                })), r.d(e, "b", (function () {
                    return u
                })), r.d(e, "h", (function () {
                    return c
                })), r.d(e, "i", (function () {
                    return l
                })), r.d(e, "c", (function () {
                    return h
                })), r.d(e, "m", (function () {
                    return d
                })), r.d(e, "n", (function () {
                    return p
                })), r.d(e, "a", (function () {
                    return m
                })), r.d(e, "j", (function () {
                    return y
                })), r.d(e, "l", (function () {
                    return b
                })), r.d(e, "k", (function () {
                    return g
                })), r.d(e, "o", (function () {
                    return errorReport
                }));
                var n = 1,
                    i = n++,
                    o = n++,
                    a = n++,
                    s = n++,
                    u = "fail",
                    c = n++,
                    l = n++,
                    h = "start",
                    d = "data",
                    p = "end",
                    m = n++,
                    y = n++,
                    b = n++,
                    g = n++;

                function errorReport(t, e, r) {
                    try {
                        var n = JSON.parse(e)
                    } catch (t) {}
                    return {
                        statusCode: t,
                        body: e,
                        jsonBody: n,
                        thrown: r
                    }
                }
            }, function (t, e, r) {
                r.d(e, "b", (function () {
                    return namedNode
                })), r.d(e, "a", (function () {
                    return i
                })), r.d(e, "c", (function () {
                    return o
                }));
                var n = r(0);

                function namedNode(t, e) {
                    return {
                        key: t,
                        node: e
                    }
                }
                var i = Object(n.c)("key"),
                    o = Object(n.c)("node")
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return oboe
                }));
                var n = r(1),
                    i = r(0),
                    o = r(2),
                    a = r(8),
                    s = r(9);

                function oboe(t) {
                    var e = Object(n.h)("resume", "pause", "pipe"),
                        r = Object(i.j)(o.b, e);
                    return t ? r(t) || Object(o.d)(t) ? Object(a.a)(s.a, t) : Object(a.a)(s.a, t.url, t.method, t.body, t.headers, t.withCredentials, t.cached) : Object(s.a)()
                }
                oboe.drop = function () {
                    return oboe.drop
                }
            }, function (t, e, r) {
                r.d(e, "b", (function () {
                    return incrementalContentBuilder
                })), r.d(e, "a", (function () {
                    return s
                }));
                var n = r(3),
                    i = r(4),
                    o = r(2),
                    a = r(1),
                    s = {};

                function incrementalContentBuilder(t) {
                    var e = t(n.f).emit,
                        r = t(n.d).emit,
                        u = t(n.i).emit,
                        c = t(n.h).emit;

                    function appendBuiltContent(t, e, r) {
                        Object(i.c)(Object(a.g)(t))[e] = r
                    }

                    function keyFound(t, r, n) {
                        t && appendBuiltContent(t, r, n);
                        var o = Object(a.d)(Object(i.b)(r, n), t);
                        return e(o), o
                    }
                    var l = {};
                    return l[n.l] = function nodeOpened(t, e) {
                        if (!t) return u(e), keyFound(t, s, e);
                        var r = function arrayIndicesAreKeys(t, e) {
                                var r = Object(i.c)(Object(a.g)(t));
                                return Object(o.c)(Array, r) ? keyFound(t, Object(o.e)(r), e) : t
                            }(t, e),
                            n = Object(a.l)(r),
                            c = Object(i.a)(Object(a.g)(r));
                        return appendBuiltContent(n, c, e), Object(a.d)(Object(i.b)(c, e), n)
                    }, l[n.k] = function nodeClosed(t) {
                        return r(t), Object(a.l)(t) || c(Object(i.c)(Object(a.g)(t)))
                    }, l[n.j] = keyFound, l
                }
            }, function (t, e, r) {
                Object.defineProperty(e, "__esModule", {
                    value: !0
                });
                var n = r(5);
                e.default = n.a
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return applyDefaults
                }));
                var n = r(2);

                function applyDefaults(t, e, r, i, o, a, s) {
                    return o = o ? JSON.parse(JSON.stringify(o)) : {}, i ? (Object(n.d)(i) || (i = JSON.stringify(i), o["Content-Type"] = o["Content-Type"] || "application/json"), o["Content-Length"] = o["Content-Length"] || i.length) : i = null, t(r || "GET", function modifiedUrl(t, e) {
                        return !1 === e && (-1 === t.indexOf("?") ? t += "?" : t += "&", t += "_=" + (new Date).getTime()), t
                    }(e, s), i, o, a || !1)
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return wire
                }));
                var n = r(10),
                    i = r(12),
                    o = r(6),
                    a = r(13),
                    s = r(14),
                    u = r(16),
                    c = r(17),
                    l = r(18);

                function wire(t, e, r, h, d) {
                    var p = Object(n.a)();
                    return e && Object(l.b)(p, Object(l.a)(), t, e, r, h, d), Object(c.a)(p), Object(i.a)(p, Object(o.b)(p)), Object(a.a)(p, s.a), Object(u.a)(p, e)
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return pubSub
                }));
                var n = r(11),
                    i = r(0);

                function pubSub() {
                    var t = {},
                        e = newSingle("newListener"),
                        r = newSingle("removeListener");

                    function newSingle(i) {
                        return t[i] = Object(n.a)(i, e, r), t[i]
                    }

                    function pubSubInstance(e) {
                        return t[e] || newSingle(e)
                    }
                    return ["emit", "on", "un"].forEach((function (t) {
                        pubSubInstance[t] = Object(i.k)((function (e, r) {
                            Object(i.b)(r, pubSubInstance(e)[t])
                        }))
                    })), pubSubInstance
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return singleEventPubSub
                }));
                var n = r(1),
                    i = r(2),
                    o = r(0);

                function singleEventPubSub(t, e, r) {
                    var a, s;

                    function hasId(t) {
                        return function (e) {
                            return e.id === t
                        }
                    }
                    return {
                        on: function (r, i) {
                            var o = {
                                listener: r,
                                id: i || r
                            };
                            return e && e.emit(t, r, o.id), a = Object(n.d)(o, a), s = Object(n.d)(r, s), this
                        },
                        emit: function () {
                            Object(n.b)(s, arguments)
                        },
                        un: function (e) {
                            var i;
                            a = Object(n.m)(a, hasId(e), (function (t) {
                                i = t
                            })), i && (s = Object(n.m)(s, (function (t) {
                                return t === i.listener
                            })), r && r.emit(t, i.listener, i.id))
                        },
                        listeners: function () {
                            return s
                        },
                        hasListener: function (t) {
                            var e = t ? hasId(t) : o.a;
                            return Object(i.a)(Object(n.e)(e, a))
                        }
                    }
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return ascentManager
                }));
                var n = r(4),
                    i = r(3),
                    o = r(1);

                function ascentManager(t, e) {
                    var r, a = {};

                    function stateAfter(t) {
                        return function (e) {
                            r = t(r, e)
                        }
                    }
                    for (var s in e) t(s).on(stateAfter(e[s]), a);
                    t(i.g).on((function (t) {
                        var e = Object(o.g)(r),
                            i = Object(n.a)(e),
                            a = Object(o.l)(r);
                        a && (Object(n.c)(Object(o.g)(a))[i] = t)
                    })), t(i.e).on((function () {
                        var t = Object(o.g)(r),
                            e = Object(n.a)(t),
                            i = Object(o.l)(r);
                        i && delete Object(n.c)(Object(o.g)(i))[e]
                    })), t(i.a).on((function () {
                        for (var r in e) t(r).un(a)
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return patternAdapter
                }));
                var n = r(3),
                    i = r(1),
                    o = r(4);

                function patternAdapter(t, e) {
                    var r = {
                        node: t(n.d),
                        path: t(n.f)
                    };

                    function addUnderlyingListener(e, r, n) {
                        var a = t(e).emit;
                        r.on((function (t) {
                            var e = n(t);
                            !1 !== e && function emitMatchingNode(t, e, r) {
                                var n = Object(i.k)(r);
                                t(e, Object(i.i)(Object(i.l)(Object(i.j)(o.a, n))), Object(i.i)(Object(i.j)(o.c, n)))
                            }(a, Object(o.c)(e), t)
                        }), e), t("removeListener").on((function (n) {
                            n === e && (t(n).listeners() || r.un(e))
                        }))
                    }
                    t("newListener").on((function (t) {
                        var n = /(node|path):(.*)/.exec(t);
                        if (n) {
                            var i = r[n[1]];
                            i.hasListener(t) || addUnderlyingListener(t, i, e(n[2]))
                        }
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return c
                }));
                var n = r(0),
                    i = r(1),
                    o = r(4),
                    a = r(2),
                    s = r(6),
                    u = r(15),
                    c = Object(u.a)((function (t, e, r, u, c) {
                        var l = Object(n.d)(o.a, i.g),
                            h = Object(n.d)(o.c, i.g);

                        function capture(t, e) {
                            return !!e[1] ? Object(n.g)(t, i.g) : t
                        }

                        function skip1(t) {
                            if (t === n.a) return n.a;
                            return Object(n.g)((function notAtRoot(t) {
                                return l(t) !== s.a
                            }), Object(n.d)(t, i.l))
                        }

                        function rootExpr() {
                            return function (t) {
                                return l(t) === s.a
                            }
                        }

                        function generateClauseReaderIfTokenFound(t, e, r, n, o) {
                            var s = t(r);
                            if (s) {
                                var u = function expressionsReader(t, e, r) {
                                    return Object(i.f)((function (t, e) {
                                        return e(t, r)
                                    }), e, t)
                                }(e, n, s);
                                return o(r.substr(Object(a.e)(s[0])), u)
                            }
                        }

                        function clauseMatcher(t, e) {
                            return Object(n.j)(generateClauseReaderIfTokenFound, t, e)
                        }
                        var d = Object(n.h)(clauseMatcher(t, Object(i.h)(capture, (function duckTypeClause(t, e) {
                            var r = e[3];
                            if (!r) return t;
                            var o = Object(n.j)(a.b, Object(i.c)(r.split(/\W+/))),
                                s = Object(n.d)(o, h);
                            return Object(n.g)(s, t)
                        }), (function nameClause(t, e) {
                            var r = e[2],
                                i = r && "*" !== r ? function (t) {
                                    return String(l(t)) === r
                                } : n.a;
                            return Object(n.g)(i, t)
                        }), skip1)), clauseMatcher(e, Object(i.h)((function skipMany(t) {
                            if (t === n.a) return n.a;
                            var e = rootExpr(),
                                r = t,
                                i = skip1((function (t) {
                                    return o(t)
                                })),
                                o = Object(n.h)(e, r, i);
                            return o
                        }))), clauseMatcher(r, Object(i.h)()), clauseMatcher(u, Object(i.h)(capture, rootExpr)), clauseMatcher(c, Object(i.h)((function statementExpr(t) {
                            return function (e) {
                                var r = t(e);
                                return !0 === r ? Object(i.g)(e) : r
                            }
                        }))), (function (t) {
                            throw Error('"' + t + '" could not be tokenised')
                        }));

                        function returnFoundParser(t, e) {
                            return e
                        }

                        function compileJsonPathToFunction(t, e) {
                            return d(t, e, t ? compileJsonPathToFunction : returnFoundParser)
                        }
                        return function (t) {
                            try {
                                return compileJsonPathToFunction(t, n.a)
                            } catch (e) {
                                throw Error('Could not compile "' + t + '" because ' + e.message)
                            }
                        }
                    }))
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return y
                }));
                var n, i, o, a, s, u, c, l, h, d, p, m = r(0),
                    y = (n = Object(m.k)((function (t) {
                        return t.unshift(/^/),
                            function regexDescriptor(t) {
                                return t.exec.bind(t)
                            }(RegExp(t.map(Object(m.c)("source")).join("")))
                    })), a = n(i = /(\$?)/, /([\w-_]+|\*)/, o = /(?:{([\w ]*?)})?/), s = n(i, /\["([^"]+)"\]/, o), u = n(i, /\[(\d+|\*)\]/, o), c = n(i, /()/, /{([\w ]*?)}/), l = n(/\.\./), h = n(/\./), d = n(i, /!/), p = n(/$/), function (t) {
                        return t(Object(m.h)(a, s, u, c), l, h, d, p)
                    })
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return instanceApi
                }));
                var n = r(3),
                    i = r(0),
                    o = r(2),
                    a = r(5);

                function instanceApi(t, e) {
                    var r, s = /^(node|path):./,
                        u = t(n.h),
                        c = t(n.e).emit,
                        l = t(n.g).emit,
                        h = Object(i.k)((function (e, n) {
                            if (r[e]) Object(i.b)(n, r[e]);
                            else {
                                var o = t(e),
                                    a = n[0];
                                s.test(e) ? addForgettableCallback(o, wrapCallbackToSwapNodeIfSomethingReturned(a)) : o.on(a)
                            }
                            return r
                        }));

                    function addForgettableCallback(t, e, n) {
                        n = n || e;
                        var o = protectedCallback(e);
                        return t.on((function () {
                            var e = !1;
                            r.forget = function () {
                                e = !0
                            }, Object(i.b)(arguments, o), delete r.forget, e && t.un(n)
                        }), n), r
                    }

                    function protectedCallback(t) {
                        return function () {
                            try {
                                return t.apply(r, arguments)
                            } catch (t) {
                                setTimeout((function () {
                                    throw new Error(t.message)
                                }))
                            }
                        }
                    }

                    function wrapCallbackToSwapNodeIfSomethingReturned(t) {
                        return function () {
                            var e = t.apply(this, arguments);
                            Object(o.a)(e) && (e === a.a.drop ? c() : l(e))
                        }
                    }

                    function addSingleNodeOrPathListener(e, r, n) {
                        var i;
                        i = "node" === e ? wrapCallbackToSwapNodeIfSomethingReturned(n) : n, addForgettableCallback(function fullyQualifiedPatternMatchEvent(e, r) {
                            return t(e + ":" + r)
                        }(e, r), i, n)
                    }

                    function addNodeOrPathListenerApi(t, e, n) {
                        return Object(o.d)(e) ? addSingleNodeOrPathListener(t, e, n) : function addMultipleNodeOrPathListeners(t, e) {
                            for (var r in e) addSingleNodeOrPathListener(t, r, e[r])
                        }(t, e), r
                    }
                    return t(n.i).on((function (t) {
                        r.root = Object(i.f)(t)
                    })), t(n.c).on((function (t, e) {
                        r.header = function (t) {
                            return t ? e[t] : e
                        }
                    })), r = {
                        on: h,
                        addListener: h,
                        removeListener: function (e, n, i) {
                            if ("done" === e) u.un(n);
                            else if ("node" === e || "path" === e) t.un(e + ":" + n, i);
                            else {
                                var o = n;
                                t(e).un(o)
                            }
                            return r
                        },
                        emit: t.emit,
                        node: Object(i.j)(addNodeOrPathListenerApi, "node"),
                        path: Object(i.j)(addNodeOrPathListenerApi, "path"),
                        done: Object(i.j)(addForgettableCallback, u),
                        start: Object(i.j)((function addProtectedCallback(e, n) {
                            return t(e).on(protectedCallback(n), n), r
                        }), n.c),
                        fail: t(n.b).on,
                        abort: t(n.a).emit,
                        header: i.i,
                        root: i.i,
                        source: e
                    }
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return clarinet
                }));
                var n = r(3);

                function clarinet(t) {
                    var e, r, i, o, a = t(n.j).emit,
                        s = t(n.l).emit,
                        u = t(n.k).emit,
                        c = t(n.b).emit,
                        l = /[\\"\n]/g,
                        h = 0,
                        d = h++,
                        p = h++,
                        m = h++,
                        y = h++,
                        b = h++,
                        g = h++,
                        v = h++,
                        w = h++,
                        M = h++,
                        A = h++,
                        x = h++,
                        B = h++,
                        E = h++,
                        k = h++,
                        N = h++,
                        T = h++,
                        C = h++,
                        P = h++,
                        I = h++,
                        O = h++,
                        D = 65536,
                        j = "",
                        L = !1,
                        U = !1,
                        H = d,
                        q = [],
                        z = null,
                        G = 0,
                        V = 0,
                        J = 0,
                        W = 0,
                        Z = 1;

                    function emitError(t) {
                        void 0 !== o && (s(o), u(), o = void 0), e = Error(t + "\nLn: " + Z + "\nCol: " + W + "\nChr: " + r), c(Object(n.o)(void 0, void 0, e))
                    }

                    function whitespace(t) {
                        return "\r" === t || "\n" === t || " " === t || "\t" === t
                    }
                    t(n.m).on((function handleData(t) {
                        if (e) return;
                        if (U) return emitError("Cannot write after close");
                        var n = 0;
                        r = t[0];
                        for (; r && (n > 0 && (i = r), r = t[n++]);) switch (J++, "\n" === r ? (Z++, W = 0) : W++, H) {
                            case d:
                                if ("{" === r) H = m;
                                else if ("[" === r) H = b;
                                else if (!whitespace(r)) return emitError("Non-whitespace before {[.");
                                continue;
                            case w:
                            case m:
                                if (whitespace(r)) continue;
                                if (H === w) q.push(M);
                                else {
                                    if ("}" === r) {
                                        s({}), u(), H = q.pop() || p;
                                        continue
                                    }
                                    q.push(y)
                                }
                                if ('"' !== r) return emitError('Malformed object key should start with " ');
                                H = v;
                                continue;
                            case M:
                            case y:
                                if (whitespace(r)) continue;
                                if (":" === r) H === y ? (q.push(y), void 0 !== o && (s({}), a(o), o = void 0), V++) : void 0 !== o && (a(o), o = void 0), H = p;
                                else if ("}" === r) void 0 !== o && (s(o), u(), o = void 0), u(), V--, H = q.pop() || p;
                                else {
                                    if ("," !== r) return emitError("Bad object");
                                    H === y && q.push(y), void 0 !== o && (s(o), u(), o = void 0), H = w
                                }
                                continue;
                            case b:
                            case p:
                                if (whitespace(r)) continue;
                                if (H === b) {
                                    if (s([]), V++, H = p, "]" === r) {
                                        u(), V--, H = q.pop() || p;
                                        continue
                                    }
                                    q.push(g)
                                }
                                if ('"' === r) H = v;
                                else if ("{" === r) H = m;
                                else if ("[" === r) H = b;
                                else if ("t" === r) H = A;
                                else if ("f" === r) H = E;
                                else if ("n" === r) H = C;
                                else if ("-" === r) j += r;
                                else if ("0" === r) j += r, H = 20;
                                else {
                                    if (-1 === "123456789".indexOf(r)) return emitError("Bad value");
                                    j += r, H = 20
                                }
                                continue;
                            case g:
                                if ("," === r) q.push(g), void 0 !== o && (s(o), u(), o = void 0), H = p;
                                else {
                                    if ("]" !== r) {
                                        if (whitespace(r)) continue;
                                        return emitError("Bad array")
                                    }
                                    void 0 !== o && (s(o), u(), o = void 0), u(), V--, H = q.pop() || p
                                }
                                continue;
                            case v:
                                void 0 === o && (o = "");
                                var c = n - 1;
                                t: for (;;) {
                                    for (; G > 0;)
                                        if (z += r, r = t.charAt(n++), 4 === G ? (o += String.fromCharCode(parseInt(z, 16)), G = 0, c = n - 1) : G++, !r) break t;
                                    if ('"' === r && !L) {
                                        H = q.pop() || p, o += t.substring(c, n - 1);
                                        break
                                    }
                                    if (!("\\" !== r || L || (L = !0, o += t.substring(c, n - 1), r = t.charAt(n++)))) break;
                                    if (L) {
                                        if (L = !1, "n" === r ? o += "\n" : "r" === r ? o += "\r" : "t" === r ? o += "\t" : "f" === r ? o += "\f" : "b" === r ? o += "\b" : "u" === r ? (G = 1, z = "") : o += r, r = t.charAt(n++), c = n - 1, r) continue;
                                        break
                                    }
                                    l.lastIndex = n;
                                    var h = l.exec(t);
                                    if (!h) {
                                        n = t.length + 1, o += t.substring(c, n - 1);
                                        break
                                    }
                                    if (n = h.index + 1, !(r = t.charAt(h.index))) {
                                        o += t.substring(c, n - 1);
                                        break
                                    }
                                }
                                continue;
                            case A:
                                if (!r) continue;
                                if ("r" !== r) return emitError("Invalid true started with t" + r);
                                H = x;
                                continue;
                            case x:
                                if (!r) continue;
                                if ("u" !== r) return emitError("Invalid true started with tr" + r);
                                H = B;
                                continue;
                            case B:
                                if (!r) continue;
                                if ("e" !== r) return emitError("Invalid true started with tru" + r);
                                s(!0), u(), H = q.pop() || p;
                                continue;
                            case E:
                                if (!r) continue;
                                if ("a" !== r) return emitError("Invalid false started with f" + r);
                                H = k;
                                continue;
                            case k:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid false started with fa" + r);
                                H = N;
                                continue;
                            case N:
                                if (!r) continue;
                                if ("s" !== r) return emitError("Invalid false started with fal" + r);
                                H = T;
                                continue;
                            case T:
                                if (!r) continue;
                                if ("e" !== r) return emitError("Invalid false started with fals" + r);
                                s(!1), u(), H = q.pop() || p;
                                continue;
                            case C:
                                if (!r) continue;
                                if ("u" !== r) return emitError("Invalid null started with n" + r);
                                H = P;
                                continue;
                            case P:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid null started with nu" + r);
                                H = I;
                                continue;
                            case I:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid null started with nul" + r);
                                s(null), u(), H = q.pop() || p;
                                continue;
                            case O:
                                if ("." !== r) return emitError("Leading zero not followed by .");
                                j += r, H = 20;
                                continue;
                            case 20:
                                if (-1 !== "0123456789".indexOf(r)) j += r;
                                else if ("." === r) {
                                    if (-1 !== j.indexOf(".")) return emitError("Invalid number has two dots");
                                    j += r
                                } else if ("e" === r || "E" === r) {
                                    if (-1 !== j.indexOf("e") || -1 !== j.indexOf("E")) return emitError("Invalid number has two exponential");
                                    j += r
                                } else if ("+" === r || "-" === r) {
                                    if ("e" !== i && "E" !== i) return emitError("Invalid symbol in number");
                                    j += r
                                } else j && (s(parseFloat(j)), u(), j = ""), n--, H = q.pop() || p;
                                continue;
                            default:
                                return emitError("Unknown state: " + H)
                        }
                        J >= D && function checkBufferLength() {
                            var t = 0;
                            void 0 !== o && o.length > 65536 && (emitError("Max buffer length exceeded: textNode"), t = Math.max(t, o.length)), j.length > 65536 && (emitError("Max buffer length exceeded: numberNode"), t = Math.max(t, j.length)), D = 65536 - t + J
                        }()
                    })), t(n.n).on((function handleStreamEnd() {
                        if (H === d) return s({}), u(), void(U = !0);
                        H === p && 0 === V || emitError("Unexpected end");
                        void 0 !== o && (s(o), u(), o = void 0);
                        U = !0
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return httpTransport
                })), r.d(e, "b", (function () {
                    return streamingHttp
                }));
                var n = r(19),
                    i = r(3),
                    o = r(2),
                    a = r(20),
                    s = r(0);

                function httpTransport() {
                    return new XMLHttpRequest
                }

                function streamingHttp(t, e, r, u, c, l, h) {
                    var d = t(i.m).emit,
                        p = t(i.b).emit,
                        m = 0,
                        y = !0;

                    function handleProgress() {
                        if ("2" === String(e.status)[0]) {
                            var t = e.responseText,
                                r = (" " + t.substr(m)).substr(1);
                            r && d(r), m = Object(o.e)(t)
                        }
                    }

                    function sendStartIfNotAlready(e) {
                        try {
                            y && t(i.c).emit(e.status, Object(a.a)(e.getAllResponseHeaders())), y = !1
                        } catch (t) {}
                    }
                    t(i.a).on((function () {
                        e.onreadystatechange = null, e.abort()
                    })), "onprogress" in e && (e.onprogress = handleProgress), e.onreadystatechange = function () {
                        switch (e.readyState) {
                            case 2:
                            case 3:
                                return sendStartIfNotAlready(e);
                            case 4:
                                sendStartIfNotAlready(e), "2" === String(e.status)[0] ? (handleProgress(), t(i.n).emit()) : p(Object(i.o)(e.status, e.responseText))
                        }
                    };
                    try {
                        for (var b in e.open(r, u, !0), l) e.setRequestHeader(b, l[b]);
                        Object(n.a)(window.location, Object(n.b)(u)) || e.setRequestHeader("X-Requested-With", "XMLHttpRequest"), e.withCredentials = h, e.send(c)
                    } catch (t) {
                        window.setTimeout(Object(s.j)(p, Object(i.o)(void 0, void 0, t)), 0)
                    }
                }
            }, function (t, e, r) {
                function isCrossOrigin(t, e) {
                    function portOf(e) {
                        return String(e.port || function defaultPort(t) {
                            return {
                                "http:": 80,
                                "https:": 443
                            } [t]
                        }(e.protocol || t.protocol))
                    }
                    return !!(e.protocol && e.protocol !== t.protocol || e.host && e.host !== t.host || e.host && portOf(e) !== portOf(t))
                }

                function parseUrlOrigin(t) {
                    var e = /(\w+:)?(?:\/\/)([\w.-]+)?(?::(\d+))?\/?/.exec(t) || [];
                    return {
                        protocol: e[1] || "",
                        host: e[2] || "",
                        port: e[3] || ""
                    }
                }
                r.d(e, "a", (function () {
                    return isCrossOrigin
                })), r.d(e, "b", (function () {
                    return parseUrlOrigin
                }))
            }, function (t, e, r) {
                function parseResponseHeaders(t) {
                    var e = {};
                    return t && t.split("\r\n").forEach((function (t) {
                        var r = t.indexOf(": ");
                        e[t.substring(0, r)] = t.substring(r + 2)
                    })), e
                }
                r.d(e, "a", (function () {
                    return parseResponseHeaders
                }))
            }]).default
        }))
    }, function (t, e, r) {
        var n = r(10).formatters,
            i = r(293),
            o = r(43);
        t.exports = function (t) {
            var ex = function (e) {
                var r;
                return e.property ? (t[e.property] || (t[e.property] = {}), r = t[e.property]) : r = t, e.methods && e.methods.forEach((function (e) {
                    e instanceof i || (e = new i(e)), e.attachToObject(r), e.setRequestManager(t._requestManager)
                })), t
            };
            return ex.formatters = n, ex.utils = o, ex.Method = i, ex
        }
    }, function (t, e, r) {
        var n = r(10).errors,
            i = r(191),
            o = r(10).formatters;

        function identity(t) {
            return t
        }

        function Subscription(t) {
            i.call(this), this.id = null, this.callback = identity, this.arguments = null, this.lastBlock = null, this.options = {
                subscription: t.subscription,
                type: t.type,
                requestManager: t.requestManager
            }
        }
        Subscription.prototype = Object.create(i.prototype), Subscription.prototype.constructor = Subscription, Subscription.prototype._extractCallback = function (t) {
            if ("function" == typeof t[t.length - 1]) return t.pop()
        }, Subscription.prototype._validateArgs = function (t) {
            var e = this.options.subscription;
            if (e || (e = {}), e.params || (e.params = 0), t.length !== e.params) throw n.InvalidNumberOfParams(t.length, e.params, e.subscriptionName)
        }, Subscription.prototype._formatInput = function (t) {
            var e = this.options.subscription;
            return e && e.inputFormatter ? e.inputFormatter.map((function (e, r) {
                return e ? e(t[r]) : t[r]
            })) : t
        }, Subscription.prototype._formatOutput = function (t) {
            var e = this.options.subscription;
            return e && e.outputFormatter && t ? e.outputFormatter(t) : t
        }, Subscription.prototype._toPayload = function (t) {
            var e = [];
            if (this.callback = this._extractCallback(t) || identity, this.subscriptionMethod || (this.subscriptionMethod = t.shift(), this.options.subscription.subscriptionName && (this.subscriptionMethod = this.options.subscription.subscriptionName)), this.arguments || (this.arguments = this._formatInput(t), this._validateArgs(this.arguments), t = []), e.push(this.subscriptionMethod), e = e.concat(this.arguments), t.length) throw new Error("Only a callback is allowed as parameter on an already instantiated subscription.");
            return {
                method: this.options.type + "_subscribe",
                params: e
            }
        }, Subscription.prototype.unsubscribe = function (t) {
            this.options.requestManager.removeSubscription(this.id, t), this.id = null, this.lastBlock = null, this.removeAllListeners()
        }, Subscription.prototype.subscribe = function () {
            var t = this,
                e = Array.prototype.slice.call(arguments),
                r = this._toPayload(e);
            if (!r) return this;
            if (!this.options.requestManager.provider) return setTimeout((function () {
                var e = new Error("No provider set.");
                t.callback(e, null, t), t.emit("error", e)
            }), 0), this;
            if (!this.options.requestManager.provider.on) return setTimeout((function () {
                var e = new Error("The current provider doesn't support subscriptions: " + t.options.requestManager.provider.constructor.name);
                t.callback(e, null, t), t.emit("error", e)
            }), 0), this;
            if (this.lastBlock && this.options.params && "object" == typeof this.options.params && (r.params[1] = this.options.params, r.params[1].fromBlock = o.inputBlockNumberFormatter(this.lastBlock + 1)), this.id && this.unsubscribe(), this.options.params = r.params[1], "logs" === r.params[0] && r.params[1] && "object" == typeof r.params[1] && r.params[1].hasOwnProperty("fromBlock") && isFinite(r.params[1].fromBlock)) {
                var n = Object.assign({}, r.params[1]);
                this.options.requestManager.send({
                    method: "eth_getLogs",
                    params: [n]
                }, (function (e, r) {
                    e ? setTimeout((function () {
                        t.callback(e, null, t), t.emit("error", e)
                    }), 0) : r.forEach((function (e) {
                        var r = t._formatOutput(e);
                        t.callback(null, r, t), t.emit("data", r)
                    }))
                }))
            }
            return "object" == typeof r.params[1] && delete r.params[1].fromBlock, this.options.requestManager.send(r, (function (e, n) {
                !e && n ? (t.id = n, t.method = r.params[0], t.emit("connected", n), t.options.requestManager.addSubscription(t, (function (e, r) {
                    e ? (t.callback(e, !1, t), t.emit("error", e)) : (Array.isArray(r) || (r = [r]), r.forEach((function (e) {
                        var r = t._formatOutput(e);
                        if (t.lastBlock = r && "object" == typeof r ? r.blockNumber : null, "function" == typeof t.options.subscription.subscriptionHandler) return t.options.subscription.subscriptionHandler.call(t, r);
                        t.emit("data", r), t.callback(null, r, t)
                    })))
                }))) : setTimeout((function () {
                    t.callback(e, !1, t), t.emit("error", e)
                }), 0)
            })), this
        }, Subscription.prototype.resubscribe = function () {
            this.options.requestManager.removeSubscription(this.id), this.id = null, this.subscribe(this.callback)
        }, t.exports = Subscription
    }, function (t, e, r) {
        var n = r(0).Buffer,
            i = r(43),
            o = r(140).AbiCoder,
            a = r(140).ParamType,
            s = new o((function (t, e) {
                return !t.match(/^u?int/) || Array.isArray(e) || e && "object" == typeof e && "BN" === e.constructor.name ? e : e.toString()
            }));

        function Result() {}
        var ABICoder = function () {};
        ABICoder.prototype.encodeFunctionSignature = function (t) {
            return ("function" == typeof t || "object" == typeof t && t) && (t = i._jsonInterfaceMethodToString(t)), i.sha3(t).slice(0, 10)
        }, ABICoder.prototype.encodeEventSignature = function (t) {
            return ("function" == typeof t || "object" == typeof t && t) && (t = i._jsonInterfaceMethodToString(t)), i.sha3(t)
        }, ABICoder.prototype.encodeParameter = function (t, e) {
            return this.encodeParameters([t], [e])
        }, ABICoder.prototype.encodeParameters = function (t, e) {
            var r = this;
            return t = r.mapTypes(t), e = e.map((function (e, n) {
                let i = t[n];
                if ("object" == typeof i && i.type && (i = i.type), e = r.formatParam(i, e), "string" == typeof i && i.includes("tuple")) {
                    const t = s._getCoder(a.from(i)),
                        modifyParams = (t, e) => {
                            if ("array" === t.name) return e.map(e => modifyParams(s._getCoder(a.from(t.type.replace("[]", ""))), e));
                            t.coders.forEach((t, n) => {
                                "tuple" === t.name ? modifyParams(t, e[n]) : e[n] = r.formatParam(t.name, e[n])
                            })
                        };
                    modifyParams(t, e)
                }
                return e
            })), s.encode(t, e)
        }, ABICoder.prototype.mapTypes = function (t) {
            var e = this,
                r = [];
            return t.forEach((function (t) {
                if ("object" == typeof t && "function" === t.type && (t = Object.assign({}, t, {
                        type: "bytes24"
                    })), e.isSimplifiedStructFormat(t)) {
                    var n = Object.keys(t)[0];
                    r.push(Object.assign(e.mapStructNameAndType(n), {
                        components: e.mapStructToCoderFormat(t[n])
                    }))
                } else r.push(t)
            })), r
        }, ABICoder.prototype.isSimplifiedStructFormat = function (t) {
            return "object" == typeof t && void 0 === t.components && void 0 === t.name
        }, ABICoder.prototype.mapStructNameAndType = function (t) {
            var e = "tuple";
            return t.indexOf("[]") > -1 && (e = "tuple[]", t = t.slice(0, -2)), {
                type: e,
                name: t
            }
        }, ABICoder.prototype.mapStructToCoderFormat = function (t) {
            var e = this,
                r = [];
            return Object.keys(t).forEach((function (n) {
                "object" != typeof t[n] ? r.push({
                    name: n,
                    type: t[n]
                }) : r.push(Object.assign(e.mapStructNameAndType(n), {
                    components: e.mapStructToCoderFormat(t[n])
                }))
            })), r
        }, ABICoder.prototype.formatParam = function (t, e) {
            const r = new RegExp(/^bytes([0-9]*)$/),
                o = new RegExp(/^bytes([0-9]*)\[\]$/),
                a = new RegExp(/^(u?int)([0-9]*)$/),
                s = new RegExp(/^(u?int)([0-9]*)\[\]$/);
            if (i.isBN(e) || i.isBigNumber(e)) return e.toString(10);
            if (t.match(o) || t.match(s)) return e.map(e => this.formatParam(t.replace("[]", ""), e));
            let u = t.match(a);
            if (u) {
                let t = parseInt(u[2] || "256");
                t / 8 < e.length && (e = i.leftPad(e, t))
            }
            if (u = t.match(r), u) {
                n.isBuffer(e) && (e = i.toHex(e));
                let t = parseInt(u[1]);
                if (t) {
                    let r = 2 * t;
                    "0x" === e.substring(0, 2) && (r += 2), e.length < r && (e = i.rightPad(e, 2 * t))
                }
                e.length % 2 == 1 && (e = "0x0" + e.substring(2))
            }
            return e
        }, ABICoder.prototype.encodeFunctionCall = function (t, e) {
            return this.encodeFunctionSignature(t) + this.encodeParameters(t.inputs, e).replace("0x", "")
        }, ABICoder.prototype.decodeParameter = function (t, e) {
            return this.decodeParameters([t], e)[0]
        }, ABICoder.prototype.decodeParameters = function (t, e) {
            return this.decodeParametersWith(t, e, !1)
        }, ABICoder.prototype.decodeParametersWith = function (t, e, r) {
            if (t.length > 0 && (!e || "0x" === e || "0X" === e)) throw new Error("Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.");
            var n = s.decode(this.mapTypes(t), "0x" + e.replace(/0x/i, ""), r),
                i = new Result;
            return i.__length__ = 0, t.forEach((function (t, e) {
                var r = n[i.__length__];
                r = "0x" === r ? null : r, i[e] = r, ("function" == typeof t || t && "object" == typeof t) && t.name && (i[t.name] = r), i.__length__++
            })), i
        }, ABICoder.prototype.decodeLog = function (t, e, r) {
            var n = this;
            r = Array.isArray(r) ? r : [r], e = e || "";
            var i = [],
                o = [],
                a = 0;
            t.forEach((function (t, e) {
                t.indexed ? (o[e] = ["bool", "int", "uint", "address", "fixed", "ufixed"].find((function (e) {
                    return -1 !== t.type.indexOf(e)
                })) ? n.decodeParameter(t.type, r[a]) : r[a], a++) : i[e] = t
            }));
            var s = e,
                u = s ? this.decodeParametersWith(i, s, !0) : [],
                c = new Result;
            return c.__length__ = 0, t.forEach((function (t, e) {
                c[e] = "string" === t.type ? "" : null, void 0 !== u[e] && (c[e] = u[e]), void 0 !== o[e] && (c[e] = o[e]), t.name && (c[t.name] = c[e]), c.__length__++
            })), c
        };
        var u = new ABICoder;
        t.exports = u
    }, function (t, e) {}, function (t, e, r) {
        var n, i;
        n = [r(263), r(737)], void 0 === (i = function (t, e) {
            return function (t, e) {
                function mapLabel(r, n, i) {
                    for (var o = [], a = t.ucs2.decode(r), s = 0; s < a.length; s++) {
                        var u = a[s],
                            c = t.ucs2.encode([a[s]]),
                            l = e.mapChar(u),
                            h = l >> 23,
                            d = l >> 21 & 3,
                            p = l >> 5 & 65535,
                            m = 31 & l,
                            y = e.mapStr.substr(p, m);
                        if (0 === d || n && 1 & h) throw new Error("Illegal char " + c);
                        1 === d ? o.push(y) : 2 === d ? o.push(i ? y : c) : 3 === d && o.push(c)
                    }
                    return o.join("").normalize("NFC")
                }

                function process(e, r, n) {
                    void 0 === n && (n = !1);
                    var i = mapLabel(e, n, r).split(".");
                    return (i = i.map((function (e) {
                        return e.startsWith("xn--") ? validateLabel(e = t.decode(e.substring(4)), n, !1) : validateLabel(e, n, r), e
                    }))).join(".")
                }

                function validateLabel(t, r, n) {
                    if ("-" === t[2] && "-" === t[3]) throw new Error("Failed to validate " + t);
                    if (t.startsWith("-") || t.endsWith("-")) throw new Error("Failed to validate " + t);
                    if (t.includes(".")) throw new Error("Failed to validate " + t);
                    if (mapLabel(t, r, n) !== t) throw new Error("Failed to validate " + t);
                    var i = t.codePointAt(0);
                    if (e.mapChar(i) & 2 << 23) throw new Error("Label contains illegal character: " + i)
                }
                return {
                    toUnicode: function toUnicode(t, e) {
                        return void 0 === e && (e = {}), process(t, !1, "useStd3ASCII" in e && e.useStd3ASCII)
                    },
                    toAscii: function toAscii(e, r) {
                        void 0 === r && (r = {});
                        var n, i = !("transitional" in r) || r.transitional,
                            o = "useStd3ASCII" in r && r.useStd3ASCII,
                            a = "verifyDnsLength" in r && r.verifyDnsLength,
                            s = process(e, i, o).split(".").map(t.toASCII),
                            u = s.join(".");
                        if (a) {
                            if (u.length < 1 || u.length > 253) throw new Error("DNS name has wrong length: " + u);
                            for (n = 0; n < s.length; n++) {
                                var c = s[n];
                                if (c.length < 1 || c.length > 63) throw new Error("DNS label has wrong length: " + c)
                            }
                        }
                        return u
                    }
                }
            }(t, e)
        }.apply(e, n)) || (t.exports = i)
    }, function (t, e, r) {
        var n;
        void 0 === (n = function () {
            return t = [new Uint32Array([2157250, 2157314, 2157378, 2157442, 2157506, 2157570, 2157634, 0, 2157698, 2157762, 2157826, 2157890, 2157954, 0, 2158018, 0]), new Uint32Array([2179041, 6291456, 2179073, 6291456, 2179105, 6291456, 2179137, 6291456, 2179169, 6291456, 2179201, 6291456, 2179233, 6291456, 2179265, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 14680064, 14680064, 14680064, 14680064, 14680064]), new Uint32Array([0, 2113729, 2197345, 2197377, 2113825, 2197409, 2197441, 2113921, 2197473, 2114017, 2197505, 2197537, 2197569, 2197601, 2197633, 2197665]), new Uint32Array([6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 23068672, 23068672, 23068672, 0, 0, 0, 0, 23068672]), new Uint32Array([14680064, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 14680064, 14680064]), new Uint32Array([2196001, 2196033, 2196065, 2196097, 2196129, 2196161, 2196193, 2196225, 2196257, 2196289, 2196321, 2196353, 2196385, 2196417, 2196449, 2196481]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 0, 0, 0, 0, 0]), new Uint32Array([2097281, 2105921, 2097729, 2106081, 0, 2097601, 2162337, 2106017, 2133281, 2097505, 2105889, 2097185, 2097697, 2135777, 2097633, 2097441]), new Uint32Array([2177025, 6291456, 2177057, 6291456, 2177089, 6291456, 2177121, 6291456, 2177153, 6291456, 2177185, 6291456, 2177217, 6291456, 2177249, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 0, 6291456, 6291456, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456]), new Uint32Array([0, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 6291456]), new Uint32Array([2134435, 2134531, 2134627, 2134723, 2134723, 2134819, 2134819, 2134915, 2134915, 2135011, 2105987, 2135107, 2135203, 2135299, 2131587, 2135395]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 6291456, 2168673, 2169249, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2147906, 2147970, 2148034, 2148098, 2148162, 2148226, 2148290, 2148354, 2147906, 2147970, 2148034, 2148098, 2148162, 2148226, 2148290, 2148354]), new Uint32Array([2125219, 2125315, 2152834, 2152898, 2125411, 2152962, 2153026, 2125506, 2125507, 2125603, 2153090, 2153154, 2153218, 2153282, 2153346, 2105348]), new Uint32Array([2203393, 6291456, 2203425, 6291456, 2203457, 6291456, 2203489, 6291456, 6291456, 6291456, 6291456, 2203521, 6291456, 2181281, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 23068672, 6291456, 2145538, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 6291456]), new Uint32Array([2139426, 2160834, 2160898, 2160962, 2134242, 2161026, 2161090, 2161154, 2161218, 2161282, 2161346, 2161410, 2138658, 2161474, 2161538, 2134722]), new Uint32Array([2119939, 2124930, 2125026, 2106658, 2125218, 2128962, 2129058, 2129154, 2129250, 2129346, 2129442, 2108866, 2108770, 2150466, 2150530, 2150594]), new Uint32Array([2201601, 6291456, 2201633, 6291456, 2201665, 6291456, 2201697, 6291456, 2201729, 6291456, 2201761, 6291456, 2201793, 6291456, 2201825, 6291456]), new Uint32Array([2193537, 2193569, 2193601, 2193633, 2193665, 2193697, 2193729, 2193761, 2193793, 2193825, 2193857, 2193889, 2193921, 2193953, 2193985, 2194017]), new Uint32Array([6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2190561, 6291456, 2190593, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2190625, 6291456, 2190657, 6291456, 23068672]), new Uint32Array([2215905, 2215937, 2215969, 2216001, 2216033, 2216065, 2216097, 2216129, 2216161, 2216193, 2216225, 2216257, 2105441, 2216289, 2216321, 2216353]), new Uint32Array([23068672, 18884130, 23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2191233, 2191265, 2191297, 2191329, 2191361, 2191393, 2191425, 2117377, 2191457, 2191489, 2191521, 2191553, 2191585, 2191617, 2191649, 2117953]), new Uint32Array([2132227, 2132323, 2132419, 2132419, 2132515, 2132515, 2132611, 2132707, 2132707, 2132803, 2132899, 2132899, 2132995, 2132995, 2133091, 2133187]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 6291456, 0, 0]), new Uint32Array([2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 10609889, 10610785, 10609921, 10610817, 2222241]), new Uint32Array([6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 0, 0]), new Uint32Array([2219969, 2157121, 2157441, 2157505, 2157889, 2157953, 2220001, 2158465, 2158529, 10575617, 2156994, 2157058, 2129923, 2130019, 2157122, 2157186]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0]), new Uint32Array([2185249, 6291456, 2185281, 6291456, 2185313, 6291456, 2185345, 6291456, 2185377, 6291456, 2185409, 6291456, 2185441, 6291456, 2185473, 6291456]), new Uint32Array([0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 23068672, 23068672, 0, 0, 23068672, 23068672, 23068672, 6291456, 0]), new Uint32Array([2183361, 6291456, 2183393, 6291456, 2183425, 6291456, 2183457, 6291456, 2183489, 6291456, 2183521, 6291456, 2183553, 6291456, 2183585, 6291456]), new Uint32Array([2192161, 2192193, 2192225, 2192257, 2192289, 2192321, 2192353, 2192385, 2192417, 2192449, 2192481, 2192513, 2192545, 2192577, 2192609, 2192641]), new Uint32Array([2212001, 2212033, 2212065, 2212097, 2212129, 2212161, 2212193, 2212225, 2212257, 2212289, 2212321, 2212353, 2212385, 2212417, 2212449, 2207265]), new Uint32Array([2249825, 2249857, 2249889, 2249921, 2249954, 2250018, 2250082, 2250145, 2250177, 2250209, 2250241, 2250274, 2250337, 2250370, 2250433, 2250465]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2147905, 2147969, 2148033, 2148097, 2148161, 2148225, 2148289, 2148353]), new Uint32Array([10485857, 6291456, 2197217, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 23068672, 23068672]), new Uint32Array([0, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456]), new Uint32Array([2180353, 2180385, 2144033, 2180417, 2180449, 2180481, 2180513, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 10610209, 10610465, 10610241, 10610753, 10609857]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 0, 0]), new Uint32Array([2223842, 2223906, 2223970, 2224034, 2224098, 2224162, 2224226, 2224290, 2224354, 2224418, 2224482, 2224546, 2224610, 2224674, 2224738, 2224802]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 18923650, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 18923714, 23068672, 23068672]), new Uint32Array([2126179, 2125538, 2126275, 2126371, 2126467, 2125634, 2126563, 2105603, 2105604, 2125346, 2126659, 2126755, 2126851, 2098179, 2098181, 2098182]), new Uint32Array([2227426, 2227490, 2227554, 2227618, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2192353, 2240642, 2240642, 2240705, 2240737, 2240737, 2240769, 2240802, 2240866, 2240929, 2240961, 2240993, 2241025, 2241057, 2241089, 2241121]), new Uint32Array([6291456, 2170881, 2170913, 2170945, 6291456, 2170977, 6291456, 2171009, 2171041, 6291456, 6291456, 6291456, 2171073, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2132226, 2132514, 2163586, 2132610, 2160386, 2133090, 2133186, 2160450, 2160514, 2160578, 2133570, 2106178, 2160642, 2133858, 2160706, 2160770]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 10532162, 10532226, 10532290, 10532354, 10532418, 10532482, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 23068672]), new Uint32Array([2098209, 2108353, 2108193, 2108481, 2170241, 2111713, 2105473, 2105569, 2105601, 2112289, 2112481, 2098305, 2108321, 0, 0, 0]), new Uint32Array([2209121, 2209153, 2209185, 2209217, 2209249, 2209281, 2209313, 2209345, 2209377, 2209409, 2209441, 2209473, 2207265, 2209505, 2209537, 2209569]), new Uint32Array([2189025, 6291456, 2189057, 6291456, 2189089, 6291456, 2189121, 6291456, 2189153, 6291456, 2189185, 6291456, 2189217, 6291456, 2189249, 6291456]), new Uint32Array([2173825, 2153473, 2173857, 2173889, 2173921, 2173953, 2173985, 2173761, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2233057]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2165764, 2140004]), new Uint32Array([2215105, 6291456, 2215137, 6291456, 6291456, 2215169, 2215201, 6291456, 6291456, 6291456, 2215233, 2215265, 2215297, 2215329, 2215361, 2215393]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 6291456, 6291456, 6291456, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([10505091, 10505187, 10505283, 10505379, 10505475, 10505571, 10505667, 10505763, 10505859, 10505955, 10506051, 10506147, 10506243, 10506339, 10506435, 10506531]), new Uint32Array([2229730, 2229794, 2229858, 2229922, 2229986, 2230050, 2230114, 2230178, 2230242, 2230306, 2230370, 2230434, 2230498, 2230562, 2230626, 2230690]), new Uint32Array([2105505, 2098241, 2108353, 2108417, 2105825, 0, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193, 2112481, 2112577, 2098177]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 10502115, 10502178, 10502211, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456]), new Uint32Array([2190305, 6291456, 2190337, 6291456, 2190369, 6291456, 2190401, 6291456, 2190433, 6291456, 2190465, 6291456, 2190497, 6291456, 2190529, 6291456]), new Uint32Array([2173793, 2173985, 2174017, 6291456, 2173761, 2173697, 6291456, 2174689, 6291456, 2174017, 2174721, 6291456, 6291456, 2174753, 2174785, 2174817]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2099521, 2099105, 2120705, 2098369, 2120801, 2103361, 2097985, 2098433, 2121377, 2121473, 2099169, 2099873, 2098401, 2099393, 2152609, 2100033]), new Uint32Array([2132898, 2163842, 2163906, 2133282, 2132034, 2131938, 2137410, 2132802, 2132706, 2164866, 2133282, 2160578, 2165186, 2165186, 6291456, 6291456]), new Uint32Array([10500003, 10500099, 10500195, 10500291, 10500387, 10500483, 10500579, 10500675, 10500771, 10500867, 10500963, 10501059, 10501155, 10501251, 10501347, 10501443]), new Uint32Array([2163458, 2130978, 2131074, 2131266, 2131362, 2163522, 2160130, 2132066, 2131010, 2131106, 2106018, 2131618, 2131298, 2132034, 2131938, 2137410]), new Uint32Array([2212961, 2116993, 2212993, 2213025, 2213057, 2213089, 2213121, 2213153, 2213185, 2213217, 2213249, 2209633, 2213281, 2213313, 2213345, 2213377]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456]), new Uint32Array([2113729, 2113825, 2113921, 2114017, 2114113, 2114209, 2114305, 2114401, 2114497, 2114593, 2114689, 2114785, 2114881, 2114977, 2115073, 2115169]), new Uint32Array([2238177, 2238209, 2238241, 2238273, 2238305, 2238337, 2238337, 2217537, 2238369, 2238401, 2238433, 2238465, 2215649, 2238497, 2238529, 2238561]), new Uint32Array([2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905]), new Uint32Array([6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 0, 0]), new Uint32Array([6291456, 0, 6291456, 2145026, 0, 6291456, 2145090, 0, 6291456, 6291456, 0, 0, 23068672, 0, 23068672, 23068672]), new Uint32Array([2099233, 2122017, 2200673, 2098113, 2121537, 2103201, 2200705, 2104033, 2121857, 2121953, 2122401, 2099649, 2099969, 2123009, 2100129, 2100289]), new Uint32Array([6291456, 23068672, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0]), new Uint32Array([2187681, 2187713, 2187745, 2187777, 2187809, 2187841, 2187873, 2187905, 2187937, 2187969, 2188001, 2188033, 2188065, 2188097, 2188129, 2188161]), new Uint32Array([0, 10554498, 10554562, 10554626, 10554690, 10554754, 10554818, 10554882, 10554946, 10555010, 10555074, 6291456, 6291456, 0, 0, 0]), new Uint32Array([2235170, 2235234, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2181153, 6291456, 2188897, 6291456, 6291456, 2188929, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2111905, 2100865, 2188961, 2188993]), new Uint32Array([2100833, 2100897, 0, 0, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 10575617, 2187041, 10502177, 10489601, 10489697, 2112289]), new Uint32Array([6291456, 2172833, 6291456, 2172865, 2172897, 2172929, 2172961, 6291456, 2172993, 6291456, 2173025, 6291456, 2173057, 6291456, 2173089, 6291456]), new Uint32Array([6291456, 0, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 23068672, 6291456, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 2190721]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456]), new Uint32Array([2184993, 6291456, 2185025, 6291456, 2185057, 6291456, 2185089, 6291456, 2185121, 6291456, 2185153, 6291456, 2185185, 6291456, 2185217, 6291456]), new Uint32Array([2115265, 2115361, 2115457, 2115553, 2115649, 2115745, 2115841, 2115937, 2116033, 2116129, 2116225, 2116321, 2150658, 2150722, 2200225, 6291456]), new Uint32Array([2168321, 6291456, 2168353, 6291456, 2168385, 6291456, 2168417, 6291456, 2168449, 6291456, 2168481, 6291456, 2168513, 6291456, 2168545, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 0, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456, 0, 6291456, 0, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 2186625, 0, 0, 6291456, 6291456, 2186657, 2186689, 2186721, 2173505, 0, 10496067, 10496163, 10496259]), new Uint32Array([2178785, 6291456, 2178817, 6291456, 2178849, 6291456, 2178881, 6291456, 2178913, 6291456, 2178945, 6291456, 2178977, 6291456, 2179009, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0]), new Uint32Array([2097152, 0, 0, 0, 2097152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 0, 2197857, 2197889, 2197921, 2197953, 2197985, 2198017, 0, 0, 2198049, 2198081, 2198113, 2198145, 2198177, 2198209]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2098209, 2167297, 2111137, 6291456]), new Uint32Array([2171393, 6291456, 2171425, 6291456, 2171457, 6291456, 2171489, 6291456, 2171521, 6291456, 2171553, 6291456, 2171585, 6291456, 2171617, 6291456]), new Uint32Array([2206753, 2206785, 2195457, 2206817, 2206849, 2206881, 2206913, 2197153, 2197153, 2206945, 2117857, 2206977, 2207009, 2207041, 2207073, 2207105]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 23068672, 0, 0, 0, 0, 2144834, 2144898, 0, 2144962]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 23068672]), new Uint32Array([2108193, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 0, 2105505, 2098241]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 2202049, 6291456, 2202081, 6291456, 2202113, 6291456, 2202145, 6291456, 2202177, 6291456, 2202209, 6291456, 2202241, 6291456]), new Uint32Array([10501155, 10501251, 10501347, 10501443, 10501539, 10501635, 10501731, 10501827, 10501923, 10502019, 2141731, 2105505, 2098177, 2155586, 2166530, 0]), new Uint32Array([2102081, 2102209, 2100833, 2100737, 2098337, 2101441, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 2100833, 2100737, 2098337, 2101441]), new Uint32Array([2146882, 2146946, 2147010, 2147074, 2147138, 2147202, 2147266, 2147330, 2146882, 2146946, 2147010, 2147074, 2147138, 2147202, 2147266, 2147330]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0]), new Uint32Array([10502307, 10502403, 10502499, 10502595, 10502691, 10502787, 10502883, 10502979, 10503075, 10503171, 10503267, 10503363, 10503459, 10503555, 10503651, 10503747]), new Uint32Array([2179937, 2179969, 2180001, 2180033, 2156545, 2180065, 2156577, 2180097, 2180129, 2180161, 2180193, 2180225, 2180257, 2180289, 2156737, 2180321]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 0, 0, 0, 6291456, 0, 0, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0]), new Uint32Array([2227682, 2227746, 2227810, 2227874, 2227938, 2228002, 2228066, 2228130, 2228194, 2228258, 2228322, 2228386, 2228450, 2228514, 2228578, 2228642]), new Uint32Array([2105601, 2169121, 2108193, 2170049, 2181025, 2181057, 2112481, 2108321, 2108289, 2181089, 2170497, 2100865, 2181121, 2173601, 2173633, 2173665]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2180641, 6291456, 6291456, 6291456]), new Uint32Array([0, 6291456, 6291456, 6291456, 0, 6291456, 0, 6291456, 0, 0, 6291456, 6291456, 0, 6291456, 6291456, 6291456]), new Uint32Array([2178273, 6291456, 2178305, 6291456, 2178337, 6291456, 2178369, 6291456, 2178401, 6291456, 2178433, 6291456, 2178465, 6291456, 2178497, 6291456]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 23068672, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456]), new Uint32Array([2237377, 2237409, 2236225, 2237441, 2237473, 2217441, 2215521, 2215553, 2217473, 2237505, 2237537, 2209697, 2237569, 2215585, 2237601, 2237633]), new Uint32Array([2221985, 2165601, 2165601, 2165665, 2165665, 2222017, 2222017, 2165729, 2165729, 2158913, 2158913, 2158913, 2158913, 2097281, 2097281, 2105921]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2149634, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2176897, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 2176929, 6291456, 2176961, 6291456, 2176993, 6291456]), new Uint32Array([2172641, 6291456, 2172673, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2172705, 2172737, 6291456, 2172769, 2172801, 6291456]), new Uint32Array([2099173, 2104196, 2121667, 2099395, 2121763, 2152258, 2152322, 2098946, 2152386, 2121859, 2121955, 2099333, 2122051, 2104324, 2099493, 2122147]), new Uint32Array([6291456, 6291456, 6291456, 2145794, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 2145858, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 0, 0, 6291456, 0]), new Uint32Array([0, 2105921, 2097729, 0, 2097377, 0, 0, 2106017, 0, 2097505, 2105889, 2097185, 2097697, 2135777, 2097633, 2097441]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2239074, 2239138, 2239201, 2239233, 2239265, 2239297, 2239329, 2239361, 0, 2239393, 2239425, 2239425, 2239458, 2239521, 2239553, 2209569]), new Uint32Array([14680064, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 6291456, 23068672]), new Uint32Array([2108321, 2108289, 2113153, 2098209, 2180897, 2180929, 2180961, 2111137, 2098241, 2108353, 2170241, 2170273, 2180993, 2105825, 6291456, 2105473]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2146114, 6291456, 6291456, 6291456, 0, 0, 0]), new Uint32Array([2105921, 2105921, 2105921, 2222049, 2222049, 2130977, 2130977, 2130977, 2130977, 2160065, 2160065, 2160065, 2160065, 2097729, 2097729, 2097729]), new Uint32Array([2218145, 2214785, 2207937, 2218177, 2218209, 2192993, 2210113, 2212769, 2218241, 2218273, 2216129, 2218305, 2216161, 2218337, 2218369, 2218401]), new Uint32Array([0, 0, 0, 2156546, 2156610, 2156674, 2156738, 2156802, 0, 0, 0, 0, 0, 2156866, 23068672, 2156930]), new Uint32Array([23068672, 23068672, 23068672, 0, 0, 0, 0, 23068672, 23068672, 0, 0, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([2213409, 2213441, 2213473, 2213505, 2213537, 2213569, 2213601, 2213633, 2213665, 2195681, 2213697, 2213729, 2213761, 2213793, 2213825, 2213857]), new Uint32Array([2100033, 2099233, 2122017, 2200673, 2098113, 2121537, 2103201, 2200705, 2104033, 2121857, 2121953, 2122401, 2099649, 2099969, 2123009, 2100129]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2201857, 6291456, 2201889, 6291456, 2201921, 6291456, 2201953, 6291456, 2201985, 6291456, 2202017, 6291456, 2176193, 2176257, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2188193, 2188225, 2188257, 2188289, 2188321, 2188353, 2188385, 2188417, 2188449, 2188481, 2188513, 2188545, 2188577, 2188609, 2188641, 0]), new Uint32Array([10554529, 2221089, 0, 10502113, 10562017, 10537921, 10538049, 2221121, 2221153, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2213889, 2213921, 2213953, 2213985, 2214017, 2214049, 2214081, 2194177, 2214113, 2214145, 2214177, 2214209, 2214241, 2214273, 2214305, 2214337]), new Uint32Array([2166978, 2167042, 2099169, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2180545, 6291456, 6291456, 6291456]), new Uint32Array([10518915, 10519011, 10519107, 10519203, 2162242, 2162306, 2159554, 2162370, 2159362, 2159618, 2105922, 2162434, 2159746, 2162498, 2159810, 2159874]), new Uint32Array([2161730, 2161794, 2135586, 2161858, 2161922, 2137186, 2131810, 2160290, 2135170, 2161986, 2137954, 2162050, 2162114, 2162178, 10518723, 10518819]), new Uint32Array([10506627, 10506723, 10506819, 10506915, 10507011, 10507107, 10507203, 10507299, 10507395, 10507491, 10507587, 10507683, 10507779, 10507875, 10507971, 10508067]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 0, 0, 0, 0, 0, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0]), new Uint32Array([2175873, 2175905, 2175937, 2175969, 2176001, 2176033, 2176065, 2176097, 2176129, 2176161, 2176193, 2176225, 2176257, 2176289, 2176321, 2176353]), new Uint32Array([2140006, 2140198, 2140390, 2140582, 2140774, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672]), new Uint32Array([2108193, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 2105505, 2098241]), new Uint32Array([0, 23068672, 0, 0, 0, 0, 0, 0, 0, 2145154, 2145218, 2145282, 6291456, 0, 2145346, 0]), new Uint32Array([0, 0, 0, 0, 10531458, 10495395, 2148545, 2143201, 2173473, 2148865, 2173505, 0, 2173537, 0, 2173569, 2149121]), new Uint32Array([10537282, 10495683, 2148738, 2148802, 2148866, 0, 6291456, 2148930, 2186593, 2173473, 2148737, 2148865, 2148802, 10495779, 10495875, 10495971]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2215425, 2215457, 2215489, 2215521, 2215553, 2215585, 2215617, 2215649, 2215681, 2215713, 2215745, 2215777, 2192033, 2215809, 2215841, 2215873]), new Uint32Array([2242049, 2242081, 2242113, 2242145, 2242177, 2242209, 2242241, 2242273, 2215937, 2242305, 2242338, 2242401, 2242433, 2242465, 2242497, 2216001]), new Uint32Array([10554529, 2221089, 0, 0, 10562017, 10502113, 10538049, 10537921, 2221185, 10489601, 10489697, 10609889, 10609921, 2141729, 2141793, 10610273]), new Uint32Array([2141923, 2142019, 2142115, 2142211, 2142307, 2142403, 2142499, 2142595, 2142691, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([0, 2221185, 2221217, 10609857, 10609857, 10489601, 10489697, 10609889, 10609921, 2141729, 2141793, 2221345, 2221377, 2221409, 2221441, 2187105]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 18923970, 23068672, 23068672, 23068672, 0, 6291456, 6291456]), new Uint32Array([2183105, 6291456, 2183137, 6291456, 2183169, 6291456, 2183201, 6291456, 2183233, 6291456, 2183265, 6291456, 2183297, 6291456, 2183329, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2134434, 2134818, 2097666, 2097186, 2097474, 2097698, 2105986, 2131586, 2132450, 2131874, 2131778, 2135970, 2135778, 2161602, 2136162, 2161666]), new Uint32Array([2236865, 2236897, 2236930, 2236993, 2237025, 2235681, 2237058, 2237121, 2237153, 2237185, 2237217, 2217281, 2237250, 2191233, 2237313, 2237345]), new Uint32Array([2190049, 6291456, 2190081, 6291456, 2190113, 6291456, 2190145, 6291456, 2190177, 6291456, 2190209, 6291456, 2190241, 6291456, 2190273, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2101922, 2102050, 2102178, 2102306, 10498755, 10498851, 10498947, 10499043, 10499139, 10499235, 10499331, 10499427, 10499523, 10489604, 10489732, 10489860]), new Uint32Array([2166914, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0]), new Uint32Array([2181601, 2170561, 2181633, 2181665, 2170753, 2181697, 2172897, 2170881, 2181729, 2170913, 2172929, 2113441, 2181761, 2181793, 2171009, 2173761]), new Uint32Array([0, 2105921, 2097729, 2106081, 0, 2097601, 2162337, 2106017, 2133281, 2097505, 0, 2097185, 2097697, 2135777, 2097633, 2097441]), new Uint32Array([6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0]), new Uint32Array([2248001, 2248033, 2248066, 2248130, 2248193, 2248226, 2248289, 2248322, 2248385, 2248417, 2216673, 2248450, 2248514, 2248577, 2248610, 2248673]), new Uint32Array([6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 0, 0, 0]), new Uint32Array([2169729, 6291456, 2169761, 6291456, 2169793, 6291456, 2169825, 6291456, 2169857, 2169889, 6291456, 2169921, 6291456, 2143329, 6291456, 2098305]), new Uint32Array([2162178, 2163202, 2163266, 2135170, 2136226, 2161986, 2137954, 2159426, 2159490, 2163330, 2159554, 2163394, 2159682, 2139522, 2136450, 2159746]), new Uint32Array([2173953, 2173985, 0, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2174209, 2174241, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 4271169, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2174273]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 6291456, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 2190785, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2189793, 6291456, 2189825, 6291456, 2189857, 6291456, 2189889, 6291456, 2189921, 6291456, 2189953, 6291456, 2189985, 6291456, 2190017, 6291456]), new Uint32Array([2105601, 2112289, 2108193, 2112481, 2112577, 0, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 0, 2098209, 2111137]), new Uint32Array([2172129, 6291456, 2172161, 6291456, 2172193, 6291456, 2172225, 6291456, 2172257, 6291456, 2172289, 6291456, 2172321, 6291456, 2172353, 6291456]), new Uint32Array([2214753, 6291456, 2214785, 6291456, 6291456, 2214817, 2214849, 2214881, 2214913, 2214945, 2214977, 2215009, 2215041, 2215073, 2194401, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([0, 0, 0, 0, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([10610305, 10610337, 10575617, 2221761, 10610401, 10610433, 10502177, 0, 10610465, 10610497, 10610529, 10610561, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 23068672, 0, 0, 0, 0, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2187105, 2187137, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2199393, 2199425, 2199457, 2199489, 2199521, 2199553, 2199585, 2199617, 2199649, 2199681, 2199713, 2199745, 2199777, 2199809, 2199841, 0]), new Uint32Array([2217249, 2217281, 2217313, 2217345, 2217377, 2217409, 2217441, 2217473, 2215617, 2217505, 2217537, 2217569, 2214753, 2217601, 2217633, 2217665]), new Uint32Array([2170273, 2170305, 6291456, 2170337, 2170369, 6291456, 2170401, 2170433, 2170465, 6291456, 6291456, 6291456, 2170497, 2170529, 6291456, 2170561]), new Uint32Array([2188673, 6291456, 2188705, 2188737, 2188769, 6291456, 6291456, 2188801, 6291456, 2188833, 6291456, 2188865, 6291456, 2180929, 2181505, 2180897]), new Uint32Array([10489988, 10490116, 10490244, 10490372, 10490500, 10490628, 10490756, 10490884, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2147393, 2147457, 2147521, 2147585, 2147649, 2147713, 2147777, 2147841]), new Uint32Array([23068672, 23068672, 0, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0]), new Uint32Array([2241153, 2241185, 2241217, 2215809, 2241250, 2241313, 2241345, 2241377, 2217921, 2241377, 2241409, 2215873, 2241441, 2241473, 2241505, 2241537]), new Uint32Array([23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2220417, 2220417, 2220449, 2220449, 2220481, 2220481, 2220513, 2220513, 2220545, 2220545, 2220577, 2220577, 2220609, 2220609, 2220641, 2220641]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2144002, 0, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456]), new Uint32Array([2167105, 2167137, 2167169, 2167201, 2167233, 2167265, 2167297, 2167329, 2167361, 2167393, 2167425, 2167457, 2167489, 2167521, 2167553, 2167585]), new Uint32Array([10575521, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193]), new Uint32Array([2234146, 2234210, 2234274, 2234338, 2234402, 2234466, 2234530, 2234594, 2234658, 2234722, 2234786, 2234850, 2234914, 2234978, 2235042, 2235106]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 2180577, 0, 0, 0, 0, 0, 2180609, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 6291456, 6291456]), new Uint32Array([2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193, 2112481]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2242529, 2242561, 2242593, 2242625, 2242657, 2242689, 2242721, 2242753, 2207937, 2218177, 2242785, 2242817, 2242849, 2242882, 2242945, 2242977]), new Uint32Array([2118049, 2105345, 2118241, 2105441, 2118433, 2118529, 2118625, 2118721, 2118817, 2200257, 2200289, 2191809, 2200321, 2200353, 2200385, 2200417]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0]), new Uint32Array([2185505, 6291456, 2185537, 6291456, 2185569, 6291456, 2185601, 6291456, 2185633, 6291456, 2185665, 6291456, 2185697, 6291456, 2185729, 6291456]), new Uint32Array([2231970, 2232034, 2232098, 2232162, 2232226, 2232290, 2232354, 2232418, 2232482, 2232546, 2232610, 2232674, 2232738, 2232802, 2232866, 2232930]), new Uint32Array([2218625, 2246402, 2246466, 2246530, 2246594, 2246657, 2246689, 2246689, 2218657, 2219681, 2246721, 2246753, 2246785, 2246818, 2246881, 2208481]), new Uint32Array([2197025, 2197057, 2197089, 2197121, 2197153, 2197185, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2219137, 2216961, 2219169, 2219201, 2219233, 2219265, 2219297, 2217025, 2215041, 2219329, 2217057, 2219361, 2217089, 2219393, 2197153, 2219426]), new Uint32Array([23068672, 23068672, 23068672, 0, 0, 0, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713]), new Uint32Array([2243522, 2243585, 2243617, 2243649, 2243681, 2210113, 2243713, 2243746, 2243810, 2243874, 2243937, 2243970, 2244033, 2244065, 2244097, 2244129]), new Uint32Array([2178017, 6291456, 2178049, 6291456, 2178081, 6291456, 2178113, 6291456, 2178145, 6291456, 2178177, 6291456, 2178209, 6291456, 2178241, 6291456]), new Uint32Array([10553858, 2165314, 10518722, 6291456, 10518818, 0, 10518914, 2130690, 10519010, 2130786, 10519106, 2130882, 10519202, 2165378, 10554050, 2165506]), new Uint32Array([0, 0, 2135491, 2135587, 2135683, 2135779, 2135875, 2135971, 2135971, 2136067, 2136163, 2136259, 2136355, 2136355, 2136451, 2136547]), new Uint32Array([23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2220033, 2220033, 2220065, 2220065, 2220065, 2220065, 2220097, 2220097, 2220097, 2220097, 2220129, 2220129, 2220129, 2220129, 2220161, 2220161]), new Uint32Array([6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2100897, 2100898, 2100899, 2150018, 2100865, 2100866, 2100867, 2100868, 2150082, 2108481, 2109858, 2109859, 2105569, 2105505, 2098241, 2105601]), new Uint32Array([2097217, 2097505, 2097505, 2097505, 2097505, 2165570, 2165570, 2165634, 2165634, 2165698, 2165698, 2097858, 2097858, 0, 0, 2097152]), new Uint32Array([23068672, 6291456, 23068672, 23068672, 23068672, 6291456, 6291456, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0]), new Uint32Array([10503843, 10503939, 10504035, 10504131, 10504227, 10504323, 10504419, 10504515, 10504611, 10504707, 10504803, 10504899, 10504995, 10491140, 10491268, 0]), new Uint32Array([2173697, 2173729, 2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889, 2173921, 2173953, 2173985, 2173761, 2174017, 2174049]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2134145, 2097153, 2134241, 2105953, 2132705, 2130977, 2160065, 2131297, 2162049, 2133089, 2160577, 2133857, 2235297, 2220769, 2235329, 2235361]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2222401, 2222433, 2222465, 10531394, 2222497, 2222529, 2222561, 0, 2222593, 2222625, 2222657, 2222689, 2222721, 2222753, 2222785, 0]), new Uint32Array([2184481, 6291456, 2184513, 6291456, 2184545, 6291456, 2184577, 6291456, 2184609, 6291456, 2184641, 6291456, 2184673, 6291456, 2184705, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2105570, 2156034, 2126947, 2156098, 2153666, 2127043, 2127139, 2156162, 0, 2127235, 2156226, 2156290, 2156354, 2156418, 2127331, 2127427]), new Uint32Array([2215905, 2207041, 2153185, 2241569, 2241601, 2241633, 2241665, 2241697, 2241730, 2241793, 2241825, 2241857, 2241889, 2241921, 2241954, 2242017]), new Uint32Array([2203777, 6291456, 2203809, 6291456, 2203841, 6291456, 2203873, 6291456, 2203905, 6291456, 2173121, 2180993, 2181249, 2203937, 2181313, 0]), new Uint32Array([2168577, 6291456, 2168609, 6291456, 2168641, 6291456, 2168673, 6291456, 2168705, 6291456, 2168737, 6291456, 2168769, 6291456, 2168801, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 23068672, 23068672, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([2210113, 2195521, 2210145, 2210177, 2210209, 2210241, 2210273, 2210305, 2210337, 2210369, 2210401, 2210433, 2210465, 2210497, 2210529, 2210561]), new Uint32Array([6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0]), new Uint32Array([2228706, 2228770, 2228834, 2228898, 2228962, 2229026, 2229090, 2229154, 2229218, 2229282, 2229346, 2229410, 2229474, 2229538, 2229602, 2229666]), new Uint32Array([23068672, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 18874368, 18874368, 18874368, 0, 0]), new Uint32Array([2133089, 2133281, 2133281, 2133281, 2133281, 2160577, 2160577, 2160577, 2160577, 2097441, 2097441, 2097441, 2097441, 2133857, 2133857, 2133857]), new Uint32Array([6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2173825, 2153473, 2173857, 2173889, 2173921, 2173953, 2173985, 2174017, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2233089]), new Uint32Array([2178529, 6291456, 2178561, 6291456, 2178593, 6291456, 2178625, 6291456, 2178657, 6291456, 2178689, 6291456, 2178721, 6291456, 2178753, 6291456]), new Uint32Array([2221025, 2221025, 2221057, 2221057, 2159329, 2159329, 2159329, 2159329, 2097217, 2097217, 2158914, 2158914, 2158978, 2158978, 2159042, 2159042]), new Uint32Array([2208161, 2208193, 2208225, 2208257, 2194433, 2208289, 2208321, 2208353, 2208385, 2208417, 2208449, 2208481, 2208513, 2208545, 2208577, 2208609]), new Uint32Array([2169217, 6291456, 2169249, 6291456, 2169281, 6291456, 2169313, 6291456, 2169345, 6291456, 2169377, 6291456, 2169409, 6291456, 2169441, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2133187, 2133283, 2133283, 2133379, 2133475, 2133571, 2133667, 2133667, 2133763, 2133859, 2133955, 2134051, 2134147, 2134147, 2134243, 2134339]), new Uint32Array([2197697, 2114113, 2114209, 2197729, 2197761, 2114305, 2197793, 2114401, 2114497, 2197825, 2114593, 2114689, 2114785, 2114881, 2114977, 0]), new Uint32Array([2193089, 2193121, 2193153, 2193185, 2117665, 2117569, 2193217, 2193249, 2193281, 2193313, 2193345, 2193377, 2193409, 2193441, 2193473, 2193505]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2184225, 6291456, 2184257, 6291456, 2184289, 6291456, 2184321, 6291456, 2184353, 6291456, 2184385, 6291456, 2184417, 6291456, 2184449, 6291456]), new Uint32Array([2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2100833, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2098657, 2098049, 2200737, 2123489, 2123681, 2200769, 2098625, 2100321, 2098145, 2100449, 2098017, 2098753, 2200801, 2200833, 2200865, 0]), new Uint32Array([23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0]), new Uint32Array([2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 0, 2098241, 2108353, 2108417, 2105825, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2181153, 2105505, 2181185, 2167617, 2180993]), new Uint32Array([2160002, 2160066, 2160130, 2160194, 2160258, 2132066, 2131010, 2131106, 2106018, 2131618, 2160322, 2131298, 2132034, 2131938, 2137410, 2132226]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456]), new Uint32Array([2183617, 6291456, 2183649, 6291456, 2183681, 6291456, 2183713, 6291456, 2183745, 6291456, 2183777, 6291456, 2183809, 6291456, 2183841, 6291456]), new Uint32Array([0, 6291456, 6291456, 0, 6291456, 0, 0, 6291456, 6291456, 0, 6291456, 0, 0, 6291456, 0, 0]), new Uint32Array([2250977, 2251009, 2251041, 2251073, 2195009, 2251106, 2251169, 2251201, 2251233, 2251265, 2251297, 2251330, 2251394, 2251457, 2251489, 2251521]), new Uint32Array([2205729, 2205761, 2205793, 2205825, 2205857, 2205889, 2205921, 2205953, 2205985, 2206017, 2206049, 2206081, 2206113, 2206145, 2206177, 2206209]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2143170, 2168993, 6291456, 2169025, 6291456, 2169057, 6291456, 2169089, 6291456, 2143234, 2169121, 6291456, 2169153, 6291456, 2169185, 6291456]), new Uint32Array([23068672, 23068672, 2190689, 6291456, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2248706, 2248769, 2248801, 2248833, 2248865, 2248897, 2248929, 2248962, 2249026, 2249090, 2249154, 2240705, 2249217, 2249249, 2249281, 2249313]), new Uint32Array([10485857, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 10495394, 6291456, 2098209, 6291456, 6291456, 2097152, 6291456, 10531394]), new Uint32Array([0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0]), new Uint32Array([14680064, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2173985, 2173953, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889]), new Uint32Array([6291456, 2186977, 6291456, 6291456, 6291456, 6291456, 6291456, 10537858, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2209601, 2209633, 2209665, 2209697, 2209729, 2209761, 2209793, 2209825, 2209857, 2209889, 2209921, 2209953, 2209985, 2210017, 2210049, 2210081]), new Uint32Array([10501539, 10501635, 10501731, 10501827, 10501923, 10502019, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905]), new Uint32Array([2173697, 2173729, 2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889, 2173921, 2173953, 2173985, 2174017, 2174017, 2174049]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 0, 0]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2194561, 2194593, 2194625, 2119777, 2119873, 2194657, 2194689, 2194721, 2194753, 2194785, 2194817, 2194849, 2194881, 2194913, 2194945, 2194977]), new Uint32Array([2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569]), new Uint32Array([2222818, 2222882, 2222946, 2223010, 2223074, 2223138, 2223202, 2223266, 2223330, 2223394, 2223458, 2223522, 2223586, 2223650, 2223714, 2223778]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672]), new Uint32Array([0, 2179553, 2179585, 2179617, 2179649, 2144001, 2179681, 2179713, 2179745, 2179777, 2179809, 2156705, 2179841, 2156833, 2179873, 2179905]), new Uint32Array([6291456, 23068672, 6291456, 2145602, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 6291456, 0, 0]), new Uint32Array([2196513, 2196545, 2196577, 2196609, 2196641, 2196673, 2196705, 2196737, 2196769, 2196801, 2196833, 2196865, 2196897, 2196929, 2196961, 2196993]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2177281, 6291456, 2177313, 6291456, 2177345, 6291456, 2177377, 6291456, 2177409, 6291456, 2177441, 6291456, 2177473, 6291456, 2177505, 6291456]), new Uint32Array([2187137, 2221473, 2221505, 2221537, 2221569, 6291456, 6291456, 10610209, 10610241, 10537986, 10537986, 10537986, 10537986, 10609857, 10609857, 10609857]), new Uint32Array([2243009, 2243041, 2216033, 2243074, 2243137, 2243169, 2243201, 2219617, 2243233, 2243265, 2243297, 2243329, 2243362, 2243425, 2243457, 2243489]), new Uint32Array([10485857, 10485857, 10485857, 10485857, 10485857, 10485857, 10485857, 10485857, 10485857, 10485857, 10485857, 2097152, 4194304, 4194304, 0, 0]), new Uint32Array([2143042, 6291456, 2143106, 2143106, 2168833, 6291456, 2168865, 6291456, 6291456, 2168897, 6291456, 2168929, 6291456, 2168961, 6291456, 2143170]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2204193, 2204225, 2204257, 2204289, 2204321, 2204353, 2204385, 2204417, 2204449, 2204481, 2204513, 2204545, 2204577, 2204609, 2204641, 2204673]), new Uint32Array([2202753, 6291456, 2202785, 6291456, 2202817, 6291456, 2202849, 6291456, 2202881, 6291456, 2202913, 6291456, 2202945, 6291456, 2202977, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193, 2112481, 2112577, 2098177, 2098305, 2108321]), new Uint32Array([2147394, 2147458, 2147522, 2147586, 2147650, 2147714, 2147778, 2147842, 2147394, 2147458, 2147522, 2147586, 2147650, 2147714, 2147778, 2147842]), new Uint32Array([2253313, 2253346, 2253409, 2253441, 2253473, 2253505, 2253537, 2253569, 2253601, 2253634, 2219393, 2253697, 2253729, 2253761, 2253793, 2253825]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([2162562, 2162626, 2131362, 2162690, 2159938, 2160002, 2162754, 2162818, 2160130, 2162882, 2160194, 2160258, 2160834, 2160898, 2161026, 2161090]), new Uint32Array([2175361, 2175393, 2175425, 2175457, 2175489, 2175521, 2175553, 2175585, 2175617, 2175649, 2175681, 2175713, 2175745, 2175777, 2175809, 2175841]), new Uint32Array([2253858, 2253921, 2253954, 2254018, 2254082, 2196737, 2254145, 2196865, 2254177, 2254209, 2254241, 2254273, 2197025, 2254306, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2202113, 2204129, 2188705, 2204161]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 0, 0]), new Uint32Array([2173985, 2174017, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2233089, 2173697, 2173761, 2173793, 2174113, 2173985, 2173953]), new Uint32Array([2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 2100833, 2100737, 2098337, 2101441, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209]), new Uint32Array([2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 2105505, 2098241, 0, 2108417, 0, 2111713, 2100897, 2111905]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2175425, 2175489, 2175809, 2175905, 2175937, 2175937, 2176193, 2176417, 2180865, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 2143298, 2143298, 2143298, 2143362, 2143362, 2143362, 2143426, 2143426, 2143426, 2171105, 6291456, 2171137]), new Uint32Array([2120162, 2120258, 2151618, 2151682, 2151746, 2151810, 2151874, 2151938, 2152002, 2120035, 2120131, 2120227, 2152066, 2120323, 2152130, 2120419]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2195361, 2142433, 2236065, 2236097, 2236129, 2236161, 2118241, 2117473, 2236193, 2236225, 2236257, 2236289, 0, 0, 0, 0]), new Uint32Array([2189281, 6291456, 2189313, 6291456, 2189345, 6291456, 2189377, 6291456, 2189409, 6291456, 2189441, 6291456, 2189473, 6291456, 2189505, 6291456]), new Uint32Array([6291456, 6291456, 2145922, 6291456, 6291456, 6291456, 6291456, 2145986, 6291456, 6291456, 6291456, 6291456, 2146050, 6291456, 6291456, 6291456]), new Uint32Array([2100833, 2100737, 2098337, 2101441, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 10502113, 10562017, 10610401, 10502177, 10610433, 10538049]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 2186401, 0, 2186433, 0, 2186465, 0, 2186497]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 23068672, 23068672, 23068672]), new Uint32Array([0, 0, 2198241, 2198273, 2198305, 2198337, 2198369, 2198401, 0, 0, 2198433, 2198465, 2198497, 0, 0, 0]), new Uint32Array([6291456, 0, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 23068672, 6291456, 23068672, 23068672]), new Uint32Array([0, 2105921, 2097729, 0, 2097377, 0, 0, 2106017, 2133281, 2097505, 2105889, 0, 2097697, 2135777, 2097633, 2097441]), new Uint32Array([2197889, 2197921, 2197953, 2197985, 2198017, 2198049, 2198081, 2198113, 2198145, 2198177, 2198209, 2198241, 2198273, 2198305, 2198337, 2198369]), new Uint32Array([2132514, 2132610, 2160386, 2133090, 2133186, 2160450, 2160514, 2133282, 2160578, 2133570, 2106178, 2160642, 2133858, 2160706, 2160770, 2134146]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 23068672, 23068672, 6291456, 23068672, 23068672, 6291456, 23068672, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2184737, 6291456, 2184769, 6291456, 2184801, 6291456, 2184833, 6291456, 2184865, 6291456, 2184897, 6291456, 2184929, 6291456, 2184961, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 0, 6291456]), new Uint32Array([6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 23068672, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 2186753, 6291456, 6291456, 6291456, 6291456, 2186785, 2186817, 2186849, 2173569, 2186881, 10496355, 10495395, 10575521]), new Uint32Array([0, 0, 2097729, 0, 0, 0, 0, 2106017, 0, 2097505, 0, 2097185, 0, 2135777, 2097633, 2097441]), new Uint32Array([2189537, 6291456, 2189569, 6291456, 2189601, 6291456, 2189633, 6291456, 2189665, 6291456, 2189697, 6291456, 2189729, 6291456, 2189761, 6291456]), new Uint32Array([2202497, 6291456, 2202529, 6291456, 2202561, 6291456, 2202593, 6291456, 2202625, 6291456, 2202657, 6291456, 2202689, 6291456, 2202721, 6291456]), new Uint32Array([2245217, 2218369, 2245249, 2245282, 2245345, 2245377, 2245410, 2245474, 2245537, 2245569, 2245601, 2245633, 2245665, 2245665, 2245697, 2245729]), new Uint32Array([6291456, 0, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 0, 0, 0, 0, 0, 0, 23068672, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 23068672, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672]), new Uint32Array([0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2097281, 2105921, 2097729, 2106081, 2097377, 2097601, 2162337, 2106017, 2133281, 2097505, 0, 2097185, 2097697, 2135777, 2097633, 2097441]), new Uint32Array([2176641, 6291456, 2176673, 6291456, 2176705, 6291456, 2176737, 6291456, 2176769, 6291456, 2176801, 6291456, 2176833, 6291456, 2176865, 6291456]), new Uint32Array([2174145, 2174177, 2149057, 2233089, 2173697, 2173761, 2173793, 2174113, 2173985, 2173953, 2174369, 2174369, 0, 0, 2100833, 2100737]), new Uint32Array([2116513, 2190817, 2190849, 2190881, 2190913, 2190945, 2116609, 2190977, 2191009, 2191041, 2191073, 2117185, 2191105, 2191137, 2191169, 2191201]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456]), new Uint32Array([0, 0, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456]), new Uint32Array([2167617, 2167649, 2167681, 2167713, 2167745, 2167777, 2167809, 6291456, 2167841, 2167873, 2167905, 2167937, 2167969, 2168001, 2168033, 4240130]), new Uint32Array([2165122, 2163970, 2164034, 2164098, 2164162, 2164226, 2164290, 2164354, 2164418, 2164482, 2164546, 2133122, 2134562, 2132162, 2132834, 2136866]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 2186209, 2186241, 2186273, 2186305, 2186337, 2186369, 0, 0]), new Uint32Array([2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 14680064, 14680064, 14680064, 14680064, 14680064]), new Uint32Array([0, 0, 23068672, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456]), new Uint32Array([0, 10537921, 10610689, 10610273, 10610497, 10610529, 10610305, 10610721, 10489601, 10489697, 10610337, 10575617, 10554529, 2221761, 2197217, 10496577]), new Uint32Array([2105473, 2105569, 2105601, 2112289, 0, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441]), new Uint32Array([2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481]), new Uint32Array([2125346, 2153410, 2153474, 2127394, 2153538, 2153602, 2153666, 2153730, 2105507, 2105476, 2153794, 2153858, 2153922, 2153986, 2154050, 2105794]), new Uint32Array([2200449, 2119681, 2200481, 2153313, 2199873, 2199905, 2199937, 2200513, 2200545, 2200577, 2200609, 2119105, 2119201, 2119297, 2119393, 2119489]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2175777, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2222273, 2197217, 2221473, 2221505, 2221089, 2222305, 2200865, 2099681, 2104481, 2222337, 2099905, 2120737, 2222369, 2103713, 2100225, 2098785]), new Uint32Array([2201377, 6291456, 2201409, 6291456, 2201441, 6291456, 2201473, 6291456, 2201505, 6291456, 2201537, 6291456, 2201569, 6291456, 6291456, 23068672]), new Uint32Array([2174081, 2174113, 2174145, 2174177, 2149057, 2233057, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761, 2143969, 2173793]), new Uint32Array([2200897, 6291456, 2200929, 6291456, 2200961, 6291456, 2200993, 6291456, 2201025, 6291456, 2180865, 6291456, 2201057, 6291456, 2201089, 6291456]), new Uint32Array([0, 0, 0, 0, 0, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0]), new Uint32Array([2161154, 2161410, 2138658, 2161474, 2161538, 2097666, 2097186, 2097474, 2162946, 2132450, 2163010, 2163074, 2136162, 2163138, 2161666, 2161730]), new Uint32Array([2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889, 2173921, 2173953]), new Uint32Array([0, 0, 0, 0, 0, 0, 23068672, 23068672, 0, 0, 0, 0, 2145410, 2145474, 0, 6291456]), new Uint32Array([2244161, 2216065, 2212769, 2244193, 2244225, 2244257, 2244290, 2244353, 2244385, 2244417, 2244449, 2218273, 2244481, 2244514, 2244577, 2244609]), new Uint32Array([2125730, 2125699, 2125795, 2125891, 2125987, 2154114, 2154178, 2154242, 2154306, 2154370, 2154434, 2154498, 2126082, 2126178, 2126274, 2126083]), new Uint32Array([2237665, 2237697, 2237697, 2237697, 2237730, 2237793, 2237825, 2237857, 2237890, 2237953, 2237985, 2238017, 2238049, 2238081, 2238113, 2238145]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2150146, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 23068672, 23068672, 0, 0, 23068672, 23068672, 23068672, 0, 0]), new Uint32Array([2214369, 2238593, 2238625, 2238657, 2238689, 2238721, 2238753, 2238785, 2238817, 2238850, 2238913, 2238945, 2238977, 2235457, 2239009, 2239041]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0]), new Uint32Array([2252066, 2252130, 2252193, 2252225, 2252257, 2252290, 2252353, 2252385, 2252417, 2252449, 2252481, 2252513, 2252545, 2252578, 2252641, 2252673]), new Uint32Array([2197697, 2114113, 2114209, 2197729, 2197761, 2114305, 2197793, 2114401, 2114497, 2197825, 2114593, 2114689, 2114785, 2114881, 2114977, 2197857]), new Uint32Array([2224866, 2224930, 2224994, 2225058, 2225122, 2225186, 2225250, 2225314, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2219490, 2219554, 2219617, 2219649, 2219681, 2219714, 2219778, 2219842, 2219905, 2219937, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456]), new Uint32Array([2113345, 2113441, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289]), new Uint32Array([2174081, 2174113, 2174145, 2174177, 2149057, 2233089, 2173697, 2173761, 2173793, 2174113, 2173985, 2173953, 2148481, 2173601, 2173633, 2173665]), new Uint32Array([2220161, 2220161, 2220193, 2220193, 2220193, 2220193, 2220225, 2220225, 2220225, 2220225, 2220257, 2220257, 2220257, 2220257, 2220289, 2220289]), new Uint32Array([2192673, 2192705, 2192737, 2192769, 2192801, 2192833, 2192865, 2118049, 2192897, 2117473, 2117761, 2192929, 2192961, 2192993, 2193025, 2193057]), new Uint32Array([2179297, 6291456, 2179329, 6291456, 2179361, 6291456, 2179393, 6291456, 2179425, 6291456, 2179457, 6291456, 2179489, 6291456, 2179521, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2235745, 2235777, 2193633, 2235809, 2235841, 2235873, 2235905, 2235937, 2235969, 2116513, 2116705, 2236001, 2200513, 2199905, 2200545, 2236033]), new Uint32Array([2113153, 2108481, 2113345, 2113441, 2232993, 2233025, 0, 0, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761]), new Uint32Array([2170593, 6291456, 2170625, 6291456, 2170657, 6291456, 2170689, 2170721, 6291456, 2170753, 6291456, 6291456, 2170785, 6291456, 2170817, 2170849]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2166786, 2166850, 0, 0, 0, 0]), new Uint32Array([23068672, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456]), new Uint32Array([2100833, 2100737, 2098337, 2101441, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 10575617, 2187041, 10502177, 10489601, 10489697, 0]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2134562, 2132162, 2132834, 2136866, 2136482, 2164610, 2164674, 2164738, 2164802, 2132802, 2132706, 2164866, 2132898, 2164930, 2164994, 2165058]), new Uint32Array([6291456, 6291456, 2098337, 2101441, 10531458, 2153473, 6291456, 6291456, 10531522, 2100737, 2108193, 6291456, 2106499, 2106595, 2106691, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2233122, 2233186, 2233250, 2233314, 2233378, 2233442, 2233506, 2233570, 2233634, 2233698, 2233762, 2233826, 2233890, 2233954, 2234018, 2234082]), new Uint32Array([23068672, 6291456, 23068672, 23068672, 23068672, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2205217, 2205249, 2205281, 2205313, 2205345, 2205377, 2205409, 2205441, 2205473, 2205505, 2205537, 2205569, 2205601, 2205633, 2205665, 2205697]), new Uint32Array([6291456, 0, 6291456, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 0, 0, 23068672, 6291456, 23068672, 23068672]), new Uint32Array([2173601, 2173761, 2174081, 2173569, 2174241, 2174113, 2173953, 6291456, 2174305, 6291456, 2174337, 6291456, 2174369, 6291456, 2174401, 6291456]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456]), new Uint32Array([2152450, 2152514, 2099653, 2104452, 2099813, 2122243, 2099973, 2152578, 2122339, 2122435, 2122531, 2122627, 2122723, 2104580, 2122819, 2152642]), new Uint32Array([2236385, 2236417, 2236449, 2236482, 2236545, 2215425, 2236577, 2236609, 2236641, 2236673, 2215457, 2236705, 2236737, 2236770, 2215489, 2236833]), new Uint32Array([2163394, 2159746, 2163458, 2131362, 2163522, 2160130, 2163778, 2132226, 2163842, 2132898, 2163906, 2161410, 2138658, 2097666, 2136162, 2163650]), new Uint32Array([2218721, 2246913, 2246946, 2216385, 2247010, 2247074, 2215009, 2247137, 2247169, 2216481, 2247201, 2247233, 2247266, 2247330, 2247330, 0]), new Uint32Array([2129730, 2129762, 2129858, 2129731, 2129827, 2156482, 2156482, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 0, 0, 0, 0, 0, 6291456, 0, 0]), new Uint32Array([2203969, 2204001, 2181377, 2204033, 2204065, 6291456, 2204097, 6291456, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2169473, 6291456, 2169505, 6291456, 2169537, 6291456, 2169569, 6291456, 2169601, 6291456, 2169633, 6291456, 2169665, 6291456, 2169697, 6291456]), new Uint32Array([2141542, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2220801, 2220801, 2220801, 2220801, 2220833, 2220833, 2220865, 2220865, 2220865, 2220865, 2220897, 2220897, 2220897, 2220897, 2139873, 2139873]), new Uint32Array([0, 0, 0, 0, 0, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 6291456, 0]), new Uint32Array([2214849, 2218433, 2218465, 2218497, 2218529, 2218561, 2214881, 2218593, 2218625, 2218657, 2218689, 2218721, 2218753, 2216545, 2218785, 2218817]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6291456]), new Uint32Array([2136482, 2164610, 2164674, 2164738, 2164802, 2132802, 2132706, 2164866, 2132898, 2164930, 2164994, 2165058, 2165122, 2132802, 2132706, 2164866]), new Uint32Array([2207649, 2207681, 2207713, 2207745, 2207777, 2207809, 2207841, 2207873, 2207905, 2207937, 2207969, 2208001, 2208033, 2208065, 2208097, 2208129]), new Uint32Array([2123683, 2105092, 2152706, 2123779, 2105220, 2152770, 2100453, 2098755, 2123906, 2124002, 2124098, 2124194, 2124290, 2124386, 2124482, 2124578]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 0, 0, 0, 0, 0, 0, 0, 10485857]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([10508163, 10508259, 10508355, 10508451, 2200129, 2200161, 2192737, 2200193, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2203553, 6291456, 2203585, 6291456, 6291456, 6291456, 2203617, 6291456, 2203649, 6291456, 2203681, 6291456, 2203713, 6291456, 2203745, 6291456]), new Uint32Array([18884449, 18884065, 23068672, 18884417, 18884034, 18921185, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 18874368]), new Uint32Array([2247393, 2247426, 2247489, 2247521, 2247553, 2247586, 2247649, 2247681, 2247713, 2247745, 2247777, 2247810, 2247873, 2247905, 2247937, 2247969]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 23068672]), new Uint32Array([2134145, 2097153, 2134241, 0, 2132705, 2130977, 2160065, 2131297, 0, 2133089, 2160577, 2133857, 2235297, 0, 2235329, 0]), new Uint32Array([2182593, 6291456, 2182625, 6291456, 2182657, 6291456, 2182689, 6291456, 2182721, 6291456, 2182753, 6291456, 2182785, 6291456, 2182817, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2102402, 2102403, 6291456, 2110050]), new Uint32Array([2149890, 2108323, 2149954, 6291456, 2113441, 6291456, 2149057, 6291456, 2113441, 6291456, 2105473, 2167265, 2111137, 2105505, 6291456, 2108353]), new Uint32Array([2219105, 2219137, 2195233, 2251554, 2251617, 2251649, 2251681, 2251713, 2251746, 2251810, 2251873, 2251905, 2251937, 2251970, 2252033, 2219169]), new Uint32Array([2203009, 6291456, 2203041, 6291456, 2203073, 6291456, 2203105, 6291456, 2203137, 6291456, 2203169, 6291456, 2203201, 6291456, 2203233, 6291456]), new Uint32Array([2128195, 2128291, 2128387, 2128483, 2128579, 2128675, 2128771, 2128867, 2128963, 2129059, 2129155, 2129251, 2129347, 2129443, 2129539, 2129635]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2140964, 2141156, 2140966, 2141158, 2141350]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2225378, 2225442, 2225506, 2225570, 2225634, 2225698, 2225762, 2225826, 2225890, 2225954, 2226018, 2226082, 2226146, 2226210, 2226274, 2226338]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417]), new Uint32Array([2108353, 2108417, 0, 2105601, 2108193, 2157121, 2157313, 2157377, 2157441, 2100897, 6291456, 2108419, 2173953, 2173633, 2173633, 2173953]), new Uint32Array([2111713, 2173121, 2111905, 2098177, 2173153, 2173185, 2173217, 2113153, 2113345, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 2190753]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2197249, 6291456, 2117377, 2197281, 2197313, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 0, 0, 0, 0, 0, 0, 23068672, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456]), new Uint32Array([2098337, 2101441, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 2100833, 2100737, 2098337, 2101441, 2101569, 2101697, 2101825, 2101953]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0]), new Uint32Array([0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 23068672, 23068672, 23068672]), new Uint32Array([2173281, 6291456, 2173313, 6291456, 2173345, 6291456, 2173377, 6291456, 0, 0, 10532546, 6291456, 6291456, 6291456, 10562017, 2173441]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 0, 0]), new Uint32Array([23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2159426, 2159490, 2159554, 2159362, 2159618, 2159682, 2139522, 2136450, 2159746, 2159810, 2159874, 2130978, 2131074, 2131266, 2131362, 2159938]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2203233, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2203265, 6291456, 2203297, 6291456, 2203329, 2203361, 6291456]), new Uint32Array([6291456, 6291456, 2148418, 2148482, 2148546, 0, 6291456, 2148610, 2186529, 2186561, 2148417, 2148545, 2148482, 10495778, 2143969, 10495778]), new Uint32Array([2134146, 2139426, 2160962, 2134242, 2161218, 2161282, 2161346, 2161410, 2138658, 2134722, 2134434, 2134818, 2097666, 2097346, 2097698, 2105986]), new Uint32Array([2198881, 2198913, 2198945, 2198977, 2199009, 2199041, 2199073, 2199105, 2199137, 2199169, 2199201, 2199233, 2199265, 2199297, 2199329, 2199361]), new Uint32Array([0, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456]), new Uint32Array([10610561, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193]), new Uint32Array([2183873, 6291456, 2183905, 6291456, 2183937, 6291456, 2183969, 6291456, 2184001, 6291456, 2184033, 6291456, 2184065, 6291456, 2184097, 6291456]), new Uint32Array([2244642, 2244706, 2244769, 2244801, 2218305, 2244833, 2244865, 2244897, 2244929, 2244961, 2244993, 2245026, 2245089, 2245122, 2245185, 0]), new Uint32Array([6291456, 6291456, 2116513, 2116609, 2116705, 2116801, 2199873, 2199905, 2199937, 2199969, 2190913, 2200001, 2200033, 2200065, 2200097, 2191009]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 2180673, 2180705, 2180737, 2180769, 2180801, 2180833, 0, 0]), new Uint32Array([2098081, 2099521, 2099105, 2120705, 2098369, 2120801, 2103361, 2097985, 2098433, 2121377, 2121473, 2099169, 2099873, 2098401, 2099393, 2152609]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2150402]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 2145666, 2145730, 6291456, 6291456]), new Uint32Array([2173921, 2173953, 2173985, 2173761, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2233057, 2148481, 2173601, 2173633, 2173665]), new Uint32Array([2187073, 6291456, 6291456, 6291456, 6291456, 2098241, 2098241, 2108353, 2100897, 2111905, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2102404, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2100612, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 10485857]), new Uint32Array([2149057, 2233057, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889]), new Uint32Array([2217697, 2217729, 2217761, 2217793, 2217825, 2217857, 2217889, 2217921, 2217953, 2215873, 2217985, 2215905, 2218017, 2218049, 2218081, 2218113]), new Uint32Array([2211233, 2218849, 2216673, 2218881, 2218913, 2218945, 2218977, 2219009, 2216833, 2219041, 2215137, 2219073, 2216865, 2209505, 2219105, 2216897]), new Uint32Array([2240097, 2240129, 2240161, 2240193, 2240225, 2240257, 2240289, 2240321, 2240353, 2240386, 2240449, 2240481, 2240513, 2240545, 2207905, 2240578]), new Uint32Array([6291456, 6291456, 2202273, 6291456, 2202305, 6291456, 2202337, 6291456, 2202369, 6291456, 2202401, 6291456, 2202433, 6291456, 2202465, 6291456]), new Uint32Array([0, 23068672, 23068672, 18923394, 23068672, 18923458, 18923522, 18884099, 18923586, 18884195, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2201121, 6291456, 2201153, 6291456, 2201185, 6291456, 2201217, 6291456, 2201249, 6291456, 2201281, 6291456, 2201313, 6291456, 2201345, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456]), new Uint32Array([2211041, 2211073, 2211105, 2211137, 2211169, 2211201, 2211233, 2211265, 2211297, 2211329, 2211361, 2211393, 2211425, 2211457, 2211489, 2211521]), new Uint32Array([2181825, 6291456, 2181857, 6291456, 2181889, 6291456, 2181921, 6291456, 2181953, 6291456, 2181985, 6291456, 2182017, 6291456, 2182049, 6291456]), new Uint32Array([2162337, 2097633, 2097633, 2097633, 2097633, 2132705, 2132705, 2132705, 2132705, 2097153, 2097153, 2097153, 2097153, 2133089, 2133089, 2133089]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 2148545, 6291456, 2173473, 6291456, 2148865, 6291456, 2173505, 6291456, 2173537, 6291456, 2173569, 6291456, 2149121, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 0, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0]), new Uint32Array([2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889, 2173921, 2173953, 2173985, 2174017, 2174017, 2174049, 2174081, 2174113]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2207137, 2207169, 2207201, 2207233, 2207265, 2207297, 2207329, 2207361, 2207393, 2207425, 2207457, 2207489, 2207521, 2207553, 2207585, 2207617]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 23068672, 6291456, 6291456, 0, 23068672, 23068672, 0, 0, 0, 0, 0, 0]), new Uint32Array([2198401, 2198433, 2198465, 2198497, 0, 2198529, 2198561, 2198593, 2198625, 2198657, 2198689, 2198721, 2198753, 2198785, 2198817, 2198849]), new Uint32Array([2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193, 2112481, 2112577, 2098177]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 0, 0]), new Uint32Array([2216385, 2118721, 2216417, 2216449, 2216481, 2216513, 2216545, 2211233, 2216577, 2216609, 2216641, 2216673, 2216705, 2216737, 2216737, 2216769]), new Uint32Array([2216801, 2216833, 2216865, 2216897, 2216929, 2216961, 2216993, 2215169, 2217025, 2217057, 2217089, 2217121, 2217154, 2217217, 0, 0]), new Uint32Array([2210593, 2191809, 2210625, 2210657, 2210689, 2210721, 2210753, 2210785, 2210817, 2210849, 2191297, 2210881, 2210913, 2210945, 2210977, 2211009]), new Uint32Array([0, 0, 2105825, 0, 0, 2111905, 2105473, 0, 0, 2112289, 2108193, 2112481, 2112577, 0, 2098305, 2108321]), new Uint32Array([0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 2097153, 2134241, 0, 2132705, 0, 0, 2131297, 0, 2133089, 0, 2133857, 0, 2220769, 0, 2235361]), new Uint32Array([14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 6291456, 6291456, 14680064]), new Uint32Array([23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2171873, 6291456, 2171905, 6291456, 2171937, 6291456, 2171969, 6291456, 2172001, 6291456, 2172033, 6291456, 2172065, 6291456, 2172097, 6291456]), new Uint32Array([2220929, 2220929, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2133857, 2134145, 2134145, 2134145, 2134145, 2134241, 2134241, 2134241, 2134241, 2105889, 2105889, 2105889, 2105889, 2097185, 2097185, 2097185]), new Uint32Array([2173697, 2173761, 2173793, 2174113, 2173985, 2173953, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761, 2143969, 2173793]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10499619, 10499715, 10499811, 10499907]), new Uint32Array([0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 0, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 0, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 23068672, 23068672]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 2144322, 2144386, 2144450, 2144514, 2144578, 2144642, 2144706, 2144770]), new Uint32Array([23068672, 23068672, 23068672, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2113153, 2108481, 2113345, 2113441, 2098209, 2111137, 0, 2098241, 2108353, 2108417, 2105825, 0, 0, 2111905, 2105473, 2105569]), new Uint32Array([2236321, 2236353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2152194, 2121283, 2103684, 2103812, 2097986, 2098533, 2097990, 2098693, 2098595, 2098853, 2099013, 2103940, 2121379, 2121475, 2121571, 2104068]), new Uint32Array([2206241, 2206273, 2206305, 2206337, 2206369, 2206401, 2206433, 2206465, 2206497, 2206529, 2206561, 2206593, 2206625, 2206657, 2206689, 2206721]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 16777216, 16777216, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 23068672, 23068672, 10538818, 10538882, 6291456, 6291456, 2150338]), new Uint32Array([6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2214369, 2214401, 2214433, 2214465, 2214497, 2214529, 2214561, 2214593, 2194977, 2214625, 2195073, 2214657, 2214689, 2214721, 6291456, 6291456]), new Uint32Array([2097152, 2097152, 2097152, 2097152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2182081, 6291456, 2182113, 6291456, 2182145, 6291456, 2182177, 6291456, 2182209, 6291456, 2182241, 6291456, 2182273, 6291456, 2182305, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2146881, 2146945, 2147009, 2147073, 2147137, 2147201, 2147265, 2147329]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 23068672, 23068672]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2122915, 2123011, 2123107, 2104708, 2123203, 2123299, 2123395, 2100133, 2104836, 2100290, 2100293, 2104962, 2104964, 2098052, 2123491, 2123587]), new Uint32Array([23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456]), new Uint32Array([6291456, 2171169, 6291456, 2171201, 6291456, 2171233, 6291456, 2171265, 6291456, 2171297, 6291456, 2171329, 6291456, 6291456, 2171361, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 0, 2148994, 2149058, 2149122, 0, 6291456, 2149186, 2186945, 2173537, 2148993, 2149121, 2149058, 10531458, 10496066, 0]), new Uint32Array([2195009, 2195041, 2195073, 2195105, 2195137, 2195169, 2195201, 2195233, 2195265, 2195297, 2195329, 2195361, 2195393, 2195425, 2195457, 2195489]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 0, 0, 6291456, 6291456]), new Uint32Array([2182849, 6291456, 2182881, 6291456, 2182913, 6291456, 2182945, 6291456, 2182977, 6291456, 2183009, 6291456, 2183041, 6291456, 2183073, 6291456]), new Uint32Array([2211553, 2210081, 2211585, 2211617, 2211649, 2211681, 2211713, 2211745, 2211777, 2211809, 2209569, 2211841, 2211873, 2211905, 2211937, 2211969]), new Uint32Array([2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2166594, 2127298, 2166658, 2142978, 2141827, 2166722]), new Uint32Array([2173985, 2173761, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2233057, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 2185761, 2185793, 2185825, 2185857, 2185889, 2185921, 0, 0]), new Uint32Array([6291456, 2148481, 2173601, 2173633, 2173665, 2173697, 2173729, 2148801, 2173761, 2143969, 2173793, 2173825, 2153473, 2173857, 2173889, 2173921]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 6291456]), new Uint32Array([0, 0, 0, 2220961, 2220961, 2220961, 2220961, 2144193, 2144193, 2159201, 2159201, 2159265, 2159265, 2144194, 2220993, 2220993]), new Uint32Array([2192641, 2235393, 2235425, 2152257, 2116609, 2235457, 2235489, 2200065, 2235521, 2235553, 2235585, 2212449, 2235617, 2235649, 2235681, 2235713]), new Uint32Array([2194049, 2194081, 2194113, 2194145, 2194177, 2194209, 2194241, 2194273, 2194305, 2194337, 2194369, 2194401, 2194433, 2194465, 2194497, 2194529]), new Uint32Array([2196673, 2208641, 2208673, 2208705, 2208737, 2208769, 2208801, 2208833, 2208865, 2208897, 2208929, 2208961, 2208993, 2209025, 2209057, 2209089]), new Uint32Array([2191681, 2191713, 2191745, 2191777, 2153281, 2191809, 2191841, 2191873, 2191905, 2191937, 2191969, 2192001, 2192033, 2192065, 2192097, 2192129]), new Uint32Array([2230946, 2231010, 2231074, 2231138, 2231202, 2231266, 2231330, 2231394, 2231458, 2231522, 2231586, 2231650, 2231714, 2231778, 2231842, 2231906]), new Uint32Array([14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064, 14680064]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 2185953, 2185985, 2186017, 2186049, 2186081, 2186113, 2186145, 2186177]), new Uint32Array([2139811, 2139907, 2097284, 2105860, 2105988, 2106116, 2106244, 2097444, 2097604, 2097155, 10485778, 10486344, 2106372, 6291456, 0, 0]), new Uint32Array([2110051, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2172385, 6291456, 2172417, 6291456, 2172449, 6291456, 2172481, 6291456, 2172513, 6291456, 2172545, 6291456, 2172577, 6291456, 2172609, 6291456]), new Uint32Array([0, 0, 23068672, 23068672, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2249345, 2249377, 2249409, 2249441, 2249473, 2249505, 2249537, 2249570, 2210209, 2249633, 2249665, 2249697, 2249729, 2249761, 2249793, 2216769]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2187169, 2187201, 2187233, 2187265, 2187297, 2187329, 2187361, 2187393, 2187425, 2187457, 2187489, 2187521, 2187553, 2187585, 2187617, 2187649]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([0, 0, 0, 6291456, 6291456, 0, 0, 0, 6291456, 6291456, 6291456, 0, 0, 0, 6291456, 6291456]), new Uint32Array([2182337, 6291456, 2182369, 6291456, 2182401, 6291456, 2182433, 6291456, 2182465, 6291456, 2182497, 6291456, 2182529, 6291456, 2182561, 6291456]), new Uint32Array([2138179, 2138275, 2138371, 2138467, 2134243, 2134435, 2138563, 2138659, 2138755, 2138851, 2138947, 2139043, 2138947, 2138755, 2139139, 2139235]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([0, 0, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2250498, 2250562, 2250625, 2250657, 2208321, 2250689, 2250721, 2250753, 2250785, 2250817, 2250849, 2218945, 2250881, 2250913, 2250945, 0]), new Uint32Array([2170369, 2105569, 2098305, 2108481, 2173249, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456]), new Uint32Array([2100897, 2111905, 2105473, 2105569, 2105601, 0, 2108193, 0, 0, 0, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481]), new Uint32Array([2100897, 2100897, 2105569, 2105569, 6291456, 2112289, 2149826, 6291456, 6291456, 2112481, 2112577, 2098177, 2098177, 2098177, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 2169953, 2169985, 6291456, 2170017, 6291456, 2170049, 2170081, 6291456, 2170113, 2170145, 2170177, 6291456, 6291456, 2170209, 2170241]), new Uint32Array([6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([0, 0, 0, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2220641, 2220641, 2220673, 2220673, 2220673, 2220673, 2220705, 2220705, 2220705, 2220705, 2220737, 2220737, 2220737, 2220737, 2220769, 2220769]), new Uint32Array([2127650, 2127746, 2127842, 2127938, 2128034, 2128130, 2128226, 2128322, 2128418, 2127523, 2127619, 2127715, 2127811, 2127907, 2128003, 2128099]), new Uint32Array([2143969, 2173793, 2173825, 2153473, 2173857, 2173889, 2173921, 2173953, 2173985, 2173761, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177]), new Uint32Array([0, 0, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([2204705, 2204737, 2204769, 2204801, 2204833, 2204865, 2204897, 2204929, 2204961, 2204993, 2205025, 2205057, 2205089, 2205121, 2205153, 2205185]), new Uint32Array([2176385, 6291456, 2176417, 6291456, 2176449, 6291456, 2176481, 6291456, 2176513, 6291456, 2176545, 6291456, 2176577, 6291456, 2176609, 6291456]), new Uint32Array([2195521, 2195553, 2195585, 2195617, 2195649, 2195681, 2117857, 2195713, 2195745, 2195777, 2195809, 2195841, 2195873, 2195905, 2195937, 2195969]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456]), new Uint32Array([2173921, 2173953, 2173985, 2174017, 2174017, 2174049, 2174081, 2174113, 2174145, 2174177, 2149057, 2233089, 2173697, 2173761, 2173793, 2174113]), new Uint32Array([2131586, 2132450, 2135970, 2135778, 2161602, 2136162, 2163650, 2161794, 2135586, 2163714, 2137186, 2131810, 2160290, 2135170, 2097506, 2159554]), new Uint32Array([2134145, 2097153, 2134241, 2105953, 2132705, 2130977, 2160065, 2131297, 2162049, 2133089, 2160577, 2133857, 0, 0, 0, 0]), new Uint32Array([2116513, 2116609, 2116705, 2116801, 2116897, 2116993, 2117089, 2117185, 2117281, 2117377, 2117473, 2117569, 2117665, 2117761, 2117857, 2117953]), new Uint32Array([2100737, 2098337, 2101441, 2101569, 2101697, 2101825, 2101953, 2102081, 2102209, 2100802, 2101154, 2101282, 2101410, 2101538, 2101666, 2101794]), new Uint32Array([2100289, 2098657, 2098049, 2200737, 2123489, 2123681, 2200769, 2098625, 2100321, 2098145, 2100449, 2098017, 2098753, 2098977, 2150241, 2150305]), new Uint32Array([6291456, 6291456, 6291456, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 2109955, 6291456, 6291456, 0, 0, 0, 0]), new Uint32Array([18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368, 18874368]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 6291456, 0, 6291456, 0, 0]), new Uint32Array([2130979, 2131075, 2131075, 2131171, 2131267, 2131363, 2131459, 2131555, 2131651, 2131651, 2131747, 2131843, 2131939, 2132035, 2132131, 2132227]), new Uint32Array([0, 2177793, 6291456, 2177825, 6291456, 2177857, 6291456, 2177889, 6291456, 2177921, 6291456, 2177953, 6291456, 2177985, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672]), new Uint32Array([6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2113345, 0, 2098209, 2111137, 2105505, 2098241, 2108353, 2108417, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289]), new Uint32Array([2136643, 2136739, 2136835, 2136931, 2137027, 2137123, 2137219, 2137315, 2137411, 2137507, 2137603, 2137699, 2137795, 2137891, 2137987, 2138083]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0]), new Uint32Array([2174433, 6291456, 2174465, 6291456, 2174497, 6291456, 2174529, 6291456, 2174561, 6291456, 2174593, 6291456, 2174625, 6291456, 2174657, 6291456]), new Uint32Array([0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2105473, 2105569, 2105601, 2112289, 2108193, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441]), new Uint32Array([10496547, 10496643, 2105505, 2149698, 6291456, 10496739, 10496835, 2170273, 6291456, 2149762, 2105825, 2111713, 2111713, 2111713, 2111713, 2168673]), new Uint32Array([6291456, 2143490, 2143490, 2143490, 2171649, 6291456, 2171681, 2171713, 2171745, 6291456, 2171777, 6291456, 2171809, 6291456, 2171841, 6291456]), new Uint32Array([2159106, 2159106, 2159170, 2159170, 2159234, 2159234, 2159298, 2159298, 2159298, 2159362, 2159362, 2159362, 2106401, 2106401, 2106401, 2106401]), new Uint32Array([2105601, 2112289, 2108193, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865, 2113153, 2108481, 2113345, 2113441, 2098209, 2111137]), new Uint32Array([2108417, 2181217, 2181249, 2181281, 2170433, 2170401, 2181313, 2181345, 2181377, 2181409, 2181441, 2181473, 2181505, 2181537, 2170529, 2181569]), new Uint32Array([2218433, 2245761, 2245793, 2245825, 2245857, 2245890, 2245953, 2245986, 2209665, 2246050, 2246113, 2246146, 2246210, 2246274, 2246337, 2246369]), new Uint32Array([2230754, 2230818, 2230882, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([6291456, 0, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 0, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2184129, 6291456, 2184161, 6291456, 2184193, 6291456, 6291456, 6291456, 6291456, 6291456, 2146818, 2183361, 6291456, 6291456, 2142978, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2135170, 2097506, 2130691, 2130787, 2130883, 2163970, 2164034, 2164098, 2164162, 2164226, 2164290, 2164354, 2164418, 2164482, 2164546, 2133122]), new Uint32Array([2108515, 2108611, 2100740, 2108707, 2108803, 2108899, 2108995, 2109091, 2109187, 2109283, 2109379, 2109475, 2109571, 2109667, 2109763, 2100738]), new Uint32Array([2102788, 2102916, 2103044, 2120515, 2103172, 2120611, 2120707, 2098373, 2103300, 2120803, 2120899, 2120995, 2103428, 2103556, 2121091, 2121187]), new Uint32Array([2158082, 2158146, 0, 2158210, 2158274, 0, 2158338, 2158402, 2158466, 2129922, 2158530, 2158594, 2158658, 2158722, 2158786, 2158850]), new Uint32Array([10499619, 10499715, 10499811, 10499907, 10500003, 10500099, 10500195, 10500291, 10500387, 10500483, 10500579, 10500675, 10500771, 10500867, 10500963, 10501059]), new Uint32Array([2239585, 2239618, 2239681, 2239713, 0, 2191969, 2239745, 2239777, 2192033, 2239809, 2239841, 2239874, 2239937, 2239970, 2240033, 2240065]), new Uint32Array([2252705, 2252738, 2252801, 2252833, 2252865, 2252897, 2252930, 2252994, 2253057, 2253089, 2253121, 2253154, 2253217, 2253250, 2219361, 2219361]), new Uint32Array([2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 2108193, 2112481, 2112577, 2098177, 2098305, 2108321, 2108289, 2100865]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 10538050, 10538114, 10538178, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([2226402, 2226466, 2226530, 2226594, 2226658, 2226722, 2226786, 2226850, 2226914, 2226978, 2227042, 2227106, 2227170, 2227234, 2227298, 2227362]), new Uint32Array([23068672, 6291456, 6291456, 6291456, 6291456, 2144066, 2144130, 2144194, 2144258, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 23068672, 23068672, 6291456, 23068672, 23068672]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2124674, 2124770, 2123875, 2123971, 2124067, 2124163, 2124259, 2124355, 2124451, 2124547, 2124643, 2124739, 2124835, 2124931, 2125027, 2125123]), new Uint32Array([2168065, 6291456, 2168097, 6291456, 2168129, 6291456, 2168161, 6291456, 2168193, 6291456, 2168225, 6291456, 2168257, 6291456, 2168289, 6291456]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0]), new Uint32Array([23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 2100610, 2100611, 6291456, 2107842, 2107843, 6291456, 6291456, 6291456, 6291456, 10537922, 6291456, 10537986, 6291456]), new Uint32Array([2174849, 2174881, 2174913, 2174945, 2174977, 2175009, 2175041, 2175073, 2175105, 2175137, 2175169, 2175201, 2175233, 2175265, 2175297, 2175329]), new Uint32Array([2154562, 2154626, 2154690, 2154754, 2141858, 2154818, 2154882, 2127298, 2154946, 2127298, 2155010, 2155074, 2155138, 2155202, 2155266, 2155202]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 23068672, 0]), new Uint32Array([2200641, 2150786, 2150850, 2150914, 2150978, 2151042, 2106562, 2151106, 2150562, 2151170, 2151234, 2151298, 2151362, 2151426, 2151490, 2151554]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 0, 0, 0, 0, 0, 0, 0, 0, 6291456, 6291456]), new Uint32Array([2220289, 2220289, 2220321, 2220321, 2220321, 2220321, 2220353, 2220353, 2220353, 2220353, 2220385, 2220385, 2220385, 2220385, 2220417, 2220417]), new Uint32Array([2155330, 2155394, 0, 2155458, 2155522, 2155586, 2105732, 0, 2155650, 2155714, 2155778, 2125314, 2155842, 2155906, 2126274, 2155970]), new Uint32Array([23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456, 23068672, 23068672, 6291456, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0]), new Uint32Array([2097729, 2106017, 2106017, 2106017, 2106017, 2131297, 2131297, 2131297, 2131297, 2106081, 2106081, 2162049, 2162049, 2105953, 2105953, 2162337]), new Uint32Array([2097185, 2097697, 2097697, 2097697, 2097697, 2135777, 2135777, 2135777, 2135777, 2097377, 2097377, 2097377, 2097377, 2097601, 2097601, 2097217]), new Uint32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23068672]), new Uint32Array([2139331, 2139427, 2139523, 2139043, 2133571, 2132611, 2139619, 2139715, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2174113, 2174145, 2100897, 2098177, 2108289, 2100865, 2173601, 2173633, 2173985, 2174113, 2174145, 6291456, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456, 23068672, 6291456, 6291456, 6291456, 6291456]), new Uint32Array([23068672, 23068672, 18923778, 23068672, 23068672, 23068672, 23068672, 18923842, 23068672, 23068672, 23068672, 23068672, 18923906, 23068672, 23068672, 23068672]), new Uint32Array([2134145, 2097153, 2134241, 0, 2132705, 2130977, 2160065, 2131297, 0, 2133089, 0, 2133857, 0, 0, 0, 0]), new Uint32Array([6291456, 6291456, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2177537, 6291456, 2177569, 6291456, 2177601, 6291456, 2177633, 6291456, 2177665, 6291456, 2177697, 6291456, 2177729, 6291456, 2177761, 6291456]), new Uint32Array([2212481, 2212513, 2212545, 2212577, 2197121, 2212609, 2212641, 2212673, 2212705, 2212737, 2212769, 2212801, 2212833, 2212865, 2212897, 2212929]), new Uint32Array([6291456, 6291456, 23068672, 23068672, 23068672, 6291456, 6291456, 0, 0, 0, 0, 0, 0, 0, 0, 0]), new Uint32Array([2098241, 2108353, 2170209, 2105825, 2111713, 2100897, 2111905, 2105473, 2105569, 2105601, 2112289, 6291456, 2108193, 2172417, 2112481, 2098177]), new Uint32Array([6291456, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 23068672, 6291456, 6291456])], e = new Uint16Array([616, 616, 565, 147, 161, 411, 330, 2, 131, 131, 328, 454, 241, 408, 86, 86, 696, 113, 285, 350, 325, 301, 473, 214, 639, 232, 447, 64, 369, 598, 124, 672, 567, 223, 621, 154, 107, 86, 86, 86, 86, 86, 86, 505, 86, 68, 634, 86, 218, 218, 218, 218, 486, 218, 218, 513, 188, 608, 216, 86, 217, 463, 668, 85, 700, 360, 184, 86, 86, 86, 647, 402, 153, 10, 346, 718, 662, 260, 145, 298, 117, 1, 443, 342, 138, 54, 563, 86, 240, 572, 218, 70, 387, 86, 118, 460, 641, 602, 86, 86, 306, 218, 86, 692, 86, 86, 86, 86, 86, 162, 707, 86, 458, 26, 86, 218, 638, 86, 86, 86, 86, 86, 65, 449, 86, 86, 306, 183, 86, 58, 391, 667, 86, 157, 131, 131, 131, 131, 86, 433, 131, 406, 31, 218, 247, 86, 86, 693, 218, 581, 351, 86, 438, 295, 69, 462, 45, 126, 173, 650, 14, 295, 69, 97, 168, 187, 641, 78, 523, 390, 69, 108, 287, 664, 173, 219, 83, 295, 69, 108, 431, 426, 173, 694, 412, 115, 628, 52, 257, 398, 641, 118, 501, 121, 69, 579, 151, 423, 173, 620, 464, 121, 69, 382, 151, 476, 173, 27, 53, 121, 86, 594, 578, 226, 173, 86, 632, 130, 86, 96, 228, 268, 641, 622, 563, 86, 86, 21, 148, 650, 131, 131, 321, 43, 144, 343, 381, 531, 131, 131, 178, 20, 86, 399, 156, 375, 164, 541, 30, 60, 715, 198, 92, 118, 131, 131, 86, 86, 306, 407, 86, 280, 457, 196, 488, 358, 131, 131, 244, 86, 86, 143, 86, 86, 86, 86, 86, 667, 563, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 336, 363, 86, 86, 336, 86, 86, 380, 678, 67, 86, 86, 86, 678, 86, 86, 86, 512, 86, 307, 86, 708, 86, 86, 86, 86, 86, 528, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 563, 307, 86, 86, 86, 86, 86, 104, 450, 337, 86, 720, 86, 32, 450, 397, 86, 86, 86, 587, 218, 558, 708, 708, 293, 708, 86, 86, 86, 86, 86, 694, 205, 86, 8, 86, 86, 86, 86, 549, 86, 667, 697, 697, 679, 86, 458, 460, 86, 86, 650, 86, 708, 543, 86, 86, 86, 245, 86, 86, 86, 140, 218, 127, 708, 708, 458, 197, 131, 131, 131, 131, 500, 86, 86, 483, 251, 86, 306, 510, 515, 86, 722, 86, 86, 86, 65, 201, 86, 86, 483, 580, 470, 86, 86, 86, 368, 131, 131, 131, 694, 114, 110, 555, 86, 86, 123, 721, 163, 142, 713, 418, 86, 317, 675, 209, 218, 218, 218, 371, 545, 592, 629, 490, 603, 199, 46, 320, 525, 680, 310, 279, 388, 111, 42, 252, 593, 607, 235, 617, 410, 377, 50, 548, 135, 356, 17, 520, 189, 116, 392, 600, 349, 332, 482, 699, 690, 535, 119, 106, 451, 71, 152, 667, 131, 218, 218, 265, 671, 637, 492, 504, 533, 683, 269, 269, 658, 86, 86, 86, 86, 86, 86, 86, 86, 86, 491, 619, 86, 86, 6, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 229, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 667, 86, 86, 171, 131, 118, 131, 656, 206, 234, 571, 89, 334, 670, 246, 311, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 534, 86, 86, 86, 86, 86, 86, 82, 86, 86, 86, 86, 86, 430, 86, 86, 86, 86, 86, 86, 86, 86, 86, 599, 86, 324, 86, 470, 69, 640, 264, 131, 626, 101, 174, 86, 86, 667, 233, 105, 73, 374, 394, 221, 204, 84, 28, 326, 86, 86, 471, 86, 86, 86, 109, 573, 86, 171, 200, 200, 200, 200, 218, 218, 86, 86, 86, 86, 460, 131, 131, 131, 86, 506, 86, 86, 86, 86, 86, 220, 404, 34, 614, 47, 442, 305, 25, 612, 338, 601, 648, 7, 344, 255, 131, 131, 51, 86, 312, 507, 563, 86, 86, 86, 86, 588, 86, 86, 86, 86, 86, 530, 511, 86, 458, 3, 435, 384, 556, 522, 230, 527, 86, 118, 86, 86, 717, 86, 137, 273, 79, 181, 484, 23, 93, 112, 655, 249, 417, 703, 370, 87, 98, 313, 684, 585, 155, 465, 596, 481, 695, 18, 416, 428, 61, 701, 706, 282, 643, 495, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 549, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 549, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 307, 86, 86, 86, 171, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 650, 131, 422, 542, 420, 263, 24, 172, 86, 86, 86, 86, 86, 566, 86, 86, 132, 540, 395, 353, 494, 519, 19, 485, 284, 472, 131, 131, 131, 16, 714, 86, 211, 708, 86, 86, 86, 694, 698, 86, 86, 483, 704, 708, 218, 272, 86, 86, 120, 86, 159, 478, 86, 307, 247, 86, 86, 663, 597, 459, 627, 667, 86, 86, 277, 455, 39, 302, 86, 250, 86, 86, 86, 271, 99, 452, 306, 281, 329, 400, 200, 86, 86, 362, 549, 352, 646, 461, 323, 586, 86, 86, 4, 708, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 717, 86, 518, 86, 86, 650, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 125, 554, 480, 300, 613, 72, 333, 288, 561, 544, 604, 48, 719, 91, 169, 176, 590, 224, 76, 191, 29, 559, 560, 231, 537, 166, 477, 538, 256, 437, 131, 131, 469, 167, 40, 0, 685, 266, 441, 705, 239, 642, 475, 568, 640, 610, 299, 673, 517, 318, 385, 22, 202, 180, 179, 359, 424, 215, 90, 66, 521, 653, 467, 682, 453, 409, 479, 88, 131, 661, 35, 303, 15, 262, 666, 630, 712, 131, 131, 618, 659, 175, 218, 195, 347, 193, 227, 261, 150, 165, 709, 546, 294, 569, 710, 270, 413, 376, 524, 55, 242, 38, 419, 529, 170, 657, 3, 304, 122, 379, 278, 131, 651, 86, 67, 576, 458, 458, 131, 131, 86, 86, 86, 86, 86, 86, 86, 118, 309, 86, 86, 547, 86, 86, 86, 86, 667, 650, 664, 131, 131, 86, 86, 56, 131, 131, 131, 131, 131, 131, 131, 131, 86, 307, 86, 86, 86, 664, 238, 650, 86, 86, 717, 86, 118, 86, 86, 315, 86, 59, 86, 86, 574, 549, 131, 131, 340, 57, 436, 86, 86, 86, 86, 86, 86, 458, 708, 499, 691, 62, 86, 650, 86, 86, 694, 86, 86, 86, 319, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 171, 86, 549, 694, 131, 131, 131, 131, 131, 131, 131, 131, 131, 77, 86, 86, 139, 86, 502, 86, 86, 86, 667, 595, 131, 131, 131, 86, 12, 86, 13, 86, 609, 131, 131, 131, 131, 86, 86, 86, 625, 86, 669, 86, 86, 182, 129, 86, 5, 694, 104, 86, 86, 86, 86, 131, 131, 86, 86, 386, 171, 86, 86, 86, 345, 86, 324, 86, 589, 86, 213, 36, 131, 131, 131, 131, 131, 86, 86, 86, 86, 104, 131, 131, 131, 141, 290, 80, 677, 86, 86, 86, 267, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 667, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 515, 86, 86, 33, 136, 669, 86, 711, 515, 86, 86, 550, 640, 86, 104, 708, 515, 86, 159, 372, 717, 86, 86, 444, 515, 86, 86, 663, 37, 86, 563, 460, 86, 390, 624, 702, 131, 131, 131, 131, 389, 59, 708, 86, 86, 341, 208, 708, 635, 295, 69, 108, 431, 508, 100, 190, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 649, 516, 660, 131, 131, 86, 86, 86, 218, 631, 708, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 341, 575, 238, 514, 131, 131, 86, 86, 86, 218, 291, 708, 307, 131, 86, 86, 306, 367, 708, 131, 131, 131, 86, 378, 697, 86, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 615, 253, 86, 86, 86, 292, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 104, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 69, 86, 341, 553, 549, 86, 307, 86, 86, 645, 275, 455, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 708, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 667, 460, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 717, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 667, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 171, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 104, 86, 667, 459, 131, 131, 131, 131, 131, 131, 86, 458, 225, 86, 86, 86, 516, 549, 11, 390, 405, 86, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 460, 44, 218, 197, 711, 515, 131, 131, 131, 131, 664, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 307, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 308, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 640, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 118, 307, 104, 286, 591, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 549, 86, 86, 681, 86, 86, 75, 185, 314, 582, 86, 358, 496, 474, 86, 104, 131, 86, 86, 86, 86, 146, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 171, 86, 640, 131, 131, 131, 131, 131, 131, 131, 131, 246, 503, 689, 339, 674, 81, 258, 415, 439, 128, 562, 366, 414, 246, 503, 689, 583, 222, 557, 316, 636, 665, 186, 355, 95, 670, 246, 503, 689, 339, 674, 557, 258, 415, 439, 186, 355, 95, 670, 246, 503, 689, 446, 644, 536, 652, 331, 532, 335, 440, 274, 421, 297, 570, 74, 425, 364, 425, 606, 552, 403, 509, 134, 365, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 218, 218, 218, 498, 218, 218, 577, 627, 551, 497, 572, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 553, 354, 236, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 296, 455, 131, 131, 456, 243, 103, 86, 41, 459, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 9, 276, 158, 716, 393, 564, 383, 489, 401, 654, 210, 654, 131, 131, 131, 640, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 650, 86, 86, 86, 86, 86, 86, 717, 667, 563, 563, 563, 86, 549, 102, 686, 133, 246, 605, 86, 448, 86, 86, 207, 307, 131, 131, 131, 641, 86, 177, 611, 445, 373, 194, 584, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 308, 307, 171, 86, 86, 86, 86, 86, 86, 86, 717, 86, 86, 86, 86, 86, 460, 131, 131, 650, 86, 86, 86, 694, 708, 86, 86, 694, 86, 458, 131, 131, 131, 131, 131, 131, 667, 694, 289, 650, 667, 131, 131, 86, 640, 131, 131, 664, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 171, 131, 131, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 460, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 458, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 640, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 466, 203, 149, 429, 94, 432, 160, 687, 539, 63, 237, 283, 192, 248, 348, 259, 427, 526, 396, 676, 254, 468, 487, 212, 327, 623, 49, 633, 322, 493, 434, 688, 357, 361, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131]), {
                mapStr: "صلى الله عليه وسلمجل جلالهキロメートルrad∕s2エスクードキログラムキロワットグラムトンクルゼイロサンチームパーセントピアストルファラッドブッシェルヘクタールマンションミリバールレントゲン′′′′1⁄10viii(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)∫∫∫∫(오전)(오후)アパートアルファアンペアイニングエーカーカラットカロリーキュリーギルダークローネサイクルシリングバーレルフィートポイントマイクロミクロンメガトンリットルルーブル株式会社kcalm∕s2c∕kgاكبرمحمدصلعمرسولریال1⁄41⁄23⁄4 ̈́ྲཱྀླཱྀ ̈͂ ̓̀ ̓́ ̓͂ ̔̀ ̔́ ̔͂ ̈̀‵‵‵a/ca/sc/oc/utelfax1⁄71⁄91⁄32⁄31⁄52⁄53⁄54⁄51⁄65⁄61⁄83⁄85⁄87⁄8xii0⁄3∮∮∮(1)(2)(3)(4)(5)(6)(7)(8)(9)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)(n)(o)(p)(q)(r)(s)(t)(u)(v)(w)(x)(y)(z)::====(ᄀ)(ᄂ)(ᄃ)(ᄅ)(ᄆ)(ᄇ)(ᄉ)(ᄋ)(ᄌ)(ᄎ)(ᄏ)(ᄐ)(ᄑ)(ᄒ)(가)(나)(다)(라)(마)(바)(사)(아)(자)(차)(카)(타)(파)(하)(주)(一)(二)(三)(四)(五)(六)(七)(八)(九)(十)(月)(火)(水)(木)(金)(土)(日)(株)(有)(社)(名)(特)(財)(祝)(労)(代)(呼)(学)(監)(企)(資)(協)(祭)(休)(自)(至)pte10月11月12月ergltdアールインチウォンオンスオームカイリガロンガンマギニーケースコルナコーポセンチダースノットハイツパーツピクルフランペニヒヘルツペンスページベータボルトポンドホールホーンマイルマッハマルクヤードヤールユアンルピー10点11点12点13点14点15点16点17点18点19点20点21点22点23点24点hpabardm2dm3khzmhzghzthzmm2cm2km2mm3cm3km3kpampagpalogmilmolppmv∕ma∕m10日11日12日13日14日15日16日17日18日19日20日21日22日23日24日25日26日27日28日29日30日31日galffifflשּׁשּׂ ٌّ ٍّ َّ ُّ ِّ ّٰـَّـُّـِّتجمتحجتحمتخمتمجتمحتمخجمححميحمىسحجسجحسجىسمحسمجسممصححصممشحمشجيشمخشممضحىضخمطمحطممطميعجمعممعمىغممغميغمىفخمقمحقمملحملحيلحىلججلخملمحمحجمحيمجحمجممخممجخهمجهممنحمنحىنجمنجىنمينمىيممبخيتجيتجىتخيتخىتميتمىجميجحىجمىسخىصحيشحيضحيلجيلمييحييجييميمميقمينحيعميكمينجحمخيلجمكممجحيحجيمجيفميبحيسخينجيصلےقلے𝅘𝅥𝅮𝅘𝅥𝅯𝅘𝅥𝅰𝅘𝅥𝅱𝅘𝅥𝅲𝆹𝅥𝅮𝆺𝅥𝅮𝆹𝅥𝅯𝆺𝅥𝅯〔s〕ppv〔本〕〔三〕〔二〕〔安〕〔点〕〔打〕〔盗〕〔勝〕〔敗〕 ̄ ́ ̧ssi̇ijl·ʼndžljnjdz ̆ ̇ ̊ ̨ ̃ ̋ ιեւاٴوٴۇٴيٴक़ख़ग़ज़ड़ढ़फ़य़ড়ঢ়য়ਲ਼ਸ਼ਖ਼ਗ਼ਜ਼ਫ਼ଡ଼ଢ଼ําໍາຫນຫມགྷཌྷདྷབྷཛྷཀྵཱཱིུྲྀླྀྒྷྜྷྡྷྦྷྫྷྐྵaʾἀιἁιἂιἃιἄιἅιἆιἇιἠιἡιἢιἣιἤιἥιἦιἧιὠιὡιὢιὣιὤιὥιὦιὧιὰιαιάιᾶι ͂ὴιηιήιῆιὼιωιώιῶι ̳!! ̅???!!?rs°c°fnosmtmivix⫝̸ ゙ ゚よりコト333435참고주의363738394042444546474849503月4月5月6月7月8月9月hgevギガデシドルナノピコビルペソホンリラレムdaauovpciu平成昭和大正明治naμakakbmbgbpfnfμfμgmgμlmldlklfmnmμmpsnsμsmsnvμvkvpwnwμwmwkwkωmωbqcccddbgyhainkkktlnlxphprsrsvwbstմնմեմիվնմխיִײַשׁשׂאַאָאּבּגּדּהּוּזּטּיּךּכּלּמּנּסּףּפּצּקּרּתּוֹבֿכֿפֿאלئائەئوئۇئۆئۈئېئىئجئحئمئيبجبمبىبيتىتيثجثمثىثيخحضجضمطحظمغجفجفحفىفيقحقىقيكاكجكحكخكلكىكينخنىنيهجهىهييىذٰرٰىٰئرئزئنبزبنترتزتنثرثزثنمانرنزننيريزئخئهبهتهصخنههٰثهسهشهطىطيعىعيغىغيسىسيشىشيصىصيضىضيشخشرسرصرضراً ًـًـّ ْـْلآلألإ𝅗𝅥0,1,2,3,4,5,6,7,8,9,wzhvsdwcmcmddjほかココàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįĵķĺļľłńņňŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷÿźżɓƃƅɔƈɖɗƌǝəɛƒɠɣɩɨƙɯɲɵơƣƥʀƨʃƭʈưʊʋƴƶʒƹƽǎǐǒǔǖǘǚǜǟǡǣǥǧǩǫǭǯǵƕƿǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟƞȣȥȧȩȫȭȯȱȳⱥȼƚⱦɂƀʉʌɇɉɋɍɏɦɹɻʁʕͱͳʹͷ;ϳέίόύβγδεζθκλνξοπρστυφχψϊϋϗϙϛϝϟϡϣϥϧϩϫϭϯϸϻͻͼͽѐёђѓєѕіїјљњћќѝўџабвгдежзийклмнопрстуфхцчшщъыьэюяѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯաբգդզէըթժլծկհձղճյշոչպջռստրցփքօֆ་ⴧⴭნᏰᏱᏲᏳᏴᏵꙋɐɑᴂɜᴖᴗᴝᴥɒɕɟɡɥɪᵻʝɭᶅʟɱɰɳɴɸʂƫᴜʐʑḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿἐἑἒἓἔἕἰἱἲἳἴἵἶἷὀὁὂὃὄὅὑὓὕὗᾰᾱὲΐῐῑὶΰῠῡὺῥ`ὸ‐+−∑〈〉ⰰⰱⰲⰳⰴⰵⰶⰷⰸⰹⰺⰻⰼⰽⰾⰿⱀⱁⱂⱃⱄⱅⱆⱇⱈⱉⱊⱋⱌⱍⱎⱏⱐⱑⱒⱓⱔⱕⱖⱗⱘⱙⱚⱛⱜⱝⱞⱡɫᵽɽⱨⱪⱬⱳⱶȿɀⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳬⳮⳳⵡ母龟丨丶丿乙亅亠人儿入冂冖冫几凵刀力勹匕匚匸卜卩厂厶又口囗士夂夊夕女子宀寸小尢尸屮山巛工己巾干幺广廴廾弋弓彐彡彳心戈戶手支攴文斗斤方无曰欠止歹殳毋比毛氏气爪父爻爿片牙牛犬玄玉瓜瓦甘生用田疋疒癶白皮皿目矛矢石示禸禾穴立竹米糸缶网羊羽老而耒耳聿肉臣臼舌舛舟艮色艸虍虫血行衣襾見角言谷豆豕豸貝赤走足身車辛辰辵邑酉釆里長門阜隶隹雨靑非面革韋韭音頁風飛食首香馬骨高髟鬥鬯鬲鬼魚鳥鹵鹿麥麻黃黍黑黹黽鼎鼓鼠鼻齊齒龍龜龠.〒卄卅ᄁᆪᆬᆭᄄᆰᆱᆲᆳᆴᆵᄚᄈᄡᄊ짜ᅢᅣᅤᅥᅦᅧᅨᅩᅪᅫᅬᅭᅮᅯᅰᅱᅲᅳᅴᅵᄔᄕᇇᇈᇌᇎᇓᇗᇙᄜᇝᇟᄝᄞᄠᄢᄣᄧᄩᄫᄬᄭᄮᄯᄲᄶᅀᅇᅌᇱᇲᅗᅘᅙᆄᆅᆈᆑᆒᆔᆞᆡ上中下甲丙丁天地問幼箏우秘男適優印注項写左右医宗夜テヌモヨヰヱヲꙁꙃꙅꙇꙉꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝺꝼᵹꝿꞁꞃꞅꞇꞌꞑꞓꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩɬʞʇꭓꞵꞷꬷꭒᎠᎡᎢᎣᎤᎥᎦᎧᎨᎩᎪᎫᎬᎭᎮᎯᎰᎱᎲᎳᎴᎵᎶᎷᎸᎹᎺᎻᎼᎽᎾᎿᏀᏁᏂᏃᏄᏅᏆᏇᏈᏉᏊᏋᏌᏍᏎᏏᏐᏑᏒᏓᏔᏕᏖᏗᏘᏙᏚᏛᏜᏝᏞᏟᏠᏡᏢᏣᏤᏥᏦᏧᏨᏩᏪᏫᏬᏭᏮᏯ豈更賈滑串句契喇奈懶癩羅蘿螺裸邏樂洛烙珞落酪駱亂卵欄爛蘭鸞嵐濫藍襤拉臘蠟廊朗浪狼郎來冷勞擄櫓爐盧蘆虜路露魯鷺碌祿綠菉錄論壟弄籠聾牢磊賂雷壘屢樓淚漏累縷陋勒肋凜凌稜綾菱陵讀拏諾丹寧怒率異北磻便復不泌數索參塞省葉說殺沈拾若掠略亮兩凉梁糧良諒量勵呂廬旅濾礪閭驪麗黎曆歷轢年憐戀撚漣煉璉秊練聯輦蓮連鍊列劣咽烈裂廉念捻殮簾獵令囹嶺怜玲瑩羚聆鈴零靈領例禮醴隸惡了僚寮尿料燎療蓼遼暈阮劉杻柳流溜琉留硫紐類戮陸倫崙淪輪律慄栗隆利吏履易李梨泥理痢罹裏裡離匿溺吝燐璘藺隣鱗麟林淋臨笠粒狀炙識什茶刺切度拓糖宅洞暴輻降廓兀嗀塚晴凞猪益礼神祥福靖精蘒諸逸都飯飼館鶴郞隷侮僧免勉勤卑喝嘆器塀墨層悔慨憎懲敏既暑梅海渚漢煮爫琢碑祉祈祐祖禍禎穀突節縉繁署者臭艹著褐視謁謹賓贈辶難響頻恵𤋮舘並况全侀充冀勇勺啕喙嗢墳奄奔婢嬨廒廙彩徭惘慎愈慠戴揄搜摒敖望杖滛滋瀞瞧爵犯瑱甆画瘝瘟盛直睊着磌窱类絛缾荒華蝹襁覆調請諭變輸遲醙鉶陼韛頋鬒𢡊𢡄𣏕㮝䀘䀹𥉉𥳐𧻓齃龎עםٱٻپڀٺٿٹڤڦڄڃچڇڍڌڎڈژڑکگڳڱںڻۀہھۓڭۋۅۉ、〖〗—–_{}【】《》「」『』[]#&*-<>\\$%@ءؤة\"'^|~⦅⦆・ゥャ¢£¬¦¥₩│←↑→↓■○𐐨𐐩𐐪𐐫𐐬𐐭𐐮𐐯𐐰𐐱𐐲𐐳𐐴𐐵𐐶𐐷𐐸𐐹𐐺𐐻𐐼𐐽𐐾𐐿𐑀𐑁𐑂𐑃𐑄𐑅𐑆𐑇𐑈𐑉𐑊𐑋𐑌𐑍𐑎𐑏𐓘𐓙𐓚𐓛𐓜𐓝𐓞𐓟𐓠𐓡𐓢𐓣𐓤𐓥𐓦𐓧𐓨𐓩𐓪𐓫𐓬𐓭𐓮𐓯𐓰𐓱𐓲𐓳𐓴𐓵𐓶𐓷𐓸𐓹𐓺𐓻𐳀𐳁𐳂𐳃𐳄𐳅𐳆𐳇𐳈𐳉𐳊𐳋𐳌𐳍𐳎𐳏𐳐𐳑𐳒𐳓𐳔𐳕𐳖𐳗𐳘𐳙𐳚𐳛𐳜𐳝𐳞𐳟𐳠𐳡𐳢𐳣𐳤𐳥𐳦𐳧𐳨𐳩𐳪𐳫𐳬𐳭𐳮𐳯𐳰𐳱𐳲𑣀𑣁𑣂𑣃𑣄𑣅𑣆𑣇𑣈𑣉𑣊𑣋𑣌𑣍𑣎𑣏𑣐𑣑𑣒𑣓𑣔𑣕𑣖𑣗𑣘𑣙𑣚𑣛𑣜𑣝𑣞𑣟ıȷ∇∂𞤢𞤣𞤤𞤥𞤦𞤧𞤨𞤩𞤪𞤫𞤬𞤭𞤮𞤯𞤰𞤱𞤲𞤳𞤴𞤵𞤶𞤷𞤸𞤹𞤺𞤻𞤼𞤽𞤾𞤿𞥀𞥁𞥂𞥃ٮڡٯ字双多解交映無前後再新初終販声吹演投捕遊指禁空合満申割営配得可丽丸乁𠄢你侻倂偺備像㒞𠘺兔兤具𠔜㒹內𠕋冗冤仌冬𩇟刃㓟刻剆剷㔕包匆卉博即卽卿𠨬灰及叟𠭣叫叱吆咞吸呈周咢哶唐啓啣善喫喳嗂圖圗噑噴壮城埴堍型堲報墬𡓤売壷夆夢奢𡚨𡛪姬娛娧姘婦㛮嬈嬾𡧈寃寘寳𡬘寿将㞁屠峀岍𡷤嵃𡷦嵮嵫嵼巡巢㠯巽帨帽幩㡢𢆃㡼庰庳庶𪎒𢌱舁弢㣇𣊸𦇚形彫㣣徚忍志忹悁㤺㤜𢛔惇慈慌慺憲憤憯懞戛扝抱拔捐𢬌挽拼捨掃揤𢯱搢揅掩㨮摩摾撝摷㩬敬𣀊旣書晉㬙㬈㫤冒冕最暜肭䏙朡杞杓𣏃㭉柺枅桒𣑭梎栟椔楂榣槪檨𣚣櫛㰘次𣢧歔㱎歲殟殻𣪍𡴋𣫺汎𣲼沿泍汧洖派浩浸涅𣴞洴港湮㴳滇𣻑淹潮𣽞𣾎濆瀹瀛㶖灊災灷炭𠔥煅𤉣熜爨牐𤘈犀犕𤜵𤠔獺王㺬玥㺸瑇瑜璅瓊㼛甤𤰶甾𤲒𢆟瘐𤾡𤾸𥁄㿼䀈𥃳𥃲𥄙𥄳眞真瞋䁆䂖𥐝硎䃣𥘦𥚚𥛅秫䄯穊穏𥥼𥪧䈂𥮫篆築䈧𥲀糒䊠糨糣紀𥾆絣䌁緇縂繅䌴𦈨𦉇䍙𦋙罺𦌾羕翺𦓚𦔣聠𦖨聰𣍟䏕育脃䐋脾媵𦞧𦞵𣎓𣎜舄辞䑫芑芋芝劳花芳芽苦𦬼茝荣莭茣莽菧荓菊菌菜𦰶𦵫𦳕䔫蓱蓳蔖𧏊蕤𦼬䕝䕡𦾱𧃒䕫虐虧虩蚩蚈蜎蛢蜨蝫螆蟡蠁䗹衠𧙧裗裞䘵裺㒻𧢮𧥦䚾䛇誠𧲨貫賁贛起𧼯𠠄跋趼跰𠣞軔𨗒𨗭邔郱鄑𨜮鄛鈸鋗鋘鉼鏹鐕𨯺開䦕閷𨵷䧦雃嶲霣𩅅𩈚䩮䩶韠𩐊䪲𩒖頩𩖶飢䬳餩馧駂駾䯎𩬰鱀鳽䳎䳭鵧𪃎䳸𪄅𪈎𪊑䵖黾鼅鼏鼖𪘀",
                mapChar: function mapChar(r) {
                    return r >= 196608 ? r >= 917760 && r <= 917999 ? 18874368 : 0 : t[e[r >> 4]][15 & r]
                }
            };
            var t, e
        }.apply(e, [])) || (t.exports = n)
    }, function (t, e, r) {
        t.exports = [{
            constant: !0,
            inputs: [{
                name: "node",
                type: "bytes32"
            }],
            name: "resolver",
            outputs: [{
                name: "",
                type: "address"
            }],
            payable: !1,
            type: "function"
        }, {
            constant: !0,
            inputs: [{
                name: "node",
                type: "bytes32"
            }],
            name: "owner",
            outputs: [{
                name: "",
                type: "address"
            }],
            payable: !1,
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                name: "node",
                type: "bytes32"
            }, {
                name: "label",
                type: "bytes32"
            }, {
                name: "owner",
                type: "address"
            }],
            name: "setSubnodeOwner",
            outputs: [],
            payable: !1,
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                name: "node",
                type: "bytes32"
            }, {
                name: "ttl",
                type: "uint64"
            }],
            name: "setTTL",
            outputs: [],
            payable: !1,
            type: "function"
        }, {
            constant: !0,
            inputs: [{
                name: "node",
                type: "bytes32"
            }],
            name: "ttl",
            outputs: [{
                name: "",
                type: "uint64"
            }],
            payable: !1,
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                name: "node",
                type: "bytes32"
            }, {
                name: "resolver",
                type: "address"
            }],
            name: "setResolver",
            outputs: [],
            payable: !1,
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                name: "node",
                type: "bytes32"
            }, {
                name: "owner",
                type: "address"
            }],
            name: "setOwner",
            outputs: [],
            payable: !1,
            type: "function"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                name: "owner",
                type: "address"
            }],
            name: "Transfer",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                name: "node",
                type: "bytes32"
            }, {
                indexed: !0,
                name: "label",
                type: "bytes32"
            }, {
                indexed: !1,
                name: "owner",
                type: "address"
            }],
            name: "NewOwner",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                name: "resolver",
                type: "address"
            }],
            name: "NewResolver",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                name: "ttl",
                type: "uint64"
            }],
            name: "NewTTL",
            type: "event"
        }, {
            constant: !1,
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                internalType: "address",
                name: "owner",
                type: "address"
            }, {
                internalType: "address",
                name: "resolver",
                type: "address"
            }, {
                internalType: "uint64",
                name: "ttl",
                type: "uint64"
            }],
            name: "setRecord",
            outputs: [],
            payable: !1,
            stateMutability: "nonpayable",
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                internalType: "address",
                name: "operator",
                type: "address"
            }, {
                internalType: "bool",
                name: "approved",
                type: "bool"
            }],
            name: "setApprovalForAll",
            outputs: [],
            payable: !1,
            stateMutability: "nonpayable",
            type: "function"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "address",
                name: "owner",
                type: "address"
            }, {
                indexed: !0,
                internalType: "address",
                name: "operator",
                type: "address"
            }, {
                indexed: !1,
                internalType: "bool",
                name: "approved",
                type: "bool"
            }],
            name: "ApprovalForAll",
            type: "event"
        }, {
            constant: !0,
            inputs: [{
                internalType: "address",
                name: "owner",
                type: "address"
            }, {
                internalType: "address",
                name: "operator",
                type: "address"
            }],
            name: "isApprovedForAll",
            outputs: [{
                internalType: "bool",
                name: "",
                type: "bool"
            }],
            payable: !1,
            stateMutability: "view",
            type: "function"
        }, {
            constant: !0,
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }],
            name: "recordExists",
            outputs: [{
                internalType: "bool",
                name: "",
                type: "bool"
            }],
            payable: !1,
            stateMutability: "view",
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                internalType: "bytes32",
                name: "label",
                type: "bytes32"
            }, {
                internalType: "address",
                name: "owner",
                type: "address"
            }, {
                internalType: "address",
                name: "resolver",
                type: "address"
            }, {
                internalType: "uint64",
                name: "ttl",
                type: "uint64"
            }],
            name: "setSubnodeRecord",
            outputs: [],
            payable: !1,
            stateMutability: "nonpayable",
            type: "function"
        }]
    }, function (t, e, r) {
        t.exports = [{
            constant: !0,
            inputs: [{
                name: "interfaceID",
                type: "bytes4"
            }],
            name: "supportsInterface",
            outputs: [{
                name: "",
                type: "bool"
            }],
            payable: !1,
            type: "function"
        }, {
            constant: !0,
            inputs: [{
                name: "node",
                type: "bytes32"
            }, {
                name: "contentTypes",
                type: "uint256"
            }],
            name: "ABI",
            outputs: [{
                name: "contentType",
                type: "uint256"
            }, {
                name: "data",
                type: "bytes"
            }],
            payable: !1,
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                name: "node",
                type: "bytes32"
            }, {
                name: "hash",
                type: "bytes"
            }],
            name: "setMultihash",
            outputs: [],
            payable: !1,
            stateMutability: "nonpayable",
            type: "function"
        }, {
            constant: !0,
            inputs: [{
                name: "node",
                type: "bytes32"
            }],
            name: "multihash",
            outputs: [{
                name: "",
                type: "bytes"
            }],
            payable: !1,
            stateMutability: "view",
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                name: "node",
                type: "bytes32"
            }, {
                name: "x",
                type: "bytes32"
            }, {
                name: "y",
                type: "bytes32"
            }],
            name: "setPubkey",
            outputs: [],
            payable: !1,
            type: "function"
        }, {
            constant: !0,
            inputs: [{
                name: "node",
                type: "bytes32"
            }],
            name: "content",
            outputs: [{
                name: "ret",
                type: "bytes32"
            }],
            payable: !1,
            type: "function"
        }, {
            constant: !0,
            inputs: [{
                name: "node",
                type: "bytes32"
            }],
            name: "addr",
            outputs: [{
                name: "ret",
                type: "address"
            }],
            payable: !1,
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                name: "node",
                type: "bytes32"
            }, {
                name: "contentType",
                type: "uint256"
            }, {
                name: "data",
                type: "bytes"
            }],
            name: "setABI",
            outputs: [],
            payable: !1,
            type: "function"
        }, {
            constant: !0,
            inputs: [{
                name: "node",
                type: "bytes32"
            }],
            name: "name",
            outputs: [{
                name: "ret",
                type: "string"
            }],
            payable: !1,
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                name: "node",
                type: "bytes32"
            }, {
                name: "name",
                type: "string"
            }],
            name: "setName",
            outputs: [],
            payable: !1,
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                name: "node",
                type: "bytes32"
            }, {
                name: "hash",
                type: "bytes32"
            }],
            name: "setContent",
            outputs: [],
            payable: !1,
            type: "function"
        }, {
            constant: !0,
            inputs: [{
                name: "node",
                type: "bytes32"
            }],
            name: "pubkey",
            outputs: [{
                name: "x",
                type: "bytes32"
            }, {
                name: "y",
                type: "bytes32"
            }],
            payable: !1,
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                name: "node",
                type: "bytes32"
            }, {
                name: "addr",
                type: "address"
            }],
            name: "setAddr",
            outputs: [],
            payable: !1,
            type: "function"
        }, {
            inputs: [{
                name: "ensAddr",
                type: "address"
            }],
            payable: !1,
            type: "constructor"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                name: "a",
                type: "address"
            }],
            name: "AddrChanged",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                name: "hash",
                type: "bytes32"
            }],
            name: "ContentChanged",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                name: "name",
                type: "string"
            }],
            name: "NameChanged",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                name: "node",
                type: "bytes32"
            }, {
                indexed: !0,
                name: "contentType",
                type: "uint256"
            }],
            name: "ABIChanged",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                name: "x",
                type: "bytes32"
            }, {
                indexed: !1,
                name: "y",
                type: "bytes32"
            }],
            name: "PubkeyChanged",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                name: "hash",
                type: "bytes"
            }],
            name: "ContenthashChanged",
            type: "event"
        }, {
            constant: !0,
            inputs: [{
                name: "node",
                type: "bytes32"
            }],
            name: "contenthash",
            outputs: [{
                name: "",
                type: "bytes"
            }],
            payable: !1,
            stateMutability: "view",
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                name: "node",
                type: "bytes32"
            }, {
                name: "hash",
                type: "bytes"
            }],
            name: "setContenthash",
            outputs: [],
            payable: !1,
            stateMutability: "nonpayable",
            type: "function"
        }]
    }, function (t, e, r) {
        var n = r(128),
            i = r(295),
            o = r(10).errors,
            a = r(290).interfaceIds;

        function ResolverMethodHandler(t) {
            this.registry = t
        }
        ResolverMethodHandler.prototype.method = function (t, e, r, n, i) {
            return {
                call: this.call.bind({
                    ensName: t,
                    methodName: e,
                    methodArguments: r,
                    callback: i,
                    parent: this,
                    outputFormatter: n
                }),
                send: this.send.bind({
                    ensName: t,
                    methodName: e,
                    methodArguments: r,
                    callback: i,
                    parent: this
                })
            }
        }, ResolverMethodHandler.prototype.call = function (t) {
            var e = this,
                r = new n,
                i = this.parent.prepareArguments(this.ensName, this.methodArguments),
                o = this.outputFormatter || null;
            return this.parent.registry.getResolver(this.ensName).then((async function (n) {
                await e.parent.checkInterfaceSupport(n, e.methodName), e.parent.handleCall(r, n.methods[e.methodName], i, o, t)
            })).catch((function (e) {
                "function" != typeof t ? r.reject(e) : t(e, null)
            })), r.eventEmitter
        }, ResolverMethodHandler.prototype.send = function (t, e) {
            var r = this,
                i = new n,
                o = this.parent.prepareArguments(this.ensName, this.methodArguments);
            return this.parent.registry.getResolver(this.ensName).then((async function (n) {
                await r.parent.checkInterfaceSupport(n, r.methodName), r.parent.handleSend(i, n.methods[r.methodName], o, t, e)
            })).catch((function (t) {
                "function" != typeof e ? i.reject(t) : e(t, null)
            })), i.eventEmitter
        }, ResolverMethodHandler.prototype.handleCall = function (t, e, r, n, i) {
            return e.apply(this, r).call().then((function (e) {
                n && (e = n(e)), "function" != typeof i ? t.resolve(e) : i(e, e)
            })).catch((function (e) {
                "function" != typeof i ? t.reject(e) : i(e, null)
            })), t
        }, ResolverMethodHandler.prototype.handleSend = function (t, e, r, n, i) {
            return e.apply(this, r).send(n).on("sending", (function () {
                t.eventEmitter.emit("sending")
            })).on("sent", (function () {
                t.eventEmitter.emit("sent")
            })).on("transactionHash", (function (e) {
                t.eventEmitter.emit("transactionHash", e)
            })).on("confirmation", (function (e, r) {
                t.eventEmitter.emit("confirmation", e, r)
            })).on("receipt", (function (e) {
                t.eventEmitter.emit("receipt", e), t.resolve(e), "function" == typeof i && i(e, e)
            })).on("error", (function (e) {
                t.eventEmitter.emit("error", e), "function" != typeof i ? t.reject(e) : i(e, null)
            })), t
        }, ResolverMethodHandler.prototype.prepareArguments = function (t, e) {
            var r = i.hash(t);
            return e.length > 0 ? (e.unshift(r), e) : [r]
        }, ResolverMethodHandler.prototype.checkInterfaceSupport = async function (t, e) {
            if (a[e]) {
                var r = !1;
                try {
                    r = await t.methods.supportsInterface(a[e]).call()
                } catch (e) {
                    console.warn('Could not verify interface of resolver contract at "' + t.options.address + '". ')
                }
                if (!r) throw o.ResolverMethodMissingError(t.options.address, e)
            }
        }, t.exports = ResolverMethodHandler
    }, function (t, e, r) {
        var n = r(742);
        t.exports = {
            decode: function decode(t) {
                var e = null,
                    r = null,
                    i = null;
                if (t && t.error) return {
                    protocolType: null,
                    decoded: t.error
                };
                if (t) try {
                    e = n.decode(t);
                    var o = n.getCodec(t);
                    "ipfs-ns" === o ? r = "ipfs" : "swarm-ns" === o ? r = "bzz" : "onion" === o ? r = "onion" : "onion3" === o ? r = "onion3" : e = t
                } catch (t) {
                    i = t.message
                }
                return {
                    protocolType: r,
                    decoded: e,
                    error: i
                }
            },
            encode: function encode(t) {
                var e, r, i = !1;
                if (t) {
                    var o = t.match(/^(ipfs|bzz|onion|onion3):\/\/(.*)/) || t.match(/\/(ipfs)\/(.*)/);
                    o && (r = o[1], e = o[2]);
                    try {
                        if ("ipfs" === r) e.length >= 4 && (i = "0x" + n.fromIpfs(e));
                        else if ("bzz" === r) e.length >= 4 && (i = "0x" + n.fromSwarm(e));
                        else if ("onion" === r) 16 === e.length && (i = "0x" + n.encode("onion", e));
                        else {
                            if ("onion3" !== r) throw new Error("Could not encode content hash: unsupported content type");
                            56 === e.length && (i = "0x" + n.encode("onion3", e))
                        }
                    } catch (t) {
                        throw t
                    }
                }
                return i
            }
        }
    }, function (t, e, r) {
        const n = r(743),
            {
                hexStringToBuffer: i,
                profiles: o
            } = r(751),
            {
                cidV0ToV1Base32: a
            } = r(772);
        t.exports = {
            helpers: {
                cidV0ToV1Base32: a
            },
            decode: function (t) {
                const e = i(t),
                    r = n.getCodec(e),
                    a = n.rmPrefix(e);
                let s = o[r];
                return s || (s = o.default), s.decode(a)
            },
            fromIpfs: function (t) {
                return this.encode("ipfs-ns", t)
            },
            fromSwarm: function (t) {
                return this.encode("swarm-ns", t)
            },
            encode: function (t, e) {
                let r = o[t];
                r || (r = o.default);
                const i = r.encode(e);
                return n.addPrefix(t, i).toString("hex")
            },
            getCodec: function (t) {
                let e = i(t);
                return n.getCodec(e)
            }
        }
    }, function (t, e, r) {
        (function (n) {
            const i = r(93),
                o = r(747),
                a = r(748),
                s = r(296);
            (e = t.exports).addPrefix = (t, e) => {
                let r;
                if (n.isBuffer(t)) r = s.varintBufferEncode(t);
                else {
                    if (!a[t]) throw new Error("multicodec not recognized");
                    r = a[t]
                }
                return n.concat([r, e])
            }, e.rmPrefix = t => (i.decode(t), t.slice(i.decode.bytes)), e.getCodec = t => {
                const e = i.decode(t),
                    r = o.get(e);
                if (void 0 === r) throw new Error(`Code ${e} not found`);
                return r
            }, e.getName = t => o.get(t), e.getNumber = t => {
                const e = a[t];
                if (void 0 === e) throw new Error("Codec `" + t + "` not found");
                return s.varintBufferDecode(e)[0]
            }, e.getCode = t => i.decode(t), e.getCodeVarint = t => {
                const e = a[t];
                if (void 0 === e) throw new Error("Codec `" + t + "` not found");
                return e
            }, e.getVarint = t => i.encode(t);
            const u = r(749);
            Object.assign(e, u), e.print = r(750)
        }).call(this, r(0).Buffer)
    }, function (t, e) {
        t.exports = function encode(t, e, n) {
            e = e || [];
            var i = n = n || 0;
            for (; t >= r;) e[n++] = 255 & t | 128, t /= 128;
            for (; - 128 & t;) e[n++] = 255 & t | 128, t >>>= 7;
            return e[n] = 0 | t, encode.bytes = n - i + 1, e
        };
        var r = Math.pow(2, 31)
    }, function (t, e) {
        t.exports = function read(t, e) {
            var r, n = 0,
                i = 0,
                o = e = e || 0,
                a = t.length;
            do {
                if (o >= a) throw read.bytes = 0, new RangeError("Could not decode varint");
                r = t[o++], n += i < 28 ? (127 & r) << i : (127 & r) * Math.pow(2, i), i += 7
            } while (r >= 128);
            return read.bytes = o - e, n
        }
    }, function (t, e) {
        var r = Math.pow(2, 7),
            n = Math.pow(2, 14),
            i = Math.pow(2, 21),
            o = Math.pow(2, 28),
            a = Math.pow(2, 35),
            s = Math.pow(2, 42),
            u = Math.pow(2, 49),
            c = Math.pow(2, 56),
            l = Math.pow(2, 63);
        t.exports = function (t) {
            return t < r ? 1 : t < n ? 2 : t < i ? 3 : t < o ? 4 : t < a ? 5 : t < s ? 6 : t < u ? 7 : t < c ? 8 : t < l ? 9 : 10
        }
    }, function (t, e, r) {
        const n = r(129),
            i = new Map;
        for (const t in n) {
            const e = n[t];
            i.set(e, t)
        }
        t.exports = Object.freeze(i)
    }, function (t, e, r) {
        const n = r(129),
            i = r(296).varintEncode,
            o = {};
        for (const t in n) {
            const e = n[t];
            o[t] = i(e)
        }
        t.exports = Object.freeze(o)
    }, function (t, e, r) {
        const n = r(129),
            i = {};
        for (const [t, e] of Object.entries(n)) i[t.toUpperCase().replace(/-/g, "_")] = e;
        t.exports = Object.freeze(i)
    }, function (t, e, r) {
        const n = r(129),
            i = {};
        for (const [t, e] of Object.entries(n)) void 0 === i[e] && (i[e] = t);
        t.exports = Object.freeze(i)
    }, function (t, e, r) {
        (function (t) {
            const n = r(297),
                i = r(192),
                hexStringToBuffer = t => {
                    let e = t.slice(0, 2),
                        r = t.slice(2),
                        n = "";
                    return n = "0x" === e ? r : t, i.fromHexString(n)
                },
                o = {
                    swarm: t => {
                        const e = i.encode(hexStringToBuffer(t), "keccak-256");
                        return new n(1, "swarm-manifest", e).buffer
                    },
                    ipfs: t => {
                        const e = i.fromB58String(t);
                        return new n(1, "dag-pb", e).buffer
                    },
                    utf8: e => t.from(e, "utf8")
                },
                a = {
                    hexMultiHash: t => {
                        const e = new n(t);
                        return i.decode(e.multihash).digest.toString("hex")
                    },
                    b58MultiHash: t => {
                        const e = new n(t);
                        return i.toB58String(e.multihash)
                    },
                    utf8: t => t.toString("utf8")
                },
                s = {
                    "swarm-ns": {
                        encode: o.swarm,
                        decode: a.hexMultiHash
                    },
                    "ipfs-ns": {
                        encode: o.ipfs,
                        decode: a.b58MultiHash
                    },
                    "ipns-ns": {
                        encode: o.ipfs,
                        decode: a.b58MultiHash
                    },
                    default: {
                        encode: o.utf8,
                        decode: a.utf8
                    }
                };
            e.hexStringToBuffer = hexStringToBuffer, e.profiles = s
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        const {
            Buffer: n
        } = r(0), i = r(753);

        function multibase(t, e) {
            if (!e) throw new Error("requires an encoded buffer");
            const r = getBase(t),
                i = n.from(r.code);
            return function validEncode(t, e) {
                getBase(t).decode(e.toString())
            }(r.name, e), n.concat([i, e])
        }

        function getBase(t) {
            let e;
            if (i.names[t]) e = i.names[t];
            else {
                if (!i.codes[t]) throw new Error("Unsupported encoding");
                e = i.codes[t]
            }
            if (!e.isImplemented()) throw new Error("Base " + t + " is not implemented yet");
            return e
        }(e = t.exports = multibase).encode = function encode(t, e) {
            const r = getBase(t);
            return multibase(r.name, n.from(r.encode(e)))
        }, e.decode = function decode(t) {
            n.isBuffer(t) && (t = t.toString());
            const e = t.substring(0, 1);
            "string" == typeof (t = t.substring(1, t.length)) && (t = n.from(t));
            const r = getBase(e);
            return n.from(r.decode(t.toString()))
        }, e.isEncoded = function isEncoded(t) {
            n.isBuffer(t) && (t = t.toString());
            if ("[object String]" !== Object.prototype.toString.call(t)) return !1;
            const e = t.substring(0, 1);
            try {
                return getBase(e).name
            } catch (t) {
                return !1
            }
        }, e.names = Object.freeze(Object.keys(i.names)), e.codes = Object.freeze(Object.keys(i.codes))
    }, function (t, e, r) {
        const n = r(754),
            i = r(298),
            o = r(755),
            a = r(756),
            s = r(757),
            u = [
                ["base1", "1", "", "1"],
                ["base2", "0", i, "01"],
                ["base8", "7", i, "01234567"],
                ["base10", "9", i, "0123456789"],
                ["base16", "f", o, "0123456789abcdef"],
                ["base32", "b", a, "abcdefghijklmnopqrstuvwxyz234567"],
                ["base32pad", "c", a, "abcdefghijklmnopqrstuvwxyz234567="],
                ["base32hex", "v", a, "0123456789abcdefghijklmnopqrstuv"],
                ["base32hexpad", "t", a, "0123456789abcdefghijklmnopqrstuv="],
                ["base32z", "h", a, "ybndrfg8ejkmcpqxot1uwisza345h769"],
                ["base58flickr", "Z", i, "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"],
                ["base58btc", "z", i, "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"],
                ["base64", "m", s, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"],
                ["base64pad", "M", s, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="],
                ["base64url", "u", s, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"],
                ["base64urlpad", "U", s, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_="]
            ],
            c = u.reduce((t, e) => (t[e[0]] = new n(e[0], e[1], e[2], e[3]), t), {}),
            l = u.reduce((t, e) => (t[e[1]] = c[e[0]], t), {});
        t.exports = {
            names: c,
            codes: l
        }
    }, function (t, e, r) {
        t.exports = class Base {
            constructor(t, e, r, n) {
                this.name = t, this.code = e, this.alphabet = n, r && n && (this.engine = r(n))
            }
            encode(t) {
                return this.engine.encode(t)
            }
            decode(t) {
                return this.engine.decode(t)
            }
            isImplemented() {
                return this.engine
            }
        }
    }, function (t, e, r) {
        const {
            Buffer: n
        } = r(0);
        t.exports = function base16(t) {
            return {
                encode: t => "string" == typeof t ? n.from(t).toString("hex") : t.toString("hex"),
                decode(e) {
                    for (const r of e)
                        if (t.indexOf(r) < 0) throw new Error("invalid base16 character");
                    return n.from(e, "hex")
                }
            }
        }
    }, function (t, e, r) {
        function encode(t, e) {
            const r = t.byteLength,
                n = new Uint8Array(t),
                i = e.indexOf("=") === e.length - 1;
            i && (e = e.substring(0, e.length - 1));
            let o = 0,
                a = 0,
                s = "";
            for (let t = 0; t < r; t++)
                for (a = a << 8 | n[t], o += 8; o >= 5;) s += e[a >>> o - 5 & 31], o -= 5;
            if (o > 0 && (s += e[a << 5 - o & 31]), i)
                for (; s.length % 8 != 0;) s += "=";
            return s
        }
        t.exports = function base32(t) {
            return {
                encode: e => encode("string" == typeof e ? Uint8Array.from(e) : e, t),
                decode(e) {
                    for (const r of e)
                        if (t.indexOf(r) < 0) throw new Error("invalid base32 character");
                    return function decode(t, e) {
                        const r = (t = t.replace(new RegExp("=", "g"), "")).length;
                        let n = 0,
                            i = 0,
                            o = 0;
                        const a = new Uint8Array(5 * r / 8 | 0);
                        for (let s = 0; s < r; s++) i = i << 5 | e.indexOf(t[s]), n += 5, n >= 8 && (a[o++] = i >>> n - 8 & 255, n -= 8);
                        return a.buffer
                    }(e, t)
                }
            }
        }
    }, function (t, e, r) {
        const {
            Buffer: n
        } = r(0);
        t.exports = function base64(t) {
            const e = t.indexOf("=") > -1,
                r = t.indexOf("-") > -1 && t.indexOf("_") > -1;
            return {
                encode(t) {
                    let i = "";
                    i = "string" == typeof t ? n.from(t).toString("base64") : t.toString("base64"), r && (i = i.replace(/\+/g, "-").replace(/\//g, "_"));
                    const o = i.indexOf("=");
                    return o > 0 && !e && (i = i.substring(0, o)), i
                },
                decode(e) {
                    for (const r of e)
                        if (t.indexOf(r) < 0) throw new Error("invalid base64 character");
                    return n.from(e, "base64")
                }
            }
        }
    }, function (t, e, r) {
        e.names = Object.freeze({
            identity: 0,
            sha1: 17,
            "sha2-256": 18,
            "sha2-512": 19,
            "dbl-sha2-256": 86,
            "sha3-224": 23,
            "sha3-256": 22,
            "sha3-384": 21,
            "sha3-512": 20,
            "shake-128": 24,
            "shake-256": 25,
            "keccak-224": 26,
            "keccak-256": 27,
            "keccak-384": 28,
            "keccak-512": 29,
            "murmur3-128": 34,
            "murmur3-32": 35,
            md4: 212,
            md5: 213,
            "blake2b-8": 45569,
            "blake2b-16": 45570,
            "blake2b-24": 45571,
            "blake2b-32": 45572,
            "blake2b-40": 45573,
            "blake2b-48": 45574,
            "blake2b-56": 45575,
            "blake2b-64": 45576,
            "blake2b-72": 45577,
            "blake2b-80": 45578,
            "blake2b-88": 45579,
            "blake2b-96": 45580,
            "blake2b-104": 45581,
            "blake2b-112": 45582,
            "blake2b-120": 45583,
            "blake2b-128": 45584,
            "blake2b-136": 45585,
            "blake2b-144": 45586,
            "blake2b-152": 45587,
            "blake2b-160": 45588,
            "blake2b-168": 45589,
            "blake2b-176": 45590,
            "blake2b-184": 45591,
            "blake2b-192": 45592,
            "blake2b-200": 45593,
            "blake2b-208": 45594,
            "blake2b-216": 45595,
            "blake2b-224": 45596,
            "blake2b-232": 45597,
            "blake2b-240": 45598,
            "blake2b-248": 45599,
            "blake2b-256": 45600,
            "blake2b-264": 45601,
            "blake2b-272": 45602,
            "blake2b-280": 45603,
            "blake2b-288": 45604,
            "blake2b-296": 45605,
            "blake2b-304": 45606,
            "blake2b-312": 45607,
            "blake2b-320": 45608,
            "blake2b-328": 45609,
            "blake2b-336": 45610,
            "blake2b-344": 45611,
            "blake2b-352": 45612,
            "blake2b-360": 45613,
            "blake2b-368": 45614,
            "blake2b-376": 45615,
            "blake2b-384": 45616,
            "blake2b-392": 45617,
            "blake2b-400": 45618,
            "blake2b-408": 45619,
            "blake2b-416": 45620,
            "blake2b-424": 45621,
            "blake2b-432": 45622,
            "blake2b-440": 45623,
            "blake2b-448": 45624,
            "blake2b-456": 45625,
            "blake2b-464": 45626,
            "blake2b-472": 45627,
            "blake2b-480": 45628,
            "blake2b-488": 45629,
            "blake2b-496": 45630,
            "blake2b-504": 45631,
            "blake2b-512": 45632,
            "blake2s-8": 45633,
            "blake2s-16": 45634,
            "blake2s-24": 45635,
            "blake2s-32": 45636,
            "blake2s-40": 45637,
            "blake2s-48": 45638,
            "blake2s-56": 45639,
            "blake2s-64": 45640,
            "blake2s-72": 45641,
            "blake2s-80": 45642,
            "blake2s-88": 45643,
            "blake2s-96": 45644,
            "blake2s-104": 45645,
            "blake2s-112": 45646,
            "blake2s-120": 45647,
            "blake2s-128": 45648,
            "blake2s-136": 45649,
            "blake2s-144": 45650,
            "blake2s-152": 45651,
            "blake2s-160": 45652,
            "blake2s-168": 45653,
            "blake2s-176": 45654,
            "blake2s-184": 45655,
            "blake2s-192": 45656,
            "blake2s-200": 45657,
            "blake2s-208": 45658,
            "blake2s-216": 45659,
            "blake2s-224": 45660,
            "blake2s-232": 45661,
            "blake2s-240": 45662,
            "blake2s-248": 45663,
            "blake2s-256": 45664,
            "Skein256-8": 45825,
            "Skein256-16": 45826,
            "Skein256-24": 45827,
            "Skein256-32": 45828,
            "Skein256-40": 45829,
            "Skein256-48": 45830,
            "Skein256-56": 45831,
            "Skein256-64": 45832,
            "Skein256-72": 45833,
            "Skein256-80": 45834,
            "Skein256-88": 45835,
            "Skein256-96": 45836,
            "Skein256-104": 45837,
            "Skein256-112": 45838,
            "Skein256-120": 45839,
            "Skein256-128": 45840,
            "Skein256-136": 45841,
            "Skein256-144": 45842,
            "Skein256-152": 45843,
            "Skein256-160": 45844,
            "Skein256-168": 45845,
            "Skein256-176": 45846,
            "Skein256-184": 45847,
            "Skein256-192": 45848,
            "Skein256-200": 45849,
            "Skein256-208": 45850,
            "Skein256-216": 45851,
            "Skein256-224": 45852,
            "Skein256-232": 45853,
            "Skein256-240": 45854,
            "Skein256-248": 45855,
            "Skein256-256": 45856,
            "Skein512-8": 45857,
            "Skein512-16": 45858,
            "Skein512-24": 45859,
            "Skein512-32": 45860,
            "Skein512-40": 45861,
            "Skein512-48": 45862,
            "Skein512-56": 45863,
            "Skein512-64": 45864,
            "Skein512-72": 45865,
            "Skein512-80": 45866,
            "Skein512-88": 45867,
            "Skein512-96": 45868,
            "Skein512-104": 45869,
            "Skein512-112": 45870,
            "Skein512-120": 45871,
            "Skein512-128": 45872,
            "Skein512-136": 45873,
            "Skein512-144": 45874,
            "Skein512-152": 45875,
            "Skein512-160": 45876,
            "Skein512-168": 45877,
            "Skein512-176": 45878,
            "Skein512-184": 45879,
            "Skein512-192": 45880,
            "Skein512-200": 45881,
            "Skein512-208": 45882,
            "Skein512-216": 45883,
            "Skein512-224": 45884,
            "Skein512-232": 45885,
            "Skein512-240": 45886,
            "Skein512-248": 45887,
            "Skein512-256": 45888,
            "Skein512-264": 45889,
            "Skein512-272": 45890,
            "Skein512-280": 45891,
            "Skein512-288": 45892,
            "Skein512-296": 45893,
            "Skein512-304": 45894,
            "Skein512-312": 45895,
            "Skein512-320": 45896,
            "Skein512-328": 45897,
            "Skein512-336": 45898,
            "Skein512-344": 45899,
            "Skein512-352": 45900,
            "Skein512-360": 45901,
            "Skein512-368": 45902,
            "Skein512-376": 45903,
            "Skein512-384": 45904,
            "Skein512-392": 45905,
            "Skein512-400": 45906,
            "Skein512-408": 45907,
            "Skein512-416": 45908,
            "Skein512-424": 45909,
            "Skein512-432": 45910,
            "Skein512-440": 45911,
            "Skein512-448": 45912,
            "Skein512-456": 45913,
            "Skein512-464": 45914,
            "Skein512-472": 45915,
            "Skein512-480": 45916,
            "Skein512-488": 45917,
            "Skein512-496": 45918,
            "Skein512-504": 45919,
            "Skein512-512": 45920,
            "Skein1024-8": 45921,
            "Skein1024-16": 45922,
            "Skein1024-24": 45923,
            "Skein1024-32": 45924,
            "Skein1024-40": 45925,
            "Skein1024-48": 45926,
            "Skein1024-56": 45927,
            "Skein1024-64": 45928,
            "Skein1024-72": 45929,
            "Skein1024-80": 45930,
            "Skein1024-88": 45931,
            "Skein1024-96": 45932,
            "Skein1024-104": 45933,
            "Skein1024-112": 45934,
            "Skein1024-120": 45935,
            "Skein1024-128": 45936,
            "Skein1024-136": 45937,
            "Skein1024-144": 45938,
            "Skein1024-152": 45939,
            "Skein1024-160": 45940,
            "Skein1024-168": 45941,
            "Skein1024-176": 45942,
            "Skein1024-184": 45943,
            "Skein1024-192": 45944,
            "Skein1024-200": 45945,
            "Skein1024-208": 45946,
            "Skein1024-216": 45947,
            "Skein1024-224": 45948,
            "Skein1024-232": 45949,
            "Skein1024-240": 45950,
            "Skein1024-248": 45951,
            "Skein1024-256": 45952,
            "Skein1024-264": 45953,
            "Skein1024-272": 45954,
            "Skein1024-280": 45955,
            "Skein1024-288": 45956,
            "Skein1024-296": 45957,
            "Skein1024-304": 45958,
            "Skein1024-312": 45959,
            "Skein1024-320": 45960,
            "Skein1024-328": 45961,
            "Skein1024-336": 45962,
            "Skein1024-344": 45963,
            "Skein1024-352": 45964,
            "Skein1024-360": 45965,
            "Skein1024-368": 45966,
            "Skein1024-376": 45967,
            "Skein1024-384": 45968,
            "Skein1024-392": 45969,
            "Skein1024-400": 45970,
            "Skein1024-408": 45971,
            "Skein1024-416": 45972,
            "Skein1024-424": 45973,
            "Skein1024-432": 45974,
            "Skein1024-440": 45975,
            "Skein1024-448": 45976,
            "Skein1024-456": 45977,
            "Skein1024-464": 45978,
            "Skein1024-472": 45979,
            "Skein1024-480": 45980,
            "Skein1024-488": 45981,
            "Skein1024-496": 45982,
            "Skein1024-504": 45983,
            "Skein1024-512": 45984,
            "Skein1024-520": 45985,
            "Skein1024-528": 45986,
            "Skein1024-536": 45987,
            "Skein1024-544": 45988,
            "Skein1024-552": 45989,
            "Skein1024-560": 45990,
            "Skein1024-568": 45991,
            "Skein1024-576": 45992,
            "Skein1024-584": 45993,
            "Skein1024-592": 45994,
            "Skein1024-600": 45995,
            "Skein1024-608": 45996,
            "Skein1024-616": 45997,
            "Skein1024-624": 45998,
            "Skein1024-632": 45999,
            "Skein1024-640": 46e3,
            "Skein1024-648": 46001,
            "Skein1024-656": 46002,
            "Skein1024-664": 46003,
            "Skein1024-672": 46004,
            "Skein1024-680": 46005,
            "Skein1024-688": 46006,
            "Skein1024-696": 46007,
            "Skein1024-704": 46008,
            "Skein1024-712": 46009,
            "Skein1024-720": 46010,
            "Skein1024-728": 46011,
            "Skein1024-736": 46012,
            "Skein1024-744": 46013,
            "Skein1024-752": 46014,
            "Skein1024-760": 46015,
            "Skein1024-768": 46016,
            "Skein1024-776": 46017,
            "Skein1024-784": 46018,
            "Skein1024-792": 46019,
            "Skein1024-800": 46020,
            "Skein1024-808": 46021,
            "Skein1024-816": 46022,
            "Skein1024-824": 46023,
            "Skein1024-832": 46024,
            "Skein1024-840": 46025,
            "Skein1024-848": 46026,
            "Skein1024-856": 46027,
            "Skein1024-864": 46028,
            "Skein1024-872": 46029,
            "Skein1024-880": 46030,
            "Skein1024-888": 46031,
            "Skein1024-896": 46032,
            "Skein1024-904": 46033,
            "Skein1024-912": 46034,
            "Skein1024-920": 46035,
            "Skein1024-928": 46036,
            "Skein1024-936": 46037,
            "Skein1024-944": 46038,
            "Skein1024-952": 46039,
            "Skein1024-960": 46040,
            "Skein1024-968": 46041,
            "Skein1024-976": 46042,
            "Skein1024-984": 46043,
            "Skein1024-992": 46044,
            "Skein1024-1000": 46045,
            "Skein1024-1008": 46046,
            "Skein1024-1016": 46047,
            "Skein1024-1024": 46048
        }), e.codes = Object.freeze({
            0: "identity",
            17: "sha1",
            18: "sha2-256",
            19: "sha2-512",
            86: "dbl-sha2-256",
            23: "sha3-224",
            22: "sha3-256",
            21: "sha3-384",
            20: "sha3-512",
            24: "shake-128",
            25: "shake-256",
            26: "keccak-224",
            27: "keccak-256",
            28: "keccak-384",
            29: "keccak-512",
            34: "murmur3-128",
            35: "murmur3-32",
            212: "md4",
            213: "md5",
            45569: "blake2b-8",
            45570: "blake2b-16",
            45571: "blake2b-24",
            45572: "blake2b-32",
            45573: "blake2b-40",
            45574: "blake2b-48",
            45575: "blake2b-56",
            45576: "blake2b-64",
            45577: "blake2b-72",
            45578: "blake2b-80",
            45579: "blake2b-88",
            45580: "blake2b-96",
            45581: "blake2b-104",
            45582: "blake2b-112",
            45583: "blake2b-120",
            45584: "blake2b-128",
            45585: "blake2b-136",
            45586: "blake2b-144",
            45587: "blake2b-152",
            45588: "blake2b-160",
            45589: "blake2b-168",
            45590: "blake2b-176",
            45591: "blake2b-184",
            45592: "blake2b-192",
            45593: "blake2b-200",
            45594: "blake2b-208",
            45595: "blake2b-216",
            45596: "blake2b-224",
            45597: "blake2b-232",
            45598: "blake2b-240",
            45599: "blake2b-248",
            45600: "blake2b-256",
            45601: "blake2b-264",
            45602: "blake2b-272",
            45603: "blake2b-280",
            45604: "blake2b-288",
            45605: "blake2b-296",
            45606: "blake2b-304",
            45607: "blake2b-312",
            45608: "blake2b-320",
            45609: "blake2b-328",
            45610: "blake2b-336",
            45611: "blake2b-344",
            45612: "blake2b-352",
            45613: "blake2b-360",
            45614: "blake2b-368",
            45615: "blake2b-376",
            45616: "blake2b-384",
            45617: "blake2b-392",
            45618: "blake2b-400",
            45619: "blake2b-408",
            45620: "blake2b-416",
            45621: "blake2b-424",
            45622: "blake2b-432",
            45623: "blake2b-440",
            45624: "blake2b-448",
            45625: "blake2b-456",
            45626: "blake2b-464",
            45627: "blake2b-472",
            45628: "blake2b-480",
            45629: "blake2b-488",
            45630: "blake2b-496",
            45631: "blake2b-504",
            45632: "blake2b-512",
            45633: "blake2s-8",
            45634: "blake2s-16",
            45635: "blake2s-24",
            45636: "blake2s-32",
            45637: "blake2s-40",
            45638: "blake2s-48",
            45639: "blake2s-56",
            45640: "blake2s-64",
            45641: "blake2s-72",
            45642: "blake2s-80",
            45643: "blake2s-88",
            45644: "blake2s-96",
            45645: "blake2s-104",
            45646: "blake2s-112",
            45647: "blake2s-120",
            45648: "blake2s-128",
            45649: "blake2s-136",
            45650: "blake2s-144",
            45651: "blake2s-152",
            45652: "blake2s-160",
            45653: "blake2s-168",
            45654: "blake2s-176",
            45655: "blake2s-184",
            45656: "blake2s-192",
            45657: "blake2s-200",
            45658: "blake2s-208",
            45659: "blake2s-216",
            45660: "blake2s-224",
            45661: "blake2s-232",
            45662: "blake2s-240",
            45663: "blake2s-248",
            45664: "blake2s-256",
            45825: "Skein256-8",
            45826: "Skein256-16",
            45827: "Skein256-24",
            45828: "Skein256-32",
            45829: "Skein256-40",
            45830: "Skein256-48",
            45831: "Skein256-56",
            45832: "Skein256-64",
            45833: "Skein256-72",
            45834: "Skein256-80",
            45835: "Skein256-88",
            45836: "Skein256-96",
            45837: "Skein256-104",
            45838: "Skein256-112",
            45839: "Skein256-120",
            45840: "Skein256-128",
            45841: "Skein256-136",
            45842: "Skein256-144",
            45843: "Skein256-152",
            45844: "Skein256-160",
            45845: "Skein256-168",
            45846: "Skein256-176",
            45847: "Skein256-184",
            45848: "Skein256-192",
            45849: "Skein256-200",
            45850: "Skein256-208",
            45851: "Skein256-216",
            45852: "Skein256-224",
            45853: "Skein256-232",
            45854: "Skein256-240",
            45855: "Skein256-248",
            45856: "Skein256-256",
            45857: "Skein512-8",
            45858: "Skein512-16",
            45859: "Skein512-24",
            45860: "Skein512-32",
            45861: "Skein512-40",
            45862: "Skein512-48",
            45863: "Skein512-56",
            45864: "Skein512-64",
            45865: "Skein512-72",
            45866: "Skein512-80",
            45867: "Skein512-88",
            45868: "Skein512-96",
            45869: "Skein512-104",
            45870: "Skein512-112",
            45871: "Skein512-120",
            45872: "Skein512-128",
            45873: "Skein512-136",
            45874: "Skein512-144",
            45875: "Skein512-152",
            45876: "Skein512-160",
            45877: "Skein512-168",
            45878: "Skein512-176",
            45879: "Skein512-184",
            45880: "Skein512-192",
            45881: "Skein512-200",
            45882: "Skein512-208",
            45883: "Skein512-216",
            45884: "Skein512-224",
            45885: "Skein512-232",
            45886: "Skein512-240",
            45887: "Skein512-248",
            45888: "Skein512-256",
            45889: "Skein512-264",
            45890: "Skein512-272",
            45891: "Skein512-280",
            45892: "Skein512-288",
            45893: "Skein512-296",
            45894: "Skein512-304",
            45895: "Skein512-312",
            45896: "Skein512-320",
            45897: "Skein512-328",
            45898: "Skein512-336",
            45899: "Skein512-344",
            45900: "Skein512-352",
            45901: "Skein512-360",
            45902: "Skein512-368",
            45903: "Skein512-376",
            45904: "Skein512-384",
            45905: "Skein512-392",
            45906: "Skein512-400",
            45907: "Skein512-408",
            45908: "Skein512-416",
            45909: "Skein512-424",
            45910: "Skein512-432",
            45911: "Skein512-440",
            45912: "Skein512-448",
            45913: "Skein512-456",
            45914: "Skein512-464",
            45915: "Skein512-472",
            45916: "Skein512-480",
            45917: "Skein512-488",
            45918: "Skein512-496",
            45919: "Skein512-504",
            45920: "Skein512-512",
            45921: "Skein1024-8",
            45922: "Skein1024-16",
            45923: "Skein1024-24",
            45924: "Skein1024-32",
            45925: "Skein1024-40",
            45926: "Skein1024-48",
            45927: "Skein1024-56",
            45928: "Skein1024-64",
            45929: "Skein1024-72",
            45930: "Skein1024-80",
            45931: "Skein1024-88",
            45932: "Skein1024-96",
            45933: "Skein1024-104",
            45934: "Skein1024-112",
            45935: "Skein1024-120",
            45936: "Skein1024-128",
            45937: "Skein1024-136",
            45938: "Skein1024-144",
            45939: "Skein1024-152",
            45940: "Skein1024-160",
            45941: "Skein1024-168",
            45942: "Skein1024-176",
            45943: "Skein1024-184",
            45944: "Skein1024-192",
            45945: "Skein1024-200",
            45946: "Skein1024-208",
            45947: "Skein1024-216",
            45948: "Skein1024-224",
            45949: "Skein1024-232",
            45950: "Skein1024-240",
            45951: "Skein1024-248",
            45952: "Skein1024-256",
            45953: "Skein1024-264",
            45954: "Skein1024-272",
            45955: "Skein1024-280",
            45956: "Skein1024-288",
            45957: "Skein1024-296",
            45958: "Skein1024-304",
            45959: "Skein1024-312",
            45960: "Skein1024-320",
            45961: "Skein1024-328",
            45962: "Skein1024-336",
            45963: "Skein1024-344",
            45964: "Skein1024-352",
            45965: "Skein1024-360",
            45966: "Skein1024-368",
            45967: "Skein1024-376",
            45968: "Skein1024-384",
            45969: "Skein1024-392",
            45970: "Skein1024-400",
            45971: "Skein1024-408",
            45972: "Skein1024-416",
            45973: "Skein1024-424",
            45974: "Skein1024-432",
            45975: "Skein1024-440",
            45976: "Skein1024-448",
            45977: "Skein1024-456",
            45978: "Skein1024-464",
            45979: "Skein1024-472",
            45980: "Skein1024-480",
            45981: "Skein1024-488",
            45982: "Skein1024-496",
            45983: "Skein1024-504",
            45984: "Skein1024-512",
            45985: "Skein1024-520",
            45986: "Skein1024-528",
            45987: "Skein1024-536",
            45988: "Skein1024-544",
            45989: "Skein1024-552",
            45990: "Skein1024-560",
            45991: "Skein1024-568",
            45992: "Skein1024-576",
            45993: "Skein1024-584",
            45994: "Skein1024-592",
            45995: "Skein1024-600",
            45996: "Skein1024-608",
            45997: "Skein1024-616",
            45998: "Skein1024-624",
            45999: "Skein1024-632",
            46e3: "Skein1024-640",
            46001: "Skein1024-648",
            46002: "Skein1024-656",
            46003: "Skein1024-664",
            46004: "Skein1024-672",
            46005: "Skein1024-680",
            46006: "Skein1024-688",
            46007: "Skein1024-696",
            46008: "Skein1024-704",
            46009: "Skein1024-712",
            46010: "Skein1024-720",
            46011: "Skein1024-728",
            46012: "Skein1024-736",
            46013: "Skein1024-744",
            46014: "Skein1024-752",
            46015: "Skein1024-760",
            46016: "Skein1024-768",
            46017: "Skein1024-776",
            46018: "Skein1024-784",
            46019: "Skein1024-792",
            46020: "Skein1024-800",
            46021: "Skein1024-808",
            46022: "Skein1024-816",
            46023: "Skein1024-824",
            46024: "Skein1024-832",
            46025: "Skein1024-840",
            46026: "Skein1024-848",
            46027: "Skein1024-856",
            46028: "Skein1024-864",
            46029: "Skein1024-872",
            46030: "Skein1024-880",
            46031: "Skein1024-888",
            46032: "Skein1024-896",
            46033: "Skein1024-904",
            46034: "Skein1024-912",
            46035: "Skein1024-920",
            46036: "Skein1024-928",
            46037: "Skein1024-936",
            46038: "Skein1024-944",
            46039: "Skein1024-952",
            46040: "Skein1024-960",
            46041: "Skein1024-968",
            46042: "Skein1024-976",
            46043: "Skein1024-984",
            46044: "Skein1024-992",
            46045: "Skein1024-1000",
            46046: "Skein1024-1008",
            46047: "Skein1024-1016",
            46048: "Skein1024-1024"
        }), e.defaultLengths = Object.freeze({
            17: 20,
            18: 32,
            19: 64,
            86: 32,
            23: 28,
            22: 32,
            21: 48,
            20: 64,
            24: 32,
            25: 64,
            26: 28,
            27: 32,
            28: 48,
            29: 64,
            34: 32,
            45569: 1,
            45570: 2,
            45571: 3,
            45572: 4,
            45573: 5,
            45574: 6,
            45575: 7,
            45576: 8,
            45577: 9,
            45578: 10,
            45579: 11,
            45580: 12,
            45581: 13,
            45582: 14,
            45583: 15,
            45584: 16,
            45585: 17,
            45586: 18,
            45587: 19,
            45588: 20,
            45589: 21,
            45590: 22,
            45591: 23,
            45592: 24,
            45593: 25,
            45594: 26,
            45595: 27,
            45596: 28,
            45597: 29,
            45598: 30,
            45599: 31,
            45600: 32,
            45601: 33,
            45602: 34,
            45603: 35,
            45604: 36,
            45605: 37,
            45606: 38,
            45607: 39,
            45608: 40,
            45609: 41,
            45610: 42,
            45611: 43,
            45612: 44,
            45613: 45,
            45614: 46,
            45615: 47,
            45616: 48,
            45617: 49,
            45618: 50,
            45619: 51,
            45620: 52,
            45621: 53,
            45622: 54,
            45623: 55,
            45624: 56,
            45625: 57,
            45626: 58,
            45627: 59,
            45628: 60,
            45629: 61,
            45630: 62,
            45631: 63,
            45632: 64,
            45633: 1,
            45634: 2,
            45635: 3,
            45636: 4,
            45637: 5,
            45638: 6,
            45639: 7,
            45640: 8,
            45641: 9,
            45642: 10,
            45643: 11,
            45644: 12,
            45645: 13,
            45646: 14,
            45647: 15,
            45648: 16,
            45649: 17,
            45650: 18,
            45651: 19,
            45652: 20,
            45653: 21,
            45654: 22,
            45655: 23,
            45656: 24,
            45657: 25,
            45658: 26,
            45659: 27,
            45660: 28,
            45661: 29,
            45662: 30,
            45663: 31,
            45664: 32,
            45825: 1,
            45826: 2,
            45827: 3,
            45828: 4,
            45829: 5,
            45830: 6,
            45831: 7,
            45832: 8,
            45833: 9,
            45834: 10,
            45835: 11,
            45836: 12,
            45837: 13,
            45838: 14,
            45839: 15,
            45840: 16,
            45841: 17,
            45842: 18,
            45843: 19,
            45844: 20,
            45845: 21,
            45846: 22,
            45847: 23,
            45848: 24,
            45849: 25,
            45850: 26,
            45851: 27,
            45852: 28,
            45853: 29,
            45854: 30,
            45855: 31,
            45856: 32,
            45857: 1,
            45858: 2,
            45859: 3,
            45860: 4,
            45861: 5,
            45862: 6,
            45863: 7,
            45864: 8,
            45865: 9,
            45866: 10,
            45867: 11,
            45868: 12,
            45869: 13,
            45870: 14,
            45871: 15,
            45872: 16,
            45873: 17,
            45874: 18,
            45875: 19,
            45876: 20,
            45877: 21,
            45878: 22,
            45879: 23,
            45880: 24,
            45881: 25,
            45882: 26,
            45883: 27,
            45884: 28,
            45885: 29,
            45886: 30,
            45887: 31,
            45888: 32,
            45889: 33,
            45890: 34,
            45891: 35,
            45892: 36,
            45893: 37,
            45894: 38,
            45895: 39,
            45896: 40,
            45897: 41,
            45898: 42,
            45899: 43,
            45900: 44,
            45901: 45,
            45902: 46,
            45903: 47,
            45904: 48,
            45905: 49,
            45906: 50,
            45907: 51,
            45908: 52,
            45909: 53,
            45910: 54,
            45911: 55,
            45912: 56,
            45913: 57,
            45914: 58,
            45915: 59,
            45916: 60,
            45917: 61,
            45918: 62,
            45919: 63,
            45920: 64,
            45921: 1,
            45922: 2,
            45923: 3,
            45924: 4,
            45925: 5,
            45926: 6,
            45927: 7,
            45928: 8,
            45929: 9,
            45930: 10,
            45931: 11,
            45932: 12,
            45933: 13,
            45934: 14,
            45935: 15,
            45936: 16,
            45937: 17,
            45938: 18,
            45939: 19,
            45940: 20,
            45941: 21,
            45942: 22,
            45943: 23,
            45944: 24,
            45945: 25,
            45946: 26,
            45947: 27,
            45948: 28,
            45949: 29,
            45950: 30,
            45951: 31,
            45952: 32,
            45953: 33,
            45954: 34,
            45955: 35,
            45956: 36,
            45957: 37,
            45958: 38,
            45959: 39,
            45960: 40,
            45961: 41,
            45962: 42,
            45963: 43,
            45964: 44,
            45965: 45,
            45966: 46,
            45967: 47,
            45968: 48,
            45969: 49,
            45970: 50,
            45971: 51,
            45972: 52,
            45973: 53,
            45974: 54,
            45975: 55,
            45976: 56,
            45977: 57,
            45978: 58,
            45979: 59,
            45980: 60,
            45981: 61,
            45982: 62,
            45983: 63,
            45984: 64,
            45985: 65,
            45986: 66,
            45987: 67,
            45988: 68,
            45989: 69,
            45990: 70,
            45991: 71,
            45992: 72,
            45993: 73,
            45994: 74,
            45995: 75,
            45996: 76,
            45997: 77,
            45998: 78,
            45999: 79,
            46e3: 80,
            46001: 81,
            46002: 82,
            46003: 83,
            46004: 84,
            46005: 85,
            46006: 86,
            46007: 87,
            46008: 88,
            46009: 89,
            46010: 90,
            46011: 91,
            46012: 92,
            46013: 93,
            46014: 94,
            46015: 95,
            46016: 96,
            46017: 97,
            46018: 98,
            46019: 99,
            46020: 100,
            46021: 101,
            46022: 102,
            46023: 103,
            46024: 104,
            46025: 105,
            46026: 106,
            46027: 107,
            46028: 108,
            46029: 109,
            46030: 110,
            46031: 111,
            46032: 112,
            46033: 113,
            46034: 114,
            46035: 115,
            46036: 116,
            46037: 117,
            46038: 118,
            46039: 119,
            46040: 120,
            46041: 121,
            46042: 122,
            46043: 123,
            46044: 124,
            46045: 125,
            46046: 126,
            46047: 127,
            46048: 128
        })
    }, function (t, e, r) {
        const {
            Buffer: n
        } = r(0), i = r(760);
        (e = t.exports = multibase).encode = function encode(t, e) {
            const r = getBase(t);
            return multibase(r.name, n.from(r.encode(e)))
        }, e.decode = function decode(t) {
            n.isBuffer(t) && (t = t.toString());
            const e = t.substring(0, 1);
            "string" == typeof (t = t.substring(1, t.length)) && (t = n.from(t));
            const r = getBase(e);
            return n.from(r.decode(t.toString()))
        }, e.isEncoded = function isEncoded(t) {
            n.isBuffer(t) && (t = t.toString());
            if ("[object String]" !== Object.prototype.toString.call(t)) return !1;
            const e = t.substring(0, 1);
            try {
                return getBase(e).name
            } catch (t) {
                return !1
            }
        }, e.names = Object.freeze(Object.keys(i.names)), e.codes = Object.freeze(Object.keys(i.codes));
        const o = new Error("Unsupported encoding");

        function multibase(t, e) {
            if (!e) throw new Error("requires an encoded buffer");
            const r = getBase(t),
                i = n.from(r.code);
            return function validEncode(t, e) {
                getBase(t).decode(e.toString())
            }(r.name, e), n.concat([i, e])
        }

        function getBase(t) {
            let e;
            if (i.names[t]) e = i.names[t];
            else {
                if (!i.codes[t]) throw o;
                e = i.codes[t]
            }
            if (!e.isImplemented()) throw new Error("Base " + t + " is not implemented yet");
            return e
        }
    }, function (t, e, r) {
        const n = r(761),
            i = r(298),
            o = r(762),
            a = r(763),
            s = r(764),
            u = [
                ["base1", "1", "", "1"],
                ["base2", "0", i, "01"],
                ["base8", "7", i, "01234567"],
                ["base10", "9", i, "0123456789"],
                ["base16", "f", o, "0123456789abcdef"],
                ["base32", "b", a, "abcdefghijklmnopqrstuvwxyz234567"],
                ["base32pad", "c", a, "abcdefghijklmnopqrstuvwxyz234567="],
                ["base32hex", "v", a, "0123456789abcdefghijklmnopqrstuv"],
                ["base32hexpad", "t", a, "0123456789abcdefghijklmnopqrstuv="],
                ["base32z", "h", a, "ybndrfg8ejkmcpqxot1uwisza345h769"],
                ["base58flickr", "Z", i, "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"],
                ["base58btc", "z", i, "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"],
                ["base64", "m", s, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"],
                ["base64pad", "M", s, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="],
                ["base64url", "u", s, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"],
                ["base64urlpad", "U", s, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_="]
            ],
            c = u.reduce((t, e) => (t[e[0]] = new n(e[0], e[1], e[2], e[3]), t), {}),
            l = u.reduce((t, e) => (t[e[1]] = c[e[0]], t), {});
        t.exports = {
            names: c,
            codes: l
        }
    }, function (t, e, r) {
        t.exports = class Base {
            constructor(t, e, r, n) {
                this.name = t, this.code = e, this.alphabet = n, r && n && (this.engine = r(n))
            }
            encode(t) {
                return this.engine.encode(t)
            }
            decode(t) {
                return this.engine.decode(t)
            }
            isImplemented() {
                return this.engine
            }
        }
    }, function (t, e, r) {
        const {
            Buffer: n
        } = r(0);
        t.exports = function base16(t) {
            return {
                encode: t => "string" == typeof t ? n.from(t).toString("hex") : t.toString("hex"),
                decode(e) {
                    for (const r of e)
                        if (t.indexOf(r) < 0) throw new Error("invalid base16 character");
                    return n.from(e, "hex")
                }
            }
        }
    }, function (t, e, r) {
        function encode(t, e) {
            const r = t.byteLength,
                n = new Uint8Array(t),
                i = e.indexOf("=") === e.length - 1;
            i && (e = e.substring(0, e.length - 1));
            let o = 0,
                a = 0,
                s = "";
            for (let t = 0; t < r; t++)
                for (a = a << 8 | n[t], o += 8; o >= 5;) s += e[a >>> o - 5 & 31], o -= 5;
            if (o > 0 && (s += e[a << 5 - o & 31]), i)
                for (; s.length % 8 != 0;) s += "=";
            return s
        }
        t.exports = function base32(t) {
            return {
                encode: e => encode("string" == typeof e ? Uint8Array.from(e) : e, t),
                decode(e) {
                    for (const r of e)
                        if (t.indexOf(r) < 0) throw new Error("invalid base32 character");
                    return function decode(t, e) {
                        const r = (t = t.replace(new RegExp("=", "g"), "")).length;
                        let n = 0,
                            i = 0,
                            o = 0;
                        const a = new Uint8Array(5 * r / 8 | 0);
                        for (let s = 0; s < r; s++) i = i << 5 | e.indexOf(t[s]), n += 5, n >= 8 && (a[o++] = i >>> n - 8 & 255, n -= 8);
                        return a.buffer
                    }(e, t)
                }
            }
        }
    }, function (t, e, r) {
        const {
            Buffer: n
        } = r(0);
        t.exports = function base64(t) {
            const e = t.indexOf("=") > -1,
                r = t.indexOf("-") > -1 && t.indexOf("_") > -1;
            return {
                encode(t) {
                    let i = "";
                    i = "string" == typeof t ? n.from(t).toString("base64") : t.toString("base64"), r && (i = i.replace(/\+/g, "-").replace(/\//g, "_"));
                    const o = i.indexOf("=");
                    return o > 0 && !e && (i = i.substring(0, o)), i
                },
                decode(e) {
                    for (const r of e)
                        if (t.indexOf(r) < 0) throw new Error("invalid base64 character");
                    return n.from(e, "base64")
                }
            }
        }
    }, function (t, e, r) {
        const {
            Buffer: n
        } = r(0), i = r(93), o = r(766), a = r(767), s = r(299);
        (e = t.exports).addPrefix = (t, e) => {
            let r;
            if (n.isBuffer(t)) r = s.varintBufferEncode(t);
            else {
                if (!a[t]) throw new Error("multicodec not recognized");
                r = a[t]
            }
            return n.concat([r, e])
        }, e.rmPrefix = t => (i.decode(t), t.slice(i.decode.bytes)), e.getCodec = t => {
            const e = i.decode(t),
                r = o.get(e);
            if (void 0 === r) throw new Error(`Code ${e} not found`);
            return r
        }, e.getName = t => o.get(t), e.getNumber = t => {
            const e = a[t];
            if (void 0 === e) throw new Error("Codec `" + t + "` not found");
            return s.varintBufferDecode(e)[0]
        }, e.getCode = t => i.decode(t), e.getCodeVarint = t => {
            const e = a[t];
            if (void 0 === e) throw new Error("Codec `" + t + "` not found");
            return e
        }, e.getVarint = t => i.encode(t);
        const u = r(768);
        Object.assign(e, u), e.print = r(769)
    }, function (t, e, r) {
        const n = r(94),
            i = new Map;
        for (const t in n) {
            const e = n[t];
            i.set(e, t)
        }
        t.exports = Object.freeze(i)
    }, function (t, e, r) {
        const n = r(94),
            i = r(299).varintEncode,
            o = {};
        for (const t in n) {
            const e = n[t];
            o[t] = i(e)
        }
        t.exports = Object.freeze(o)
    }, function (t, e, r) {
        const n = r(94),
            i = {};
        for (const [t, e] of Object.entries(n)) i[t.toUpperCase().replace(/-/g, "_")] = e;
        t.exports = Object.freeze(i)
    }, function (t, e, r) {
        const n = r(94),
            i = {};
        for (const [t, e] of Object.entries(n)) void 0 === i[e] && (i[e] = t);
        t.exports = Object.freeze(i)
    }, function (t, e, r) {
        const n = r(192),
            {
                Buffer: i
            } = r(0);
        var o = {
            checkCIDComponents: function (t) {
                if (null == t) return "null values are not valid CIDs";
                if (0 !== t.version && 1 !== t.version) return "Invalid version, must be a number equal to 1 or 0";
                if ("string" != typeof t.codec) return "codec must be string";
                if (0 === t.version) {
                    if ("dag-pb" !== t.codec) return "codec must be 'dag-pb' for CIDv0";
                    if ("base58btc" !== t.multibaseName) return "multibaseName must be 'base58btc' for CIDv0"
                }
                if (!i.isBuffer(t.multihash)) return "multihash must be a Buffer";
                try {
                    n.validate(t.multihash)
                } catch (t) {
                    let e = t.message;
                    return e || (e = "Multihash validation failed"), e
                }
            }
        };
        t.exports = o
    }, function (t, e, r) {
        t.exports = function withIs(t, {
            className: e,
            symbolName: r
        }) {
            const n = Symbol.for(r),
                i = {
                    [e]: class extends t {
                        constructor(...t) {
                            super(...t), Object.defineProperty(this, n, {
                                value: !0
                            })
                        }
                        get[Symbol.toStringTag]() {
                            return e
                        }
                    }
                } [e];
            return i["is" + e] = t => !(!t || !t[n]), i
        }, t.exports.proto = function withIsProto(t, {
            className: e,
            symbolName: r,
            withoutNew: n
        }) {
            const i = Symbol.for(r),
                o = {
                    [e]: function (...e) {
                        if (n && !(this instanceof o)) return new o(...e);
                        const r = t.call(this, ...e) || this;
                        return r && !r[i] && Object.defineProperty(r, i, {
                            value: !0
                        }), r
                    }
                } [e];
            return o.prototype = Object.create(t.prototype), o.prototype.constructor = o, Object.defineProperty(o.prototype, Symbol.toStringTag, {
                get: () => e
            }), o["is" + e] = t => !(!t || !t[i]), o
        }
    }, function (t, e, r) {
        const n = r(297);
        e.cidV0ToV1Base32 = t => {
            let e = new n(t);
            return 0 === e.version && (e = e.toV1()), e.toString("base32")
        }
    }, function (t, e, r) {
        var n = r(125),
            i = r(92),
            o = r(35),
            a = r(289),
            s = r(12).formatters,
            u = function Personal() {
                var t = this;
                n.packageInit(this, arguments), this.net = new a(this);
                var e = null,
                    r = "latest";
                Object.defineProperty(this, "defaultAccount", {
                    get: function () {
                        return e
                    },
                    set: function (t) {
                        return t && (e = o.toChecksumAddress(s.inputAddressFormatter(t))), u.forEach((function (t) {
                            t.defaultAccount = e
                        })), t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultBlock", {
                    get: function () {
                        return r
                    },
                    set: function (t) {
                        return r = t, u.forEach((function (t) {
                            t.defaultBlock = r
                        })), t
                    },
                    enumerable: !0
                });
                var u = [new i({
                    name: "getAccounts",
                    call: "personal_listAccounts",
                    params: 0,
                    outputFormatter: o.toChecksumAddress
                }), new i({
                    name: "newAccount",
                    call: "personal_newAccount",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: o.toChecksumAddress
                }), new i({
                    name: "unlockAccount",
                    call: "personal_unlockAccount",
                    params: 3,
                    inputFormatter: [s.inputAddressFormatter, null, null]
                }), new i({
                    name: "lockAccount",
                    call: "personal_lockAccount",
                    params: 1,
                    inputFormatter: [s.inputAddressFormatter]
                }), new i({
                    name: "importRawKey",
                    call: "personal_importRawKey",
                    params: 2
                }), new i({
                    name: "sendTransaction",
                    call: "personal_sendTransaction",
                    params: 2,
                    inputFormatter: [s.inputTransactionFormatter, null]
                }), new i({
                    name: "signTransaction",
                    call: "personal_signTransaction",
                    params: 2,
                    inputFormatter: [s.inputTransactionFormatter, null]
                }), new i({
                    name: "sign",
                    call: "personal_sign",
                    params: 3,
                    inputFormatter: [s.inputSignFormatter, s.inputAddressFormatter, null]
                }), new i({
                    name: "ecRecover",
                    call: "personal_ecRecover",
                    params: 2,
                    inputFormatter: [s.inputSignFormatter, null]
                })];
                u.forEach((function (e) {
                    e.attachToObject(t), e.setRequestManager(t._requestManager), e.defaultBlock = t.defaultBlock, e.defaultAccount = t.defaultAccount
                }))
            };
        n.addProviders(u), t.exports = u
    }, function (t, e, r) {
        var n = r(125),
            i = r(92),
            o = r(35),
            a = r(190).subscription,
            s = r(12).formatters,
            u = r(12).errors,
            c = r(288),
            l = r(300),
            h = function Contract(t, e, r) {
                var i = this,
                    a = Array.prototype.slice.call(arguments);
                if (!(this instanceof Contract)) throw new Error('Please use the "new" keyword to instantiate a web3.eth.Contract() object!');
                if (this.setProvider = function () {
                        n.packageInit(i, arguments), i.clearSubscriptions = i._requestManager.clearSubscriptions
                    }, n.packageInit(this, [this.constructor]), this.clearSubscriptions = this._requestManager.clearSubscriptions, !t || !Array.isArray(t)) throw u.ContractMissingABIError();
                this.options = {};
                var c = a[a.length - 1];
                c && "object" == typeof c && !Array.isArray(c) && (r = c, this.options = {
                    ...this.options,
                    ...this._getOrSetDefaultOptions(r)
                }, e && "object" == typeof e && (e = null)), Object.defineProperty(this.options, "address", {
                    set: function (t) {
                        t && (i._address = o.toChecksumAddress(s.inputAddressFormatter(t)))
                    },
                    get: function () {
                        return i._address
                    },
                    enumerable: !0
                }), Object.defineProperty(this.options, "jsonInterface", {
                    set: function (t) {
                        return i.methods = {}, i.events = {}, i._jsonInterface = t.map((function (t) {
                            var e, r;
                            if (t.constant = "view" === t.stateMutability || "pure" === t.stateMutability || t.constant, t.payable = "payable" === t.stateMutability || t.payable, t.name && (r = o._jsonInterfaceMethodToString(t)), "function" === t.type) {
                                if (t.signature = l.encodeFunctionSignature(r), e = i._createTxObject.bind({
                                        method: t,
                                        parent: i
                                    }), i.methods[t.name]) {
                                    var n = i._createTxObject.bind({
                                        method: t,
                                        parent: i,
                                        nextMethod: i.methods[t.name]
                                    });
                                    i.methods[t.name] = n
                                } else i.methods[t.name] = e;
                                i.methods[t.signature] = e, i.methods[r] = e
                            } else if ("event" === t.type) {
                                t.signature = l.encodeEventSignature(r);
                                var a = i._on.bind(i, t.signature);
                                i.events[t.name] && "bound " !== i.events[t.name].name || (i.events[t.name] = a), i.events[t.signature] = a, i.events[r] = a
                            }
                            return t
                        })), i.events.allEvents = i._on.bind(i, "allevents"), i._jsonInterface
                    },
                    get: function () {
                        return i._jsonInterface
                    },
                    enumerable: !0
                });
                var h = this.constructor.defaultAccount,
                    d = this.constructor.defaultBlock || "latest";
                Object.defineProperty(this, "handleRevert", {
                    get: function () {
                        return !1 === i.options.handleRevert || !0 === i.options.handleRevert ? i.options.handleRevert : this.constructor.handleRevert
                    },
                    set: function (t) {
                        i.options.handleRevert = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultCommon", {
                    get: function () {
                        return i.options.common || this.constructor.defaultCommon
                    },
                    set: function (t) {
                        i.options.common = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultHardfork", {
                    get: function () {
                        return i.options.hardfork || this.constructor.defaultHardfork
                    },
                    set: function (t) {
                        i.options.hardfork = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultChain", {
                    get: function () {
                        return i.options.chain || this.constructor.defaultChain
                    },
                    set: function (t) {
                        i.options.chain = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "transactionPollingTimeout", {
                    get: function () {
                        return 0 === i.options.transactionPollingTimeout ? i.options.transactionPollingTimeout : i.options.transactionPollingTimeout || this.constructor.transactionPollingTimeout
                    },
                    set: function (t) {
                        i.options.transactionPollingTimeout = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "transactionConfirmationBlocks", {
                    get: function () {
                        return 0 === i.options.transactionConfirmationBlocks ? i.options.transactionConfirmationBlocks : i.options.transactionConfirmationBlocks || this.constructor.transactionConfirmationBlocks
                    },
                    set: function (t) {
                        i.options.transactionConfirmationBlocks = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "transactionBlockTimeout", {
                    get: function () {
                        return 0 === i.options.transactionBlockTimeout ? i.options.transactionBlockTimeout : i.options.transactionBlockTimeout || this.constructor.transactionBlockTimeout
                    },
                    set: function (t) {
                        i.options.transactionBlockTimeout = t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultAccount", {
                    get: function () {
                        return h
                    },
                    set: function (t) {
                        return t && (h = o.toChecksumAddress(s.inputAddressFormatter(t))), t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultBlock", {
                    get: function () {
                        return d
                    },
                    set: function (t) {
                        return d = t, t
                    },
                    enumerable: !0
                }), this.methods = {}, this.events = {}, this._address = null, this._jsonInterface = [], this.options.address = e, this.options.jsonInterface = t
            };
        h.setProvider = function (t, e) {
            n.packageInit(this, [t]), this._ethAccounts = e
        }, h.prototype._getCallback = function getCallback(t) {
            if (t && t[t.length - 1] && "function" == typeof t[t.length - 1]) return t.pop()
        }, h.prototype._checkListener = function (t, e) {
            if (e === t) throw u.ContractReservedEventError(t)
        }, h.prototype._getOrSetDefaultOptions = function getOrSetDefaultOptions(t) {
            var e = t.gasPrice ? String(t.gasPrice) : null,
                r = t.from ? o.toChecksumAddress(s.inputAddressFormatter(t.from)) : null;
            return t.data = t.data || this.options.data, t.from = r || this.options.from, t.gasPrice = e || this.options.gasPrice, t.gas = t.gas || t.gasLimit || this.options.gas, delete t.gasLimit, t
        }, h.prototype._encodeEventABI = function (t, e) {
            var r = (e = e || {}).filter || {},
                n = {};
            if (["fromBlock", "toBlock"].filter((function (t) {
                    return void 0 !== e[t]
                })).forEach((function (t) {
                    n[t] = s.inputBlockNumberFormatter(e[t])
                })), Array.isArray(e.topics)) n.topics = e.topics;
            else {
                if (n.topics = [], t && !t.anonymous && "ALLEVENTS" !== t.name && n.topics.push(t.signature), "ALLEVENTS" !== t.name) {
                    var i = t.inputs.filter((function (t) {
                        return !0 === t.indexed
                    })).map((function (t) {
                        var e = r[t.name];
                        return e ? Array.isArray(e) ? e.map((function (e) {
                            return l.encodeParameter(t.type, e)
                        })) : l.encodeParameter(t.type, e) : null
                    }));
                    n.topics = n.topics.concat(i)
                }
                n.topics.length || delete n.topics
            }
            return this.options.address && (n.address = this.options.address.toLowerCase()), n
        }, h.prototype._decodeEventABI = function (t) {
            var e = this;
            t.data = t.data || "", t.topics = t.topics || [];
            var r = s.outputLogFormatter(t);
            if ("ALLEVENTS" === e.name && (e = e.jsonInterface.find((function (e) {
                    return e.signature === t.topics[0]
                })) || {
                    anonymous: !0
                }), e.inputs = e.inputs || [], !e.anonymous) {
                let r = 0;
                e.inputs.forEach(t => t.indexed ? r++ : null), r > 0 && t.topics.length !== r + 1 && (e = {
                    anonymous: !0,
                    inputs: []
                })
            }
            var n = e.anonymous ? t.topics : t.topics.slice(1);
            return r.returnValues = l.decodeLog(e.inputs, t.data, n), delete r.returnValues.__length__, r.event = e.name, r.signature = e.anonymous || !t.topics[0] ? null : t.topics[0], r.raw = {
                data: r.data,
                topics: r.topics
            }, delete r.data, delete r.topics, r
        }, h.prototype._encodeMethodABI = function _encodeMethodABI() {
            var t = this._method.signature,
                e = this.arguments || [],
                r = !1,
                n = this._parent.options.jsonInterface.filter((function (e) {
                    return "constructor" === t && e.type === t || (e.signature === t || e.signature === t.replace("0x", "") || e.name === t) && "function" === e.type
                })).map((function (t) {
                    var n = Array.isArray(t.inputs) ? t.inputs.length : 0;
                    if (n !== e.length) throw new Error("The number of arguments is not matching the methods required number. You need to pass " + n + " arguments.");
                    return "function" === t.type && (r = t.signature), Array.isArray(t.inputs) ? t.inputs : []
                })).map((function (t) {
                    return l.encodeParameters(t, e).replace("0x", "")
                }))[0] || "";
            if ("constructor" === t) {
                if (!this._deployData) throw new Error("The contract has no contract data option set. This is necessary to append the constructor parameters.");
                return this._deployData.startsWith("0x") || (this._deployData = "0x" + this._deployData), this._deployData + n
            }
            var i = r ? r + n : n;
            if (!i) throw new Error("Couldn't find a matching contract method named \"" + this._method.name + '".');
            return i
        }, h.prototype._decodeMethodReturn = function (t, e) {
            if (!e) return null;
            e = e.length >= 2 ? e.slice(2) : e;
            var r = l.decodeParameters(t, e);
            return 1 === r.__length__ ? r[0] : (delete r.__length__, r)
        }, h.prototype.deploy = function (t, e) {
            if ((t = t || {}).arguments = t.arguments || [], !(t = this._getOrSetDefaultOptions(t)).data) {
                if ("function" == typeof e) return e(u.ContractMissingDeployDataError());
                throw u.ContractMissingDeployDataError()
            }
            var r = this.options.jsonInterface.find(t => "constructor" === t.type) || {};
            return r.signature = "constructor", this._createTxObject.apply({
                method: r,
                parent: this,
                deployData: t.data,
                _ethAccounts: this.constructor._ethAccounts
            }, t.arguments)
        }, h.prototype._generateEventOptions = function () {
            var t = Array.prototype.slice.call(arguments),
                e = this._getCallback(t),
                r = "object" === (!!t[t.length - 1] && typeof t[t.length - 1]) ? t.pop() : {},
                n = "string" == typeof t[0] ? t[0] : "allevents",
                i = "allevents" === n.toLowerCase() ? {
                    name: "ALLEVENTS",
                    jsonInterface: this.options.jsonInterface
                } : this.options.jsonInterface.find((function (t) {
                    return "event" === t.type && (t.name === n || t.signature === "0x" + n.replace("0x", ""))
                }));
            if (!i) throw u.ContractEventDoesNotExistError(n);
            if (!o.isAddress(this.options.address)) throw u.ContractNoAddressDefinedError();
            return {
                params: this._encodeEventABI(i, r),
                event: i,
                callback: e
            }
        }, h.prototype.clone = function () {
            return new this.constructor(this.options.jsonInterface, this.options.address, this.options)
        }, h.prototype.once = function (t, e, r) {
            var n = Array.prototype.slice.call(arguments);
            if (!(r = this._getCallback(n))) throw u.ContractOnceRequiresCallbackError();
            e && delete e.fromBlock, this._on(t, e, (function (t, e, n) {
                n.unsubscribe(), "function" == typeof r && r(t, e, n)
            }))
        }, h.prototype._on = function () {
            var t = this._generateEventOptions.apply(this, arguments);
            t.params && t.params.toBlock && (delete t.params.toBlock, console.warn("Invalid option: toBlock. Use getPastEvents for specific range.")), this._checkListener("newListener", t.event.name), this._checkListener("removeListener", t.event.name);
            var e = new a({
                subscription: {
                    params: 1,
                    inputFormatter: [s.inputLogFormatter],
                    outputFormatter: this._decodeEventABI.bind(t.event),
                    subscriptionHandler: function (t) {
                        t.removed ? this.emit("changed", t) : this.emit("data", t), "function" == typeof this.callback && this.callback(null, t, this)
                    }
                },
                type: "eth",
                requestManager: this._requestManager
            });
            return e.subscribe("logs", t.params, t.callback || function () {}), e
        }, h.prototype.getPastEvents = function () {
            var t = this._generateEventOptions.apply(this, arguments),
                e = new i({
                    name: "getPastLogs",
                    call: "eth_getLogs",
                    params: 1,
                    inputFormatter: [s.inputLogFormatter],
                    outputFormatter: this._decodeEventABI.bind(t.event)
                });
            e.setRequestManager(this._requestManager);
            var r = e.buildCall();
            return e = null, r(t.params, t.callback)
        }, h.prototype._createTxObject = function _createTxObject() {
            var t = Array.prototype.slice.call(arguments),
                e = {};
            if ("function" === this.method.type && (e.call = this.parent._executeMethod.bind(e, "call"), e.call.request = this.parent._executeMethod.bind(e, "call", !0)), e.send = this.parent._executeMethod.bind(e, "send"), e.send.request = this.parent._executeMethod.bind(e, "send", !0), e.encodeABI = this.parent._encodeMethodABI.bind(e), e.estimateGas = this.parent._executeMethod.bind(e, "estimate"), t && this.method.inputs && t.length !== this.method.inputs.length) {
                if (this.nextMethod) return this.nextMethod.apply(null, t);
                throw u.InvalidNumberOfParams(t.length, this.method.inputs.length, this.method.name)
            }
            return e.arguments = t || [], e._method = this.method, e._parent = this.parent, e._ethAccounts = this.parent.constructor._ethAccounts || this._ethAccounts, this.deployData && (e._deployData = this.deployData), e
        }, h.prototype._processExecuteArguments = function _processExecuteArguments(t, e) {
            var r = {};
            if (r.type = t.shift(), r.callback = this._parent._getCallback(t), "call" !== r.type || !0 === t[t.length - 1] || "string" != typeof t[t.length - 1] && !isFinite(t[t.length - 1]) || (r.defaultBlock = t.pop()), r.options = "object" === (!!t[t.length - 1] && typeof t[t.length - 1]) ? t.pop() : {}, r.generateRequest = !0 === t[t.length - 1] && t.pop(), r.options = this._parent._getOrSetDefaultOptions(r.options), r.options.data = this.encodeABI(), !this._deployData && !o.isAddress(this._parent.options.address)) throw u.ContractNoAddressDefinedError();
            return this._deployData || (r.options.to = this._parent.options.address), r.options.data ? r : o._fireError(new Error("Couldn't find a matching contract method, or the number of parameters is wrong."), e.eventEmitter, e.reject, r.callback)
        }, h.prototype._executeMethod = function _executeMethod() {
            var t = this,
                e = this._parent._processExecuteArguments.call(this, Array.prototype.slice.call(arguments), r),
                r = c("send" !== e.type),
                n = t.constructor._ethAccounts || t._ethAccounts;
            if (e.generateRequest) {
                var a = {
                    params: [s.inputCallFormatter.call(this._parent, e.options)],
                    callback: e.callback
                };
                return "call" === e.type ? (a.params.push(s.inputDefaultBlockNumberFormatter.call(this._parent, e.defaultBlock)), a.method = "eth_call", a.format = this._parent._decodeMethodReturn.bind(null, this._method.outputs)) : a.method = "eth_sendTransaction", a
            }
            switch (e.type) {
                case "estimate":
                    var h = new i({
                        name: "estimateGas",
                        call: "eth_estimateGas",
                        params: 1,
                        inputFormatter: [s.inputCallFormatter],
                        outputFormatter: o.hexToNumber,
                        requestManager: t._parent._requestManager,
                        accounts: n,
                        defaultAccount: t._parent.defaultAccount,
                        defaultBlock: t._parent.defaultBlock
                    }).createFunction();
                    return h(e.options, e.callback);
                case "call":
                    var d = new i({
                        name: "call",
                        call: "eth_call",
                        params: 2,
                        inputFormatter: [s.inputCallFormatter, s.inputDefaultBlockNumberFormatter],
                        outputFormatter: function (e) {
                            return t._parent._decodeMethodReturn(t._method.outputs, e)
                        },
                        requestManager: t._parent._requestManager,
                        accounts: n,
                        defaultAccount: t._parent.defaultAccount,
                        defaultBlock: t._parent.defaultBlock,
                        handleRevert: t._parent.handleRevert,
                        abiCoder: l
                    }).createFunction();
                    return d(e.options, e.defaultBlock, e.callback);
                case "send":
                    if (!o.isAddress(e.options.from)) return o._fireError(u.ContractNoFromAddressDefinedError(), r.eventEmitter, r.reject, e.callback);
                    if ("boolean" == typeof this._method.payable && !this._method.payable && e.options.value && e.options.value > 0) return o._fireError(new Error("Can not send value to non-payable contract method or constructor"), r.eventEmitter, r.reject, e.callback);
                    var p = {
                            receiptFormatter: function (e) {
                                if (Array.isArray(e.logs)) {
                                    var r = e.logs.map(e => t._parent._decodeEventABI.call({
                                        name: "ALLEVENTS",
                                        jsonInterface: t._parent.options.jsonInterface
                                    }, e));
                                    e.events = {};
                                    var n = 0;
                                    r.forEach((function (t) {
                                        t.event ? e.events[t.event] ? Array.isArray(e.events[t.event]) ? e.events[t.event].push(t) : e.events[t.event] = [e.events[t.event], t] : e.events[t.event] = t : (e.events[n] = t, n++)
                                    })), delete e.logs
                                }
                                return e
                            },
                            contractDeployFormatter: function (e) {
                                var r = t._parent.clone();
                                return r.options.address = e.contractAddress, r
                            }
                        },
                        m = new i({
                            name: "sendTransaction",
                            call: "eth_sendTransaction",
                            params: 1,
                            inputFormatter: [s.inputTransactionFormatter],
                            requestManager: t._parent._requestManager,
                            accounts: t.constructor._ethAccounts || t._ethAccounts,
                            defaultAccount: t._parent.defaultAccount,
                            defaultBlock: t._parent.defaultBlock,
                            transactionBlockTimeout: t._parent.transactionBlockTimeout,
                            transactionConfirmationBlocks: t._parent.transactionConfirmationBlocks,
                            transactionPollingTimeout: t._parent.transactionPollingTimeout,
                            defaultCommon: t._parent.defaultCommon,
                            defaultChain: t._parent.defaultChain,
                            defaultHardfork: t._parent.defaultHardfork,
                            handleRevert: t._parent.handleRevert,
                            extraFormatters: p,
                            abiCoder: l
                        }).createFunction();
                    return m(e.options, e.callback);
                default:
                    throw new Error('Method "' + e.type + '" not implemented.')
            }
        }, t.exports = h
    }, function (t, e, r) {
        (function (e, n) {
            var i = r(776),
                o = r(303),
                a = r(794),
                s = r(50),
                u = r(131),
                c = r(840),
                l = r(841),
                h = r(95),
                d = r(26),
                {
                    TransactionFactory: p
                } = r(331),
                m = r(41).default,
                y = r(41).Hardfork,
                isNot = function (t) {
                    return null == t
                },
                b = function Accounts() {
                    var t = this;
                    i.packageInit(this, arguments), delete this.BatchRequest, delete this.extend;
                    var e = [new o({
                        name: "getNetworkId",
                        call: "net_version",
                        params: 0,
                        outputFormatter: parseInt
                    }), new o({
                        name: "getChainId",
                        call: "eth_chainId",
                        params: 0,
                        outputFormatter: h.hexToNumber
                    }), new o({
                        name: "getGasPrice",
                        call: "eth_gasPrice",
                        params: 0
                    }), new o({
                        name: "getTransactionCount",
                        call: "eth_getTransactionCount",
                        params: 2,
                        inputFormatter: [function (t) {
                            if (h.isAddress(t)) return t;
                            throw new Error("Address " + t + ' is not a valid address to get the "transactionCount".')
                        }, function () {
                            return "latest"
                        }]
                    }), new o({
                        name: "getBlockByNumber",
                        call: "eth_getBlockByNumber",
                        params: 2,
                        inputFormatter: [function (t) {
                            return t ? h.toHex(t) : "latest"
                        }, function () {
                            return !1
                        }]
                    })];
                    this._ethereumCall = {}, e.forEach(e => {
                        e.attachToObject(t._ethereumCall), e.setRequestManager(t._requestManager)
                    }), this.wallet = new Wallet(this)
                };

            function _handleTxPricing(t, e) {
                return new Promise((r, n) => {
                    try {
                        e.type < "0x2" && void 0 !== e.gasPrice ? r({
                            gasPrice: e.gasPrice
                        }) : Promise.all([t._ethereumCall.getBlockByNumber(), t._ethereumCall.getGasPrice()]).then(t => {
                            const [n, i] = t;
                            if ("0x2" === e.type && n && n.baseFeePerGas) {
                                let t, i;
                                e.gasPrice ? (t = e.gasPrice, i = e.gasPrice, delete e.gasPrice) : (t = e.maxPriorityFeePerGas || "0x3B9ACA00", i = e.maxFeePerGas || h.toHex(h.toBN(n.baseFeePerGas).mul(h.toBN(2)).add(h.toBN(t)))), r({
                                    maxFeePerGas: i,
                                    maxPriorityFeePerGas: t
                                })
                            } else {
                                if (e.maxPriorityFeePerGas || e.maxFeePerGas) throw Error("Network doesn't support eip-1559");
                                r({
                                    gasPrice: i
                                })
                            }
                        })
                    } catch (t) {
                        n(t)
                    }
                })
            }

            function Wallet(t) {
                this._accounts = t, this.length = 0, this.defaultKeyName = "web3js_wallet"
            }
            b.prototype._addAccountFunctions = function (t) {
                    var e = this;
                    return t.signTransaction = function signTransaction(r, n) {
                        return e.signTransaction(r, t.privateKey, n)
                    }, t.sign = function sign(r) {
                        return e.sign(r, t.privateKey)
                    }, t.encrypt = function encrypt(r, n) {
                        return e.encrypt(t.privateKey, r, n)
                    }, t
                }, b.prototype.create = function create(t) {
                    return this._addAccountFunctions(a.create(t || h.randomHex(32)))
                }, b.prototype.privateKeyToAccount = function privateKeyToAccount(t, e) {
                    if (t.startsWith("0x") || (t = "0x" + t), !e && 66 !== t.length) throw new Error("Private key must be 32 bytes long");
                    return this._addAccountFunctions(a.fromPrivate(t))
                }, b.prototype.signTransaction = function signTransaction(t, e, r) {
                    var i = !1,
                        o = {},
                        a = !(!t || !(t.chain && t.hardfork || t.common));
                    if (r = r || function () {}, !t) return i = new Error("No transaction object given!"), r(i), Promise.reject(i);

                    function signed(t) {
                        const i = function _validateTransactionForSigning(t) {
                            if (t.common && t.chain && t.hardfork) return new Error("Please provide the @ethereumjs/common object or the chain and hardfork property but not all together.");
                            if (t.chain && !t.hardfork || t.hardfork && !t.chain) return new Error('When specifying chain and hardfork, both values must be defined. Received "chain": ' + t.chain + ', "hardfork": ' + t.hardfork);
                            if (!(t.gas || t.gasLimit || t.maxPriorityFeePerGas || t.maxFeePerGas)) return new Error('"gas" is missing');
                            if (t.gas && t.gasPrice) {
                                if (t.gas < 0 || t.gasPrice < 0) return new Error("Gas or gasPrice is lower than 0")
                            } else if (t.maxPriorityFeePerGas < 0 || t.maxFeePerGas < 0) return new Error("maxPriorityFeePerGas or maxFeePerGas is lower than 0");
                            if (t.nonce < 0 || t.chainId < 0) return new Error("Nonce or chainId is lower than 0");
                            return
                        }(t);
                        if (i) return r(i), Promise.reject(i);
                        try {
                            var s = d.formatters.inputCallFormatter(Object.assign({}, t));
                            s.data = s.data || "0x", s.value = s.value || "0x", s.gasLimit = s.gasLimit || s.gas, "0x1" === s.type && void 0 === s.accessList && (s.accessList = []), a ? (s.common && (o.common = m.forCustomChain(s.common.baseChain || "mainnet", {
                                name: s.common.customChain.name || "custom-network",
                                networkId: s.common.customChain.networkId,
                                chainId: s.common.customChain.chainId
                            }, s.common.hardfork || y.London), delete s.common), s.chain && (o.chain = s.chain, delete s.chain), s.hardfork && (o.hardfork = s.hardfork, delete s.hardfork)) : (o.common = m.forCustomChain("mainnet", {
                                name: "custom-network",
                                networkId: s.networkId,
                                chainId: s.chainId
                            }, s.hardfork || y.London), delete s.networkId), e.startsWith("0x") && (e = e.substring(2));
                            var u = p.fromTxData(s, o).sign(n.from(e, "hex")),
                                c = u.validate(!0);
                            if (c.length > 0) {
                                let t = "Signer Error: ";
                                for (const e of c) t += `${t} ${e}.`;
                                throw new Error(t)
                            }
                            var l = "0x" + u.serialize().toString("hex"),
                                b = h.keccak256(l),
                                g = {
                                    messageHash: "0x" + n.from(u.getMessageToSign(!0)).toString("hex"),
                                    v: "0x" + n.from(u.v).toString("hex"),
                                    r: "0x" + n.from(u.r).toString("hex"),
                                    s: "0x" + n.from(u.s).toString("hex"),
                                    rawTransaction: l,
                                    transactionHash: b
                                };
                            return r(null, g), g
                        } catch (t) {
                            return r(t), Promise.reject(t)
                        }
                    }
                    return t.type = function _handleTxType(t) {
                        const e = void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas;
                        let r;
                        r = void 0 !== t.type ? h.toHex(t.type) : void 0 === t.type && e ? "0x2" : "0x0";
                        if (void 0 !== t.gasPrice && ("0x2" === r || e)) throw Error("eip-1559 transactions don't support gasPrice");
                        if (("0x1" === r || "0x0" === r) && e) throw Error("pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas");
                        e || t.common && t.common.hardfork && t.common.hardfork.toLowerCase() === y.London || t.hardfork && t.hardfork.toLowerCase() === y.London ? r = "0x2" : (t.accessList || t.common && t.common.hardfork && t.common.hardfork.toLowerCase() === y.Berlin || t.hardfork && t.hardfork.toLowerCase() === y.Berlin) && (r = "0x1");
                        return r
                    }(t), void 0 !== t.nonce && void 0 !== t.chainId && (void 0 !== t.gasPrice || void 0 !== t.maxFeePerGas && void 0 !== t.maxPriorityFeePerGas) && a ? Promise.resolve(signed(t)) : Promise.all([isNot(t.chainId) ? this._ethereumCall.getChainId() : t.chainId, isNot(t.nonce) ? this._ethereumCall.getTransactionCount(this.privateKeyToAccount(e).address) : t.nonce, isNot(a) ? this._ethereumCall.getNetworkId() : 1, _handleTxPricing(this, t)]).then((function (e) {
                        if (isNot(e[0]) || isNot(e[1]) || isNot(e[2]) || isNot(e[3])) throw new Error('One of the values "chainId", "networkId", "gasPrice", or "nonce" couldn\'t be fetched: ' + JSON.stringify(e));
                        return signed({
                            ...t,
                            chainId: e[0],
                            nonce: e[1],
                            networkId: e[2],
                            ...e[3]
                        })
                    }))
                }, b.prototype.recoverTransaction = function recoverTransaction(t, e = {}) {
                    const r = n.from(t.slice(2), "hex"),
                        i = p.fromSerializedData(r);
                    return h.toChecksumAddress(i.getSenderAddress().toString("hex"))
                }, b.prototype.hashMessage = function hashMessage(t) {
                    var e = h.isHexStrict(t) ? t : h.utf8ToHex(t),
                        r = h.hexToBytes(e),
                        i = n.from(r),
                        o = "Ethereum Signed Message:\n" + r.length,
                        a = n.from(o),
                        u = n.concat([a, i]);
                    return s.keccak256s(u)
                }, b.prototype.sign = function sign(t, e) {
                    if (e.startsWith("0x") || (e = "0x" + e), 66 !== e.length) throw new Error("Private key must be 32 bytes long");
                    var r = this.hashMessage(t),
                        n = a.sign(r, e),
                        i = a.decodeSignature(n);
                    return {
                        message: t,
                        messageHash: r,
                        v: i[0],
                        r: i[1],
                        s: i[2],
                        signature: n
                    }
                }, b.prototype.recover = function recover(t, e, r) {
                    var n = [].slice.apply(arguments);
                    return t && "object" == typeof t ? this.recover(t.messageHash, a.encodeSignature([t.v, t.r, t.s]), !0) : (r || (t = this.hashMessage(t)), n.length >= 4 ? (r = "boolean" == typeof (r = n.slice(-1)[0]) && !!r, this.recover(t, a.encodeSignature(n.slice(1, 4)), r)) : a.recover(t, e))
                }, b.prototype.decrypt = function (t, e, r) {
                    if ("string" != typeof e) throw new Error("No password given.");
                    var i, o, a = t && "object" == typeof t ? t : JSON.parse(r ? t.toLowerCase() : t);
                    if (3 !== a.version) throw new Error("Not a valid V3 wallet");
                    if ("scrypt" === a.crypto.kdf) o = a.crypto.kdfparams, i = c.syncScrypt(n.from(e), n.from(o.salt, "hex"), o.n, o.r, o.p, o.dklen);
                    else {
                        if ("pbkdf2" !== a.crypto.kdf) throw new Error("Unsupported key derivation scheme");
                        if ("hmac-sha256" !== (o = a.crypto.kdfparams).prf) throw new Error("Unsupported parameters to PBKDF2");
                        i = u.pbkdf2Sync(n.from(e), n.from(o.salt, "hex"), o.c, o.dklen, "sha256")
                    }
                    var s = n.from(a.crypto.ciphertext, "hex");
                    if (h.sha3(n.from([...i.slice(16, 32), ...s])).replace("0x", "") !== a.crypto.mac) throw new Error("Key derivation failed - possibly wrong password");
                    var l = u.createDecipheriv(a.crypto.cipher, i.slice(0, 16), n.from(a.crypto.cipherparams.iv, "hex")),
                        d = "0x" + n.from([...l.update(s), ...l.final()]).toString("hex");
                    return this.privateKeyToAccount(d, !0)
                }, b.prototype.encrypt = function (t, e, r) {
                    var i, o = this.privateKeyToAccount(t, !0),
                        a = (r = r || {}).salt || u.randomBytes(32),
                        s = r.iv || u.randomBytes(16),
                        d = r.kdf || "scrypt",
                        p = {
                            dklen: r.dklen || 32,
                            salt: a.toString("hex")
                        };
                    if ("pbkdf2" === d) p.c = r.c || 262144, p.prf = "hmac-sha256", i = u.pbkdf2Sync(n.from(e), n.from(p.salt, "hex"), p.c, p.dklen, "sha256");
                    else {
                        if ("scrypt" !== d) throw new Error("Unsupported kdf");
                        p.n = r.n || 8192, p.r = r.r || 8, p.p = r.p || 1, i = c.syncScrypt(n.from(e), n.from(p.salt, "hex"), p.n, p.r, p.p, p.dklen)
                    }
                    var m = u.createCipheriv(r.cipher || "aes-128-ctr", i.slice(0, 16), s);
                    if (!m) throw new Error("Unsupported cipher");
                    var y = n.from([...m.update(n.from(o.privateKey.replace("0x", ""), "hex")), ...m.final()]),
                        b = h.sha3(n.from([...i.slice(16, 32), ...y])).replace("0x", "");
                    return {
                        version: 3,
                        id: l.v4({
                            random: r.uuid || u.randomBytes(16)
                        }),
                        address: o.address.toLowerCase().replace("0x", ""),
                        crypto: {
                            ciphertext: y.toString("hex"),
                            cipherparams: {
                                iv: s.toString("hex")
                            },
                            cipher: r.cipher || "aes-128-ctr",
                            kdf: d,
                            kdfparams: p,
                            mac: b.toString("hex")
                        }
                    }
                }, Wallet.prototype._findSafeIndex = function (t) {
                    return t = t || 0, this.hasOwnProperty(t) ? this._findSafeIndex(t + 1) : t
                }, Wallet.prototype._currentIndexes = function () {
                    return Object.keys(this).map((function (t) {
                        return parseInt(t)
                    })).filter((function (t) {
                        return t < 9e20
                    }))
                }, Wallet.prototype.create = function (t, e) {
                    for (var r = 0; r < t; ++r) this.add(this._accounts.create(e).privateKey);
                    return this
                }, Wallet.prototype.add = function (t) {
                    return "string" == typeof t && (t = this._accounts.privateKeyToAccount(t)), this[t.address] ? this[t.address] : ((t = this._accounts.privateKeyToAccount(t.privateKey)).index = this._findSafeIndex(), this[t.index] = t, this[t.address] = t, this[t.address.toLowerCase()] = t, this.length++, t)
                }, Wallet.prototype.remove = function (t) {
                    var e = this[t];
                    return !(!e || !e.address) && (this[e.address].privateKey = null, delete this[e.address], this[e.address.toLowerCase()].privateKey = null, delete this[e.address.toLowerCase()], this[e.index].privateKey = null, delete this[e.index], this.length--, !0)
                }, Wallet.prototype.clear = function () {
                    var t = this;
                    return this._currentIndexes().forEach((function (e) {
                        t.remove(e)
                    })), this
                }, Wallet.prototype.encrypt = function (t, e) {
                    var r = this;
                    return this._currentIndexes().map((function (n) {
                        return r[n].encrypt(t, e)
                    }))
                }, Wallet.prototype.decrypt = function (t, e) {
                    var r = this;
                    return t.forEach((function (t) {
                        var n = r._accounts.decrypt(t, e);
                        if (!n) throw new Error("Couldn't decrypt accounts. Password wrong?");
                        r.add(n)
                    })), this
                }, Wallet.prototype.save = function (t, e) {
                    return localStorage.setItem(e || this.defaultKeyName, JSON.stringify(this.encrypt(t))), !0
                }, Wallet.prototype.load = function (t, e) {
                    var r = localStorage.getItem(e || this.defaultKeyName);
                    if (r) try {
                        r = JSON.parse(r)
                    } catch (t) {}
                    return this.decrypt(r || [], t)
                },
                function storageAvailable(t) {
                    var e;
                    try {
                        e = window[t];
                        var r = "__storage_test__";
                        return e.setItem(r, r), e.removeItem(r), !0
                    } catch (t) {
                        return t && (22 === t.code || 1014 === t.code || "QuotaExceededError" === t.name || "NS_ERROR_DOM_QUOTA_REACHED" === t.name) && e && 0 !== e.length
                    }
                }("localStorage") || (delete Wallet.prototype.save, delete Wallet.prototype.load), t.exports = b
        }).call(this, r(6), r(0).Buffer)
    }, function (t, e, r) {
        const n = r(777),
            i = r(790);
        t.exports = {
            packageInit: (t, e) => {
                if (e = Array.prototype.slice.call(e), !t) throw new Error('You need to instantiate using the "new" keyword.');
                Object.defineProperty(t, "currentProvider", {
                    get: () => t._provider,
                    set: e => t.setProvider(e),
                    enumerable: !0,
                    configurable: !0
                }), e[0] && e[0]._requestManager ? t._requestManager = e[0]._requestManager : t._requestManager = new n.Manager(e[0], e[1]), t.givenProvider = n.Manager.givenProvider, t.providers = n.Manager.providers, t._provider = t._requestManager.provider, t.setProvider || (t.setProvider = (e, r) => (t._requestManager.setProvider(e, r), t._provider = t._requestManager.provider, !0)), t.setRequestManager = e => {
                    t._requestManager = e, t._provider = e.provider
                }, t.BatchRequest = n.BatchManager.bind(null, t._requestManager), t.extend = i(t)
            },
            addProviders: t => {
                t.givenProvider = n.Manager.givenProvider, t.providers = n.Manager.providers
            }
        }
    }, function (t, e, r) {
        const {
            callbackify: n
        } = r(59);
        var i = r(26).errors,
            o = r(302),
            a = r(783),
            s = r(784),
            u = function RequestManager(t, e) {
                this.provider = null, this.providers = RequestManager.providers, this.setProvider(t, e), this.subscriptions = new Map
            };
        u.givenProvider = s, u.providers = {
            WebsocketProvider: r(785),
            HttpProvider: r(787),
            IpcProvider: r(788)
        }, u.prototype.setProvider = function (t, e) {
            var r = this;
            if (t && "string" == typeof t && this.providers)
                if (/^http(s)?:\/\//i.test(t)) t = new this.providers.HttpProvider(t);
                else if (/^ws(s)?:\/\//i.test(t)) t = new this.providers.WebsocketProvider(t);
            else if (t && "object" == typeof e && "function" == typeof e.connect) t = new this.providers.IpcProvider(t, e);
            else if (t) throw new Error("Can't autodetect provider for \"" + t + '"');
            if (this.provider && this.provider.connected && this.clearSubscriptions(), this.provider = t || null, this.provider && this.provider.on) {
                "function" == typeof t.request ? this.provider.on("message", (function (t) {
                    if (t && "eth_subscription" === t.type && t.data) {
                        const e = t.data;
                        e.subscription && r.subscriptions.has(e.subscription) && r.subscriptions.get(e.subscription).callback(null, e.result)
                    }
                })) : this.provider.on("data", (function data(t, e) {
                    (t = t || e).method && t.params && t.params.subscription && r.subscriptions.has(t.params.subscription) && r.subscriptions.get(t.params.subscription).callback(null, t.params.result)
                })), this.provider.on("connect", (function connect() {
                    r.subscriptions.forEach((function (t) {
                        t.subscription.resubscribe()
                    }))
                })), this.provider.on("error", (function error(error) {
                    r.subscriptions.forEach((function (t) {
                        t.callback(error)
                    }))
                }));
                const e = function disconnect(t) {
                    r._isCleanCloseEvent(t) && !r._isIpcCloseError(t) || (r.subscriptions.forEach((function (e) {
                        e.callback(i.ConnectionCloseError(t)), r.subscriptions.delete(e.subscription.id)
                    })), r.provider && r.provider.emit && r.provider.emit("error", i.ConnectionCloseError(t))), r.provider && r.provider.emit && r.provider.emit("end", t)
                };
                this.provider.on("close", e), this.provider.on("disconnect", e)
            }
        }, u.prototype.send = function (t, e) {
            if (e = e || function () {}, !this.provider) return e(i.InvalidProvider());
            const {
                method: r,
                params: a
            } = t, s = o.toPayload(r, a), u = this._jsonrpcResultCallback(e, s);
            if (this.provider.request) {
                n(this.provider.request.bind(this.provider))({
                    method: r,
                    params: a
                }, e)
            } else if (this.provider.sendAsync) this.provider.sendAsync(s, u);
            else {
                if (!this.provider.send) throw new Error("Provider does not have a request or send method to use.");
                this.provider.send(s, u)
            }
        }, u.prototype.sendBatch = function (t, e) {
            if (!this.provider) return e(i.InvalidProvider());
            var r = o.toBatchPayload(t);
            this.provider[this.provider.sendAsync ? "sendAsync" : "send"](r, (function (t, r) {
                return t ? e(t) : Array.isArray(r) ? void e(null, r) : e(i.InvalidResponse(r))
            }))
        }, u.prototype.addSubscription = function (t, e) {
            if (!this.provider.on) throw new Error("The provider doesn't support subscriptions: " + this.provider.constructor.name);
            this.subscriptions.set(t.id, {
                callback: e,
                subscription: t
            })
        }, u.prototype.removeSubscription = function (t, e) {
            if (this.subscriptions.has(t)) {
                var r = this.subscriptions.get(t).subscription.options.type;
                return this.subscriptions.delete(t), void this.send({
                    method: r + "_unsubscribe",
                    params: [t]
                }, e)
            }
            "function" == typeof e && e(null)
        }, u.prototype.clearSubscriptions = function (t) {
            try {
                var e = this;
                return this.subscriptions.size > 0 && this.subscriptions.forEach((function (r, n) {
                    t && "syncing" === r.name || e.removeSubscription(n)
                })), this.provider.reset && this.provider.reset(), !0
            } catch (t) {
                throw new Error("Error while clearing subscriptions: " + t)
            }
        }, u.prototype._isCleanCloseEvent = function (t) {
            return "object" == typeof t && ([1e3].includes(t.code) || !0 === t.wasClean)
        }, u.prototype._isIpcCloseError = function (t) {
            return "boolean" == typeof t && t
        }, u.prototype._jsonrpcResultCallback = function (t, e) {
            return function (r, n) {
                return n && n.id && e.id !== n.id ? t(new Error(`Wrong response id ${n.id} (expected: ${e.id}) in ${JSON.stringify(e)}`)) : r ? t(r) : n && n.error ? t(i.ErrorResponse(n)) : o.isValidResponse(n) ? void t(null, n.result) : t(i.InvalidResponse(n))
            }
        }, t.exports = {
            Manager: u,
            BatchManager: a
        }
    }, function (t, e, r) {
        t.exports = {
            ErrorResponse: function (t) {
                var e = t && t.error && t.error.message ? t.error.message : JSON.stringify(t),
                    r = t.error && t.error.data ? t.error.data : null,
                    n = new Error("Returned error: " + e);
                return n.data = r, n
            },
            InvalidNumberOfParams: function (t, e, r) {
                return new Error('Invalid number of parameters for "' + r + '". Got ' + t + " expected " + e + "!")
            },
            InvalidConnection: function (t, e) {
                return this.ConnectionError("CONNECTION ERROR: Couldn't connect to node " + t + ".", e)
            },
            InvalidProvider: function () {
                return new Error("Provider not set or invalid")
            },
            InvalidResponse: function (t) {
                var e = t && t.error && t.error.message ? t.error.message : "Invalid JSON RPC response: " + JSON.stringify(t);
                return new Error(e)
            },
            ConnectionTimeout: function (t) {
                return new Error("CONNECTION TIMEOUT: timeout of " + t + " ms achived")
            },
            ConnectionNotOpenError: function (t) {
                return this.ConnectionError("connection not open on send()", t)
            },
            ConnectionCloseError: function (t) {
                return "object" == typeof t && t.code && t.reason ? this.ConnectionError("CONNECTION ERROR: The connection got closed with the close code `" + t.code + "` and the following reason string `" + t.reason + "`", t) : new Error("CONNECTION ERROR: The connection closed unexpectedly")
            },
            MaxAttemptsReachedOnReconnectingError: function () {
                return new Error("Maximum number of reconnect attempts reached!")
            },
            PendingRequestsOnReconnectingError: function () {
                return new Error("CONNECTION ERROR: Provider started to reconnect before the response got received!")
            },
            ConnectionError: function (t, e) {
                const r = new Error(t);
                return e && (r.code = e.code, r.reason = e.reason), r
            },
            RevertInstructionError: function (t, e) {
                var r = new Error("Your request got reverted with the following reason string: " + t);
                return r.reason = t, r.signature = e, r
            },
            TransactionRevertInstructionError: function (t, e, r) {
                var n = new Error("Transaction has been reverted by the EVM:\n" + JSON.stringify(r, null, 2));
                return n.reason = t, n.signature = e, n.receipt = r, n
            },
            TransactionError: function (t, e) {
                var r = new Error(t);
                return r.receipt = e, r
            },
            NoContractAddressFoundError: function (t) {
                return this.TransactionError("The transaction receipt didn't contain a contract address.", t)
            },
            ContractCodeNotStoredError: function (t) {
                return this.TransactionError("The contract code couldn't be stored, please check your gas limit.", t)
            },
            TransactionRevertedWithoutReasonError: function (t) {
                return this.TransactionError("Transaction has been reverted by the EVM:\n" + JSON.stringify(t, null, 2), t)
            },
            TransactionOutOfGasError: function (t) {
                return this.TransactionError("Transaction ran out of gas. Please provide more gas:\n" + JSON.stringify(t, null, 2), t)
            },
            ResolverMethodMissingError: function (t, e) {
                return new Error("The resolver at " + t + 'does not implement requested method: "' + e + '".')
            },
            ContractMissingABIError: function () {
                return new Error("You must provide the json interface of the contract when instantiating a contract object.")
            },
            ContractOnceRequiresCallbackError: function () {
                return new Error("Once requires a callback as the second parameter.")
            },
            ContractEventDoesNotExistError: function (t) {
                return new Error('Event "' + t + "\" doesn't exist in this contract.")
            },
            ContractReservedEventError: function (t) {
                return new Error('The event "' + t + "\" is a reserved event name, you can't use it.")
            },
            ContractMissingDeployDataError: function () {
                return new Error('No "data" specified in neither the given options, nor the default options.')
            },
            ContractNoAddressDefinedError: function () {
                return new Error("This contract object doesn't have address set yet, please set an address first.")
            },
            ContractNoFromAddressDefinedError: function () {
                return new Error('No "from" address specified in neither the given options, nor the default options.')
            }
        }
    }, function (t, e, r) {
        var n = r(95),
            i = r(782),
            outputBigNumberFormatter = function (t) {
                return n.toBN(t).toString(10)
            },
            inputBlockNumberFormatter = function (t) {
                if (void 0 !== t) return function (t) {
                    return "latest" === t || "pending" === t || "earliest" === t
                }(t) ? t : "genesis" === t ? "0x0" : n.isHexStrict(t) ? "string" == typeof t ? t.toLowerCase() : t : n.numberToHex(t)
            },
            _txInputFormatter = function (t) {
                if (t.to && (t.to = inputAddressFormatter(t.to)), t.data && t.input) throw new Error('You can\'t have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.');
                if (!t.data && t.input && (t.data = t.input, delete t.input), t.data && !t.data.startsWith("0x") && (t.data = "0x" + t.data), t.data && !n.isHex(t.data)) throw new Error("The data field must be HEX encoded data.");
                return (t.gas || t.gasLimit) && (t.gas = t.gas || t.gasLimit), (t.maxPriorityFeePerGas || t.maxFeePerGas) && delete t.gasPrice, ["gasPrice", "gas", "value", "maxPriorityFeePerGas", "maxFeePerGas", "nonce"].filter((function (e) {
                    return void 0 !== t[e]
                })).forEach((function (e) {
                    t[e] = n.numberToHex(t[e])
                })), t
            },
            outputTransactionFormatter = function (t) {
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), t.nonce = n.hexToNumber(t.nonce), t.gas = n.hexToNumber(t.gas), t.gasPrice && (t.gasPrice = outputBigNumberFormatter(t.gasPrice)), t.maxFeePerGas && (t.maxFeePerGas = outputBigNumberFormatter(t.maxFeePerGas)), t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = outputBigNumberFormatter(t.maxPriorityFeePerGas)), t.type && (t.type = n.hexToNumber(t.type)), t.value = outputBigNumberFormatter(t.value), t.to && n.isAddress(t.to) ? t.to = n.toChecksumAddress(t.to) : t.to = null, t.from && (t.from = n.toChecksumAddress(t.from)), t
            },
            outputLogFormatter = function (t) {
                if ("string" == typeof t.blockHash && "string" == typeof t.transactionHash && "string" == typeof t.logIndex) {
                    var e = n.sha3(t.blockHash.replace("0x", "") + t.transactionHash.replace("0x", "") + t.logIndex.replace("0x", ""));
                    t.id = "log_" + e.replace("0x", "").substr(0, 8)
                } else t.id || (t.id = null);
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), null !== t.logIndex && (t.logIndex = n.hexToNumber(t.logIndex)), t.address && (t.address = n.toChecksumAddress(t.address)), t
            },
            inputAddressFormatter = function (t) {
                var e = new i(t);
                if (e.isValid() && e.isDirect()) return e.toAddress().toLowerCase();
                if (n.isAddress(t)) return "0x" + t.toLowerCase().replace("0x", "");
                throw new Error(`Provided address ${t} is invalid, the capitalization checksum test failed, or it's an indirect IBAN address which can't be converted.`)
            };
        t.exports = {
            inputDefaultBlockNumberFormatter: function (t) {
                return inputBlockNumberFormatter(this && null == t ? this.defaultBlock : t)
            },
            inputBlockNumberFormatter: inputBlockNumberFormatter,
            inputCallFormatter: function (t) {
                var e = (t = _txInputFormatter(t)).from || (this ? this.defaultAccount : null);
                return e && (t.from = inputAddressFormatter(e)), t
            },
            inputTransactionFormatter: function (t) {
                if ("number" != typeof (t = _txInputFormatter(t)).from && (!t.from || "object" != typeof t.from)) {
                    if (t.from = t.from || (this ? this.defaultAccount : null), !t.from && "number" != typeof t.from) throw new Error('The send transactions "from" field must be defined!');
                    t.from = inputAddressFormatter(t.from)
                }
                return t
            },
            inputAddressFormatter: inputAddressFormatter,
            inputPostFormatter: function (t) {
                return t.ttl && (t.ttl = n.numberToHex(t.ttl)), t.workToProve && (t.workToProve = n.numberToHex(t.workToProve)), t.priority && (t.priority = n.numberToHex(t.priority)), Array.isArray(t.topics) || (t.topics = t.topics ? [t.topics] : []), t.topics = t.topics.map((function (t) {
                    return 0 === t.indexOf("0x") ? t : n.fromUtf8(t)
                })), t
            },
            inputLogFormatter: function (t) {
                var toTopic = function (t) {
                    return null == t ? null : 0 === (t = String(t)).indexOf("0x") ? t : n.fromUtf8(t)
                };
                return void 0 === t && (t = {}), void 0 === t.fromBlock && (t = {
                    ...t,
                    fromBlock: "latest"
                }), (t.fromBlock || 0 === t.fromBlock) && (t.fromBlock = inputBlockNumberFormatter(t.fromBlock)), (t.toBlock || 0 === t.toBlock) && (t.toBlock = inputBlockNumberFormatter(t.toBlock)), t.topics = t.topics || [], t.topics = t.topics.map((function (t) {
                    return Array.isArray(t) ? t.map(toTopic) : toTopic(t)
                })), toTopic = null, t.address && (t.address = Array.isArray(t.address) ? t.address.map((function (t) {
                    return inputAddressFormatter(t)
                })) : inputAddressFormatter(t.address)), t
            },
            inputSignFormatter: function (t) {
                return n.isHexStrict(t) ? t : n.utf8ToHex(t)
            },
            inputStorageKeysFormatter: function (t) {
                return t.map(n.numberToHex)
            },
            outputProofFormatter: function (t) {
                return t.address = n.toChecksumAddress(t.address), t.nonce = n.hexToNumberString(t.nonce), t.balance = n.hexToNumberString(t.balance), t
            },
            outputBigNumberFormatter: outputBigNumberFormatter,
            outputTransactionFormatter: outputTransactionFormatter,
            outputTransactionReceiptFormatter: function (t) {
                if ("object" != typeof t) throw new Error("Received receipt is invalid: " + t);
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), t.cumulativeGasUsed = n.hexToNumber(t.cumulativeGasUsed), t.gasUsed = n.hexToNumber(t.gasUsed), Array.isArray(t.logs) && (t.logs = t.logs.map(outputLogFormatter)), t.contractAddress && (t.contractAddress = n.toChecksumAddress(t.contractAddress)), void 0 !== t.status && null !== t.status && (t.status = Boolean(parseInt(t.status))), t
            },
            outputBlockFormatter: function (t) {
                return t.gasLimit = n.hexToNumber(t.gasLimit), t.gasUsed = n.hexToNumber(t.gasUsed), t.size = n.hexToNumber(t.size), t.timestamp = n.hexToNumber(t.timestamp), null !== t.number && (t.number = n.hexToNumber(t.number)), t.difficulty && (t.difficulty = outputBigNumberFormatter(t.difficulty)), t.totalDifficulty && (t.totalDifficulty = outputBigNumberFormatter(t.totalDifficulty)), Array.isArray(t.transactions) && t.transactions.forEach((function (t) {
                    if ("string" != typeof t) return outputTransactionFormatter(t)
                })), t.miner && (t.miner = n.toChecksumAddress(t.miner)), t
            },
            outputLogFormatter: outputLogFormatter,
            outputPostFormatter: function (t) {
                return t.expiry = n.hexToNumber(t.expiry), t.sent = n.hexToNumber(t.sent), t.ttl = n.hexToNumber(t.ttl), t.workProved = n.hexToNumber(t.workProved), t.topics || (t.topics = []), t.topics = t.topics.map((function (t) {
                    return n.toUtf8(t)
                })), t
            },
            outputSyncingFormatter: function (t) {
                return t.startingBlock = n.hexToNumber(t.startingBlock), t.currentBlock = n.hexToNumber(t.currentBlock), t.highestBlock = n.hexToNumber(t.highestBlock), t.knownStates && (t.knownStates = n.hexToNumber(t.knownStates), t.pulledStates = n.hexToNumber(t.pulledStates)), t
            }
        }
    }, function (t, e) {}, function (t, e, r) {
        var n = r(130),
            i = r(301),
            _parseNumber = function (t) {
                var e = typeof t;
                if ("string" === e) return i.isHexStrict(t) ? new n(t.replace(/0x/i, ""), 16) : new n(t, 10);
                if ("number" === e) return new n(t);
                if (i.isBigNumber(t)) return new n(t.toString(10));
                if (i.isBN(t)) return t;
                throw new Error(t + " is not a number")
            },
            _solidityPack = function (t, e, r) {
                var o, a;
                if ("bytes" === (t = function (t) {
                        return t.startsWith("int[") ? "int256" + t.slice(3) : "int" === t ? "int256" : t.startsWith("uint[") ? "uint256" + t.slice(4) : "uint" === t ? "uint256" : t.startsWith("fixed[") ? "fixed128x128" + t.slice(5) : "fixed" === t ? "fixed128x128" : t.startsWith("ufixed[") ? "ufixed128x128" + t.slice(6) : "ufixed" === t ? "ufixed128x128" : t
                    }(t))) {
                    if (e.replace(/^0x/i, "").length % 2 != 0) throw new Error("Invalid bytes characters " + e.length);
                    return e
                }
                if ("string" === t) return i.utf8ToHex(e);
                if ("bool" === t) return e ? "01" : "00";
                if (t.startsWith("address")) {
                    if (o = r ? 64 : 40, !i.isAddress(e)) throw new Error(e + " is not a valid address, or the checksum is invalid.");
                    return i.leftPad(e.toLowerCase(), o)
                }
                if (o = function (t) {
                        var e = /^\D+(\d+).*$/.exec(t);
                        return e ? parseInt(e[1], 10) : null
                    }(t), t.startsWith("bytes")) {
                    if (!o) throw new Error("bytes[] not yet supported in solidity");
                    if (r && (o = 32), o < 1 || o > 32 || o < e.replace(/^0x/i, "").length / 2) throw new Error("Invalid bytes" + o + " for " + e);
                    return i.rightPad(e, 2 * o)
                }
                if (t.startsWith("uint")) {
                    if (o % 8 || o < 8 || o > 256) throw new Error("Invalid uint" + o + " size");
                    if ((a = _parseNumber(e)).bitLength() > o) throw new Error("Supplied uint exceeds width: " + o + " vs " + a.bitLength());
                    if (a.lt(new n(0))) throw new Error("Supplied uint " + a.toString() + " is negative");
                    return o ? i.leftPad(a.toString("hex"), o / 8 * 2) : a
                }
                if (t.startsWith("int")) {
                    if (o % 8 || o < 8 || o > 256) throw new Error("Invalid int" + o + " size");
                    if ((a = _parseNumber(e)).bitLength() > o) throw new Error("Supplied int exceeds width: " + o + " vs " + a.bitLength());
                    return a.lt(new n(0)) ? a.toTwos(o).toString("hex") : o ? i.leftPad(a.toString("hex"), o / 8 * 2) : a
                }
                throw new Error("Unsupported or invalid type: " + t)
            },
            _processSolidityEncodePackedArgs = function (t) {
                if (Array.isArray(t)) throw new Error("Autodetection of array types is not supported.");
                var e, r, o = "";
                if (t && "object" == typeof t && (t.hasOwnProperty("v") || t.hasOwnProperty("t") || t.hasOwnProperty("value") || t.hasOwnProperty("type")) ? (e = t.hasOwnProperty("t") ? t.t : t.type, o = t.hasOwnProperty("v") ? t.v : t.value) : (e = i.toHex(t, !0), o = i.toHex(t), e.startsWith("int") || e.startsWith("uint") || (e = "bytes")), !e.startsWith("int") && !e.startsWith("uint") || "string" != typeof o || /^(-)?0x/i.test(o) || (o = new n(o)), Array.isArray(o)) {
                    if ((r = function (t) {
                            var e = /^\D+\d*\[(\d+)\]$/.exec(t);
                            return e ? parseInt(e[1], 10) : null
                        }(e)) && o.length !== r) throw new Error(e + " is not matching the given array " + JSON.stringify(o));
                    r = o.length
                }
                return Array.isArray(o) ? o.map((function (t) {
                    return _solidityPack(e, t, r).toString("hex").replace("0x", "")
                })).join("") : _solidityPack(e, o, r).toString("hex").replace("0x", "")
            };
        t.exports = {
            soliditySha3: function () {
                var t = Array.prototype.slice.call(arguments),
                    e = t.map(_processSolidityEncodePackedArgs);
                return i.sha3("0x" + e.join(""))
            },
            soliditySha3Raw: function () {
                return i.sha3Raw("0x" + Array.prototype.slice.call(arguments).map(_processSolidityEncodePackedArgs).join(""))
            },
            encodePacked: function () {
                var t = Array.prototype.slice.call(arguments),
                    e = t.map(_processSolidityEncodePackedArgs);
                return "0x" + e.join("").toLowerCase()
            }
        }
    }, function (t, e, r) {
        const n = r(95),
            i = r(130),
            iso13616Prepare = function (t) {
                const e = "A".charCodeAt(0),
                    r = "Z".charCodeAt(0);
                return (t = (t = t.toUpperCase()).substr(4) + t.substr(0, 4)).split("").map((function (t) {
                    const n = t.charCodeAt(0);
                    return n >= e && n <= r ? n - e + 10 : t
                })).join("")
            },
            mod9710 = function (t) {
                let e, r = t;
                for (; r.length > 2;) e = r.slice(0, 9), r = parseInt(e, 10) % 97 + r.slice(e.length);
                return parseInt(r, 10) % 97
            };
        class Iban {
            constructor(t) {
                this._iban = t
            }
            static toAddress(t) {
                if (!(t = new Iban(t)).isDirect()) throw new Error("IBAN is indirect and can't be converted");
                return t.toAddress()
            }
            static toIban(t) {
                return Iban.fromAddress(t).toString()
            }
            static fromAddress(t) {
                if (!n.isAddress(t)) throw new Error("Provided address is not a valid address: " + t);
                t = t.replace("0x", "").replace("0X", "");
                const e = function (t, e) {
                    let r = t;
                    for (; r.length < 2 * e;) r = "0" + r;
                    return r
                }(new i(t, 16).toString(36), 15);
                return Iban.fromBban(e.toUpperCase())
            }
            static fromBban(t) {
                const e = ("0" + (98 - mod9710(iso13616Prepare("XE00" + t)))).slice(-2);
                return new Iban("XE" + e + t)
            }
            static createIndirect(t) {
                return Iban.fromBban("ETH" + t.institution + t.identifier)
            }
            static isValid(t) {
                return new Iban(t).isValid()
            }
            isValid() {
                return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban) && 1 === mod9710(iso13616Prepare(this._iban))
            }
            isDirect() {
                return 34 === this._iban.length || 35 === this._iban.length
            }
            isIndirect() {
                return 20 === this._iban.length
            }
            checksum() {
                return this._iban.substr(2, 2)
            }
            institution() {
                return this.isIndirect() ? this._iban.substr(7, 4) : ""
            }
            client() {
                return this.isIndirect() ? this._iban.substr(11) : ""
            }
            toAddress() {
                if (this.isDirect()) {
                    const t = this._iban.substr(4),
                        e = new i(t, 36);
                    return n.toChecksumAddress(e.toString(16, 20))
                }
                return ""
            }
            toString() {
                return this._iban
            }
        }
        t.exports = Iban
    }, function (t, e, r) {
        var n = r(302),
            i = r(26).errors,
            Batch = function (t) {
                this.requestManager = t, this.requests = []
            };
        Batch.prototype.add = function (t) {
            this.requests.push(t)
        }, Batch.prototype.execute = function () {
            var t = this.requests;
            this.requestManager.sendBatch(t, (function (e, r) {
                r = r || [], t.map((function (t, e) {
                    return r[e] || {}
                })).forEach((function (e, r) {
                    if (t[r].callback) {
                        if (e && e.error) return t[r].callback(i.ErrorResponse(e));
                        if (!n.isValidResponse(e)) return t[r].callback(i.InvalidResponse(e));
                        try {
                            t[r].callback(null, t[r].format ? t[r].format(e.result) : e.result)
                        } catch (e) {
                            t[r].callback(e)
                        }
                    }
                }))
            }))
        }, t.exports = Batch
    }, function (t, e, r) {
        var n, i = null;
        try {
            n = Function("return this")()
        } catch (t) {
            n = window
        }
        void 0 !== n.ethereum ? i = n.ethereum : void 0 !== n.web3 && n.web3.currentProvider && (n.web3.currentProvider.sendAsync && (n.web3.currentProvider.send = n.web3.currentProvider.sendAsync, delete n.web3.currentProvider.sendAsync), !n.web3.currentProvider.on && n.web3.currentProvider.connection && "ipcProviderWrapper" === n.web3.currentProvider.connection.constructor.name && (n.web3.currentProvider.on = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            switch (t) {
                case "data":
                    this.connection.on("data", (function (t) {
                        var r = "";
                        t = t.toString();
                        try {
                            r = JSON.parse(t)
                        } catch (r) {
                            return e(new Error("Couldn't parse response data" + t))
                        }
                        r.id || -1 === r.method.indexOf("_subscription") || e(null, r)
                    }));
                    break;
                default:
                    this.connection.on(t, e)
            }
        }), i = n.web3.currentProvider), t.exports = i
    }, function (t, e, r) {
        var n = r(193),
            i = r(786),
            o = r(26).errors,
            a = r(83).w3cwebsocket,
            s = function WebsocketProvider(t, e) {
                n.call(this), e = e || {}, this.url = t, this._customTimeout = e.timeout || 15e3, this.headers = e.headers || {}, this.protocol = e.protocol || void 0, this.reconnectOptions = Object.assign({
                    auto: !1,
                    delay: 5e3,
                    maxAttempts: !1,
                    onTimeout: !1
                }, e.reconnect), this.clientConfig = e.clientConfig || void 0, this.requestOptions = e.requestOptions || void 0, this.DATA = "data", this.CLOSE = "close", this.ERROR = "error", this.CONNECT = "connect", this.RECONNECT = "reconnect", this.connection = null, this.requestQueue = new Map, this.responseQueue = new Map, this.reconnectAttempts = 0, this.reconnecting = !1;
                var r = i.parseURL(t);
                r.username && r.password && (this.headers.authorization = "Basic " + i.btoa(r.username + ":" + r.password)), r.auth && (this.headers.authorization = "Basic " + i.btoa(r.auth)), Object.defineProperty(this, "connected", {
                    get: function () {
                        return this.connection && this.connection.readyState === this.connection.OPEN
                    },
                    enumerable: !0
                }), this.connect()
            };
        (s.prototype = Object.create(n.prototype)).constructor = s, s.prototype.connect = function () {
            this.connection = new a(this.url, this.protocol, void 0, this.headers, this.requestOptions, this.clientConfig), this._addSocketListeners()
        }, s.prototype._onMessage = function (t) {
            var e = this;
            this._parseResponse("string" == typeof t.data ? t.data : "").forEach((function (t) {
                if (t.method && -1 !== t.method.indexOf("_subscription")) e.emit(e.DATA, t);
                else {
                    var r = t.id;
                    Array.isArray(t) && (r = t[0].id), e.responseQueue.has(r) && (void 0 !== e.responseQueue.get(r).callback && e.responseQueue.get(r).callback(!1, t), e.responseQueue.delete(r))
                }
            }))
        }, s.prototype._onConnect = function () {
            if (this.emit(this.CONNECT), this.reconnectAttempts = 0, this.reconnecting = !1, this.requestQueue.size > 0) {
                var t = this;
                this.requestQueue.forEach((function (e, r) {
                    t.send(e.payload, e.callback), t.requestQueue.delete(r)
                }))
            }
        }, s.prototype._onClose = function (t) {
            var e = this;
            !this.reconnectOptions.auto || [1e3, 1001].includes(t.code) && !1 !== t.wasClean ? (this.emit(this.CLOSE, t), this.requestQueue.size > 0 && this.requestQueue.forEach((function (r, n) {
                r.callback(o.ConnectionNotOpenError(t)), e.requestQueue.delete(n)
            })), this.responseQueue.size > 0 && this.responseQueue.forEach((function (r, n) {
                r.callback(o.InvalidConnection("on WS", t)), e.responseQueue.delete(n)
            })), this._removeSocketListeners(), this.removeAllListeners()) : this.reconnect()
        }, s.prototype._addSocketListeners = function () {
            this.connection.addEventListener("message", this._onMessage.bind(this)), this.connection.addEventListener("open", this._onConnect.bind(this)), this.connection.addEventListener("close", this._onClose.bind(this))
        }, s.prototype._removeSocketListeners = function () {
            this.connection.removeEventListener("message", this._onMessage), this.connection.removeEventListener("open", this._onConnect), this.connection.removeEventListener("close", this._onClose)
        }, s.prototype._parseResponse = function (t) {
            var e = this,
                r = [];
            return t.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach((function (t) {
                e.lastChunk && (t = e.lastChunk + t);
                var n = null;
                try {
                    n = JSON.parse(t)
                } catch (r) {
                    return e.lastChunk = t, clearTimeout(e.lastChunkTimeout), void(e.lastChunkTimeout = setTimeout((function () {
                        e.reconnectOptions.auto && e.reconnectOptions.onTimeout ? e.reconnect() : (e.emit(e.ERROR, o.ConnectionTimeout(e._customTimeout)), e.requestQueue.size > 0 && e.requestQueue.forEach((function (t, r) {
                            t.callback(o.ConnectionTimeout(e._customTimeout)), e.requestQueue.delete(r)
                        })))
                    }), e._customTimeout))
                }
                clearTimeout(e.lastChunkTimeout), e.lastChunk = null, n && r.push(n)
            })), r
        }, s.prototype.send = function (t, e) {
            var r = t.id,
                n = {
                    payload: t,
                    callback: e
                };
            if (Array.isArray(t) && (r = t[0].id), this.connection.readyState === this.connection.CONNECTING || this.reconnecting) this.requestQueue.set(r, n);
            else {
                if (this.connection.readyState !== this.connection.OPEN) return this.requestQueue.delete(r), this.emit(this.ERROR, o.ConnectionNotOpenError()), void n.callback(o.ConnectionNotOpenError());
                this.responseQueue.set(r, n), this.requestQueue.delete(r);
                try {
                    this.connection.send(JSON.stringify(n.payload))
                } catch (t) {
                    n.callback(t), this.responseQueue.delete(r)
                }
            }
        }, s.prototype.reset = function () {
            this.responseQueue.clear(), this.requestQueue.clear(), this.removeAllListeners(), this._removeSocketListeners(), this._addSocketListeners()
        }, s.prototype.disconnect = function (t, e) {
            this._removeSocketListeners(), this.connection.close(t || 1e3, e)
        }, s.prototype.supportsSubscriptions = function () {
            return !0
        }, s.prototype.reconnect = function () {
            var t = this;
            this.reconnecting = !0, this.responseQueue.size > 0 && this.responseQueue.forEach((function (e, r) {
                e.callback(o.PendingRequestsOnReconnectingError()), t.responseQueue.delete(r)
            })), !this.reconnectOptions.maxAttempts || this.reconnectAttempts < this.reconnectOptions.maxAttempts ? setTimeout((function () {
                t.reconnectAttempts++, t._removeSocketListeners(), t.emit(t.RECONNECT, t.reconnectAttempts), t.connect()
            }), this.reconnectOptions.delay) : (this.emit(this.ERROR, o.MaxAttemptsReachedOnReconnectingError()), this.reconnecting = !1, this.requestQueue.size > 0 && this.requestQueue.forEach((function (e, r) {
                e.callback(o.MaxAttemptsReachedOnReconnectingError()), t.requestQueue.delete(r)
            })))
        }, t.exports = s
    }, function (t, e, r) {
        (function (e, n) {
            var i = "[object process]" === Object.prototype.toString.call(void 0 !== e ? e : 0),
                o = "undefined" != typeof navigator && "ReactNative" === navigator.product,
                a = null,
                s = null;
            if (i || o) {
                a = function (t) {
                    return n.from(t).toString("base64")
                };
                var u = r(16);
                if (u.URL) {
                    var c = u.URL;
                    s = function (t) {
                        return new c(t)
                    }
                } else s = r(16).parse
            } else a = btoa.bind(window), s = function (t) {
                return new URL(t)
            };
            t.exports = {
                parseURL: s,
                btoa: a
            }
        }).call(this, r(7), r(0).Buffer)
    }, function (t, e, r) {
        var n = r(26).errors,
            i = r(84).XMLHttpRequest,
            o = r(51),
            a = r(68),
            s = function HttpProvider(t, e) {
                e = e || {}, this.withCredentials = e.withCredentials || !1, this.timeout = e.timeout || 0, this.headers = e.headers, this.agent = e.agent, this.connected = !1;
                const r = !1 !== e.keepAlive;
                this.host = t || "http://localhost:8545", this.agent || ("https" === this.host.substring(0, 5) ? this.httpsAgent = new a.Agent({
                    keepAlive: r
                }) : this.httpAgent = new o.Agent({
                    keepAlive: r
                }))
            };
        s.prototype._prepareRequest = function () {
            var t;
            if ("undefined" != typeof XMLHttpRequest) t = new XMLHttpRequest;
            else {
                t = new i;
                var e = {
                    httpsAgent: this.httpsAgent,
                    httpAgent: this.httpAgent,
                    baseUrl: this.baseUrl
                };
                this.agent && (e.httpsAgent = this.agent.https, e.httpAgent = this.agent.http, e.baseUrl = this.agent.baseUrl), t.nodejsSet(e)
            }
            return t.open("POST", this.host, !0), t.setRequestHeader("Content-Type", "application/json"), t.timeout = this.timeout, t.withCredentials = this.withCredentials, this.headers && this.headers.forEach((function (e) {
                t.setRequestHeader(e.name, e.value)
            })), t
        }, s.prototype.send = function (t, e) {
            var r = this,
                i = this._prepareRequest();
            i.onreadystatechange = function () {
                if (4 === i.readyState && 1 !== i.timeout) {
                    var t = i.responseText,
                        o = null;
                    try {
                        t = JSON.parse(t)
                    } catch (t) {
                        o = n.InvalidResponse(i.responseText)
                    }
                    r.connected = !0, e(o, t)
                }
            }, i.ontimeout = function () {
                r.connected = !1, e(n.ConnectionTimeout(this.timeout))
            };
            try {
                i.send(JSON.stringify(t))
            } catch (t) {
                this.connected = !1, e(n.InvalidConnection(this.host))
            }
        }, s.prototype.disconnect = function () {}, s.prototype.supportsSubscriptions = function () {
            return !1
        }, t.exports = s
    }, function (t, e, r) {
        var n = r(26).errors,
            i = r(789),
            o = function IpcProvider(t, e) {
                var r = this;
                this.responseCallbacks = {}, this.notificationCallbacks = [], this.path = t, this.connected = !1, this.connection = e.connect({
                    path: this.path
                }), this.addDefaultEvents();
                var callback = function (t) {
                    var e = null;
                    Array.isArray(t) ? t.forEach((function (t) {
                        r.responseCallbacks[t.id] && (e = t.id)
                    })) : e = t.id, e || -1 === t.method.indexOf("_subscription") ? r.responseCallbacks[e] && (r.responseCallbacks[e](null, t), delete r.responseCallbacks[e]) : r.notificationCallbacks.forEach((function (e) {
                        "function" == typeof e && e(t)
                    }))
                };
                "Socket" === e.constructor.name ? i(this.connection).done(callback) : this.connection.on("data", (function (t) {
                    r._parseResponse(t.toString()).forEach(callback)
                }))
            };
        o.prototype.addDefaultEvents = function () {
            var t = this;
            this.connection.on("connect", (function () {
                t.connected = !0
            })), this.connection.on("close", (function () {
                t.connected = !1
            })), this.connection.on("error", (function () {
                t._timeout()
            })), this.connection.on("end", (function () {
                t._timeout()
            })), this.connection.on("timeout", (function () {
                t._timeout()
            }))
        }, o.prototype._parseResponse = function (t) {
            var e = this,
                r = [];
            return t.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach((function (t) {
                e.lastChunk && (t = e.lastChunk + t);
                var i = null;
                try {
                    i = JSON.parse(t)
                } catch (r) {
                    return e.lastChunk = t, clearTimeout(e.lastChunkTimeout), void(e.lastChunkTimeout = setTimeout((function () {
                        throw e._timeout(), n.InvalidResponse(t)
                    }), 15e3))
                }
                clearTimeout(e.lastChunkTimeout), e.lastChunk = null, i && r.push(i)
            })), r
        }, o.prototype._addResponseCallback = function (t, e) {
            var r = t.id || t[0].id,
                n = t.method || t[0].method;
            this.responseCallbacks[r] = e, this.responseCallbacks[r].method = n
        }, o.prototype._timeout = function () {
            for (var t in this.responseCallbacks) this.responseCallbacks.hasOwnProperty(t) && (this.responseCallbacks[t](n.InvalidConnection("on IPC")), delete this.responseCallbacks[t])
        }, o.prototype.reconnect = function () {
            this.connection.connect({
                path: this.path
            })
        }, o.prototype.send = function (t, e) {
            this.connection.writable || this.connection.connect({
                path: this.path
            }), this.connection.write(JSON.stringify(t)), this._addResponseCallback(t, e)
        }, o.prototype.on = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            switch (t) {
                case "data":
                    this.notificationCallbacks.push(e);
                    break;
                default:
                    this.connection.on(t, e)
            }
        }, o.prototype.once = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            this.connection.once(t, e)
        }, o.prototype.removeListener = function (t, e) {
            var r = this;
            switch (t) {
                case "data":
                    this.notificationCallbacks.forEach((function (t, n) {
                        t === e && r.notificationCallbacks.splice(n, 1)
                    }));
                    break;
                default:
                    this.connection.removeListener(t, e)
            }
        }, o.prototype.removeAllListeners = function (t) {
            switch (t) {
                case "data":
                    this.notificationCallbacks = [];
                    break;
                default:
                    this.connection.removeAllListeners(t)
            }
        }, o.prototype.reset = function () {
            this._timeout(), this.notificationCallbacks = [], this.connection.removeAllListeners("error"), this.connection.removeAllListeners("end"), this.connection.removeAllListeners("timeout"), this.addDefaultEvents()
        }, o.prototype.supportsSubscriptions = function () {
            return !0
        }, t.exports = o
    }, function (t, e, r) {
        ! function webpackUniversalModuleDefinition(e, r) {
            t.exports = r()
        }("undefined" != typeof self && self, (function () {
            return function (t) {
                var e = {};

                function __webpack_require__(r) {
                    if (e[r]) return e[r].exports;
                    var n = e[r] = {
                        i: r,
                        l: !1,
                        exports: {}
                    };
                    return t[r].call(n.exports, n, n.exports, __webpack_require__), n.l = !0, n.exports
                }
                return __webpack_require__.m = t, __webpack_require__.c = e, __webpack_require__.d = function (t, e, r) {
                    __webpack_require__.o(t, e) || Object.defineProperty(t, e, {
                        configurable: !1,
                        enumerable: !0,
                        get: r
                    })
                }, __webpack_require__.n = function (t) {
                    var e = t && t.__esModule ? function getDefault() {
                        return t.default
                    } : function getModuleExports() {
                        return t
                    };
                    return __webpack_require__.d(e, "a", e), e
                }, __webpack_require__.o = function (t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e)
                }, __webpack_require__.p = "", __webpack_require__(__webpack_require__.s = 7)
            }([function (t, e, r) {
                r.d(e, "j", (function () {
                    return i
                })), r.d(e, "d", (function () {
                    return compose2
                })), r.d(e, "c", (function () {
                    return attr
                })), r.d(e, "h", (function () {
                    return o
                })), r.d(e, "b", (function () {
                    return apply
                })), r.d(e, "k", (function () {
                    return varArgs
                })), r.d(e, "e", (function () {
                    return flip
                })), r.d(e, "g", (function () {
                    return lazyIntersection
                })), r.d(e, "i", (function () {
                    return noop
                })), r.d(e, "a", (function () {
                    return always
                })), r.d(e, "f", (function () {
                    return functor
                }));
                var n = r(1),
                    i = varArgs((function (t, e) {
                        var r = e.length;
                        return varArgs((function (n) {
                            for (var i = 0; i < n.length; i++) e[r + i] = n[i];
                            return e.length = r + n.length, t.apply(this, e)
                        }))
                    }));
                varArgs((function (t) {
                    var e = Object(n.c)(t);

                    function next(t, e) {
                        return [apply(t, e)]
                    }
                    return varArgs((function (t) {
                        return Object(n.f)(next, t, e)[0]
                    }))
                }));

                function compose2(t, e) {
                    return function () {
                        return t.call(this, e.apply(this, arguments))
                    }
                }

                function attr(t) {
                    return function (e) {
                        return e[t]
                    }
                }
                var o = varArgs((function (t) {
                    return varArgs((function (e) {
                        for (var r, n = 0; n < attr("length")(t); n++)
                            if (r = apply(e, t[n])) return r
                    }))
                }));

                function apply(t, e) {
                    return e.apply(void 0, t)
                }

                function varArgs(t) {
                    var e = t.length - 1,
                        r = Array.prototype.slice;
                    if (0 === e) return function () {
                        return t.call(this, r.call(arguments))
                    };
                    if (1 === e) return function () {
                        return t.call(this, arguments[0], r.call(arguments, 1))
                    };
                    var n = Array(t.length);
                    return function () {
                        for (var i = 0; i < e; i++) n[i] = arguments[i];
                        return n[e] = r.call(arguments, e), t.apply(this, n)
                    }
                }

                function flip(t) {
                    return function (e, r) {
                        return t(r, e)
                    }
                }

                function lazyIntersection(t, e) {
                    return function (r) {
                        return t(r) && e(r)
                    }
                }

                function noop() {}

                function always() {
                    return !0
                }

                function functor(t) {
                    return function () {
                        return t
                    }
                }
            }, function (t, e, r) {
                r.d(e, "d", (function () {
                    return cons
                })), r.d(e, "g", (function () {
                    return i
                })), r.d(e, "l", (function () {
                    return o
                })), r.d(e, "c", (function () {
                    return arrayAsList
                })), r.d(e, "h", (function () {
                    return a
                })), r.d(e, "i", (function () {
                    return listAsArray
                })), r.d(e, "j", (function () {
                    return map
                })), r.d(e, "f", (function () {
                    return foldR
                })), r.d(e, "m", (function () {
                    return without
                })), r.d(e, "a", (function () {
                    return all
                })), r.d(e, "b", (function () {
                    return applyEach
                })), r.d(e, "k", (function () {
                    return reverseList
                })), r.d(e, "e", (function () {
                    return first
                }));
                var n = r(0);

                function cons(t, e) {
                    return [t, e]
                }
                var i = Object(n.c)(0),
                    o = Object(n.c)(1);

                function arrayAsList(t) {
                    return reverseList(t.reduce(Object(n.e)(cons), null))
                }
                var a = Object(n.k)(arrayAsList);

                function listAsArray(t) {
                    return foldR((function (t, e) {
                        return t.unshift(e), t
                    }), [], t)
                }

                function map(t, e) {
                    return e ? cons(t(i(e)), map(t, o(e))) : null
                }

                function foldR(t, e, r) {
                    return r ? t(foldR(t, e, o(r)), i(r)) : e
                }

                function without(t, e, r) {
                    return function withoutInner(t, r) {
                        return t ? e(i(t)) ? (r(i(t)), o(t)) : cons(i(t), withoutInner(o(t), r)) : null
                    }(t, r || n.i)
                }

                function all(t, e) {
                    return !e || t(i(e)) && all(t, o(e))
                }

                function applyEach(t, e) {
                    t && (i(t).apply(null, e), applyEach(o(t), e))
                }

                function reverseList(t) {
                    return function reverseInner(t, e) {
                        return t ? reverseInner(o(t), cons(i(t), e)) : e
                    }(t, null)
                }

                function first(t, e) {
                    return e && (t(i(e)) ? i(e) : first(t, o(e)))
                }
            }, function (t, e, r) {
                r.d(e, "c", (function () {
                    return isOfType
                })), r.d(e, "e", (function () {
                    return o
                })), r.d(e, "d", (function () {
                    return a
                })), r.d(e, "a", (function () {
                    return defined
                })), r.d(e, "b", (function () {
                    return hasAllProperties
                }));
                var n = r(1),
                    i = r(0);

                function isOfType(t, e) {
                    return e && e.constructor === t
                }
                var o = Object(i.c)("length"),
                    a = Object(i.j)(isOfType, String);

                function defined(t) {
                    return void 0 !== t
                }

                function hasAllProperties(t, e) {
                    return e instanceof Object && Object(n.a)((function (t) {
                        return t in e
                    }), t)
                }
            }, function (t, e, r) {
                r.d(e, "f", (function () {
                    return i
                })), r.d(e, "d", (function () {
                    return o
                })), r.d(e, "g", (function () {
                    return a
                })), r.d(e, "e", (function () {
                    return s
                })), r.d(e, "b", (function () {
                    return u
                })), r.d(e, "h", (function () {
                    return c
                })), r.d(e, "i", (function () {
                    return l
                })), r.d(e, "c", (function () {
                    return h
                })), r.d(e, "m", (function () {
                    return d
                })), r.d(e, "n", (function () {
                    return p
                })), r.d(e, "a", (function () {
                    return m
                })), r.d(e, "j", (function () {
                    return y
                })), r.d(e, "l", (function () {
                    return b
                })), r.d(e, "k", (function () {
                    return g
                })), r.d(e, "o", (function () {
                    return errorReport
                }));
                var n = 1,
                    i = n++,
                    o = n++,
                    a = n++,
                    s = n++,
                    u = "fail",
                    c = n++,
                    l = n++,
                    h = "start",
                    d = "data",
                    p = "end",
                    m = n++,
                    y = n++,
                    b = n++,
                    g = n++;

                function errorReport(t, e, r) {
                    try {
                        var n = JSON.parse(e)
                    } catch (t) {}
                    return {
                        statusCode: t,
                        body: e,
                        jsonBody: n,
                        thrown: r
                    }
                }
            }, function (t, e, r) {
                r.d(e, "b", (function () {
                    return namedNode
                })), r.d(e, "a", (function () {
                    return i
                })), r.d(e, "c", (function () {
                    return o
                }));
                var n = r(0);

                function namedNode(t, e) {
                    return {
                        key: t,
                        node: e
                    }
                }
                var i = Object(n.c)("key"),
                    o = Object(n.c)("node")
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return oboe
                }));
                var n = r(1),
                    i = r(0),
                    o = r(2),
                    a = r(8),
                    s = r(9);

                function oboe(t) {
                    var e = Object(n.h)("resume", "pause", "pipe"),
                        r = Object(i.j)(o.b, e);
                    return t ? r(t) || Object(o.d)(t) ? Object(a.a)(s.a, t) : Object(a.a)(s.a, t.url, t.method, t.body, t.headers, t.withCredentials, t.cached) : Object(s.a)()
                }
                oboe.drop = function () {
                    return oboe.drop
                }
            }, function (t, e, r) {
                r.d(e, "b", (function () {
                    return incrementalContentBuilder
                })), r.d(e, "a", (function () {
                    return s
                }));
                var n = r(3),
                    i = r(4),
                    o = r(2),
                    a = r(1),
                    s = {};

                function incrementalContentBuilder(t) {
                    var e = t(n.f).emit,
                        r = t(n.d).emit,
                        u = t(n.i).emit,
                        c = t(n.h).emit;

                    function appendBuiltContent(t, e, r) {
                        Object(i.c)(Object(a.g)(t))[e] = r
                    }

                    function keyFound(t, r, n) {
                        t && appendBuiltContent(t, r, n);
                        var o = Object(a.d)(Object(i.b)(r, n), t);
                        return e(o), o
                    }
                    var l = {};
                    return l[n.l] = function nodeOpened(t, e) {
                        if (!t) return u(e), keyFound(t, s, e);
                        var r = function arrayIndicesAreKeys(t, e) {
                                var r = Object(i.c)(Object(a.g)(t));
                                return Object(o.c)(Array, r) ? keyFound(t, Object(o.e)(r), e) : t
                            }(t, e),
                            n = Object(a.l)(r),
                            c = Object(i.a)(Object(a.g)(r));
                        return appendBuiltContent(n, c, e), Object(a.d)(Object(i.b)(c, e), n)
                    }, l[n.k] = function nodeClosed(t) {
                        return r(t), Object(a.l)(t) || c(Object(i.c)(Object(a.g)(t)))
                    }, l[n.j] = keyFound, l
                }
            }, function (t, e, r) {
                Object.defineProperty(e, "__esModule", {
                    value: !0
                });
                var n = r(5);
                e.default = n.a
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return applyDefaults
                }));
                var n = r(2);

                function applyDefaults(t, e, r, i, o, a, s) {
                    return o = o ? JSON.parse(JSON.stringify(o)) : {}, i ? (Object(n.d)(i) || (i = JSON.stringify(i), o["Content-Type"] = o["Content-Type"] || "application/json"), o["Content-Length"] = o["Content-Length"] || i.length) : i = null, t(r || "GET", function modifiedUrl(t, e) {
                        return !1 === e && (-1 === t.indexOf("?") ? t += "?" : t += "&", t += "_=" + (new Date).getTime()), t
                    }(e, s), i, o, a || !1)
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return wire
                }));
                var n = r(10),
                    i = r(12),
                    o = r(6),
                    a = r(13),
                    s = r(14),
                    u = r(16),
                    c = r(17),
                    l = r(18);

                function wire(t, e, r, h, d) {
                    var p = Object(n.a)();
                    return e && Object(l.b)(p, Object(l.a)(), t, e, r, h, d), Object(c.a)(p), Object(i.a)(p, Object(o.b)(p)), Object(a.a)(p, s.a), Object(u.a)(p, e)
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return pubSub
                }));
                var n = r(11),
                    i = r(0);

                function pubSub() {
                    var t = {},
                        e = newSingle("newListener"),
                        r = newSingle("removeListener");

                    function newSingle(i) {
                        return t[i] = Object(n.a)(i, e, r), t[i]
                    }

                    function pubSubInstance(e) {
                        return t[e] || newSingle(e)
                    }
                    return ["emit", "on", "un"].forEach((function (t) {
                        pubSubInstance[t] = Object(i.k)((function (e, r) {
                            Object(i.b)(r, pubSubInstance(e)[t])
                        }))
                    })), pubSubInstance
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return singleEventPubSub
                }));
                var n = r(1),
                    i = r(2),
                    o = r(0);

                function singleEventPubSub(t, e, r) {
                    var a, s;

                    function hasId(t) {
                        return function (e) {
                            return e.id === t
                        }
                    }
                    return {
                        on: function (r, i) {
                            var o = {
                                listener: r,
                                id: i || r
                            };
                            return e && e.emit(t, r, o.id), a = Object(n.d)(o, a), s = Object(n.d)(r, s), this
                        },
                        emit: function () {
                            Object(n.b)(s, arguments)
                        },
                        un: function (e) {
                            var i;
                            a = Object(n.m)(a, hasId(e), (function (t) {
                                i = t
                            })), i && (s = Object(n.m)(s, (function (t) {
                                return t === i.listener
                            })), r && r.emit(t, i.listener, i.id))
                        },
                        listeners: function () {
                            return s
                        },
                        hasListener: function (t) {
                            var e = t ? hasId(t) : o.a;
                            return Object(i.a)(Object(n.e)(e, a))
                        }
                    }
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return ascentManager
                }));
                var n = r(4),
                    i = r(3),
                    o = r(1);

                function ascentManager(t, e) {
                    var r, a = {};

                    function stateAfter(t) {
                        return function (e) {
                            r = t(r, e)
                        }
                    }
                    for (var s in e) t(s).on(stateAfter(e[s]), a);
                    t(i.g).on((function (t) {
                        var e = Object(o.g)(r),
                            i = Object(n.a)(e),
                            a = Object(o.l)(r);
                        a && (Object(n.c)(Object(o.g)(a))[i] = t)
                    })), t(i.e).on((function () {
                        var t = Object(o.g)(r),
                            e = Object(n.a)(t),
                            i = Object(o.l)(r);
                        i && delete Object(n.c)(Object(o.g)(i))[e]
                    })), t(i.a).on((function () {
                        for (var r in e) t(r).un(a)
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return patternAdapter
                }));
                var n = r(3),
                    i = r(1),
                    o = r(4);

                function patternAdapter(t, e) {
                    var r = {
                        node: t(n.d),
                        path: t(n.f)
                    };

                    function addUnderlyingListener(e, r, n) {
                        var a = t(e).emit;
                        r.on((function (t) {
                            var e = n(t);
                            !1 !== e && function emitMatchingNode(t, e, r) {
                                var n = Object(i.k)(r);
                                t(e, Object(i.i)(Object(i.l)(Object(i.j)(o.a, n))), Object(i.i)(Object(i.j)(o.c, n)))
                            }(a, Object(o.c)(e), t)
                        }), e), t("removeListener").on((function (n) {
                            n === e && (t(n).listeners() || r.un(e))
                        }))
                    }
                    t("newListener").on((function (t) {
                        var n = /(node|path):(.*)/.exec(t);
                        if (n) {
                            var i = r[n[1]];
                            i.hasListener(t) || addUnderlyingListener(t, i, e(n[2]))
                        }
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return c
                }));
                var n = r(0),
                    i = r(1),
                    o = r(4),
                    a = r(2),
                    s = r(6),
                    u = r(15),
                    c = Object(u.a)((function (t, e, r, u, c) {
                        var l = Object(n.d)(o.a, i.g),
                            h = Object(n.d)(o.c, i.g);

                        function capture(t, e) {
                            return !!e[1] ? Object(n.g)(t, i.g) : t
                        }

                        function skip1(t) {
                            if (t === n.a) return n.a;
                            return Object(n.g)((function notAtRoot(t) {
                                return l(t) !== s.a
                            }), Object(n.d)(t, i.l))
                        }

                        function rootExpr() {
                            return function (t) {
                                return l(t) === s.a
                            }
                        }

                        function generateClauseReaderIfTokenFound(t, e, r, n, o) {
                            var s = t(r);
                            if (s) {
                                var u = function expressionsReader(t, e, r) {
                                    return Object(i.f)((function (t, e) {
                                        return e(t, r)
                                    }), e, t)
                                }(e, n, s);
                                return o(r.substr(Object(a.e)(s[0])), u)
                            }
                        }

                        function clauseMatcher(t, e) {
                            return Object(n.j)(generateClauseReaderIfTokenFound, t, e)
                        }
                        var d = Object(n.h)(clauseMatcher(t, Object(i.h)(capture, (function duckTypeClause(t, e) {
                            var r = e[3];
                            if (!r) return t;
                            var o = Object(n.j)(a.b, Object(i.c)(r.split(/\W+/))),
                                s = Object(n.d)(o, h);
                            return Object(n.g)(s, t)
                        }), (function nameClause(t, e) {
                            var r = e[2],
                                i = r && "*" !== r ? function (t) {
                                    return String(l(t)) === r
                                } : n.a;
                            return Object(n.g)(i, t)
                        }), skip1)), clauseMatcher(e, Object(i.h)((function skipMany(t) {
                            if (t === n.a) return n.a;
                            var e = rootExpr(),
                                r = t,
                                i = skip1((function (t) {
                                    return o(t)
                                })),
                                o = Object(n.h)(e, r, i);
                            return o
                        }))), clauseMatcher(r, Object(i.h)()), clauseMatcher(u, Object(i.h)(capture, rootExpr)), clauseMatcher(c, Object(i.h)((function statementExpr(t) {
                            return function (e) {
                                var r = t(e);
                                return !0 === r ? Object(i.g)(e) : r
                            }
                        }))), (function (t) {
                            throw Error('"' + t + '" could not be tokenised')
                        }));

                        function returnFoundParser(t, e) {
                            return e
                        }

                        function compileJsonPathToFunction(t, e) {
                            return d(t, e, t ? compileJsonPathToFunction : returnFoundParser)
                        }
                        return function (t) {
                            try {
                                return compileJsonPathToFunction(t, n.a)
                            } catch (e) {
                                throw Error('Could not compile "' + t + '" because ' + e.message)
                            }
                        }
                    }))
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return y
                }));
                var n, i, o, a, s, u, c, l, h, d, p, m = r(0),
                    y = (n = Object(m.k)((function (t) {
                        return t.unshift(/^/),
                            function regexDescriptor(t) {
                                return t.exec.bind(t)
                            }(RegExp(t.map(Object(m.c)("source")).join("")))
                    })), a = n(i = /(\$?)/, /([\w-_]+|\*)/, o = /(?:{([\w ]*?)})?/), s = n(i, /\["([^"]+)"\]/, o), u = n(i, /\[(\d+|\*)\]/, o), c = n(i, /()/, /{([\w ]*?)}/), l = n(/\.\./), h = n(/\./), d = n(i, /!/), p = n(/$/), function (t) {
                        return t(Object(m.h)(a, s, u, c), l, h, d, p)
                    })
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return instanceApi
                }));
                var n = r(3),
                    i = r(0),
                    o = r(2),
                    a = r(5);

                function instanceApi(t, e) {
                    var r, s = /^(node|path):./,
                        u = t(n.h),
                        c = t(n.e).emit,
                        l = t(n.g).emit,
                        h = Object(i.k)((function (e, n) {
                            if (r[e]) Object(i.b)(n, r[e]);
                            else {
                                var o = t(e),
                                    a = n[0];
                                s.test(e) ? addForgettableCallback(o, wrapCallbackToSwapNodeIfSomethingReturned(a)) : o.on(a)
                            }
                            return r
                        }));

                    function addForgettableCallback(t, e, n) {
                        n = n || e;
                        var o = protectedCallback(e);
                        return t.on((function () {
                            var e = !1;
                            r.forget = function () {
                                e = !0
                            }, Object(i.b)(arguments, o), delete r.forget, e && t.un(n)
                        }), n), r
                    }

                    function protectedCallback(t) {
                        return function () {
                            try {
                                return t.apply(r, arguments)
                            } catch (t) {
                                setTimeout((function () {
                                    throw new Error(t.message)
                                }))
                            }
                        }
                    }

                    function wrapCallbackToSwapNodeIfSomethingReturned(t) {
                        return function () {
                            var e = t.apply(this, arguments);
                            Object(o.a)(e) && (e === a.a.drop ? c() : l(e))
                        }
                    }

                    function addSingleNodeOrPathListener(e, r, n) {
                        var i;
                        i = "node" === e ? wrapCallbackToSwapNodeIfSomethingReturned(n) : n, addForgettableCallback(function fullyQualifiedPatternMatchEvent(e, r) {
                            return t(e + ":" + r)
                        }(e, r), i, n)
                    }

                    function addNodeOrPathListenerApi(t, e, n) {
                        return Object(o.d)(e) ? addSingleNodeOrPathListener(t, e, n) : function addMultipleNodeOrPathListeners(t, e) {
                            for (var r in e) addSingleNodeOrPathListener(t, r, e[r])
                        }(t, e), r
                    }
                    return t(n.i).on((function (t) {
                        r.root = Object(i.f)(t)
                    })), t(n.c).on((function (t, e) {
                        r.header = function (t) {
                            return t ? e[t] : e
                        }
                    })), r = {
                        on: h,
                        addListener: h,
                        removeListener: function (e, n, i) {
                            if ("done" === e) u.un(n);
                            else if ("node" === e || "path" === e) t.un(e + ":" + n, i);
                            else {
                                var o = n;
                                t(e).un(o)
                            }
                            return r
                        },
                        emit: t.emit,
                        node: Object(i.j)(addNodeOrPathListenerApi, "node"),
                        path: Object(i.j)(addNodeOrPathListenerApi, "path"),
                        done: Object(i.j)(addForgettableCallback, u),
                        start: Object(i.j)((function addProtectedCallback(e, n) {
                            return t(e).on(protectedCallback(n), n), r
                        }), n.c),
                        fail: t(n.b).on,
                        abort: t(n.a).emit,
                        header: i.i,
                        root: i.i,
                        source: e
                    }
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return clarinet
                }));
                var n = r(3);

                function clarinet(t) {
                    var e, r, i, o, a = t(n.j).emit,
                        s = t(n.l).emit,
                        u = t(n.k).emit,
                        c = t(n.b).emit,
                        l = /[\\"\n]/g,
                        h = 0,
                        d = h++,
                        p = h++,
                        m = h++,
                        y = h++,
                        b = h++,
                        g = h++,
                        v = h++,
                        w = h++,
                        M = h++,
                        A = h++,
                        x = h++,
                        B = h++,
                        E = h++,
                        k = h++,
                        N = h++,
                        T = h++,
                        C = h++,
                        P = h++,
                        I = h++,
                        O = h++,
                        D = 65536,
                        j = "",
                        L = !1,
                        U = !1,
                        H = d,
                        q = [],
                        z = null,
                        G = 0,
                        V = 0,
                        J = 0,
                        W = 0,
                        Z = 1;

                    function emitError(t) {
                        void 0 !== o && (s(o), u(), o = void 0), e = Error(t + "\nLn: " + Z + "\nCol: " + W + "\nChr: " + r), c(Object(n.o)(void 0, void 0, e))
                    }

                    function whitespace(t) {
                        return "\r" === t || "\n" === t || " " === t || "\t" === t
                    }
                    t(n.m).on((function handleData(t) {
                        if (e) return;
                        if (U) return emitError("Cannot write after close");
                        var n = 0;
                        r = t[0];
                        for (; r && (n > 0 && (i = r), r = t[n++]);) switch (J++, "\n" === r ? (Z++, W = 0) : W++, H) {
                            case d:
                                if ("{" === r) H = m;
                                else if ("[" === r) H = b;
                                else if (!whitespace(r)) return emitError("Non-whitespace before {[.");
                                continue;
                            case w:
                            case m:
                                if (whitespace(r)) continue;
                                if (H === w) q.push(M);
                                else {
                                    if ("}" === r) {
                                        s({}), u(), H = q.pop() || p;
                                        continue
                                    }
                                    q.push(y)
                                }
                                if ('"' !== r) return emitError('Malformed object key should start with " ');
                                H = v;
                                continue;
                            case M:
                            case y:
                                if (whitespace(r)) continue;
                                if (":" === r) H === y ? (q.push(y), void 0 !== o && (s({}), a(o), o = void 0), V++) : void 0 !== o && (a(o), o = void 0), H = p;
                                else if ("}" === r) void 0 !== o && (s(o), u(), o = void 0), u(), V--, H = q.pop() || p;
                                else {
                                    if ("," !== r) return emitError("Bad object");
                                    H === y && q.push(y), void 0 !== o && (s(o), u(), o = void 0), H = w
                                }
                                continue;
                            case b:
                            case p:
                                if (whitespace(r)) continue;
                                if (H === b) {
                                    if (s([]), V++, H = p, "]" === r) {
                                        u(), V--, H = q.pop() || p;
                                        continue
                                    }
                                    q.push(g)
                                }
                                if ('"' === r) H = v;
                                else if ("{" === r) H = m;
                                else if ("[" === r) H = b;
                                else if ("t" === r) H = A;
                                else if ("f" === r) H = E;
                                else if ("n" === r) H = C;
                                else if ("-" === r) j += r;
                                else if ("0" === r) j += r, H = 20;
                                else {
                                    if (-1 === "123456789".indexOf(r)) return emitError("Bad value");
                                    j += r, H = 20
                                }
                                continue;
                            case g:
                                if ("," === r) q.push(g), void 0 !== o && (s(o), u(), o = void 0), H = p;
                                else {
                                    if ("]" !== r) {
                                        if (whitespace(r)) continue;
                                        return emitError("Bad array")
                                    }
                                    void 0 !== o && (s(o), u(), o = void 0), u(), V--, H = q.pop() || p
                                }
                                continue;
                            case v:
                                void 0 === o && (o = "");
                                var c = n - 1;
                                t: for (;;) {
                                    for (; G > 0;)
                                        if (z += r, r = t.charAt(n++), 4 === G ? (o += String.fromCharCode(parseInt(z, 16)), G = 0, c = n - 1) : G++, !r) break t;
                                    if ('"' === r && !L) {
                                        H = q.pop() || p, o += t.substring(c, n - 1);
                                        break
                                    }
                                    if (!("\\" !== r || L || (L = !0, o += t.substring(c, n - 1), r = t.charAt(n++)))) break;
                                    if (L) {
                                        if (L = !1, "n" === r ? o += "\n" : "r" === r ? o += "\r" : "t" === r ? o += "\t" : "f" === r ? o += "\f" : "b" === r ? o += "\b" : "u" === r ? (G = 1, z = "") : o += r, r = t.charAt(n++), c = n - 1, r) continue;
                                        break
                                    }
                                    l.lastIndex = n;
                                    var h = l.exec(t);
                                    if (!h) {
                                        n = t.length + 1, o += t.substring(c, n - 1);
                                        break
                                    }
                                    if (n = h.index + 1, !(r = t.charAt(h.index))) {
                                        o += t.substring(c, n - 1);
                                        break
                                    }
                                }
                                continue;
                            case A:
                                if (!r) continue;
                                if ("r" !== r) return emitError("Invalid true started with t" + r);
                                H = x;
                                continue;
                            case x:
                                if (!r) continue;
                                if ("u" !== r) return emitError("Invalid true started with tr" + r);
                                H = B;
                                continue;
                            case B:
                                if (!r) continue;
                                if ("e" !== r) return emitError("Invalid true started with tru" + r);
                                s(!0), u(), H = q.pop() || p;
                                continue;
                            case E:
                                if (!r) continue;
                                if ("a" !== r) return emitError("Invalid false started with f" + r);
                                H = k;
                                continue;
                            case k:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid false started with fa" + r);
                                H = N;
                                continue;
                            case N:
                                if (!r) continue;
                                if ("s" !== r) return emitError("Invalid false started with fal" + r);
                                H = T;
                                continue;
                            case T:
                                if (!r) continue;
                                if ("e" !== r) return emitError("Invalid false started with fals" + r);
                                s(!1), u(), H = q.pop() || p;
                                continue;
                            case C:
                                if (!r) continue;
                                if ("u" !== r) return emitError("Invalid null started with n" + r);
                                H = P;
                                continue;
                            case P:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid null started with nu" + r);
                                H = I;
                                continue;
                            case I:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid null started with nul" + r);
                                s(null), u(), H = q.pop() || p;
                                continue;
                            case O:
                                if ("." !== r) return emitError("Leading zero not followed by .");
                                j += r, H = 20;
                                continue;
                            case 20:
                                if (-1 !== "0123456789".indexOf(r)) j += r;
                                else if ("." === r) {
                                    if (-1 !== j.indexOf(".")) return emitError("Invalid number has two dots");
                                    j += r
                                } else if ("e" === r || "E" === r) {
                                    if (-1 !== j.indexOf("e") || -1 !== j.indexOf("E")) return emitError("Invalid number has two exponential");
                                    j += r
                                } else if ("+" === r || "-" === r) {
                                    if ("e" !== i && "E" !== i) return emitError("Invalid symbol in number");
                                    j += r
                                } else j && (s(parseFloat(j)), u(), j = ""), n--, H = q.pop() || p;
                                continue;
                            default:
                                return emitError("Unknown state: " + H)
                        }
                        J >= D && function checkBufferLength() {
                            var t = 0;
                            void 0 !== o && o.length > 65536 && (emitError("Max buffer length exceeded: textNode"), t = Math.max(t, o.length)), j.length > 65536 && (emitError("Max buffer length exceeded: numberNode"), t = Math.max(t, j.length)), D = 65536 - t + J
                        }()
                    })), t(n.n).on((function handleStreamEnd() {
                        if (H === d) return s({}), u(), void(U = !0);
                        H === p && 0 === V || emitError("Unexpected end");
                        void 0 !== o && (s(o), u(), o = void 0);
                        U = !0
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return httpTransport
                })), r.d(e, "b", (function () {
                    return streamingHttp
                }));
                var n = r(19),
                    i = r(3),
                    o = r(2),
                    a = r(20),
                    s = r(0);

                function httpTransport() {
                    return new XMLHttpRequest
                }

                function streamingHttp(t, e, r, u, c, l, h) {
                    var d = t(i.m).emit,
                        p = t(i.b).emit,
                        m = 0,
                        y = !0;

                    function handleProgress() {
                        if ("2" === String(e.status)[0]) {
                            var t = e.responseText,
                                r = (" " + t.substr(m)).substr(1);
                            r && d(r), m = Object(o.e)(t)
                        }
                    }

                    function sendStartIfNotAlready(e) {
                        try {
                            y && t(i.c).emit(e.status, Object(a.a)(e.getAllResponseHeaders())), y = !1
                        } catch (t) {}
                    }
                    t(i.a).on((function () {
                        e.onreadystatechange = null, e.abort()
                    })), "onprogress" in e && (e.onprogress = handleProgress), e.onreadystatechange = function () {
                        switch (e.readyState) {
                            case 2:
                            case 3:
                                return sendStartIfNotAlready(e);
                            case 4:
                                sendStartIfNotAlready(e), "2" === String(e.status)[0] ? (handleProgress(), t(i.n).emit()) : p(Object(i.o)(e.status, e.responseText))
                        }
                    };
                    try {
                        for (var b in e.open(r, u, !0), l) e.setRequestHeader(b, l[b]);
                        Object(n.a)(window.location, Object(n.b)(u)) || e.setRequestHeader("X-Requested-With", "XMLHttpRequest"), e.withCredentials = h, e.send(c)
                    } catch (t) {
                        window.setTimeout(Object(s.j)(p, Object(i.o)(void 0, void 0, t)), 0)
                    }
                }
            }, function (t, e, r) {
                function isCrossOrigin(t, e) {
                    function portOf(e) {
                        return String(e.port || function defaultPort(t) {
                            return {
                                "http:": 80,
                                "https:": 443
                            } [t]
                        }(e.protocol || t.protocol))
                    }
                    return !!(e.protocol && e.protocol !== t.protocol || e.host && e.host !== t.host || e.host && portOf(e) !== portOf(t))
                }

                function parseUrlOrigin(t) {
                    var e = /(\w+:)?(?:\/\/)([\w.-]+)?(?::(\d+))?\/?/.exec(t) || [];
                    return {
                        protocol: e[1] || "",
                        host: e[2] || "",
                        port: e[3] || ""
                    }
                }
                r.d(e, "a", (function () {
                    return isCrossOrigin
                })), r.d(e, "b", (function () {
                    return parseUrlOrigin
                }))
            }, function (t, e, r) {
                function parseResponseHeaders(t) {
                    var e = {};
                    return t && t.split("\r\n").forEach((function (t) {
                        var r = t.indexOf(": ");
                        e[t.substring(0, r)] = t.substring(r + 2)
                    })), e
                }
                r.d(e, "a", (function () {
                    return parseResponseHeaders
                }))
            }]).default
        }))
    }, function (t, e, r) {
        var n = r(26).formatters,
            i = r(303),
            o = r(95);
        t.exports = function (t) {
            var ex = function (e) {
                var r;
                return e.property ? (t[e.property] || (t[e.property] = {}), r = t[e.property]) : r = t, e.methods && e.methods.forEach((function (e) {
                    e instanceof i || (e = new i(e)), e.attachToObject(r), e.setRequestManager(t._requestManager)
                })), t
            };
            return ex.formatters = n, ex.utils = o, ex.Method = i, ex
        }
    }, function (t, e, r) {
        var n = r(193),
            i = function PromiEvent(t) {
                var e, r, i = new Promise((function () {
                    e = arguments[0], r = arguments[1]
                }));
                if (t) return {
                    resolve: e,
                    reject: r,
                    eventEmitter: i
                };
                var o = new n;
                return i._events = o._events, i.emit = o.emit, i.on = o.on, i.once = o.once, i.off = o.off, i.listeners = o.listeners, i.addListener = o.addListener, i.removeListener = o.removeListener, i.removeAllListeners = o.removeAllListeners, {
                    resolve: e,
                    reject: r,
                    eventEmitter: i
                }
            };
        i.resolve = function (t) {
            var e = i(!0);
            return e.resolve(t), e.eventEmitter
        }, t.exports = i
    }, function (t, e, r) {
        var n = r(793),
            i = function Subscriptions(t) {
                this.name = t.name, this.type = t.type, this.subscriptions = t.subscriptions || {}, this.requestManager = null
            };
        i.prototype.setRequestManager = function (t) {
            this.requestManager = t
        }, i.prototype.attachToObject = function (t) {
            var e = this.buildCall(),
                r = this.name.split(".");
            r.length > 1 ? (t[r[0]] = t[r[0]] || {}, t[r[0]][r[1]] = e) : t[r[0]] = e
        }, i.prototype.buildCall = function () {
            var t = this;
            return function () {
                t.subscriptions[arguments[0]] || console.warn("Subscription " + JSON.stringify(arguments[0]) + " doesn't exist. Subscribing anyway.");
                var e = new n({
                    subscription: t.subscriptions[arguments[0]] || {},
                    requestManager: t.requestManager,
                    type: t.type
                });
                return e.subscribe.apply(e, arguments)
            }
        }, t.exports = {
            subscriptions: i,
            subscription: n
        }
    }, function (t, e, r) {
        var n = r(26).errors,
            i = r(193),
            o = r(26).formatters;

        function identity(t) {
            return t
        }

        function Subscription(t) {
            i.call(this), this.id = null, this.callback = identity, this.arguments = null, this.lastBlock = null, this.options = {
                subscription: t.subscription,
                type: t.type,
                requestManager: t.requestManager
            }
        }
        Subscription.prototype = Object.create(i.prototype), Subscription.prototype.constructor = Subscription, Subscription.prototype._extractCallback = function (t) {
            if ("function" == typeof t[t.length - 1]) return t.pop()
        }, Subscription.prototype._validateArgs = function (t) {
            var e = this.options.subscription;
            if (e || (e = {}), e.params || (e.params = 0), t.length !== e.params) throw n.InvalidNumberOfParams(t.length, e.params, e.subscriptionName)
        }, Subscription.prototype._formatInput = function (t) {
            var e = this.options.subscription;
            return e && e.inputFormatter ? e.inputFormatter.map((function (e, r) {
                return e ? e(t[r]) : t[r]
            })) : t
        }, Subscription.prototype._formatOutput = function (t) {
            var e = this.options.subscription;
            return e && e.outputFormatter && t ? e.outputFormatter(t) : t
        }, Subscription.prototype._toPayload = function (t) {
            var e = [];
            if (this.callback = this._extractCallback(t) || identity, this.subscriptionMethod || (this.subscriptionMethod = t.shift(), this.options.subscription.subscriptionName && (this.subscriptionMethod = this.options.subscription.subscriptionName)), this.arguments || (this.arguments = this._formatInput(t), this._validateArgs(this.arguments), t = []), e.push(this.subscriptionMethod), e = e.concat(this.arguments), t.length) throw new Error("Only a callback is allowed as parameter on an already instantiated subscription.");
            return {
                method: this.options.type + "_subscribe",
                params: e
            }
        }, Subscription.prototype.unsubscribe = function (t) {
            this.options.requestManager.removeSubscription(this.id, t), this.id = null, this.lastBlock = null, this.removeAllListeners()
        }, Subscription.prototype.subscribe = function () {
            var t = this,
                e = Array.prototype.slice.call(arguments),
                r = this._toPayload(e);
            if (!r) return this;
            if (!this.options.requestManager.provider) return setTimeout((function () {
                var e = new Error("No provider set.");
                t.callback(e, null, t), t.emit("error", e)
            }), 0), this;
            if (!this.options.requestManager.provider.on) return setTimeout((function () {
                var e = new Error("The current provider doesn't support subscriptions: " + t.options.requestManager.provider.constructor.name);
                t.callback(e, null, t), t.emit("error", e)
            }), 0), this;
            if (this.lastBlock && this.options.params && "object" == typeof this.options.params && (r.params[1] = this.options.params, r.params[1].fromBlock = o.inputBlockNumberFormatter(this.lastBlock + 1)), this.id && this.unsubscribe(), this.options.params = r.params[1], "logs" === r.params[0] && r.params[1] && "object" == typeof r.params[1] && r.params[1].hasOwnProperty("fromBlock") && isFinite(r.params[1].fromBlock)) {
                var n = Object.assign({}, r.params[1]);
                this.options.requestManager.send({
                    method: "eth_getLogs",
                    params: [n]
                }, (function (e, r) {
                    e ? setTimeout((function () {
                        t.callback(e, null, t), t.emit("error", e)
                    }), 0) : r.forEach((function (e) {
                        var r = t._formatOutput(e);
                        t.callback(null, r, t), t.emit("data", r)
                    }))
                }))
            }
            return "object" == typeof r.params[1] && delete r.params[1].fromBlock, this.options.requestManager.send(r, (function (e, n) {
                !e && n ? (t.id = n, t.method = r.params[0], t.emit("connected", n), t.options.requestManager.addSubscription(t, (function (e, r) {
                    e ? (t.callback(e, !1, t), t.emit("error", e)) : (Array.isArray(r) || (r = [r]), r.forEach((function (e) {
                        var r = t._formatOutput(e);
                        if (t.lastBlock = r && "object" == typeof r ? r.blockNumber : null, "function" == typeof t.options.subscription.subscriptionHandler) return t.options.subscription.subscriptionHandler.call(t, r);
                        t.emit("data", r), t.callback(null, r, t)
                    })))
                }))) : setTimeout((function () {
                    t.callback(e, !1, t), t.emit("error", e)
                }), 0)
            })), this
        }, Subscription.prototype.resubscribe = function () {
            this.options.requestManager.removeSubscription(this.id), this.id = null, this.subscribe(this.callback)
        }, t.exports = Subscription
    }, function (t, e, r) {
        (function (e) {
            const n = r(304),
                i = r(838),
                o = r(87),
                a = (r(839), new o.ec("secp256k1")),
                {
                    keccak256: s,
                    keccak256s: u
                } = r(50),
                toChecksum = t => {
                    const e = u(t.slice(2));
                    let r = "0x";
                    for (let n = 0; n < 40; n++) r += parseInt(e[n + 2], 16) > 7 ? t[n + 2].toUpperCase() : t[n + 2];
                    return r
                },
                fromPrivate = t => {
                    const r = new e(t.slice(2), "hex"),
                        n = "0x" + a.keyFromPrivate(r).getPublic(!1, "hex").slice(2),
                        i = s(n);
                    return {
                        address: toChecksum("0x" + i.slice(-40)),
                        privateKey: t
                    }
                },
                encodeSignature = ([t, e, r]) => n.flatten([e, r, t]),
                decodeSignature = t => [n.slice(64, n.length(t), t), n.slice(0, 32, t), n.slice(32, 64, t)],
                makeSigner = t => (r, o) => {
                    const s = a.keyFromPrivate(new e(o.slice(2), "hex")).sign(new e(r.slice(2), "hex"), {
                        canonical: !0
                    });
                    return encodeSignature([i.fromString(n.fromNumber(t + s.recoveryParam)), n.pad(32, n.fromNat("0x" + s.r.toString(16))), n.pad(32, n.fromNat("0x" + s.s.toString(16)))])
                },
                c = makeSigner(27);
            t.exports = {
                create: t => {
                    const e = s(n.concat(n.random(32), t || n.random(32))),
                        r = n.concat(n.concat(n.random(32), e), n.random(32)),
                        i = s(r);
                    return fromPrivate(i)
                },
                toChecksum: toChecksum,
                fromPrivate: fromPrivate,
                sign: c,
                makeSigner: makeSigner,
                recover: (t, r) => {
                    const i = decodeSignature(r),
                        o = {
                            v: n.toNumber(i[0]),
                            r: i[1].slice(2),
                            s: i[2].slice(2)
                        },
                        u = "0x" + a.recoverPubKey(new e(t.slice(2), "hex"), o, o.v < 2 ? o.v : 1 - o.v % 2).encode("hex", !1).slice(2),
                        c = s(u);
                    return toChecksum("0x" + c.slice(-40))
                },
                encodeSignature: encodeSignature,
                decodeSignature: decodeSignature
            }
        }).call(this, r(0).Buffer)
    }, function (t, e) {
        const generate = (t, e) => {
            let r = [];
            for (var n = 0; n < t; ++n) r.push(e(n));
            return r
        };
        t.exports = {
            generate: generate,
            replicate: (t, e) => generate(t, () => e),
            concat: (t, e) => t.concat(e),
            flatten: t => {
                let e = [];
                for (let r = 0, n = t.length; r < n; ++r)
                    for (let n = 0, i = t[r].length; n < i; ++n) e.push(t[r][n]);
                return e
            },
            chunksOf: (t, e) => {
                let r = [];
                for (let n = 0, i = e.length; n < i; n += t) r.push(e.slice(n, n + t));
                return r
            }
        }
    }, function (t, e, r) {
        var n = r(1),
            i = r(3).Buffer,
            o = r(42),
            a = i.alloc(128);

        function Hmac(t, e) {
            o.call(this, "digest"), "string" == typeof e && (e = i.from(e)), this._alg = t, this._key = e, e.length > 64 ? e = t(e) : e.length < 64 && (e = i.concat([e, a], 64));
            for (var r = this._ipad = i.allocUnsafe(64), n = this._opad = i.allocUnsafe(64), s = 0; s < 64; s++) r[s] = 54 ^ e[s], n[s] = 92 ^ e[s];
            this._hash = [r]
        }
        n(Hmac, o), Hmac.prototype._update = function (t) {
            this._hash.push(t)
        }, Hmac.prototype._final = function () {
            var t = this._alg(i.concat(this._hash));
            return this._alg(i.concat([this._opad, t]))
        }, t.exports = Hmac
    }, function (t, e, r) {
        t.exports = r(307)
    }, function (t, e, r) {
        (function (e, n) {
            var i, o = r(309),
                a = r(310),
                s = r(311),
                u = r(3).Buffer,
                c = e.crypto && e.crypto.subtle,
                l = {
                    sha: "SHA-1",
                    "sha-1": "SHA-1",
                    sha1: "SHA-1",
                    sha256: "SHA-256",
                    "sha-256": "SHA-256",
                    sha384: "SHA-384",
                    "sha-384": "SHA-384",
                    "sha-512": "SHA-512",
                    sha512: "SHA-512"
                },
                h = [];

            function browserPbkdf2(t, e, r, n, i) {
                return c.importKey("raw", t, {
                    name: "PBKDF2"
                }, !1, ["deriveBits"]).then((function (t) {
                    return c.deriveBits({
                        name: "PBKDF2",
                        salt: e,
                        iterations: r,
                        hash: {
                            name: i
                        }
                    }, t, n << 3)
                })).then((function (t) {
                    return u.from(t)
                }))
            }
            t.exports = function (t, r, d, p, m, y) {
                "function" == typeof m && (y = m, m = void 0);
                var b = l[(m = m || "sha1").toLowerCase()];
                if (!b || "function" != typeof e.Promise) return n.nextTick((function () {
                    var e;
                    try {
                        e = s(t, r, d, p, m)
                    } catch (t) {
                        return y(t)
                    }
                    y(null, e)
                }));
                if (o(t, r, d, p), "function" != typeof y) throw new Error("No callback provided to pbkdf2");
                u.isBuffer(t) || (t = u.from(t, a)), u.isBuffer(r) || (r = u.from(r, a)),
                    function resolvePromise(t, e) {
                        t.then((function (t) {
                            n.nextTick((function () {
                                e(null, t)
                            }))
                        }), (function (t) {
                            n.nextTick((function () {
                                e(t)
                            }))
                        }))
                    }(function checkNative(t) {
                        if (e.process && !e.process.browser) return Promise.resolve(!1);
                        if (!c || !c.importKey || !c.deriveBits) return Promise.resolve(!1);
                        if (void 0 !== h[t]) return h[t];
                        var r = browserPbkdf2(i = i || u.alloc(8), i, 10, 128, t).then((function () {
                            return !0
                        })).catch((function () {
                            return !1
                        }));
                        return h[t] = r, r
                    }(b).then((function (e) {
                        return e ? browserPbkdf2(t, r, d, p, b) : s(t, r, d, p, m)
                    })), y)
            }
        }).call(this, r(6), r(7))
    }, function (t, e, r) {
        var n = r(800),
            i = r(195),
            o = r(196),
            a = r(813),
            s = r(133);

        function createCipheriv(t, e, r) {
            if (t = t.toLowerCase(), o[t]) return i.createCipheriv(t, e, r);
            if (a[t]) return new n({
                key: e,
                iv: r,
                mode: t
            });
            throw new TypeError("invalid suite type")
        }

        function createDecipheriv(t, e, r) {
            if (t = t.toLowerCase(), o[t]) return i.createDecipheriv(t, e, r);
            if (a[t]) return new n({
                key: e,
                iv: r,
                mode: t,
                decrypt: !0
            });
            throw new TypeError("invalid suite type")
        }
        e.createCipher = e.Cipher = function createCipher(t, e) {
            var r, n;
            if (t = t.toLowerCase(), o[t]) r = o[t].key, n = o[t].iv;
            else {
                if (!a[t]) throw new TypeError("invalid suite type");
                r = 8 * a[t].key, n = a[t].iv
            }
            var i = s(e, !1, r, n);
            return createCipheriv(t, i.key, i.iv)
        }, e.createCipheriv = e.Cipheriv = createCipheriv, e.createDecipher = e.Decipher = function createDecipher(t, e) {
            var r, n;
            if (t = t.toLowerCase(), o[t]) r = o[t].key, n = o[t].iv;
            else {
                if (!a[t]) throw new TypeError("invalid suite type");
                r = 8 * a[t].key, n = a[t].iv
            }
            var i = s(e, !1, r, n);
            return createDecipheriv(t, i.key, i.iv)
        }, e.createDecipheriv = e.Decipheriv = createDecipheriv, e.listCiphers = e.getCiphers = function getCiphers() {
            return Object.keys(a).concat(i.getCiphers())
        }
    }, function (t, e, r) {
        var n = r(42),
            i = r(801),
            o = r(1),
            a = r(3).Buffer,
            s = {
                "des-ede3-cbc": i.CBC.instantiate(i.EDE),
                "des-ede3": i.EDE,
                "des-ede-cbc": i.CBC.instantiate(i.EDE),
                "des-ede": i.EDE,
                "des-cbc": i.CBC.instantiate(i.DES),
                "des-ecb": i.DES
            };

        function DES(t) {
            n.call(this);
            var e, r = t.mode.toLowerCase(),
                i = s[r];
            e = t.decrypt ? "decrypt" : "encrypt";
            var o = t.key;
            a.isBuffer(o) || (o = a.from(o)), "des-ede" !== r && "des-ede-cbc" !== r || (o = a.concat([o, o.slice(0, 8)]));
            var u = t.iv;
            a.isBuffer(u) || (u = a.from(u)), this._des = i.create({
                key: o,
                iv: u,
                type: e
            })
        }
        s.des = s["des-cbc"], s.des3 = s["des-ede3-cbc"], t.exports = DES, o(DES, n), DES.prototype._update = function (t) {
            return a.from(this._des.update(t))
        }, DES.prototype._final = function () {
            return a.from(this._des.final())
        }
    }, function (t, e, r) {
        e.utils = r(312), e.Cipher = r(194), e.DES = r(313), e.CBC = r(802), e.EDE = r(803)
    }, function (t, e, r) {
        var n = r(17),
            i = r(1),
            o = {};

        function CBCState(t) {
            n.equal(t.length, 8, "Invalid IV length"), this.iv = new Array(8);
            for (var e = 0; e < this.iv.length; e++) this.iv[e] = t[e]
        }
        e.instantiate = function instantiate(t) {
            function CBC(e) {
                t.call(this, e), this._cbcInit()
            }
            i(CBC, t);
            for (var e = Object.keys(o), r = 0; r < e.length; r++) {
                var n = e[r];
                CBC.prototype[n] = o[n]
            }
            return CBC.create = function create(t) {
                return new CBC(t)
            }, CBC
        }, o._cbcInit = function _cbcInit() {
            var t = new CBCState(this.options.iv);
            this._cbcState = t
        }, o._update = function _update(t, e, r, n) {
            var i = this._cbcState,
                o = this.constructor.super_.prototype,
                a = i.iv;
            if ("encrypt" === this.type) {
                for (var s = 0; s < this.blockSize; s++) a[s] ^= t[e + s];
                o._update.call(this, a, 0, r, n);
                for (s = 0; s < this.blockSize; s++) a[s] = r[n + s]
            } else {
                o._update.call(this, t, e, r, n);
                for (s = 0; s < this.blockSize; s++) r[n + s] ^= a[s];
                for (s = 0; s < this.blockSize; s++) a[s] = t[e + s]
            }
        }
    }, function (t, e, r) {
        var n = r(17),
            i = r(1),
            o = r(194),
            a = r(313);

        function EDEState(t, e) {
            n.equal(e.length, 24, "Invalid key length");
            var r = e.slice(0, 8),
                i = e.slice(8, 16),
                o = e.slice(16, 24);
            this.ciphers = "encrypt" === t ? [a.create({
                type: "encrypt",
                key: r
            }), a.create({
                type: "decrypt",
                key: i
            }), a.create({
                type: "encrypt",
                key: o
            })] : [a.create({
                type: "decrypt",
                key: o
            }), a.create({
                type: "encrypt",
                key: i
            }), a.create({
                type: "decrypt",
                key: r
            })]
        }

        function EDE(t) {
            o.call(this, t);
            var e = new EDEState(this.type, this.options.key);
            this._edeState = e
        }
        i(EDE, o), t.exports = EDE, EDE.create = function create(t) {
            return new EDE(t)
        }, EDE.prototype._update = function _update(t, e, r, n) {
            var i = this._edeState;
            i.ciphers[0]._update(t, e, r, n), i.ciphers[1]._update(r, n, r, n), i.ciphers[2]._update(r, n, r, n)
        }, EDE.prototype._pad = a.prototype._pad, EDE.prototype._unpad = a.prototype._unpad
    }, function (t, e, r) {
        var n = r(196),
            i = r(317),
            o = r(3).Buffer,
            a = r(318),
            s = r(42),
            u = r(132),
            c = r(133);

        function Cipher(t, e, r) {
            s.call(this), this._cache = new Splitter, this._cipher = new u.AES(e), this._prev = o.from(r), this._mode = t, this._autopadding = !0
        }
        r(1)(Cipher, s), Cipher.prototype._update = function (t) {
            var e, r;
            this._cache.add(t);
            for (var n = []; e = this._cache.get();) r = this._mode.encrypt(this, e), n.push(r);
            return o.concat(n)
        };
        var l = o.alloc(16, 16);

        function Splitter() {
            this.cache = o.allocUnsafe(0)
        }

        function createCipheriv(t, e, r) {
            var s = n[t.toLowerCase()];
            if (!s) throw new TypeError("invalid suite type");
            if ("string" == typeof e && (e = o.from(e)), e.length !== s.key / 8) throw new TypeError("invalid key length " + e.length);
            if ("string" == typeof r && (r = o.from(r)), "GCM" !== s.mode && r.length !== s.iv) throw new TypeError("invalid iv length " + r.length);
            return "stream" === s.type ? new a(s.module, e, r) : "auth" === s.type ? new i(s.module, e, r) : new Cipher(s.module, e, r)
        }
        Cipher.prototype._final = function () {
            var t = this._cache.flush();
            if (this._autopadding) return t = this._mode.encrypt(this, t), this._cipher.scrub(), t;
            if (!t.equals(l)) throw this._cipher.scrub(), new Error("data not multiple of block length")
        }, Cipher.prototype.setAutoPadding = function (t) {
            return this._autopadding = !!t, this
        }, Splitter.prototype.add = function (t) {
            this.cache = o.concat([this.cache, t])
        }, Splitter.prototype.get = function () {
            if (this.cache.length > 15) {
                var t = this.cache.slice(0, 16);
                return this.cache = this.cache.slice(16), t
            }
            return null
        }, Splitter.prototype.flush = function () {
            for (var t = 16 - this.cache.length, e = o.allocUnsafe(t), r = -1; ++r < t;) e.writeUInt8(t, r);
            return o.concat([this.cache, e])
        }, e.createCipheriv = createCipheriv, e.createCipher = function createCipher(t, e) {
            var r = n[t.toLowerCase()];
            if (!r) throw new TypeError("invalid suite type");
            var i = c(e, !1, r.key, r.iv);
            return createCipheriv(t, i.key, i.iv)
        }
    }, function (t, e) {
        e.encrypt = function (t, e) {
            return t._cipher.encryptBlock(e)
        }, e.decrypt = function (t, e) {
            return t._cipher.decryptBlock(e)
        }
    }, function (t, e, r) {
        var n = r(96);
        e.encrypt = function (t, e) {
            var r = n(e, t._prev);
            return t._prev = t._cipher.encryptBlock(r), t._prev
        }, e.decrypt = function (t, e) {
            var r = t._prev;
            t._prev = e;
            var i = t._cipher.decryptBlock(e);
            return n(i, r)
        }
    }, function (t, e, r) {
        var n = r(3).Buffer,
            i = r(96);

        function encryptStart(t, e, r) {
            var o = e.length,
                a = i(e, t._cache);
            return t._cache = t._cache.slice(o), t._prev = n.concat([t._prev, r ? e : a]), a
        }
        e.encrypt = function (t, e, r) {
            for (var i, o = n.allocUnsafe(0); e.length;) {
                if (0 === t._cache.length && (t._cache = t._cipher.encryptBlock(t._prev), t._prev = n.allocUnsafe(0)), !(t._cache.length <= e.length)) {
                    o = n.concat([o, encryptStart(t, e, r)]);
                    break
                }
                i = t._cache.length, o = n.concat([o, encryptStart(t, e.slice(0, i), r)]), e = e.slice(i)
            }
            return o
        }
    }, function (t, e, r) {
        var n = r(3).Buffer;

        function encryptByte(t, e, r) {
            var i = t._cipher.encryptBlock(t._prev)[0] ^ e;
            return t._prev = n.concat([t._prev.slice(1), n.from([r ? e : i])]), i
        }
        e.encrypt = function (t, e, r) {
            for (var i = e.length, o = n.allocUnsafe(i), a = -1; ++a < i;) o[a] = encryptByte(t, e[a], r);
            return o
        }
    }, function (t, e, r) {
        var n = r(3).Buffer;

        function encryptByte(t, e, r) {
            for (var n, i, o = -1, a = 0; ++o < 8;) n = e & 1 << 7 - o ? 128 : 0, a += (128 & (i = t._cipher.encryptBlock(t._prev)[0] ^ n)) >> o % 8, t._prev = shiftIn(t._prev, r ? n : i);
            return a
        }

        function shiftIn(t, e) {
            var r = t.length,
                i = -1,
                o = n.allocUnsafe(t.length);
            for (t = n.concat([t, n.from([e])]); ++i < r;) o[i] = t[i] << 1 | t[i + 1] >> 7;
            return o
        }
        e.encrypt = function (t, e, r) {
            for (var i = e.length, o = n.allocUnsafe(i), a = -1; ++a < i;) o[a] = encryptByte(t, e[a], r);
            return o
        }
    }, function (t, e, r) {
        (function (t) {
            var n = r(96);

            function getBlock(t) {
                return t._prev = t._cipher.encryptBlock(t._prev), t._prev
            }
            e.encrypt = function (e, r) {
                for (; e._cache.length < r.length;) e._cache = t.concat([e._cache, getBlock(e)]);
                var i = e._cache.slice(0, r.length);
                return e._cache = e._cache.slice(r.length), n(r, i)
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = r(3).Buffer,
            i = n.alloc(16, 0);

        function fromArray(t) {
            var e = n.allocUnsafe(16);
            return e.writeUInt32BE(t[0] >>> 0, 0), e.writeUInt32BE(t[1] >>> 0, 4), e.writeUInt32BE(t[2] >>> 0, 8), e.writeUInt32BE(t[3] >>> 0, 12), e
        }

        function GHASH(t) {
            this.h = t, this.state = n.alloc(16, 0), this.cache = n.allocUnsafe(0)
        }
        GHASH.prototype.ghash = function (t) {
            for (var e = -1; ++e < t.length;) this.state[e] ^= t[e];
            this._multiply()
        }, GHASH.prototype._multiply = function () {
            for (var t, e, r = function toArray(t) {
                    return [t.readUInt32BE(0), t.readUInt32BE(4), t.readUInt32BE(8), t.readUInt32BE(12)]
                }(this.h), n = [0, 0, 0, 0], i = -1; ++i < 128;) {
                for (0 != (this.state[~~(i / 8)] & 1 << 7 - i % 8) && (n[0] ^= r[0], n[1] ^= r[1], n[2] ^= r[2], n[3] ^= r[3]), e = 0 != (1 & r[3]), t = 3; t > 0; t--) r[t] = r[t] >>> 1 | (1 & r[t - 1]) << 31;
                r[0] = r[0] >>> 1, e && (r[0] = r[0] ^ 225 << 24)
            }
            this.state = fromArray(n)
        }, GHASH.prototype.update = function (t) {
            var e;
            for (this.cache = n.concat([this.cache, t]); this.cache.length >= 16;) e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(e)
        }, GHASH.prototype.final = function (t, e) {
            return this.cache.length && this.ghash(n.concat([this.cache, i], 16)), this.ghash(fromArray([0, t, 0, e])), this.state
        }, t.exports = GHASH
    }, function (t, e, r) {
        var n = r(317),
            i = r(3).Buffer,
            o = r(196),
            a = r(318),
            s = r(42),
            u = r(132),
            c = r(133);

        function Decipher(t, e, r) {
            s.call(this), this._cache = new Splitter, this._last = void 0, this._cipher = new u.AES(e), this._prev = i.from(r), this._mode = t, this._autopadding = !0
        }

        function Splitter() {
            this.cache = i.allocUnsafe(0)
        }

        function createDecipheriv(t, e, r) {
            var s = o[t.toLowerCase()];
            if (!s) throw new TypeError("invalid suite type");
            if ("string" == typeof r && (r = i.from(r)), "GCM" !== s.mode && r.length !== s.iv) throw new TypeError("invalid iv length " + r.length);
            if ("string" == typeof e && (e = i.from(e)), e.length !== s.key / 8) throw new TypeError("invalid key length " + e.length);
            return "stream" === s.type ? new a(s.module, e, r, !0) : "auth" === s.type ? new n(s.module, e, r, !0) : new Decipher(s.module, e, r)
        }
        r(1)(Decipher, s), Decipher.prototype._update = function (t) {
            var e, r;
            this._cache.add(t);
            for (var n = []; e = this._cache.get(this._autopadding);) r = this._mode.decrypt(this, e), n.push(r);
            return i.concat(n)
        }, Decipher.prototype._final = function () {
            var t = this._cache.flush();
            if (this._autopadding) return function unpad(t) {
                var e = t[15];
                if (e < 1 || e > 16) throw new Error("unable to decrypt data");
                var r = -1;
                for (; ++r < e;)
                    if (t[r + (16 - e)] !== e) throw new Error("unable to decrypt data");
                if (16 === e) return;
                return t.slice(0, 16 - e)
            }(this._mode.decrypt(this, t));
            if (t) throw new Error("data not multiple of block length")
        }, Decipher.prototype.setAutoPadding = function (t) {
            return this._autopadding = !!t, this
        }, Splitter.prototype.add = function (t) {
            this.cache = i.concat([this.cache, t])
        }, Splitter.prototype.get = function (t) {
            var e;
            if (t) {
                if (this.cache.length > 16) return e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e
            } else if (this.cache.length >= 16) return e = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e;
            return null
        }, Splitter.prototype.flush = function () {
            if (this.cache.length) return this.cache
        }, e.createDecipher = function createDecipher(t, e) {
            var r = o[t.toLowerCase()];
            if (!r) throw new TypeError("invalid suite type");
            var n = c(e, !1, r.key, r.iv);
            return createDecipheriv(t, n.key, n.iv)
        }, e.createDecipheriv = createDecipheriv
    }, function (t, e) {
        e["des-ecb"] = {
            key: 8,
            iv: 0
        }, e["des-cbc"] = e.des = {
            key: 8,
            iv: 8
        }, e["des-ede3-cbc"] = e.des3 = {
            key: 24,
            iv: 8
        }, e["des-ede3"] = {
            key: 24,
            iv: 0
        }, e["des-ede-cbc"] = {
            key: 16,
            iv: 8
        }, e["des-ede"] = {
            key: 16,
            iv: 0
        }
    }, function (t, e, r) {
        (function (t) {
            var n = r(319),
                i = r(815),
                o = r(816);
            var a = {
                binary: !0,
                hex: !0,
                base64: !0
            };
            e.DiffieHellmanGroup = e.createDiffieHellmanGroup = e.getDiffieHellman = function getDiffieHellman(e) {
                var r = new t(i[e].prime, "hex"),
                    n = new t(i[e].gen, "hex");
                return new o(r, n)
            }, e.createDiffieHellman = e.DiffieHellman = function createDiffieHellman(e, r, i, s) {
                return t.isBuffer(r) || void 0 === a[r] ? createDiffieHellman(e, "binary", r, i) : (r = r || "binary", s = s || "binary", i = i || new t([2]), t.isBuffer(i) || (i = new t(i, s)), "number" == typeof e ? new o(n(e, i), i, !0) : (t.isBuffer(e) || (e = new t(e, r)), new o(e, i, !0)))
            }
        }).call(this, r(0).Buffer)
    }, function (t) {
        t.exports = JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}')
    }, function (t, e, r) {
        (function (e) {
            var n = r(2),
                i = new(r(320)),
                o = new n(24),
                a = new n(11),
                s = new n(10),
                u = new n(3),
                c = new n(7),
                l = r(319),
                h = r(15);

            function setPublicKey(t, r) {
                return r = r || "utf8", e.isBuffer(t) || (t = new e(t, r)), this._pub = new n(t), this
            }

            function setPrivateKey(t, r) {
                return r = r || "utf8", e.isBuffer(t) || (t = new e(t, r)), this._priv = new n(t), this
            }
            t.exports = DH;
            var d = {};

            function DH(t, e, r) {
                this.setGenerator(e), this.__prime = new n(t), this._prime = n.mont(this.__prime), this._primeLen = t.length, this._pub = void 0, this._priv = void 0, this._primeCode = void 0, r ? (this.setPublicKey = setPublicKey, this.setPrivateKey = setPrivateKey) : this._primeCode = 8
            }

            function formatReturnValue(t, r) {
                var n = new e(t.toArray());
                return r ? n.toString(r) : n
            }
            Object.defineProperty(DH.prototype, "verifyError", {
                enumerable: !0,
                get: function () {
                    return "number" != typeof this._primeCode && (this._primeCode = function checkPrime(t, e) {
                        var r = e.toString("hex"),
                            n = [r, t.toString(16)].join("_");
                        if (n in d) return d[n];
                        var h, p = 0;
                        if (t.isEven() || !l.simpleSieve || !l.fermatTest(t) || !i.test(t)) return p += 1, p += "02" === r || "05" === r ? 8 : 4, d[n] = p, p;
                        switch (i.test(t.shrn(1)) || (p += 2), r) {
                            case "02":
                                t.mod(o).cmp(a) && (p += 8);
                                break;
                            case "05":
                                (h = t.mod(s)).cmp(u) && h.cmp(c) && (p += 8);
                                break;
                            default:
                                p += 4
                        }
                        return d[n] = p, p
                    }(this.__prime, this.__gen)), this._primeCode
                }
            }), DH.prototype.generateKeys = function () {
                return this._priv || (this._priv = new n(h(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey()
            }, DH.prototype.computeSecret = function (t) {
                var r = (t = (t = new n(t)).toRed(this._prime)).redPow(this._priv).fromRed(),
                    i = new e(r.toArray()),
                    o = this.getPrime();
                if (i.length < o.length) {
                    var a = new e(o.length - i.length);
                    a.fill(0), i = e.concat([a, i])
                }
                return i
            }, DH.prototype.getPublicKey = function getPublicKey(t) {
                return formatReturnValue(this._pub, t)
            }, DH.prototype.getPrivateKey = function getPrivateKey(t) {
                return formatReturnValue(this._priv, t)
            }, DH.prototype.getPrime = function (t) {
                return formatReturnValue(this.__prime, t)
            }, DH.prototype.getGenerator = function (t) {
                return formatReturnValue(this._gen, t)
            }, DH.prototype.setGenerator = function (t, r) {
                return r = r || "utf8", e.isBuffer(t) || (t = new e(t, r)), this.__gen = t, this._gen = new n(t), this
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (e) {
            var n = r(55),
                i = r(91),
                o = r(1),
                a = r(818),
                s = r(832),
                u = r(307);

            function Sign(t) {
                i.Writable.call(this);
                var e = u[t];
                if (!e) throw new Error("Unknown message digest");
                this._hashType = e.hash, this._hash = n(e.hash), this._tag = e.id, this._signType = e.sign
            }

            function Verify(t) {
                i.Writable.call(this);
                var e = u[t];
                if (!e) throw new Error("Unknown message digest");
                this._hash = n(e.hash), this._tag = e.id, this._signType = e.sign
            }

            function createSign(t) {
                return new Sign(t)
            }

            function createVerify(t) {
                return new Verify(t)
            }
            Object.keys(u).forEach((function (t) {
                u[t].id = new e(u[t].id, "hex"), u[t.toLowerCase()] = u[t]
            })), o(Sign, i.Writable), Sign.prototype._write = function _write(t, e, r) {
                this._hash.update(t), r()
            }, Sign.prototype.update = function update(t, r) {
                return "string" == typeof t && (t = new e(t, r)), this._hash.update(t), this
            }, Sign.prototype.sign = function signMethod(t, e) {
                this.end();
                var r = this._hash.digest(),
                    n = a(r, t, this._hashType, this._signType, this._tag);
                return e ? n.toString(e) : n
            }, o(Verify, i.Writable), Verify.prototype._write = function _write(t, e, r) {
                this._hash.update(t), r()
            }, Verify.prototype.update = function update(t, r) {
                return "string" == typeof t && (t = new e(t, r)), this._hash.update(t), this
            }, Verify.prototype.verify = function verifyMethod(t, r, n) {
                "string" == typeof r && (r = new e(r, n)), this.end();
                var i = this._hash.digest();
                return s(r, i, t, this._signType, this._tag)
            }, t.exports = {
                Sign: createSign,
                Verify: createVerify,
                createSign: createSign,
                createVerify: createVerify
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (e) {
            var n = r(305),
                i = r(197),
                o = r(87).ec,
                a = r(2),
                s = r(134),
                u = r(325);

            function getKey(t, r, i, o) {
                if ((t = new e(t.toArray())).length < r.byteLength()) {
                    var a = new e(r.byteLength() - t.length);
                    a.fill(0), t = e.concat([a, t])
                }
                var s = i.length,
                    u = function bits2octets(t, r) {
                        t = (t = bits2int(t, r)).mod(r);
                        var n = new e(t.toArray());
                        if (n.length < r.byteLength()) {
                            var i = new e(r.byteLength() - n.length);
                            i.fill(0), n = e.concat([i, n])
                        }
                        return n
                    }(i, r),
                    c = new e(s);
                c.fill(1);
                var l = new e(s);
                return l.fill(0), l = n(o, l).update(c).update(new e([0])).update(t).update(u).digest(), c = n(o, l).update(c).digest(), {
                    k: l = n(o, l).update(c).update(new e([1])).update(t).update(u).digest(),
                    v: c = n(o, l).update(c).digest()
                }
            }

            function bits2int(t, e) {
                var r = new a(t),
                    n = (t.length << 3) - e.bitLength();
                return n > 0 && r.ishrn(n), r
            }

            function makeKey(t, r, i) {
                var o, a;
                do {
                    for (o = new e(0); 8 * o.length < t.bitLength();) r.v = n(i, r.k).update(r.v).digest(), o = e.concat([o, r.v]);
                    a = bits2int(o, t), r.k = n(i, r.k).update(r.v).update(new e([0])).digest(), r.v = n(i, r.k).update(r.v).digest()
                } while (-1 !== a.cmp(t));
                return a
            }

            function makeR(t, e, r, n) {
                return t.toRed(a.mont(r)).redPow(e).fromRed().mod(n)
            }
            t.exports = function sign(t, r, n, c, l) {
                var h = s(r);
                if (h.curve) {
                    if ("ecdsa" !== c && "ecdsa/rsa" !== c) throw new Error("wrong private key type");
                    return function ecSign(t, r) {
                        var n = u[r.curve.join(".")];
                        if (!n) throw new Error("unknown curve " + r.curve.join("."));
                        var i = new o(n).keyFromPrivate(r.privateKey).sign(t);
                        return new e(i.toDER())
                    }(t, h)
                }
                if ("dsa" === h.type) {
                    if ("dsa" !== c) throw new Error("wrong private key type");
                    return function dsaSign(t, r, n) {
                        var i, o = r.params.priv_key,
                            s = r.params.p,
                            u = r.params.q,
                            c = r.params.g,
                            l = new a(0),
                            h = bits2int(t, u).mod(u),
                            d = !1,
                            p = getKey(o, u, t, n);
                        for (; !1 === d;) i = makeKey(u, p, n), l = makeR(c, i, s, u), 0 === (d = i.invm(u).imul(h.add(o.mul(l))).mod(u)).cmpn(0) && (d = !1, l = new a(0));
                        return function toDER(t, r) {
                            t = t.toArray(), r = r.toArray(), 128 & t[0] && (t = [0].concat(t));
                            128 & r[0] && (r = [0].concat(r));
                            var n = [48, t.length + r.length + 4, 2, t.length];
                            return n = n.concat(t, [2, r.length], r), new e(n)
                        }(l, d)
                    }(t, h, n)
                }
                if ("rsa" !== c && "ecdsa/rsa" !== c) throw new Error("wrong private key type");
                t = e.concat([l, t]);
                for (var d = h.modulus.byteLength(), p = [0, 1]; t.length + p.length + 1 < d;) p.push(255);
                p.push(0);
                for (var m = -1; ++m < t.length;) p.push(t[m]);
                return i(p, h)
            }, t.exports.getKey = getKey, t.exports.makeKey = makeKey
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = r(97);
        e.certificate = r(829);
        var i = n.define("RSAPrivateKey", (function () {
            this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int())
        }));
        e.RSAPrivateKey = i;
        var o = n.define("RSAPublicKey", (function () {
            this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int())
        }));
        e.RSAPublicKey = o;
        var a = n.define("SubjectPublicKeyInfo", (function () {
            this.seq().obj(this.key("algorithm").use(s), this.key("subjectPublicKey").bitstr())
        }));
        e.PublicKey = a;
        var s = n.define("AlgorithmIdentifier", (function () {
                this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional())
            })),
            u = n.define("PrivateKeyInfo", (function () {
                this.seq().obj(this.key("version").int(), this.key("algorithm").use(s), this.key("subjectPrivateKey").octstr())
            }));
        e.PrivateKey = u;
        var c = n.define("EncryptedPrivateKeyInfo", (function () {
            this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr())
        }));
        e.EncryptedPrivateKey = c;
        var l = n.define("DSAPrivateKey", (function () {
            this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int())
        }));
        e.DSAPrivateKey = l, e.DSAparam = n.define("DSAparam", (function () {
            this.int()
        }));
        var h = n.define("ECPrivateKey", (function () {
            this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(d), this.key("publicKey").optional().explicit(1).bitstr())
        }));
        e.ECPrivateKey = h;
        var d = n.define("ECParameters", (function () {
            this.choice({
                namedCurve: this.objid()
            })
        }));
        e.signature = n.define("signature", (function () {
            this.seq().obj(this.key("r").int(), this.key("s").int())
        }))
    }, function (t, e, r) {
        var n = r(97),
            i = r(1);

        function Entity(t, e) {
            this.name = t, this.body = e, this.decoders = {}, this.encoders = {}
        }
        e.define = function define(t, e) {
            return new Entity(t, e)
        }, Entity.prototype._createNamed = function createNamed(t) {
            var e;
            try {
                e = r(821).runInThisContext("(function " + this.name + "(entity) {\n  this._initNamed(entity);\n})")
            } catch (t) {
                e = function (t) {
                    this._initNamed(t)
                }
            }
            return i(e, t), e.prototype._initNamed = function initnamed(e) {
                t.call(this, e)
            }, new e(this)
        }, Entity.prototype._getDecoder = function _getDecoder(t) {
            return t = t || "der", this.decoders.hasOwnProperty(t) || (this.decoders[t] = this._createNamed(n.decoders[t])), this.decoders[t]
        }, Entity.prototype.decode = function decode(t, e, r) {
            return this._getDecoder(e).decode(t, r)
        }, Entity.prototype._getEncoder = function _getEncoder(t) {
            return t = t || "der", this.encoders.hasOwnProperty(t) || (this.encoders[t] = this._createNamed(n.encoders[t])), this.encoders[t]
        }, Entity.prototype.encode = function encode(t, e, r) {
            return this._getEncoder(e).encode(t, r)
        }
    }, function (module, exports) {
        var indexOf = function (t, e) {
                if (t.indexOf) return t.indexOf(e);
                for (var r = 0; r < t.length; r++)
                    if (t[r] === e) return r;
                return -1
            },
            Object_keys = function (t) {
                if (Object.keys) return Object.keys(t);
                var e = [];
                for (var r in t) e.push(r);
                return e
            },
            forEach = function (t, e) {
                if (t.forEach) return t.forEach(e);
                for (var r = 0; r < t.length; r++) e(t[r], r, t)
            },
            defineProp = function () {
                try {
                    return Object.defineProperty({}, "_", {}),
                        function (t, e, r) {
                            Object.defineProperty(t, e, {
                                writable: !0,
                                enumerable: !1,
                                configurable: !0,
                                value: r
                            })
                        }
                } catch (t) {
                    return function (t, e, r) {
                        t[e] = r
                    }
                }
            }(),
            globals = ["Array", "Boolean", "Date", "Error", "EvalError", "Function", "Infinity", "JSON", "Math", "NaN", "Number", "Object", "RangeError", "ReferenceError", "RegExp", "String", "SyntaxError", "TypeError", "URIError", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "eval", "isFinite", "isNaN", "parseFloat", "parseInt", "undefined", "unescape"];

        function Context() {}
        Context.prototype = {};
        var Script = exports.Script = function NodeScript(t) {
            if (!(this instanceof Script)) return new Script(t);
            this.code = t
        };
        Script.prototype.runInContext = function (t) {
            if (!(t instanceof Context)) throw new TypeError("needs a 'context' argument.");
            var e = document.createElement("iframe");
            e.style || (e.style = {}), e.style.display = "none", document.body.appendChild(e);
            var r = e.contentWindow,
                n = r.eval,
                i = r.execScript;
            !n && i && (i.call(r, "null"), n = r.eval), forEach(Object_keys(t), (function (e) {
                r[e] = t[e]
            })), forEach(globals, (function (e) {
                t[e] && (r[e] = t[e])
            }));
            var o = Object_keys(r),
                a = n.call(r, this.code);
            return forEach(Object_keys(r), (function (e) {
                (e in t || -1 === indexOf(o, e)) && (t[e] = r[e])
            })), forEach(globals, (function (e) {
                e in t || defineProp(t, e, r[e])
            })), document.body.removeChild(e), a
        }, Script.prototype.runInThisContext = function () {
            return eval(this.code)
        }, Script.prototype.runInNewContext = function (t) {
            var e = Script.createContext(t),
                r = this.runInContext(e);
            return t && forEach(Object_keys(e), (function (r) {
                t[r] = e[r]
            })), r
        }, forEach(Object_keys(Script.prototype), (function (t) {
            exports[t] = Script[t] = function (e) {
                var r = Script(e);
                return r[t].apply(r, [].slice.call(arguments, 1))
            }
        })), exports.isContext = function (t) {
            return t instanceof Context
        }, exports.createScript = function (t) {
            return exports.Script(t)
        }, exports.createContext = Script.createContext = function (t) {
            var e = new Context;
            return "object" == typeof t && forEach(Object_keys(t), (function (r) {
                e[r] = t[r]
            })), e
        }
    }, function (t, e, r) {
        var n = r(1);

        function Reporter(t) {
            this._reporterState = {
                obj: null,
                path: [],
                options: t || {},
                errors: []
            }
        }

        function ReporterError(t, e) {
            this.path = t, this.rethrow(e)
        }
        e.Reporter = Reporter, Reporter.prototype.isError = function isError(t) {
            return t instanceof ReporterError
        }, Reporter.prototype.save = function save() {
            var t = this._reporterState;
            return {
                obj: t.obj,
                pathLen: t.path.length
            }
        }, Reporter.prototype.restore = function restore(t) {
            var e = this._reporterState;
            e.obj = t.obj, e.path = e.path.slice(0, t.pathLen)
        }, Reporter.prototype.enterKey = function enterKey(t) {
            return this._reporterState.path.push(t)
        }, Reporter.prototype.exitKey = function exitKey(t) {
            var e = this._reporterState;
            e.path = e.path.slice(0, t - 1)
        }, Reporter.prototype.leaveKey = function leaveKey(t, e, r) {
            var n = this._reporterState;
            this.exitKey(t), null !== n.obj && (n.obj[e] = r)
        }, Reporter.prototype.path = function path() {
            return this._reporterState.path.join("/")
        }, Reporter.prototype.enterObject = function enterObject() {
            var t = this._reporterState,
                e = t.obj;
            return t.obj = {}, e
        }, Reporter.prototype.leaveObject = function leaveObject(t) {
            var e = this._reporterState,
                r = e.obj;
            return e.obj = t, r
        }, Reporter.prototype.error = function error(t) {
            var e, r = this._reporterState,
                n = t instanceof ReporterError;
            if (e = n ? t : new ReporterError(r.path.map((function (t) {
                    return "[" + JSON.stringify(t) + "]"
                })).join(""), t.message || t, t.stack), !r.options.partial) throw e;
            return n || r.errors.push(e), e
        }, Reporter.prototype.wrapResult = function wrapResult(t) {
            var e = this._reporterState;
            return e.options.partial ? {
                result: this.isError(t) ? null : t,
                errors: e.errors
            } : t
        }, n(ReporterError, Error), ReporterError.prototype.rethrow = function rethrow(t) {
            if (this.message = t + " at: " + (this.path || "(shallow)"), Error.captureStackTrace && Error.captureStackTrace(this, ReporterError), !this.stack) try {
                throw new Error(this.message)
            } catch (t) {
                this.stack = t.stack
            }
            return this
        }
    }, function (t, e, r) {
        var n = r(98).Reporter,
            i = r(98).EncoderBuffer,
            o = r(98).DecoderBuffer,
            a = r(17),
            s = ["seq", "seqof", "set", "setof", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "objDesc", "bitstr", "bmpstr", "charstr", "genstr", "graphstr", "ia5str", "iso646str", "numstr", "octstr", "printstr", "t61str", "unistr", "utf8str", "videostr"],
            u = ["key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains"].concat(s);

        function Node(t, e) {
            var r = {};
            this._baseState = r, r.enc = t, r.parent = e || null, r.children = null, r.tag = null, r.args = null, r.reverseArgs = null, r.choice = null, r.optional = !1, r.any = !1, r.obj = !1, r.use = null, r.useDecoder = null, r.key = null, r.default = null, r.explicit = null, r.implicit = null, r.contains = null, r.parent || (r.children = [], this._wrap())
        }
        t.exports = Node;
        var c = ["enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains"];
        Node.prototype.clone = function clone() {
            var t = this._baseState,
                e = {};
            c.forEach((function (r) {
                e[r] = t[r]
            }));
            var r = new this.constructor(e.parent);
            return r._baseState = e, r
        }, Node.prototype._wrap = function wrap() {
            var t = this._baseState;
            u.forEach((function (e) {
                this[e] = function _wrappedMethod() {
                    var r = new this.constructor(this);
                    return t.children.push(r), r[e].apply(r, arguments)
                }
            }), this)
        }, Node.prototype._init = function init(t) {
            var e = this._baseState;
            a(null === e.parent), t.call(this), e.children = e.children.filter((function (t) {
                return t._baseState.parent === this
            }), this), a.equal(e.children.length, 1, "Root node can have only one child")
        }, Node.prototype._useArgs = function useArgs(t) {
            var e = this._baseState,
                r = t.filter((function (t) {
                    return t instanceof this.constructor
                }), this);
            t = t.filter((function (t) {
                return !(t instanceof this.constructor)
            }), this), 0 !== r.length && (a(null === e.children), e.children = r, r.forEach((function (t) {
                t._baseState.parent = this
            }), this)), 0 !== t.length && (a(null === e.args), e.args = t, e.reverseArgs = t.map((function (t) {
                if ("object" != typeof t || t.constructor !== Object) return t;
                var e = {};
                return Object.keys(t).forEach((function (r) {
                    r == (0 | r) && (r |= 0);
                    var n = t[r];
                    e[n] = r
                })), e
            })))
        }, ["_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool"].forEach((function (t) {
            Node.prototype[t] = function _overrided() {
                var e = this._baseState;
                throw new Error(t + " not implemented for encoding: " + e.enc)
            }
        })), s.forEach((function (t) {
            Node.prototype[t] = function _tagMethod() {
                var e = this._baseState,
                    r = Array.prototype.slice.call(arguments);
                return a(null === e.tag), e.tag = t, this._useArgs(r), this
            }
        })), Node.prototype.use = function use(t) {
            a(t);
            var e = this._baseState;
            return a(null === e.use), e.use = t, this
        }, Node.prototype.optional = function optional() {
            return this._baseState.optional = !0, this
        }, Node.prototype.def = function def(t) {
            var e = this._baseState;
            return a(null === e.default), e.default = t, e.optional = !0, this
        }, Node.prototype.explicit = function explicit(t) {
            var e = this._baseState;
            return a(null === e.explicit && null === e.implicit), e.explicit = t, this
        }, Node.prototype.implicit = function implicit(t) {
            var e = this._baseState;
            return a(null === e.explicit && null === e.implicit), e.implicit = t, this
        }, Node.prototype.obj = function obj() {
            var t = this._baseState,
                e = Array.prototype.slice.call(arguments);
            return t.obj = !0, 0 !== e.length && this._useArgs(e), this
        }, Node.prototype.key = function key(t) {
            var e = this._baseState;
            return a(null === e.key), e.key = t, this
        }, Node.prototype.any = function any() {
            return this._baseState.any = !0, this
        }, Node.prototype.choice = function choice(t) {
            var e = this._baseState;
            return a(null === e.choice), e.choice = t, this._useArgs(Object.keys(t).map((function (e) {
                return t[e]
            }))), this
        }, Node.prototype.contains = function contains(t) {
            var e = this._baseState;
            return a(null === e.use), e.contains = t, this
        }, Node.prototype._decode = function decode(t, e) {
            var r = this._baseState;
            if (null === r.parent) return t.wrapResult(r.children[0]._decode(t, e));
            var n, i = r.default,
                a = !0,
                s = null;
            if (null !== r.key && (s = t.enterKey(r.key)), r.optional) {
                var u = null;
                if (null !== r.explicit ? u = r.explicit : null !== r.implicit ? u = r.implicit : null !== r.tag && (u = r.tag), null !== u || r.any) {
                    if (a = this._peekTag(t, u, r.any), t.isError(a)) return a
                } else {
                    var c = t.save();
                    try {
                        null === r.choice ? this._decodeGeneric(r.tag, t, e) : this._decodeChoice(t, e), a = !0
                    } catch (t) {
                        a = !1
                    }
                    t.restore(c)
                }
            }
            if (r.obj && a && (n = t.enterObject()), a) {
                if (null !== r.explicit) {
                    var l = this._decodeTag(t, r.explicit);
                    if (t.isError(l)) return l;
                    t = l
                }
                var h = t.offset;
                if (null === r.use && null === r.choice) {
                    if (r.any) c = t.save();
                    var d = this._decodeTag(t, null !== r.implicit ? r.implicit : r.tag, r.any);
                    if (t.isError(d)) return d;
                    r.any ? i = t.raw(c) : t = d
                }
                if (e && e.track && null !== r.tag && e.track(t.path(), h, t.length, "tagged"), e && e.track && null !== r.tag && e.track(t.path(), t.offset, t.length, "content"), i = r.any ? i : null === r.choice ? this._decodeGeneric(r.tag, t, e) : this._decodeChoice(t, e), t.isError(i)) return i;
                if (r.any || null !== r.choice || null === r.children || r.children.forEach((function decodeChildren(r) {
                        r._decode(t, e)
                    })), r.contains && ("octstr" === r.tag || "bitstr" === r.tag)) {
                    var p = new o(i);
                    i = this._getUse(r.contains, t._reporterState.obj)._decode(p, e)
                }
            }
            return r.obj && a && (i = t.leaveObject(n)), null === r.key || null === i && !0 !== a ? null !== s && t.exitKey(s) : t.leaveKey(s, r.key, i), i
        }, Node.prototype._decodeGeneric = function decodeGeneric(t, e, r) {
            var n = this._baseState;
            return "seq" === t || "set" === t ? null : "seqof" === t || "setof" === t ? this._decodeList(e, t, n.args[0], r) : /str$/.test(t) ? this._decodeStr(e, t, r) : "objid" === t && n.args ? this._decodeObjid(e, n.args[0], n.args[1], r) : "objid" === t ? this._decodeObjid(e, null, null, r) : "gentime" === t || "utctime" === t ? this._decodeTime(e, t, r) : "null_" === t ? this._decodeNull(e, r) : "bool" === t ? this._decodeBool(e, r) : "objDesc" === t ? this._decodeStr(e, t, r) : "int" === t || "enum" === t ? this._decodeInt(e, n.args && n.args[0], r) : null !== n.use ? this._getUse(n.use, e._reporterState.obj)._decode(e, r) : e.error("unknown tag: " + t)
        }, Node.prototype._getUse = function _getUse(t, e) {
            var r = this._baseState;
            return r.useDecoder = this._use(t, e), a(null === r.useDecoder._baseState.parent), r.useDecoder = r.useDecoder._baseState.children[0], r.implicit !== r.useDecoder._baseState.implicit && (r.useDecoder = r.useDecoder.clone(), r.useDecoder._baseState.implicit = r.implicit), r.useDecoder
        }, Node.prototype._decodeChoice = function decodeChoice(t, e) {
            var r = this._baseState,
                n = null,
                i = !1;
            return Object.keys(r.choice).some((function (o) {
                var a = t.save(),
                    s = r.choice[o];
                try {
                    var u = s._decode(t, e);
                    if (t.isError(u)) return !1;
                    n = {
                        type: o,
                        value: u
                    }, i = !0
                } catch (e) {
                    return t.restore(a), !1
                }
                return !0
            }), this), i ? n : t.error("Choice not matched")
        }, Node.prototype._createEncoderBuffer = function createEncoderBuffer(t) {
            return new i(t, this.reporter)
        }, Node.prototype._encode = function encode(t, e, r) {
            var n = this._baseState;
            if (null === n.default || n.default !== t) {
                var i = this._encodeValue(t, e, r);
                if (void 0 !== i && !this._skipDefault(i, e, r)) return i
            }
        }, Node.prototype._encodeValue = function encode(t, e, r) {
            var i = this._baseState;
            if (null === i.parent) return i.children[0]._encode(t, e || new n);
            var o = null;
            if (this.reporter = e, i.optional && void 0 === t) {
                if (null === i.default) return;
                t = i.default
            }
            var a = null,
                s = !1;
            if (i.any) o = this._createEncoderBuffer(t);
            else if (i.choice) o = this._encodeChoice(t, e);
            else if (i.contains) a = this._getUse(i.contains, r)._encode(t, e), s = !0;
            else if (i.children) a = i.children.map((function (r) {
                if ("null_" === r._baseState.tag) return r._encode(null, e, t);
                if (null === r._baseState.key) return e.error("Child should have a key");
                var n = e.enterKey(r._baseState.key);
                if ("object" != typeof t) return e.error("Child expected, but input is not object");
                var i = r._encode(t[r._baseState.key], e, t);
                return e.leaveKey(n), i
            }), this).filter((function (t) {
                return t
            })), a = this._createEncoderBuffer(a);
            else if ("seqof" === i.tag || "setof" === i.tag) {
                if (!i.args || 1 !== i.args.length) return e.error("Too many args for : " + i.tag);
                if (!Array.isArray(t)) return e.error("seqof/setof, but data is not Array");
                var u = this.clone();
                u._baseState.implicit = null, a = this._createEncoderBuffer(t.map((function (r) {
                    var n = this._baseState;
                    return this._getUse(n.args[0], t)._encode(r, e)
                }), u))
            } else null !== i.use ? o = this._getUse(i.use, r)._encode(t, e) : (a = this._encodePrimitive(i.tag, t), s = !0);
            if (!i.any && null === i.choice) {
                var c = null !== i.implicit ? i.implicit : i.tag,
                    l = null === i.implicit ? "universal" : "context";
                null === c ? null === i.use && e.error("Tag could be omitted only for .use()") : null === i.use && (o = this._encodeComposite(c, s, l, a))
            }
            return null !== i.explicit && (o = this._encodeComposite(i.explicit, !1, "context", o)), o
        }, Node.prototype._encodeChoice = function encodeChoice(t, e) {
            var r = this._baseState,
                n = r.choice[t.type];
            return n || a(!1, t.type + " not found in " + JSON.stringify(Object.keys(r.choice))), n._encode(t.value, e)
        }, Node.prototype._encodePrimitive = function encodePrimitive(t, e) {
            var r = this._baseState;
            if (/str$/.test(t)) return this._encodeStr(e, t);
            if ("objid" === t && r.args) return this._encodeObjid(e, r.reverseArgs[0], r.args[1]);
            if ("objid" === t) return this._encodeObjid(e, null, null);
            if ("gentime" === t || "utctime" === t) return this._encodeTime(e, t);
            if ("null_" === t) return this._encodeNull();
            if ("int" === t || "enum" === t) return this._encodeInt(e, r.args && r.reverseArgs[0]);
            if ("bool" === t) return this._encodeBool(e);
            if ("objDesc" === t) return this._encodeStr(e, t);
            throw new Error("Unsupported tag: " + t)
        }, Node.prototype._isNumstr = function isNumstr(t) {
            return /^[0-9 ]*$/.test(t)
        }, Node.prototype._isPrintstr = function isPrintstr(t) {
            return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(t)
        }
    }, function (t, e, r) {
        var n = r(322);
        e.tagClass = {
            0: "universal",
            1: "application",
            2: "context",
            3: "private"
        }, e.tagClassByName = n._reverse(e.tagClass), e.tag = {
            0: "end",
            1: "bool",
            2: "int",
            3: "bitstr",
            4: "octstr",
            5: "null_",
            6: "objid",
            7: "objDesc",
            8: "external",
            9: "real",
            10: "enum",
            11: "embed",
            12: "utf8str",
            13: "relativeOid",
            16: "seq",
            17: "set",
            18: "numstr",
            19: "printstr",
            20: "t61str",
            21: "videostr",
            22: "ia5str",
            23: "utctime",
            24: "gentime",
            25: "graphstr",
            26: "iso646str",
            27: "genstr",
            28: "unistr",
            29: "charstr",
            30: "bmpstr"
        }, e.tagByName = n._reverse(e.tag)
    }, function (t, e, r) {
        var n = e;
        n.der = r(323), n.pem = r(826)
    }, function (t, e, r) {
        var n = r(1),
            i = r(0).Buffer,
            o = r(323);

        function PEMDecoder(t) {
            o.call(this, t), this.enc = "pem"
        }
        n(PEMDecoder, o), t.exports = PEMDecoder, PEMDecoder.prototype.decode = function decode(t, e) {
            for (var r = t.toString().split(/[\r\n]+/g), n = e.label.toUpperCase(), a = /^-----(BEGIN|END) ([^-]+)-----$/, s = -1, u = -1, c = 0; c < r.length; c++) {
                var l = r[c].match(a);
                if (null !== l && l[2] === n) {
                    if (-1 !== s) {
                        if ("END" !== l[1]) break;
                        u = c;
                        break
                    }
                    if ("BEGIN" !== l[1]) break;
                    s = c
                }
            }
            if (-1 === s || -1 === u) throw new Error("PEM section not found for: " + n);
            var h = r.slice(s + 1, u).join("");
            h.replace(/[^a-z0-9\+\/=]+/gi, "");
            var d = new i(h, "base64");
            return o.prototype.decode.call(this, d, e)
        }
    }, function (t, e, r) {
        var n = e;
        n.der = r(324), n.pem = r(828)
    }, function (t, e, r) {
        var n = r(1),
            i = r(324);

        function PEMEncoder(t) {
            i.call(this, t), this.enc = "pem"
        }
        n(PEMEncoder, i), t.exports = PEMEncoder, PEMEncoder.prototype.encode = function encode(t, e) {
            for (var r = i.prototype.encode.call(this, t).toString("base64"), n = ["-----BEGIN " + e.label + "-----"], o = 0; o < r.length; o += 64) n.push(r.slice(o, o + 64));
            return n.push("-----END " + e.label + "-----"), n.join("\n")
        }
    }, function (t, e, r) {
        var n = r(97),
            i = n.define("Time", (function () {
                this.choice({
                    utcTime: this.utctime(),
                    generalTime: this.gentime()
                })
            })),
            o = n.define("AttributeTypeValue", (function () {
                this.seq().obj(this.key("type").objid(), this.key("value").any())
            })),
            a = n.define("AlgorithmIdentifier", (function () {
                this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional())
            })),
            s = n.define("SubjectPublicKeyInfo", (function () {
                this.seq().obj(this.key("algorithm").use(a), this.key("subjectPublicKey").bitstr())
            })),
            u = n.define("RelativeDistinguishedName", (function () {
                this.setof(o)
            })),
            c = n.define("RDNSequence", (function () {
                this.seqof(u)
            })),
            l = n.define("Name", (function () {
                this.choice({
                    rdnSequence: this.use(c)
                })
            })),
            h = n.define("Validity", (function () {
                this.seq().obj(this.key("notBefore").use(i), this.key("notAfter").use(i))
            })),
            d = n.define("Extension", (function () {
                this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(!1), this.key("extnValue").octstr())
            })),
            p = n.define("TBSCertificate", (function () {
                this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(a), this.key("issuer").use(l), this.key("validity").use(h), this.key("subject").use(l), this.key("subjectPublicKeyInfo").use(s), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(d).optional())
            })),
            m = n.define("X509Certificate", (function () {
                this.seq().obj(this.key("tbsCertificate").use(p), this.key("signatureAlgorithm").use(a), this.key("signatureValue").bitstr())
            }));
        t.exports = m
    }, function (t) {
        t.exports = JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}')
    }, function (t, e, r) {
        var n = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m,
            i = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m,
            o = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m,
            a = r(133),
            s = r(195),
            u = r(3).Buffer;
        t.exports = function (t, e) {
            var r, c = t.toString(),
                l = c.match(n);
            if (l) {
                var h = "aes" + l[1],
                    d = u.from(l[2], "hex"),
                    p = u.from(l[3].replace(/[\r\n]/g, ""), "base64"),
                    m = a(e, d.slice(0, 8), parseInt(l[1], 10)).key,
                    y = [],
                    b = s.createDecipheriv(h, m, d);
                y.push(b.update(p)), y.push(b.final()), r = u.concat(y)
            } else {
                var g = c.match(o);
                r = new u(g[2].replace(/[\r\n]/g, ""), "base64")
            }
            return {
                tag: c.match(i)[1],
                data: r
            }
        }
    }, function (t, e, r) {
        (function (e) {
            var n = r(2),
                i = r(87).ec,
                o = r(134),
                a = r(325);

            function checkValue(t, e) {
                if (t.cmpn(0) <= 0) throw new Error("invalid sig");
                if (t.cmp(e) >= e) throw new Error("invalid sig")
            }
            t.exports = function verify(t, r, s, u, c) {
                var l = o(s);
                if ("ec" === l.type) {
                    if ("ecdsa" !== u && "ecdsa/rsa" !== u) throw new Error("wrong public key type");
                    return function ecVerify(t, e, r) {
                        var n = a[r.data.algorithm.curve.join(".")];
                        if (!n) throw new Error("unknown curve " + r.data.algorithm.curve.join("."));
                        var o = new i(n),
                            s = r.data.subjectPrivateKey.data;
                        return o.verify(e, t, s)
                    }(t, r, l)
                }
                if ("dsa" === l.type) {
                    if ("dsa" !== u) throw new Error("wrong public key type");
                    return function dsaVerify(t, e, r) {
                        var i = r.data.p,
                            a = r.data.q,
                            s = r.data.g,
                            u = r.data.pub_key,
                            c = o.signature.decode(t, "der"),
                            l = c.s,
                            h = c.r;
                        checkValue(l, a), checkValue(h, a);
                        var d = n.mont(i),
                            p = l.invm(a);
                        return 0 === s.toRed(d).redPow(new n(e).mul(p).mod(a)).fromRed().mul(u.toRed(d).redPow(h.mul(p).mod(a)).fromRed()).mod(i).mod(a).cmp(h)
                    }(t, r, l)
                }
                if ("rsa" !== u && "ecdsa/rsa" !== u) throw new Error("wrong public key type");
                r = e.concat([c, r]);
                for (var h = l.modulus.byteLength(), d = [1], p = 0; r.length + d.length + 2 < h;) d.push(255), p++;
                d.push(0);
                for (var m = -1; ++m < r.length;) d.push(r[m]);
                d = new e(d);
                var y = n.mont(l.modulus);
                t = (t = new n(t).toRed(y)).redPow(new n(l.publicExponent)), t = new e(t.fromRed().toArray());
                var b = p < 8 ? 1 : 0;
                for (h = Math.min(t.length, d.length), t.length !== d.length && (b = 1), m = -1; ++m < h;) b |= t[m] ^ d[m];
                return 0 === b
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (e) {
            var n = r(87),
                i = r(2);
            t.exports = function createECDH(t) {
                return new ECDH(t)
            };
            var o = {
                secp256k1: {
                    name: "secp256k1",
                    byteLength: 32
                },
                secp224r1: {
                    name: "p224",
                    byteLength: 28
                },
                prime256v1: {
                    name: "p256",
                    byteLength: 32
                },
                prime192v1: {
                    name: "p192",
                    byteLength: 24
                },
                ed25519: {
                    name: "ed25519",
                    byteLength: 32
                },
                secp384r1: {
                    name: "p384",
                    byteLength: 48
                },
                secp521r1: {
                    name: "p521",
                    byteLength: 66
                }
            };

            function ECDH(t) {
                this.curveType = o[t], this.curveType || (this.curveType = {
                    name: t
                }), this.curve = new n.ec(this.curveType.name), this.keys = void 0
            }

            function formatReturnValue(t, r, n) {
                Array.isArray(t) || (t = t.toArray());
                var i = new e(t);
                if (n && i.length < n) {
                    var o = new e(n - i.length);
                    o.fill(0), i = e.concat([o, i])
                }
                return r ? i.toString(r) : i
            }
            o.p224 = o.secp224r1, o.p256 = o.secp256r1 = o.prime256v1, o.p192 = o.secp192r1 = o.prime192v1, o.p384 = o.secp384r1, o.p521 = o.secp521r1, ECDH.prototype.generateKeys = function (t, e) {
                return this.keys = this.curve.genKeyPair(), this.getPublicKey(t, e)
            }, ECDH.prototype.computeSecret = function (t, r, n) {
                return r = r || "utf8", e.isBuffer(t) || (t = new e(t, r)), formatReturnValue(this.curve.keyFromPublic(t).getPublic().mul(this.keys.getPrivate()).getX(), n, this.curveType.byteLength)
            }, ECDH.prototype.getPublicKey = function (t, e) {
                var r = this.keys.getPublic("compressed" === e, !0);
                return "hybrid" === e && (r[r.length - 1] % 2 ? r[0] = 7 : r[0] = 6), formatReturnValue(r, t)
            }, ECDH.prototype.getPrivateKey = function (t) {
                return formatReturnValue(this.keys.getPrivate(), t)
            }, ECDH.prototype.setPublicKey = function (t, r) {
                return r = r || "utf8", e.isBuffer(t) || (t = new e(t, r)), this.keys._importPublic(t), this
            }, ECDH.prototype.setPrivateKey = function (t, r) {
                r = r || "utf8", e.isBuffer(t) || (t = new e(t, r));
                var n = new i(t);
                return n = n.toString(16), this.keys = this.curve.genKeyPair(), this.keys._importPrivate(n), this
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        e.publicEncrypt = r(835), e.privateDecrypt = r(836), e.privateEncrypt = function privateEncrypt(t, r) {
            return e.publicEncrypt(t, r, !0)
        }, e.publicDecrypt = function publicDecrypt(t, r) {
            return e.privateDecrypt(t, r, !0)
        }
    }, function (t, e, r) {
        var n = r(134),
            i = r(15),
            o = r(55),
            a = r(326),
            s = r(327),
            u = r(2),
            c = r(328),
            l = r(197),
            h = r(3).Buffer;
        t.exports = function publicEncrypt(t, e, r) {
            var d;
            d = t.padding ? t.padding : r ? 1 : 4;
            var p, m = n(t);
            if (4 === d) p = function oaep(t, e) {
                var r = t.modulus.byteLength(),
                    n = e.length,
                    c = o("sha1").update(h.alloc(0)).digest(),
                    l = c.length,
                    d = 2 * l;
                if (n > r - d - 2) throw new Error("message too long");
                var p = h.alloc(r - n - d - 2),
                    m = r - l - 1,
                    y = i(l),
                    b = s(h.concat([c, p, h.alloc(1, 1), e], m), a(y, m)),
                    g = s(y, a(b, l));
                return new u(h.concat([h.alloc(1), g, b], r))
            }(m, e);
            else if (1 === d) p = function pkcs1(t, e, r) {
                var n, o = e.length,
                    a = t.modulus.byteLength();
                if (o > a - 11) throw new Error("message too long");
                n = r ? h.alloc(a - o - 3, 255) : function nonZero(t) {
                    var e, r = h.allocUnsafe(t),
                        n = 0,
                        o = i(2 * t),
                        a = 0;
                    for (; n < t;) a === o.length && (o = i(2 * t), a = 0), (e = o[a++]) && (r[n++] = e);
                    return r
                }(a - o - 3);
                return new u(h.concat([h.from([0, r ? 1 : 2]), n, h.alloc(1), e], a))
            }(m, e, r);
            else {
                if (3 !== d) throw new Error("unknown padding");
                if ((p = new u(e)).cmp(m.modulus) >= 0) throw new Error("data too long for modulus")
            }
            return r ? l(p, m) : c(p, m)
        }
    }, function (t, e, r) {
        var n = r(134),
            i = r(326),
            o = r(327),
            a = r(2),
            s = r(197),
            u = r(55),
            c = r(328),
            l = r(3).Buffer;
        t.exports = function privateDecrypt(t, e, r) {
            var h;
            h = t.padding ? t.padding : r ? 1 : 4;
            var d, p = n(t),
                m = p.modulus.byteLength();
            if (e.length > m || new a(e).cmp(p.modulus) >= 0) throw new Error("decryption error");
            d = r ? c(new a(e), p) : s(e, p);
            var y = l.alloc(m - d.length);
            if (d = l.concat([y, d], m), 4 === h) return function oaep(t, e) {
                var r = t.modulus.byteLength(),
                    n = u("sha1").update(l.alloc(0)).digest(),
                    a = n.length;
                if (0 !== e[0]) throw new Error("decryption error");
                var s = e.slice(1, a + 1),
                    c = e.slice(a + 1),
                    h = o(s, i(c, a)),
                    d = o(c, i(h, r - a - 1));
                if (function compare(t, e) {
                        t = l.from(t), e = l.from(e);
                        var r = 0,
                            n = t.length;
                        t.length !== e.length && (r++, n = Math.min(t.length, e.length));
                        var i = -1;
                        for (; ++i < n;) r += t[i] ^ e[i];
                        return r
                    }(n, d.slice(0, a))) throw new Error("decryption error");
                var p = a;
                for (; 0 === d[p];) p++;
                if (1 !== d[p++]) throw new Error("decryption error");
                return d.slice(p)
            }(p, d);
            if (1 === h) return function pkcs1(t, e, r) {
                var n = e.slice(0, 2),
                    i = 2,
                    o = 0;
                for (; 0 !== e[i++];)
                    if (i >= e.length) {
                        o++;
                        break
                    } var a = e.slice(2, i - 1);
                ("0002" !== n.toString("hex") && !r || "0001" !== n.toString("hex") && r) && o++;
                a.length < 8 && o++;
                if (o) throw new Error("decryption error");
                return e.slice(i)
            }(0, d, r);
            if (3 === h) return d;
            throw new Error("unknown padding")
        }
    }, function (t, e, r) {
        (function (t, n) {
            function oldBrowser() {
                throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11")
            }
            var i = r(3),
                o = r(15),
                a = i.Buffer,
                s = i.kMaxLength,
                u = t.crypto || t.msCrypto,
                c = Math.pow(2, 32) - 1;

            function assertOffset(t, e) {
                if ("number" != typeof t || t != t) throw new TypeError("offset must be a number");
                if (t > c || t < 0) throw new TypeError("offset must be a uint32");
                if (t > s || t > e) throw new RangeError("offset out of range")
            }

            function assertSize(t, e, r) {
                if ("number" != typeof t || t != t) throw new TypeError("size must be a number");
                if (t > c || t < 0) throw new TypeError("size must be a uint32");
                if (t + e > r || t > s) throw new RangeError("buffer too small")
            }

            function actualFill(t, e, r, i) {
                if (n.browser) {
                    var a = t.buffer,
                        s = new Uint8Array(a, e, r);
                    return u.getRandomValues(s), i ? void n.nextTick((function () {
                        i(null, t)
                    })) : t
                }
                if (!i) return o(r).copy(t, e), t;
                o(r, (function (r, n) {
                    if (r) return i(r);
                    n.copy(t, e), i(null, t)
                }))
            }
            u && u.getRandomValues || !n.browser ? (e.randomFill = function randomFill(e, r, n, i) {
                if (!(a.isBuffer(e) || e instanceof t.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                if ("function" == typeof r) i = r, r = 0, n = e.length;
                else if ("function" == typeof n) i = n, n = e.length - r;
                else if ("function" != typeof i) throw new TypeError('"cb" argument must be a function');
                return assertOffset(r, e.length), assertSize(n, r, e.length), actualFill(e, r, n, i)
            }, e.randomFillSync = function randomFillSync(e, r, n) {
                void 0 === r && (r = 0);
                if (!(a.isBuffer(e) || e instanceof t.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                assertOffset(r, e.length), void 0 === n && (n = e.length - r);
                return assertSize(n, r, e.length), actualFill(e, r, n)
            }) : (e.randomFill = oldBrowser, e.randomFillSync = oldBrowser)
        }).call(this, r(6), r(7))
    }, function (t, e, r) {
        const n = r(2),
            i = r(304),
            toBN = t => new n(t.slice(2), 16),
            fromString = t => {
                const e = "0x" + ("0x" === t.slice(0, 2) ? new n(t.slice(2), 16) : new n(t, 10)).toString("hex");
                return "0x0" === e ? "0x" : e
            },
            fromNumber = t => "string" == typeof t ? /^0x/.test(t) ? t : "0x" + t : "0x" + new n(t).toString("hex"),
            toNumber = t => toBN(t).toNumber(),
            bin = t => (e, r) => "0x" + toBN(e)[t](toBN(r)).toString("hex"),
            o = bin("add"),
            a = bin("mul"),
            s = bin("div"),
            u = bin("sub");
        t.exports = {
            toString: t => toBN(t).toString(10),
            fromString: fromString,
            toNumber: toNumber,
            fromNumber: fromNumber,
            toEther: t => toNumber(s(t, fromString("10000000000"))) / 1e8,
            fromEther: t => a(fromNumber(Math.floor(1e8 * t)), fromString("10000000000")),
            toUint256: t => i.pad(32, t),
            add: o,
            mul: a,
            div: s,
            sub: u
        }
    }, function (t, e) {
        t.exports = {
            encode: t => {
                const uint = t => {
                        return (e = t.toString(16)).length % 2 == 0 ? e : "0" + e;
                        var e
                    },
                    length = (t, e) => t < 56 ? uint(e + t) : uint(e + uint(t).length / 2 + 55) + uint(t),
                    dataTree = t => {
                        if ("string" == typeof t) {
                            const e = t.slice(2);
                            return (2 != e.length || e >= "80" ? length(e.length / 2, 128) : "") + e
                        } {
                            const e = t.map(dataTree).join("");
                            return length(e.length / 2, 192) + e
                        }
                    };
                return "0x" + dataTree(t)
            },
            decode: t => {
                let e = 2;
                const parseTree = () => {
                        if (e >= t.length) throw "";
                        const r = t.slice(e, e + 2);
                        return r < "80" ? (e += 2, "0x" + r) : r < "c0" ? parseHex() : parseList()
                    },
                    parseLength = () => {
                        const r = parseInt(t.slice(e, e += 2), 16) % 64;
                        return r < 56 ? r : parseInt(t.slice(e, e += 2 * (r - 55)), 16)
                    },
                    parseHex = () => {
                        const r = parseLength();
                        return "0x" + t.slice(e, e += 2 * r)
                    },
                    parseList = () => {
                        const t = 2 * parseLength() + e;
                        let r = [];
                        for (; e < t;) r.push(parseTree());
                        return r
                    };
                try {
                    return parseTree()
                } catch (t) {
                    return []
                }
            }
        }
    }, function (t, e, r) {
        (function (e) {
            ! function (r) {
                function SHA256(t) {
                    const e = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);
                    let r = 1779033703,
                        n = 3144134277,
                        i = 1013904242,
                        o = 2773480762,
                        a = 1359893119,
                        s = 2600822924,
                        u = 528734635,
                        c = 1541459225;
                    const l = new Uint32Array(64);

                    function blocks(t) {
                        let h = 0,
                            d = t.length;
                        for (; d >= 64;) {
                            let p, m, y, b, g, v = r,
                                w = n,
                                M = i,
                                A = o,
                                x = a,
                                B = s,
                                E = u,
                                k = c;
                            for (m = 0; m < 16; m++) y = h + 4 * m, l[m] = (255 & t[y]) << 24 | (255 & t[y + 1]) << 16 | (255 & t[y + 2]) << 8 | 255 & t[y + 3];
                            for (m = 16; m < 64; m++) p = l[m - 2], b = (p >>> 17 | p << 15) ^ (p >>> 19 | p << 13) ^ p >>> 10, p = l[m - 15], g = (p >>> 7 | p << 25) ^ (p >>> 18 | p << 14) ^ p >>> 3, l[m] = (b + l[m - 7] | 0) + (g + l[m - 16] | 0) | 0;
                            for (m = 0; m < 64; m++) b = (((x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)) + (x & B ^ ~x & E) | 0) + (k + (e[m] + l[m] | 0) | 0) | 0, g = ((v >>> 2 | v << 30) ^ (v >>> 13 | v << 19) ^ (v >>> 22 | v << 10)) + (v & w ^ v & M ^ w & M) | 0, k = E, E = B, B = x, x = A + b | 0, A = M, M = w, w = v, v = b + g | 0;
                            r = r + v | 0, n = n + w | 0, i = i + M | 0, o = o + A | 0, a = a + x | 0, s = s + B | 0, u = u + E | 0, c = c + k | 0, h += 64, d -= 64
                        }
                    }
                    blocks(t);
                    let h, d = t.length % 64,
                        p = t.length / 536870912 | 0,
                        m = t.length << 3,
                        y = d < 56 ? 56 : 120,
                        b = t.slice(t.length - d, t.length);
                    for (b.push(128), h = d + 1; h < y; h++) b.push(0);
                    return b.push(p >>> 24 & 255), b.push(p >>> 16 & 255), b.push(p >>> 8 & 255), b.push(p >>> 0 & 255), b.push(m >>> 24 & 255), b.push(m >>> 16 & 255), b.push(m >>> 8 & 255), b.push(m >>> 0 & 255), blocks(b), [r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, r >>> 0 & 255, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, n >>> 0 & 255, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, i >>> 0 & 255, o >>> 24 & 255, o >>> 16 & 255, o >>> 8 & 255, o >>> 0 & 255, a >>> 24 & 255, a >>> 16 & 255, a >>> 8 & 255, a >>> 0 & 255, s >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, s >>> 0 & 255, u >>> 24 & 255, u >>> 16 & 255, u >>> 8 & 255, u >>> 0 & 255, c >>> 24 & 255, c >>> 16 & 255, c >>> 8 & 255, c >>> 0 & 255]
                }

                function PBKDF2_HMAC_SHA256_OneIter(t, e, r) {
                    t = t.length <= 64 ? t : SHA256(t);
                    const n = 64 + e.length + 4,
                        i = new Array(n),
                        o = new Array(64);
                    let a, s = [];
                    for (a = 0; a < 64; a++) i[a] = 54;
                    for (a = 0; a < t.length; a++) i[a] ^= t[a];
                    for (a = 0; a < e.length; a++) i[64 + a] = e[a];
                    for (a = n - 4; a < n; a++) i[a] = 0;
                    for (a = 0; a < 64; a++) o[a] = 92;
                    for (a = 0; a < t.length; a++) o[a] ^= t[a];

                    function incrementCounter() {
                        for (let t = n - 1; t >= n - 4; t--) {
                            if (i[t]++, i[t] <= 255) return;
                            i[t] = 0
                        }
                    }
                    for (; r >= 32;) incrementCounter(), s = s.concat(SHA256(o.concat(SHA256(i)))), r -= 32;
                    return r > 0 && (incrementCounter(), s = s.concat(SHA256(o.concat(SHA256(i))).slice(0, r))), s
                }

                function blockmix_salsa8(t, e, r, n, i) {
                    let o;
                    for (arraycopy(t, 16 * (2 * r - 1), i, 0, 16), o = 0; o < 2 * r; o++) blockxor(t, 16 * o, i, 16), salsa20_8(i, n), arraycopy(i, 0, t, e + 16 * o, 16);
                    for (o = 0; o < r; o++) arraycopy(t, e + 2 * o * 16, t, 16 * o, 16);
                    for (o = 0; o < r; o++) arraycopy(t, e + 16 * (2 * o + 1), t, 16 * (o + r), 16)
                }

                function R(t, e) {
                    return t << e | t >>> 32 - e
                }

                function salsa20_8(t, e) {
                    arraycopy(t, 0, e, 0, 16);
                    for (let t = 8; t > 0; t -= 2) e[4] ^= R(e[0] + e[12], 7), e[8] ^= R(e[4] + e[0], 9), e[12] ^= R(e[8] + e[4], 13), e[0] ^= R(e[12] + e[8], 18), e[9] ^= R(e[5] + e[1], 7), e[13] ^= R(e[9] + e[5], 9), e[1] ^= R(e[13] + e[9], 13), e[5] ^= R(e[1] + e[13], 18), e[14] ^= R(e[10] + e[6], 7), e[2] ^= R(e[14] + e[10], 9), e[6] ^= R(e[2] + e[14], 13), e[10] ^= R(e[6] + e[2], 18), e[3] ^= R(e[15] + e[11], 7), e[7] ^= R(e[3] + e[15], 9), e[11] ^= R(e[7] + e[3], 13), e[15] ^= R(e[11] + e[7], 18), e[1] ^= R(e[0] + e[3], 7), e[2] ^= R(e[1] + e[0], 9), e[3] ^= R(e[2] + e[1], 13), e[0] ^= R(e[3] + e[2], 18), e[6] ^= R(e[5] + e[4], 7), e[7] ^= R(e[6] + e[5], 9), e[4] ^= R(e[7] + e[6], 13), e[5] ^= R(e[4] + e[7], 18), e[11] ^= R(e[10] + e[9], 7), e[8] ^= R(e[11] + e[10], 9), e[9] ^= R(e[8] + e[11], 13), e[10] ^= R(e[9] + e[8], 18), e[12] ^= R(e[15] + e[14], 7), e[13] ^= R(e[12] + e[15], 9), e[14] ^= R(e[13] + e[12], 13), e[15] ^= R(e[14] + e[13], 18);
                    for (let r = 0; r < 16; ++r) t[r] += e[r]
                }

                function blockxor(t, e, r, n) {
                    for (let i = 0; i < n; i++) r[i] ^= t[e + i]
                }

                function arraycopy(t, e, r, n, i) {
                    for (; i--;) r[n++] = t[e++]
                }

                function checkBufferish(t) {
                    if (!t || "number" != typeof t.length) return !1;
                    for (let e = 0; e < t.length; e++) {
                        const r = t[e];
                        if ("number" != typeof r || r % 1 || r < 0 || r >= 256) return !1
                    }
                    return !0
                }

                function ensureInteger(t, e) {
                    if ("number" != typeof t || t % 1) throw new Error("invalid " + e);
                    return t
                }

                function _scrypt(t, r, n, i, o, a, s) {
                    if (n = ensureInteger(n, "N"), i = ensureInteger(i, "r"), o = ensureInteger(o, "p"), a = ensureInteger(a, "dkLen"), 0 === n || 0 != (n & n - 1)) throw new Error("N must be power of 2");
                    if (n > 2147483647 / 128 / i) throw new Error("N too large");
                    if (i > 2147483647 / 128 / o) throw new Error("r too large");
                    if (!checkBufferish(t)) throw new Error("password must be an array or buffer");
                    if (t = Array.prototype.slice.call(t), !checkBufferish(r)) throw new Error("salt must be an array or buffer");
                    r = Array.prototype.slice.call(r);
                    let u = PBKDF2_HMAC_SHA256_OneIter(t, r, 128 * o * i);
                    const c = new Uint32Array(32 * o * i);
                    for (let t = 0; t < c.length; t++) {
                        const e = 4 * t;
                        c[t] = (255 & u[e + 3]) << 24 | (255 & u[e + 2]) << 16 | (255 & u[e + 1]) << 8 | (255 & u[e + 0]) << 0
                    }
                    const l = new Uint32Array(64 * i),
                        h = new Uint32Array(32 * i * n),
                        d = 32 * i,
                        p = new Uint32Array(16),
                        m = new Uint32Array(16),
                        y = o * n * 2;
                    let b, g, v = 0,
                        w = null,
                        M = !1,
                        A = 0,
                        x = 0;
                    const B = s ? parseInt(1e3 / i) : 4294967295,
                        E = void 0 !== e ? e : setTimeout,
                        incrementalSMix = function () {
                            if (M) return s(new Error("cancelled"), v / y);
                            let e;
                            switch (A) {
                                case 0:
                                    g = 32 * x * i, arraycopy(c, g, l, 0, d), A = 1, b = 0;
                                case 1:
                                    e = n - b, e > B && (e = B);
                                    for (let t = 0; t < e; t++) arraycopy(l, 0, h, (b + t) * d, d), blockmix_salsa8(l, d, i, p, m);
                                    if (b += e, v += e, s) {
                                        const t = parseInt(1e3 * v / y);
                                        if (t !== w) {
                                            if (M = s(null, v / y), M) break;
                                            w = t
                                        }
                                    }
                                    if (b < n) break;
                                    b = 0, A = 2;
                                case 2:
                                    e = n - b, e > B && (e = B);
                                    for (let t = 0; t < e; t++) {
                                        const t = l[16 * (2 * i - 1)] & n - 1;
                                        blockxor(h, t * d, l, d), blockmix_salsa8(l, d, i, p, m)
                                    }
                                    if (b += e, v += e, s) {
                                        const t = parseInt(1e3 * v / y);
                                        if (t !== w) {
                                            if (M = s(null, v / y), M) break;
                                            w = t
                                        }
                                    }
                                    if (b < n) break;
                                    if (arraycopy(l, 0, c, g, d), x++, x < o) {
                                        A = 0;
                                        break
                                    }
                                    u = [];
                                    for (let t = 0; t < c.length; t++) u.push(c[t] >> 0 & 255), u.push(c[t] >> 8 & 255), u.push(c[t] >> 16 & 255), u.push(c[t] >> 24 & 255);
                                    const r = PBKDF2_HMAC_SHA256_OneIter(t, u, a);
                                    return s && s(null, 1, r), r
                            }
                            s && E(incrementalSMix)
                        };
                    if (!s)
                        for (;;) {
                            const t = incrementalSMix();
                            if (null != t) return t
                        }
                    incrementalSMix()
                }
                const n = {
                    scrypt: function (t, e, r, n, i, o, a) {
                        return new Promise((function (s, u) {
                            let c = 0;
                            a && a(0), _scrypt(t, e, r, n, i, o, (function (t, e, r) {
                                if (t) u(t);
                                else if (r) a && 1 !== c && a(1), s(new Uint8Array(r));
                                else if (a && e !== c) return c = e, a(e)
                            }))
                        }))
                    },
                    syncScrypt: function (t, e, r, n, i, o) {
                        return new Uint8Array(_scrypt(t, e, r, n, i, o))
                    }
                };
                t.exports = n
            }()
        }).call(this, r(269).setImmediate)
    }, function (t, e, r) {
        var n = r(842),
            i = r(843),
            o = i;
        o.v1 = n, o.v4 = i, t.exports = o
    }, function (t, e, r) {
        var n, i, o = r(329),
            a = r(330),
            s = 0,
            u = 0;
        t.exports = function v1(t, e, r) {
            var c = e && r || 0,
                l = e || [],
                h = (t = t || {}).node || n,
                d = void 0 !== t.clockseq ? t.clockseq : i;
            if (null == h || null == d) {
                var p = o();
                null == h && (h = n = [1 | p[0], p[1], p[2], p[3], p[4], p[5]]), null == d && (d = i = 16383 & (p[6] << 8 | p[7]))
            }
            var m = void 0 !== t.msecs ? t.msecs : (new Date).getTime(),
                y = void 0 !== t.nsecs ? t.nsecs : u + 1,
                b = m - s + (y - u) / 1e4;
            if (b < 0 && void 0 === t.clockseq && (d = d + 1 & 16383), (b < 0 || m > s) && void 0 === t.nsecs && (y = 0), y >= 1e4) throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
            s = m, u = y, i = d;
            var g = (1e4 * (268435455 & (m += 122192928e5)) + y) % 4294967296;
            l[c++] = g >>> 24 & 255, l[c++] = g >>> 16 & 255, l[c++] = g >>> 8 & 255, l[c++] = 255 & g;
            var v = m / 4294967296 * 1e4 & 268435455;
            l[c++] = v >>> 8 & 255, l[c++] = 255 & v, l[c++] = v >>> 24 & 15 | 16, l[c++] = v >>> 16 & 255, l[c++] = d >>> 8 | 128, l[c++] = 255 & d;
            for (var w = 0; w < 6; ++w) l[c + w] = h[w];
            return e || a(l)
        }
    }, function (t, e, r) {
        var n = r(329),
            i = r(330);
        t.exports = function v4(t, e, r) {
            var o = e && r || 0;
            "string" == typeof t && (e = "binary" === t ? new Array(16) : null, t = null);
            var a = (t = t || {}).random || (t.rng || n)();
            if (a[6] = 15 & a[6] | 64, a[8] = 63 & a[8] | 128, e)
                for (var s = 0; s < 16; ++s) e[o + s] = a[s];
            return e || i(a)
        }
    }, function (t, e, r) {
        (function (t) {
            var n, i = this && this.__extends || (n = function (t, e) {
                    return (n = Object.setPrototypeOf || {
                            __proto__: []
                        }
                        instanceof Array && function (t, e) {
                            t.__proto__ = e
                        } || function (t, e) {
                            for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r])
                        })(t, e)
                }, function (t, e) {
                    function __() {
                        this.constructor = t
                    }
                    n(t, e), t.prototype = null === e ? Object.create(e) : (__.prototype = e.prototype, new __)
                }),
                o = this && this.__assign || function () {
                    return (o = Object.assign || function (t) {
                        for (var e, r = 1, n = arguments.length; r < n; r++)
                            for (var i in e = arguments[r]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                        return t
                    }).apply(this, arguments)
                },
                a = this && this.__read || function (t, e) {
                    var r = "function" == typeof Symbol && t[Symbol.iterator];
                    if (!r) return t;
                    var n, i, o = r.call(t),
                        a = [];
                    try {
                        for (;
                            (void 0 === e || e-- > 0) && !(n = o.next()).done;) a.push(n.value)
                    } catch (t) {
                        i = {
                            error: t
                        }
                    } finally {
                        try {
                            n && !n.done && (r = o.return) && r.call(o)
                        } finally {
                            if (i) throw i.error
                        }
                    }
                    return a
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var s = r(56),
                u = r(70),
                c = r(200),
                l = function (e) {
                    function Transaction(t, r) {
                        var n;
                        void 0 === r && (r = {});
                        var i = e.call(this, o(o({}, t), {
                            type: 0
                        })) || this;
                        if (i.common = i._validateTxV(i.v, r.common), i.gasPrice = new s.BN(s.toBuffer("" === t.gasPrice ? "0x" : t.gasPrice)), i._validateCannotExceedMaxInteger({
                                gasPrice: i.gasPrice
                            }), i.common.gteHardfork("spuriousDragon"))
                            if (i.isSigned()) {
                                var a = i.v,
                                    c = i.common.chainIdBN().muln(2);
                                (a.eq(c.addn(35)) || a.eq(c.addn(36))) && i.activeCapabilities.push(u.Capability.EIP155ReplayProtection)
                            } else i.activeCapabilities.push(u.Capability.EIP155ReplayProtection);
                        return (null === (n = null == r ? void 0 : r.freeze) || void 0 === n || n) && Object.freeze(i), i
                    }
                    return i(Transaction, e), Transaction.fromTxData = function (t, e) {
                        return void 0 === e && (e = {}), new Transaction(t, e)
                    }, Transaction.fromSerializedTx = function (t, e) {
                        void 0 === e && (e = {});
                        var r = s.rlp.decode(t);
                        if (!Array.isArray(r)) throw new Error("Invalid serialized tx input. Must be array");
                        return this.fromValuesArray(r, e)
                    }, Transaction.fromRlpSerializedTx = function (t, e) {
                        return void 0 === e && (e = {}), Transaction.fromSerializedTx(t, e)
                    }, Transaction.fromValuesArray = function (t, e) {
                        if (void 0 === e && (e = {}), 6 !== t.length && 9 !== t.length) throw new Error("Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).");
                        var r = a(t, 9);
                        return new Transaction({
                            nonce: r[0],
                            gasPrice: r[1],
                            gasLimit: r[2],
                            to: r[3],
                            value: r[4],
                            data: r[5],
                            v: r[6],
                            r: r[7],
                            s: r[8]
                        }, e)
                    }, Transaction.prototype.raw = function () {
                        return [s.bnToUnpaddedBuffer(this.nonce), s.bnToUnpaddedBuffer(this.gasPrice), s.bnToUnpaddedBuffer(this.gasLimit), void 0 !== this.to ? this.to.buf : t.from([]), s.bnToUnpaddedBuffer(this.value), this.data, void 0 !== this.v ? s.bnToUnpaddedBuffer(this.v) : t.from([]), void 0 !== this.r ? s.bnToUnpaddedBuffer(this.r) : t.from([]), void 0 !== this.s ? s.bnToUnpaddedBuffer(this.s) : t.from([])]
                    }, Transaction.prototype.serialize = function () {
                        return s.rlp.encode(this.raw())
                    }, Transaction.prototype._getMessageToSign = function () {
                        var e = [s.bnToUnpaddedBuffer(this.nonce), s.bnToUnpaddedBuffer(this.gasPrice), s.bnToUnpaddedBuffer(this.gasLimit), void 0 !== this.to ? this.to.buf : t.from([]), s.bnToUnpaddedBuffer(this.value), this.data];
                        return this.supports(u.Capability.EIP155ReplayProtection) && (e.push(s.toBuffer(this.common.chainIdBN())), e.push(s.unpadBuffer(s.toBuffer(0))), e.push(s.unpadBuffer(s.toBuffer(0)))), e
                    }, Transaction.prototype.getMessageToSign = function (t) {
                        void 0 === t && (t = !0);
                        var e = this._getMessageToSign();
                        return t ? s.rlphash(e) : e
                    }, Transaction.prototype.getUpfrontCost = function () {
                        return this.gasLimit.mul(this.gasPrice).add(this.value)
                    }, Transaction.prototype.hash = function () {
                        return s.rlphash(this.raw())
                    }, Transaction.prototype.getMessageToVerifySignature = function () {
                        if (!this.isSigned()) throw Error("This transaction is not signed");
                        var t = this._getMessageToSign();
                        return s.rlphash(t)
                    }, Transaction.prototype.getSenderPublicKey = function () {
                        var t, e = this.getMessageToVerifySignature();
                        if (this.common.gteHardfork("homestead") && (null === (t = this.s) || void 0 === t ? void 0 : t.gt(u.N_DIV_2))) throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");
                        var r = this.v,
                            n = this.r,
                            i = this.s;
                        try {
                            return s.ecrecover(e, r, s.bnToUnpaddedBuffer(n), s.bnToUnpaddedBuffer(i), this.supports(u.Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : void 0)
                        } catch (t) {
                            throw new Error("Invalid Signature")
                        }
                    }, Transaction.prototype._processSignature = function (t, e, r) {
                        var n = new s.BN(t);
                        this.supports(u.Capability.EIP155ReplayProtection) && n.iadd(this.common.chainIdBN().muln(2).addn(8));
                        var i = {
                            common: this.common
                        };
                        return Transaction.fromTxData({
                            nonce: this.nonce,
                            gasPrice: this.gasPrice,
                            gasLimit: this.gasLimit,
                            to: this.to,
                            value: this.value,
                            data: this.data,
                            v: n,
                            r: new s.BN(e),
                            s: new s.BN(r)
                        }, i)
                    }, Transaction.prototype.toJSON = function () {
                        return {
                            nonce: s.bnToHex(this.nonce),
                            gasPrice: s.bnToHex(this.gasPrice),
                            gasLimit: s.bnToHex(this.gasLimit),
                            to: void 0 !== this.to ? this.to.toString() : void 0,
                            value: s.bnToHex(this.value),
                            data: "0x" + this.data.toString("hex"),
                            v: void 0 !== this.v ? s.bnToHex(this.v) : void 0,
                            r: void 0 !== this.r ? s.bnToHex(this.r) : void 0,
                            s: void 0 !== this.s ? s.bnToHex(this.s) : void 0
                        }
                    }, Transaction.prototype._validateTxV = function (t, e) {
                        var r;
                        if (void 0 !== t && !t.eqn(0) && (!e || e.gteHardfork("spuriousDragon")) && !t.eqn(27) && !t.eqn(28))
                            if (e) {
                                var n = e.chainIdBN().muln(2);
                                if (!(t.eq(n.addn(35)) || t.eq(n.addn(36)))) throw new Error("Incompatible EIP155-based V " + t.toString() + " and chain id " + e.chainIdBN().toString() + ". See the Common parameter of the Transaction constructor to set the chain id.")
                            } else {
                                var i = void 0;
                                i = t.subn(35).isEven() ? 35 : 36, r = t.subn(i).divn(2)
                            } return this._getCommon(e, r)
                    }, Transaction.prototype._unsignedTxImplementsEIP155 = function () {
                        return this.common.gteHardfork("spuriousDragon")
                    }, Transaction.prototype._signedTxImplementsEIP155 = function () {
                        if (!this.isSigned()) throw Error("This transaction is not signed");
                        var t = this.common.gteHardfork("spuriousDragon"),
                            e = this.v,
                            r = this.common.chainIdBN().muln(2);
                        return (e.eq(r.addn(35)) || e.eq(r.addn(36))) && t
                    }, Transaction
                }(c.BaseTransaction);
            e.default = l
        }).call(this, r(0).Buffer)
    }, function (t, e) {}, function (t, e, r) {
        (function (t) {
            ! function (t, e) {
                function assert(t, e) {
                    if (!t) throw new Error(e || "Assertion failed")
                }

                function inherits(t, e) {
                    t.super_ = e;
                    var TempCtor = function () {};
                    TempCtor.prototype = e.prototype, t.prototype = new TempCtor, t.prototype.constructor = t
                }

                function BN(t, e, r) {
                    if (BN.isBN(t)) return t;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t && ("le" !== e && "be" !== e || (r = e, e = 10), this._init(t || 0, e || 10, r || "be"))
                }
                var n;
                "object" == typeof t ? t.exports = BN : e.BN = BN, BN.BN = BN, BN.wordSize = 26;
                try {
                    n = r(847).Buffer
                } catch (t) {}

                function parseHex(t, e, r) {
                    for (var n = 0, i = Math.min(t.length, r), o = e; o < i; o++) {
                        var a = t.charCodeAt(o) - 48;
                        n <<= 4, n |= a >= 49 && a <= 54 ? a - 49 + 10 : a >= 17 && a <= 22 ? a - 17 + 10 : 15 & a
                    }
                    return n
                }

                function parseBase(t, e, r, n) {
                    for (var i = 0, o = Math.min(t.length, r), a = e; a < o; a++) {
                        var s = t.charCodeAt(a) - 48;
                        i *= n, i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s
                    }
                    return i
                }
                BN.isBN = function isBN(t) {
                    return t instanceof BN || null !== t && "object" == typeof t && t.constructor.wordSize === BN.wordSize && Array.isArray(t.words)
                }, BN.max = function max(t, e) {
                    return t.cmp(e) > 0 ? t : e
                }, BN.min = function min(t, e) {
                    return t.cmp(e) < 0 ? t : e
                }, BN.prototype._init = function init(t, e, r) {
                    if ("number" == typeof t) return this._initNumber(t, e, r);
                    if ("object" == typeof t) return this._initArray(t, e, r);
                    "hex" === e && (e = 16), assert(e === (0 | e) && e >= 2 && e <= 36);
                    var n = 0;
                    "-" === (t = t.toString().replace(/\s+/g, ""))[0] && n++, 16 === e ? this._parseHex(t, n) : this._parseBase(t, e, n), "-" === t[0] && (this.negative = 1), this.strip(), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initNumber = function _initNumber(t, e, r) {
                    t < 0 && (this.negative = 1, t = -t), t < 67108864 ? (this.words = [67108863 & t], this.length = 1) : t < 4503599627370496 ? (this.words = [67108863 & t, t / 67108864 & 67108863], this.length = 2) : (assert(t < 9007199254740992), this.words = [67108863 & t, t / 67108864 & 67108863, 1], this.length = 3), "le" === r && this._initArray(this.toArray(), e, r)
                }, BN.prototype._initArray = function _initArray(t, e, r) {
                    if (assert("number" == typeof t.length), t.length <= 0) return this.words = [0], this.length = 1, this;
                    this.length = Math.ceil(t.length / 3), this.words = new Array(this.length);
                    for (var n = 0; n < this.length; n++) this.words[n] = 0;
                    var i, o, a = 0;
                    if ("be" === r)
                        for (n = t.length - 1, i = 0; n >= 0; n -= 3) o = t[n] | t[n - 1] << 8 | t[n - 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    else if ("le" === r)
                        for (n = 0, i = 0; n < t.length; n += 3) o = t[n] | t[n + 1] << 8 | t[n + 2] << 16, this.words[i] |= o << a & 67108863, this.words[i + 1] = o >>> 26 - a & 67108863, (a += 24) >= 26 && (a -= 26, i++);
                    return this.strip()
                }, BN.prototype._parseHex = function _parseHex(t, e) {
                    this.length = Math.ceil((t.length - e) / 6), this.words = new Array(this.length);
                    for (var r = 0; r < this.length; r++) this.words[r] = 0;
                    var n, i, o = 0;
                    for (r = t.length - 6, n = 0; r >= e; r -= 6) i = parseHex(t, r, r + 6), this.words[n] |= i << o & 67108863, this.words[n + 1] |= i >>> 26 - o & 4194303, (o += 24) >= 26 && (o -= 26, n++);
                    r + 6 !== e && (i = parseHex(t, e, r + 6), this.words[n] |= i << o & 67108863, this.words[n + 1] |= i >>> 26 - o & 4194303), this.strip()
                }, BN.prototype._parseBase = function _parseBase(t, e, r) {
                    this.words = [0], this.length = 1;
                    for (var n = 0, i = 1; i <= 67108863; i *= e) n++;
                    n--, i = i / e | 0;
                    for (var o = t.length - r, a = o % n, s = Math.min(o, o - a) + r, u = 0, c = r; c < s; c += n) u = parseBase(t, c, c + n, e), this.imuln(i), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                    if (0 !== a) {
                        var l = 1;
                        for (u = parseBase(t, c, t.length, e), c = 0; c < a; c++) l *= e;
                        this.imuln(l), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                    }
                }, BN.prototype.copy = function copy(t) {
                    t.words = new Array(this.length);
                    for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                    t.length = this.length, t.negative = this.negative, t.red = this.red
                }, BN.prototype.clone = function clone() {
                    var t = new BN(null);
                    return this.copy(t), t
                }, BN.prototype._expand = function _expand(t) {
                    for (; this.length < t;) this.words[this.length++] = 0;
                    return this
                }, BN.prototype.strip = function strip() {
                    for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                    return this._normSign()
                }, BN.prototype._normSign = function _normSign() {
                    return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                }, BN.prototype.inspect = function inspect() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                };
                var i = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    o = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    a = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function smallMulTo(t, e, r) {
                    r.negative = e.negative ^ t.negative;
                    var n = t.length + e.length | 0;
                    r.length = n, n = n - 1 | 0;
                    var i = 0 | t.words[0],
                        o = 0 | e.words[0],
                        a = i * o,
                        s = 67108863 & a,
                        u = a / 67108864 | 0;
                    r.words[0] = s;
                    for (var c = 1; c < n; c++) {
                        for (var l = u >>> 26, h = 67108863 & u, d = Math.min(c, e.length - 1), p = Math.max(0, c - t.length + 1); p <= d; p++) {
                            var m = c - p | 0;
                            l += (a = (i = 0 | t.words[m]) * (o = 0 | e.words[p]) + h) / 67108864 | 0, h = 67108863 & a
                        }
                        r.words[c] = 0 | h, u = 0 | l
                    }
                    return 0 !== u ? r.words[c] = 0 | u : r.length--, r.strip()
                }
                BN.prototype.toString = function toString(t, e) {
                    var r;
                    if (e = 0 | e || 1, 16 === (t = t || 10) || "hex" === t) {
                        r = "";
                        for (var n = 0, s = 0, u = 0; u < this.length; u++) {
                            var c = this.words[u],
                                l = (16777215 & (c << n | s)).toString(16);
                            r = 0 !== (s = c >>> 24 - n & 16777215) || u !== this.length - 1 ? i[6 - l.length] + l + r : l + r, (n += 2) >= 26 && (n -= 26, u--)
                        }
                        for (0 !== s && (r = s.toString(16) + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    if (t === (0 | t) && t >= 2 && t <= 36) {
                        var h = o[t],
                            d = a[t];
                        r = "";
                        var p = this.clone();
                        for (p.negative = 0; !p.isZero();) {
                            var m = p.modn(d).toString(t);
                            r = (p = p.idivn(d)).isZero() ? m + r : i[h - m.length] + m + r
                        }
                        for (this.isZero() && (r = "0" + r); r.length % e != 0;) r = "0" + r;
                        return 0 !== this.negative && (r = "-" + r), r
                    }
                    assert(!1, "Base should be between 2 and 36")
                }, BN.prototype.toNumber = function toNumber() {
                    var t = this.words[0];
                    return 2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t : t
                }, BN.prototype.toJSON = function toJSON() {
                    return this.toString(16)
                }, BN.prototype.toBuffer = function toBuffer(t, e) {
                    return assert(void 0 !== n), this.toArrayLike(n, t, e)
                }, BN.prototype.toArray = function toArray(t, e) {
                    return this.toArrayLike(Array, t, e)
                }, BN.prototype.toArrayLike = function toArrayLike(t, e, r) {
                    var n = this.byteLength(),
                        i = r || Math.max(1, n);
                    assert(n <= i, "byte array longer than desired length"), assert(i > 0, "Requested array length <= 0"), this.strip();
                    var o, a, s = "le" === e,
                        u = new t(i),
                        c = this.clone();
                    if (s) {
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[a] = o;
                        for (; a < i; a++) u[a] = 0
                    } else {
                        for (a = 0; a < i - n; a++) u[a] = 0;
                        for (a = 0; !c.isZero(); a++) o = c.andln(255), c.iushrn(8), u[i - a - 1] = o
                    }
                    return u
                }, Math.clz32 ? BN.prototype._countBits = function _countBits(t) {
                    return 32 - Math.clz32(t)
                } : BN.prototype._countBits = function _countBits(t) {
                    var e = t,
                        r = 0;
                    return e >= 4096 && (r += 13, e >>>= 13), e >= 64 && (r += 7, e >>>= 7), e >= 8 && (r += 4, e >>>= 4), e >= 2 && (r += 2, e >>>= 2), r + e
                }, BN.prototype._zeroBits = function _zeroBits(t) {
                    if (0 === t) return 26;
                    var e = t,
                        r = 0;
                    return 0 == (8191 & e) && (r += 13, e >>>= 13), 0 == (127 & e) && (r += 7, e >>>= 7), 0 == (15 & e) && (r += 4, e >>>= 4), 0 == (3 & e) && (r += 2, e >>>= 2), 0 == (1 & e) && r++, r
                }, BN.prototype.bitLength = function bitLength() {
                    var t = this.words[this.length - 1],
                        e = this._countBits(t);
                    return 26 * (this.length - 1) + e
                }, BN.prototype.zeroBits = function zeroBits() {
                    if (this.isZero()) return 0;
                    for (var t = 0, e = 0; e < this.length; e++) {
                        var r = this._zeroBits(this.words[e]);
                        if (t += r, 26 !== r) break
                    }
                    return t
                }, BN.prototype.byteLength = function byteLength() {
                    return Math.ceil(this.bitLength() / 8)
                }, BN.prototype.toTwos = function toTwos(t) {
                    return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone()
                }, BN.prototype.fromTwos = function fromTwos(t) {
                    return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone()
                }, BN.prototype.isNeg = function isNeg() {
                    return 0 !== this.negative
                }, BN.prototype.neg = function neg() {
                    return this.clone().ineg()
                }, BN.prototype.ineg = function ineg() {
                    return this.isZero() || (this.negative ^= 1), this
                }, BN.prototype.iuor = function iuor(t) {
                    for (; this.length < t.length;) this.words[this.length++] = 0;
                    for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                    return this.strip()
                }, BN.prototype.ior = function ior(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuor(t)
                }, BN.prototype.or = function or(t) {
                    return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this)
                }, BN.prototype.uor = function uor(t) {
                    return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this)
                }, BN.prototype.iuand = function iuand(t) {
                    var e;
                    e = this.length > t.length ? t : this;
                    for (var r = 0; r < e.length; r++) this.words[r] = this.words[r] & t.words[r];
                    return this.length = e.length, this.strip()
                }, BN.prototype.iand = function iand(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuand(t)
                }, BN.prototype.and = function and(t) {
                    return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this)
                }, BN.prototype.uand = function uand(t) {
                    return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this)
                }, BN.prototype.iuxor = function iuxor(t) {
                    var e, r;
                    this.length > t.length ? (e = this, r = t) : (e = t, r = this);
                    for (var n = 0; n < r.length; n++) this.words[n] = e.words[n] ^ r.words[n];
                    if (this !== e)
                        for (; n < e.length; n++) this.words[n] = e.words[n];
                    return this.length = e.length, this.strip()
                }, BN.prototype.ixor = function ixor(t) {
                    return assert(0 == (this.negative | t.negative)), this.iuxor(t)
                }, BN.prototype.xor = function xor(t) {
                    return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this)
                }, BN.prototype.uxor = function uxor(t) {
                    return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this)
                }, BN.prototype.inotn = function inotn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = 0 | Math.ceil(t / 26),
                        r = t % 26;
                    this._expand(e), r > 0 && e--;
                    for (var n = 0; n < e; n++) this.words[n] = 67108863 & ~this.words[n];
                    return r > 0 && (this.words[n] = ~this.words[n] & 67108863 >> 26 - r), this.strip()
                }, BN.prototype.notn = function notn(t) {
                    return this.clone().inotn(t)
                }, BN.prototype.setn = function setn(t, e) {
                    assert("number" == typeof t && t >= 0);
                    var r = t / 26 | 0,
                        n = t % 26;
                    return this._expand(r + 1), this.words[r] = e ? this.words[r] | 1 << n : this.words[r] & ~(1 << n), this.strip()
                }, BN.prototype.iadd = function iadd(t) {
                    var e, r, n;
                    if (0 !== this.negative && 0 === t.negative) return this.negative = 0, e = this.isub(t), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== t.negative) return t.negative = 0, e = this.isub(t), t.negative = 1, e._normSign();
                    this.length > t.length ? (r = this, n = t) : (r = t, n = this);
                    for (var i = 0, o = 0; o < n.length; o++) e = (0 | r.words[o]) + (0 | n.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    for (; 0 !== i && o < r.length; o++) e = (0 | r.words[o]) + i, this.words[o] = 67108863 & e, i = e >>> 26;
                    if (this.length = r.length, 0 !== i) this.words[this.length] = i, this.length++;
                    else if (r !== this)
                        for (; o < r.length; o++) this.words[o] = r.words[o];
                    return this
                }, BN.prototype.add = function add(t) {
                    var e;
                    return 0 !== t.negative && 0 === this.negative ? (t.negative = 0, e = this.sub(t), t.negative ^= 1, e) : 0 === t.negative && 0 !== this.negative ? (this.negative = 0, e = t.sub(this), this.negative = 1, e) : this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this)
                }, BN.prototype.isub = function isub(t) {
                    if (0 !== t.negative) {
                        t.negative = 0;
                        var e = this.iadd(t);
                        return t.negative = 1, e._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(t), this.negative = 1, this._normSign();
                    var r, n, i = this.cmp(t);
                    if (0 === i) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    i > 0 ? (r = this, n = t) : (r = t, n = this);
                    for (var o = 0, a = 0; a < n.length; a++) o = (e = (0 | r.words[a]) - (0 | n.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    for (; 0 !== o && a < r.length; a++) o = (e = (0 | r.words[a]) + o) >> 26, this.words[a] = 67108863 & e;
                    if (0 === o && a < r.length && r !== this)
                        for (; a < r.length; a++) this.words[a] = r.words[a];
                    return this.length = Math.max(this.length, a), r !== this && (this.negative = 1), this.strip()
                }, BN.prototype.sub = function sub(t) {
                    return this.clone().isub(t)
                };
                var s = function comb10MulTo(t, e, r) {
                    var n, i, o, a = t.words,
                        s = e.words,
                        u = r.words,
                        c = 0,
                        l = 0 | a[0],
                        h = 8191 & l,
                        d = l >>> 13,
                        p = 0 | a[1],
                        m = 8191 & p,
                        y = p >>> 13,
                        b = 0 | a[2],
                        g = 8191 & b,
                        v = b >>> 13,
                        w = 0 | a[3],
                        M = 8191 & w,
                        A = w >>> 13,
                        x = 0 | a[4],
                        B = 8191 & x,
                        E = x >>> 13,
                        k = 0 | a[5],
                        N = 8191 & k,
                        T = k >>> 13,
                        C = 0 | a[6],
                        P = 8191 & C,
                        I = C >>> 13,
                        O = 0 | a[7],
                        D = 8191 & O,
                        j = O >>> 13,
                        L = 0 | a[8],
                        U = 8191 & L,
                        H = L >>> 13,
                        q = 0 | a[9],
                        z = 8191 & q,
                        G = q >>> 13,
                        V = 0 | s[0],
                        J = 8191 & V,
                        W = V >>> 13,
                        Z = 0 | s[1],
                        X = 8191 & Z,
                        Y = Z >>> 13,
                        $ = 0 | s[2],
                        Q = 8191 & $,
                        tt = $ >>> 13,
                        et = 0 | s[3],
                        rt = 8191 & et,
                        nt = et >>> 13,
                        it = 0 | s[4],
                        ot = 8191 & it,
                        st = it >>> 13,
                        ut = 0 | s[5],
                        ct = 8191 & ut,
                        ht = ut >>> 13,
                        dt = 0 | s[6],
                        pt = 8191 & dt,
                        mt = dt >>> 13,
                        yt = 0 | s[7],
                        bt = 8191 & yt,
                        vt = yt >>> 13,
                        wt = 0 | s[8],
                        Mt = 8191 & wt,
                        _t = wt >>> 13,
                        At = 0 | s[9],
                        xt = 8191 & At,
                        Bt = At >>> 13;
                    r.negative = t.negative ^ e.negative, r.length = 19;
                    var Et = (c + (n = Math.imul(h, J)) | 0) + ((8191 & (i = (i = Math.imul(h, W)) + Math.imul(d, J) | 0)) << 13) | 0;
                    c = ((o = Math.imul(d, W)) + (i >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n = Math.imul(m, J), i = (i = Math.imul(m, W)) + Math.imul(y, J) | 0, o = Math.imul(y, W);
                    var kt = (c + (n = n + Math.imul(h, X) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Y) | 0) + Math.imul(d, X) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Y) | 0) + (i >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n = Math.imul(g, J), i = (i = Math.imul(g, W)) + Math.imul(v, J) | 0, o = Math.imul(v, W), n = n + Math.imul(m, X) | 0, i = (i = i + Math.imul(m, Y) | 0) + Math.imul(y, X) | 0, o = o + Math.imul(y, Y) | 0;
                    var Nt = (c + (n = n + Math.imul(h, Q) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, tt) | 0) + Math.imul(d, Q) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, tt) | 0) + (i >>> 13) | 0) + (Nt >>> 26) | 0, Nt &= 67108863, n = Math.imul(M, J), i = (i = Math.imul(M, W)) + Math.imul(A, J) | 0, o = Math.imul(A, W), n = n + Math.imul(g, X) | 0, i = (i = i + Math.imul(g, Y) | 0) + Math.imul(v, X) | 0, o = o + Math.imul(v, Y) | 0, n = n + Math.imul(m, Q) | 0, i = (i = i + Math.imul(m, tt) | 0) + Math.imul(y, Q) | 0, o = o + Math.imul(y, tt) | 0;
                    var St = (c + (n = n + Math.imul(h, rt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, nt) | 0) + Math.imul(d, rt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, nt) | 0) + (i >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n = Math.imul(B, J), i = (i = Math.imul(B, W)) + Math.imul(E, J) | 0, o = Math.imul(E, W), n = n + Math.imul(M, X) | 0, i = (i = i + Math.imul(M, Y) | 0) + Math.imul(A, X) | 0, o = o + Math.imul(A, Y) | 0, n = n + Math.imul(g, Q) | 0, i = (i = i + Math.imul(g, tt) | 0) + Math.imul(v, Q) | 0, o = o + Math.imul(v, tt) | 0, n = n + Math.imul(m, rt) | 0, i = (i = i + Math.imul(m, nt) | 0) + Math.imul(y, rt) | 0, o = o + Math.imul(y, nt) | 0;
                    var Tt = (c + (n = n + Math.imul(h, ot) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, st) | 0) + Math.imul(d, ot) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, st) | 0) + (i >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863, n = Math.imul(N, J), i = (i = Math.imul(N, W)) + Math.imul(T, J) | 0, o = Math.imul(T, W), n = n + Math.imul(B, X) | 0, i = (i = i + Math.imul(B, Y) | 0) + Math.imul(E, X) | 0, o = o + Math.imul(E, Y) | 0, n = n + Math.imul(M, Q) | 0, i = (i = i + Math.imul(M, tt) | 0) + Math.imul(A, Q) | 0, o = o + Math.imul(A, tt) | 0, n = n + Math.imul(g, rt) | 0, i = (i = i + Math.imul(g, nt) | 0) + Math.imul(v, rt) | 0, o = o + Math.imul(v, nt) | 0, n = n + Math.imul(m, ot) | 0, i = (i = i + Math.imul(m, st) | 0) + Math.imul(y, ot) | 0, o = o + Math.imul(y, st) | 0;
                    var Ct = (c + (n = n + Math.imul(h, ct) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, ht) | 0) + Math.imul(d, ct) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, ht) | 0) + (i >>> 13) | 0) + (Ct >>> 26) | 0, Ct &= 67108863, n = Math.imul(P, J), i = (i = Math.imul(P, W)) + Math.imul(I, J) | 0, o = Math.imul(I, W), n = n + Math.imul(N, X) | 0, i = (i = i + Math.imul(N, Y) | 0) + Math.imul(T, X) | 0, o = o + Math.imul(T, Y) | 0, n = n + Math.imul(B, Q) | 0, i = (i = i + Math.imul(B, tt) | 0) + Math.imul(E, Q) | 0, o = o + Math.imul(E, tt) | 0, n = n + Math.imul(M, rt) | 0, i = (i = i + Math.imul(M, nt) | 0) + Math.imul(A, rt) | 0, o = o + Math.imul(A, nt) | 0, n = n + Math.imul(g, ot) | 0, i = (i = i + Math.imul(g, st) | 0) + Math.imul(v, ot) | 0, o = o + Math.imul(v, st) | 0, n = n + Math.imul(m, ct) | 0, i = (i = i + Math.imul(m, ht) | 0) + Math.imul(y, ct) | 0, o = o + Math.imul(y, ht) | 0;
                    var Pt = (c + (n = n + Math.imul(h, pt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, mt) | 0) + Math.imul(d, pt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, mt) | 0) + (i >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n = Math.imul(D, J), i = (i = Math.imul(D, W)) + Math.imul(j, J) | 0, o = Math.imul(j, W), n = n + Math.imul(P, X) | 0, i = (i = i + Math.imul(P, Y) | 0) + Math.imul(I, X) | 0, o = o + Math.imul(I, Y) | 0, n = n + Math.imul(N, Q) | 0, i = (i = i + Math.imul(N, tt) | 0) + Math.imul(T, Q) | 0, o = o + Math.imul(T, tt) | 0, n = n + Math.imul(B, rt) | 0, i = (i = i + Math.imul(B, nt) | 0) + Math.imul(E, rt) | 0, o = o + Math.imul(E, nt) | 0, n = n + Math.imul(M, ot) | 0, i = (i = i + Math.imul(M, st) | 0) + Math.imul(A, ot) | 0, o = o + Math.imul(A, st) | 0, n = n + Math.imul(g, ct) | 0, i = (i = i + Math.imul(g, ht) | 0) + Math.imul(v, ct) | 0, o = o + Math.imul(v, ht) | 0, n = n + Math.imul(m, pt) | 0, i = (i = i + Math.imul(m, mt) | 0) + Math.imul(y, pt) | 0, o = o + Math.imul(y, mt) | 0;
                    var It = (c + (n = n + Math.imul(h, bt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, vt) | 0) + Math.imul(d, bt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, vt) | 0) + (i >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n = Math.imul(U, J), i = (i = Math.imul(U, W)) + Math.imul(H, J) | 0, o = Math.imul(H, W), n = n + Math.imul(D, X) | 0, i = (i = i + Math.imul(D, Y) | 0) + Math.imul(j, X) | 0, o = o + Math.imul(j, Y) | 0, n = n + Math.imul(P, Q) | 0, i = (i = i + Math.imul(P, tt) | 0) + Math.imul(I, Q) | 0, o = o + Math.imul(I, tt) | 0, n = n + Math.imul(N, rt) | 0, i = (i = i + Math.imul(N, nt) | 0) + Math.imul(T, rt) | 0, o = o + Math.imul(T, nt) | 0, n = n + Math.imul(B, ot) | 0, i = (i = i + Math.imul(B, st) | 0) + Math.imul(E, ot) | 0, o = o + Math.imul(E, st) | 0, n = n + Math.imul(M, ct) | 0, i = (i = i + Math.imul(M, ht) | 0) + Math.imul(A, ct) | 0, o = o + Math.imul(A, ht) | 0, n = n + Math.imul(g, pt) | 0, i = (i = i + Math.imul(g, mt) | 0) + Math.imul(v, pt) | 0, o = o + Math.imul(v, mt) | 0, n = n + Math.imul(m, bt) | 0, i = (i = i + Math.imul(m, vt) | 0) + Math.imul(y, bt) | 0, o = o + Math.imul(y, vt) | 0;
                    var Ot = (c + (n = n + Math.imul(h, Mt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, _t) | 0) + Math.imul(d, Mt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, _t) | 0) + (i >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n = Math.imul(z, J), i = (i = Math.imul(z, W)) + Math.imul(G, J) | 0, o = Math.imul(G, W), n = n + Math.imul(U, X) | 0, i = (i = i + Math.imul(U, Y) | 0) + Math.imul(H, X) | 0, o = o + Math.imul(H, Y) | 0, n = n + Math.imul(D, Q) | 0, i = (i = i + Math.imul(D, tt) | 0) + Math.imul(j, Q) | 0, o = o + Math.imul(j, tt) | 0, n = n + Math.imul(P, rt) | 0, i = (i = i + Math.imul(P, nt) | 0) + Math.imul(I, rt) | 0, o = o + Math.imul(I, nt) | 0, n = n + Math.imul(N, ot) | 0, i = (i = i + Math.imul(N, st) | 0) + Math.imul(T, ot) | 0, o = o + Math.imul(T, st) | 0, n = n + Math.imul(B, ct) | 0, i = (i = i + Math.imul(B, ht) | 0) + Math.imul(E, ct) | 0, o = o + Math.imul(E, ht) | 0, n = n + Math.imul(M, pt) | 0, i = (i = i + Math.imul(M, mt) | 0) + Math.imul(A, pt) | 0, o = o + Math.imul(A, mt) | 0, n = n + Math.imul(g, bt) | 0, i = (i = i + Math.imul(g, vt) | 0) + Math.imul(v, bt) | 0, o = o + Math.imul(v, vt) | 0, n = n + Math.imul(m, Mt) | 0, i = (i = i + Math.imul(m, _t) | 0) + Math.imul(y, Mt) | 0, o = o + Math.imul(y, _t) | 0;
                    var Rt = (c + (n = n + Math.imul(h, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(h, Bt) | 0) + Math.imul(d, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(d, Bt) | 0) + (i >>> 13) | 0) + (Rt >>> 26) | 0, Rt &= 67108863, n = Math.imul(z, X), i = (i = Math.imul(z, Y)) + Math.imul(G, X) | 0, o = Math.imul(G, Y), n = n + Math.imul(U, Q) | 0, i = (i = i + Math.imul(U, tt) | 0) + Math.imul(H, Q) | 0, o = o + Math.imul(H, tt) | 0, n = n + Math.imul(D, rt) | 0, i = (i = i + Math.imul(D, nt) | 0) + Math.imul(j, rt) | 0, o = o + Math.imul(j, nt) | 0, n = n + Math.imul(P, ot) | 0, i = (i = i + Math.imul(P, st) | 0) + Math.imul(I, ot) | 0, o = o + Math.imul(I, st) | 0, n = n + Math.imul(N, ct) | 0, i = (i = i + Math.imul(N, ht) | 0) + Math.imul(T, ct) | 0, o = o + Math.imul(T, ht) | 0, n = n + Math.imul(B, pt) | 0, i = (i = i + Math.imul(B, mt) | 0) + Math.imul(E, pt) | 0, o = o + Math.imul(E, mt) | 0, n = n + Math.imul(M, bt) | 0, i = (i = i + Math.imul(M, vt) | 0) + Math.imul(A, bt) | 0, o = o + Math.imul(A, vt) | 0, n = n + Math.imul(g, Mt) | 0, i = (i = i + Math.imul(g, _t) | 0) + Math.imul(v, Mt) | 0, o = o + Math.imul(v, _t) | 0;
                    var Ft = (c + (n = n + Math.imul(m, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(m, Bt) | 0) + Math.imul(y, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(y, Bt) | 0) + (i >>> 13) | 0) + (Ft >>> 26) | 0, Ft &= 67108863, n = Math.imul(z, Q), i = (i = Math.imul(z, tt)) + Math.imul(G, Q) | 0, o = Math.imul(G, tt), n = n + Math.imul(U, rt) | 0, i = (i = i + Math.imul(U, nt) | 0) + Math.imul(H, rt) | 0, o = o + Math.imul(H, nt) | 0, n = n + Math.imul(D, ot) | 0, i = (i = i + Math.imul(D, st) | 0) + Math.imul(j, ot) | 0, o = o + Math.imul(j, st) | 0, n = n + Math.imul(P, ct) | 0, i = (i = i + Math.imul(P, ht) | 0) + Math.imul(I, ct) | 0, o = o + Math.imul(I, ht) | 0, n = n + Math.imul(N, pt) | 0, i = (i = i + Math.imul(N, mt) | 0) + Math.imul(T, pt) | 0, o = o + Math.imul(T, mt) | 0, n = n + Math.imul(B, bt) | 0, i = (i = i + Math.imul(B, vt) | 0) + Math.imul(E, bt) | 0, o = o + Math.imul(E, vt) | 0, n = n + Math.imul(M, Mt) | 0, i = (i = i + Math.imul(M, _t) | 0) + Math.imul(A, Mt) | 0, o = o + Math.imul(A, _t) | 0;
                    var Dt = (c + (n = n + Math.imul(g, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(g, Bt) | 0) + Math.imul(v, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(v, Bt) | 0) + (i >>> 13) | 0) + (Dt >>> 26) | 0, Dt &= 67108863, n = Math.imul(z, rt), i = (i = Math.imul(z, nt)) + Math.imul(G, rt) | 0, o = Math.imul(G, nt), n = n + Math.imul(U, ot) | 0, i = (i = i + Math.imul(U, st) | 0) + Math.imul(H, ot) | 0, o = o + Math.imul(H, st) | 0, n = n + Math.imul(D, ct) | 0, i = (i = i + Math.imul(D, ht) | 0) + Math.imul(j, ct) | 0, o = o + Math.imul(j, ht) | 0, n = n + Math.imul(P, pt) | 0, i = (i = i + Math.imul(P, mt) | 0) + Math.imul(I, pt) | 0, o = o + Math.imul(I, mt) | 0, n = n + Math.imul(N, bt) | 0, i = (i = i + Math.imul(N, vt) | 0) + Math.imul(T, bt) | 0, o = o + Math.imul(T, vt) | 0, n = n + Math.imul(B, Mt) | 0, i = (i = i + Math.imul(B, _t) | 0) + Math.imul(E, Mt) | 0, o = o + Math.imul(E, _t) | 0;
                    var jt = (c + (n = n + Math.imul(M, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(M, Bt) | 0) + Math.imul(A, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(A, Bt) | 0) + (i >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n = Math.imul(z, ot), i = (i = Math.imul(z, st)) + Math.imul(G, ot) | 0, o = Math.imul(G, st), n = n + Math.imul(U, ct) | 0, i = (i = i + Math.imul(U, ht) | 0) + Math.imul(H, ct) | 0, o = o + Math.imul(H, ht) | 0, n = n + Math.imul(D, pt) | 0, i = (i = i + Math.imul(D, mt) | 0) + Math.imul(j, pt) | 0, o = o + Math.imul(j, mt) | 0, n = n + Math.imul(P, bt) | 0, i = (i = i + Math.imul(P, vt) | 0) + Math.imul(I, bt) | 0, o = o + Math.imul(I, vt) | 0, n = n + Math.imul(N, Mt) | 0, i = (i = i + Math.imul(N, _t) | 0) + Math.imul(T, Mt) | 0, o = o + Math.imul(T, _t) | 0;
                    var Lt = (c + (n = n + Math.imul(B, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(B, Bt) | 0) + Math.imul(E, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(E, Bt) | 0) + (i >>> 13) | 0) + (Lt >>> 26) | 0, Lt &= 67108863, n = Math.imul(z, ct), i = (i = Math.imul(z, ht)) + Math.imul(G, ct) | 0, o = Math.imul(G, ht), n = n + Math.imul(U, pt) | 0, i = (i = i + Math.imul(U, mt) | 0) + Math.imul(H, pt) | 0, o = o + Math.imul(H, mt) | 0, n = n + Math.imul(D, bt) | 0, i = (i = i + Math.imul(D, vt) | 0) + Math.imul(j, bt) | 0, o = o + Math.imul(j, vt) | 0, n = n + Math.imul(P, Mt) | 0, i = (i = i + Math.imul(P, _t) | 0) + Math.imul(I, Mt) | 0, o = o + Math.imul(I, _t) | 0;
                    var Ut = (c + (n = n + Math.imul(N, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(N, Bt) | 0) + Math.imul(T, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(T, Bt) | 0) + (i >>> 13) | 0) + (Ut >>> 26) | 0, Ut &= 67108863, n = Math.imul(z, pt), i = (i = Math.imul(z, mt)) + Math.imul(G, pt) | 0, o = Math.imul(G, mt), n = n + Math.imul(U, bt) | 0, i = (i = i + Math.imul(U, vt) | 0) + Math.imul(H, bt) | 0, o = o + Math.imul(H, vt) | 0, n = n + Math.imul(D, Mt) | 0, i = (i = i + Math.imul(D, _t) | 0) + Math.imul(j, Mt) | 0, o = o + Math.imul(j, _t) | 0;
                    var Ht = (c + (n = n + Math.imul(P, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(P, Bt) | 0) + Math.imul(I, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(I, Bt) | 0) + (i >>> 13) | 0) + (Ht >>> 26) | 0, Ht &= 67108863, n = Math.imul(z, bt), i = (i = Math.imul(z, vt)) + Math.imul(G, bt) | 0, o = Math.imul(G, vt), n = n + Math.imul(U, Mt) | 0, i = (i = i + Math.imul(U, _t) | 0) + Math.imul(H, Mt) | 0, o = o + Math.imul(H, _t) | 0;
                    var qt = (c + (n = n + Math.imul(D, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(D, Bt) | 0) + Math.imul(j, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(j, Bt) | 0) + (i >>> 13) | 0) + (qt >>> 26) | 0, qt &= 67108863, n = Math.imul(z, Mt), i = (i = Math.imul(z, _t)) + Math.imul(G, Mt) | 0, o = Math.imul(G, _t);
                    var zt = (c + (n = n + Math.imul(U, xt) | 0) | 0) + ((8191 & (i = (i = i + Math.imul(U, Bt) | 0) + Math.imul(H, xt) | 0)) << 13) | 0;
                    c = ((o = o + Math.imul(H, Bt) | 0) + (i >>> 13) | 0) + (zt >>> 26) | 0, zt &= 67108863;
                    var Gt = (c + (n = Math.imul(z, xt)) | 0) + ((8191 & (i = (i = Math.imul(z, Bt)) + Math.imul(G, xt) | 0)) << 13) | 0;
                    return c = ((o = Math.imul(G, Bt)) + (i >>> 13) | 0) + (Gt >>> 26) | 0, Gt &= 67108863, u[0] = Et, u[1] = kt, u[2] = Nt, u[3] = St, u[4] = Tt, u[5] = Ct, u[6] = Pt, u[7] = It, u[8] = Ot, u[9] = Rt, u[10] = Ft, u[11] = Dt, u[12] = jt, u[13] = Lt, u[14] = Ut, u[15] = Ht, u[16] = qt, u[17] = zt, u[18] = Gt, 0 !== c && (u[19] = c, r.length++), r
                };

                function jumboMulTo(t, e, r) {
                    return (new FFTM).mulp(t, e, r)
                }

                function FFTM(t, e) {
                    this.x = t, this.y = e
                }
                Math.imul || (s = smallMulTo), BN.prototype.mulTo = function mulTo(t, e) {
                    var r = this.length + t.length;
                    return 10 === this.length && 10 === t.length ? s(this, t, e) : r < 63 ? smallMulTo(this, t, e) : r < 1024 ? function bigMulTo(t, e, r) {
                        r.negative = e.negative ^ t.negative, r.length = t.length + e.length;
                        for (var n = 0, i = 0, o = 0; o < r.length - 1; o++) {
                            var a = i;
                            i = 0;
                            for (var s = 67108863 & n, u = Math.min(o, e.length - 1), c = Math.max(0, o - t.length + 1); c <= u; c++) {
                                var l = o - c,
                                    h = (0 | t.words[l]) * (0 | e.words[c]),
                                    d = 67108863 & h;
                                s = 67108863 & (d = d + s | 0), i += (a = (a = a + (h / 67108864 | 0) | 0) + (d >>> 26) | 0) >>> 26, a &= 67108863
                            }
                            r.words[o] = s, n = a, a = i
                        }
                        return 0 !== n ? r.words[o] = n : r.length--, r.strip()
                    }(this, t, e) : jumboMulTo(this, t, e)
                }, FFTM.prototype.makeRBT = function makeRBT(t) {
                    for (var e = new Array(t), r = BN.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, r, t);
                    return e
                }, FFTM.prototype.revBin = function revBin(t, e, r) {
                    if (0 === t || t === r - 1) return t;
                    for (var n = 0, i = 0; i < e; i++) n |= (1 & t) << e - i - 1, t >>= 1;
                    return n
                }, FFTM.prototype.permute = function permute(t, e, r, n, i, o) {
                    for (var a = 0; a < o; a++) n[a] = e[t[a]], i[a] = r[t[a]]
                }, FFTM.prototype.transform = function transform(t, e, r, n, i, o) {
                    this.permute(o, t, e, r, n, i);
                    for (var a = 1; a < i; a <<= 1)
                        for (var s = a << 1, u = Math.cos(2 * Math.PI / s), c = Math.sin(2 * Math.PI / s), l = 0; l < i; l += s)
                            for (var h = u, d = c, p = 0; p < a; p++) {
                                var m = r[l + p],
                                    y = n[l + p],
                                    b = r[l + p + a],
                                    g = n[l + p + a],
                                    v = h * b - d * g;
                                g = h * g + d * b, b = v, r[l + p] = m + b, n[l + p] = y + g, r[l + p + a] = m - b, n[l + p + a] = y - g, p !== s && (v = u * h - c * d, d = u * d + c * h, h = v)
                            }
                }, FFTM.prototype.guessLen13b = function guessLen13b(t, e) {
                    var r = 1 | Math.max(e, t),
                        n = 1 & r,
                        i = 0;
                    for (r = r / 2 | 0; r; r >>>= 1) i++;
                    return 1 << i + 1 + n
                }, FFTM.prototype.conjugate = function conjugate(t, e, r) {
                    if (!(r <= 1))
                        for (var n = 0; n < r / 2; n++) {
                            var i = t[n];
                            t[n] = t[r - n - 1], t[r - n - 1] = i, i = e[n], e[n] = -e[r - n - 1], e[r - n - 1] = -i
                        }
                }, FFTM.prototype.normalize13b = function normalize13b(t, e) {
                    for (var r = 0, n = 0; n < e / 2; n++) {
                        var i = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + r;
                        t[n] = 67108863 & i, r = i < 67108864 ? 0 : i / 67108864 | 0
                    }
                    return t
                }, FFTM.prototype.convert13b = function convert13b(t, e, r, n) {
                    for (var i = 0, o = 0; o < e; o++) i += 0 | t[o], r[2 * o] = 8191 & i, i >>>= 13, r[2 * o + 1] = 8191 & i, i >>>= 13;
                    for (o = 2 * e; o < n; ++o) r[o] = 0;
                    assert(0 === i), assert(0 == (-8192 & i))
                }, FFTM.prototype.stub = function stub(t) {
                    for (var e = new Array(t), r = 0; r < t; r++) e[r] = 0;
                    return e
                }, FFTM.prototype.mulp = function mulp(t, e, r) {
                    var n = 2 * this.guessLen13b(t.length, e.length),
                        i = this.makeRBT(n),
                        o = this.stub(n),
                        a = new Array(n),
                        s = new Array(n),
                        u = new Array(n),
                        c = new Array(n),
                        l = new Array(n),
                        h = new Array(n),
                        d = r.words;
                    d.length = n, this.convert13b(t.words, t.length, a, n), this.convert13b(e.words, e.length, c, n), this.transform(a, o, s, u, n, i), this.transform(c, o, l, h, n, i);
                    for (var p = 0; p < n; p++) {
                        var m = s[p] * l[p] - u[p] * h[p];
                        u[p] = s[p] * h[p] + u[p] * l[p], s[p] = m
                    }
                    return this.conjugate(s, u, n), this.transform(s, u, d, o, n, i), this.conjugate(d, o, n), this.normalize13b(d, n), r.negative = t.negative ^ e.negative, r.length = t.length + e.length, r.strip()
                }, BN.prototype.mul = function mul(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), this.mulTo(t, e)
                }, BN.prototype.mulf = function mulf(t) {
                    var e = new BN(null);
                    return e.words = new Array(this.length + t.length), jumboMulTo(this, t, e)
                }, BN.prototype.imul = function imul(t) {
                    return this.clone().mulTo(t, this)
                }, BN.prototype.imuln = function imuln(t) {
                    assert("number" == typeof t), assert(t < 67108864);
                    for (var e = 0, r = 0; r < this.length; r++) {
                        var n = (0 | this.words[r]) * t,
                            i = (67108863 & n) + (67108863 & e);
                        e >>= 26, e += n / 67108864 | 0, e += i >>> 26, this.words[r] = 67108863 & i
                    }
                    return 0 !== e && (this.words[r] = e, this.length++), this
                }, BN.prototype.muln = function muln(t) {
                    return this.clone().imuln(t)
                }, BN.prototype.sqr = function sqr() {
                    return this.mul(this)
                }, BN.prototype.isqr = function isqr() {
                    return this.imul(this.clone())
                }, BN.prototype.pow = function pow(t) {
                    var e = function toBitArray(t) {
                        for (var e = new Array(t.bitLength()), r = 0; r < e.length; r++) {
                            var n = r / 26 | 0,
                                i = r % 26;
                            e[r] = (t.words[n] & 1 << i) >>> i
                        }
                        return e
                    }(t);
                    if (0 === e.length) return new BN(1);
                    for (var r = this, n = 0; n < e.length && 0 === e[n]; n++, r = r.sqr());
                    if (++n < e.length)
                        for (var i = r.sqr(); n < e.length; n++, i = i.sqr()) 0 !== e[n] && (r = r.mul(i));
                    return r
                }, BN.prototype.iushln = function iushln(t) {
                    assert("number" == typeof t && t >= 0);
                    var e, r = t % 26,
                        n = (t - r) / 26,
                        i = 67108863 >>> 26 - r << 26 - r;
                    if (0 !== r) {
                        var o = 0;
                        for (e = 0; e < this.length; e++) {
                            var a = this.words[e] & i,
                                s = (0 | this.words[e]) - a << r;
                            this.words[e] = s | o, o = a >>> 26 - r
                        }
                        o && (this.words[e] = o, this.length++)
                    }
                    if (0 !== n) {
                        for (e = this.length - 1; e >= 0; e--) this.words[e + n] = this.words[e];
                        for (e = 0; e < n; e++) this.words[e] = 0;
                        this.length += n
                    }
                    return this.strip()
                }, BN.prototype.ishln = function ishln(t) {
                    return assert(0 === this.negative), this.iushln(t)
                }, BN.prototype.iushrn = function iushrn(t, e, r) {
                    var n;
                    assert("number" == typeof t && t >= 0), n = e ? (e - e % 26) / 26 : 0;
                    var i = t % 26,
                        o = Math.min((t - i) / 26, this.length),
                        a = 67108863 ^ 67108863 >>> i << i,
                        s = r;
                    if (n -= o, n = Math.max(0, n), s) {
                        for (var u = 0; u < o; u++) s.words[u] = this.words[u];
                        s.length = o
                    }
                    if (0 === o);
                    else if (this.length > o)
                        for (this.length -= o, u = 0; u < this.length; u++) this.words[u] = this.words[u + o];
                    else this.words[0] = 0, this.length = 1;
                    var c = 0;
                    for (u = this.length - 1; u >= 0 && (0 !== c || u >= n); u--) {
                        var l = 0 | this.words[u];
                        this.words[u] = c << 26 - i | l >>> i, c = l & a
                    }
                    return s && 0 !== c && (s.words[s.length++] = c), 0 === this.length && (this.words[0] = 0, this.length = 1), this.strip()
                }, BN.prototype.ishrn = function ishrn(t, e, r) {
                    return assert(0 === this.negative), this.iushrn(t, e, r)
                }, BN.prototype.shln = function shln(t) {
                    return this.clone().ishln(t)
                }, BN.prototype.ushln = function ushln(t) {
                    return this.clone().iushln(t)
                }, BN.prototype.shrn = function shrn(t) {
                    return this.clone().ishrn(t)
                }, BN.prototype.ushrn = function ushrn(t) {
                    return this.clone().iushrn(t)
                }, BN.prototype.testn = function testn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    return !(this.length <= r) && !!(this.words[r] & n)
                }, BN.prototype.imaskn = function imaskn(t) {
                    assert("number" == typeof t && t >= 0);
                    var e = t % 26,
                        r = (t - e) / 26;
                    if (assert(0 === this.negative, "imaskn works only with positive numbers"), this.length <= r) return this;
                    if (0 !== e && r++, this.length = Math.min(r, this.length), 0 !== e) {
                        var n = 67108863 ^ 67108863 >>> e << e;
                        this.words[this.length - 1] &= n
                    }
                    return this.strip()
                }, BN.prototype.maskn = function maskn(t) {
                    return this.clone().imaskn(t)
                }, BN.prototype.iaddn = function iaddn(t) {
                    return assert("number" == typeof t), assert(t < 67108864), t < 0 ? this.isubn(-t) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) < t ? (this.words[0] = t - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t), this.negative = 1, this) : this._iaddn(t)
                }, BN.prototype._iaddn = function _iaddn(t) {
                    this.words[0] += t;
                    for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) this.words[e] -= 67108864, e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                    return this.length = Math.max(this.length, e + 1), this
                }, BN.prototype.isubn = function isubn(t) {
                    if (assert("number" == typeof t), assert(t < 67108864), t < 0) return this.iaddn(-t);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(t), this.negative = 1, this;
                    if (this.words[0] -= t, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var e = 0; e < this.length && this.words[e] < 0; e++) this.words[e] += 67108864, this.words[e + 1] -= 1;
                    return this.strip()
                }, BN.prototype.addn = function addn(t) {
                    return this.clone().iaddn(t)
                }, BN.prototype.subn = function subn(t) {
                    return this.clone().isubn(t)
                }, BN.prototype.iabs = function iabs() {
                    return this.negative = 0, this
                }, BN.prototype.abs = function abs() {
                    return this.clone().iabs()
                }, BN.prototype._ishlnsubmul = function _ishlnsubmul(t, e, r) {
                    var n, i, o = t.length + r;
                    this._expand(o);
                    var a = 0;
                    for (n = 0; n < t.length; n++) {
                        i = (0 | this.words[n + r]) + a;
                        var s = (0 | t.words[n]) * e;
                        a = ((i -= 67108863 & s) >> 26) - (s / 67108864 | 0), this.words[n + r] = 67108863 & i
                    }
                    for (; n < this.length - r; n++) a = (i = (0 | this.words[n + r]) + a) >> 26, this.words[n + r] = 67108863 & i;
                    if (0 === a) return this.strip();
                    for (assert(-1 === a), a = 0, n = 0; n < this.length; n++) a = (i = -(0 | this.words[n]) + a) >> 26, this.words[n] = 67108863 & i;
                    return this.negative = 1, this.strip()
                }, BN.prototype._wordDiv = function _wordDiv(t, e) {
                    var r = (this.length, t.length),
                        n = this.clone(),
                        i = t,
                        o = 0 | i.words[i.length - 1];
                    0 !== (r = 26 - this._countBits(o)) && (i = i.ushln(r), n.iushln(r), o = 0 | i.words[i.length - 1]);
                    var a, s = n.length - i.length;
                    if ("mod" !== e) {
                        (a = new BN(null)).length = s + 1, a.words = new Array(a.length);
                        for (var u = 0; u < a.length; u++) a.words[u] = 0
                    }
                    var c = n.clone()._ishlnsubmul(i, 1, s);
                    0 === c.negative && (n = c, a && (a.words[s] = 1));
                    for (var l = s - 1; l >= 0; l--) {
                        var h = 67108864 * (0 | n.words[i.length + l]) + (0 | n.words[i.length + l - 1]);
                        for (h = Math.min(h / o | 0, 67108863), n._ishlnsubmul(i, h, l); 0 !== n.negative;) h--, n.negative = 0, n._ishlnsubmul(i, 1, l), n.isZero() || (n.negative ^= 1);
                        a && (a.words[l] = h)
                    }
                    return a && a.strip(), n.strip(), "div" !== e && 0 !== r && n.iushrn(r), {
                        div: a || null,
                        mod: n
                    }
                }, BN.prototype.divmod = function divmod(t, e, r) {
                    return assert(!t.isZero()), this.isZero() ? {
                        div: new BN(0),
                        mod: new BN(0)
                    } : 0 !== this.negative && 0 === t.negative ? (o = this.neg().divmod(t, e), "mod" !== e && (n = o.div.neg()), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.iadd(t)), {
                        div: n,
                        mod: i
                    }) : 0 === this.negative && 0 !== t.negative ? (o = this.divmod(t.neg(), e), "mod" !== e && (n = o.div.neg()), {
                        div: n,
                        mod: o.mod
                    }) : 0 != (this.negative & t.negative) ? (o = this.neg().divmod(t.neg(), e), "div" !== e && (i = o.mod.neg(), r && 0 !== i.negative && i.isub(t)), {
                        div: o.div,
                        mod: i
                    }) : t.length > this.length || this.cmp(t) < 0 ? {
                        div: new BN(0),
                        mod: this
                    } : 1 === t.length ? "div" === e ? {
                        div: this.divn(t.words[0]),
                        mod: null
                    } : "mod" === e ? {
                        div: null,
                        mod: new BN(this.modn(t.words[0]))
                    } : {
                        div: this.divn(t.words[0]),
                        mod: new BN(this.modn(t.words[0]))
                    } : this._wordDiv(t, e);
                    var n, i, o
                }, BN.prototype.div = function div(t) {
                    return this.divmod(t, "div", !1).div
                }, BN.prototype.mod = function mod(t) {
                    return this.divmod(t, "mod", !1).mod
                }, BN.prototype.umod = function umod(t) {
                    return this.divmod(t, "mod", !0).mod
                }, BN.prototype.divRound = function divRound(t) {
                    var e = this.divmod(t);
                    if (e.mod.isZero()) return e.div;
                    var r = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                        n = t.ushrn(1),
                        i = t.andln(1),
                        o = r.cmp(n);
                    return o < 0 || 1 === i && 0 === o ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1)
                }, BN.prototype.modn = function modn(t) {
                    assert(t <= 67108863);
                    for (var e = (1 << 26) % t, r = 0, n = this.length - 1; n >= 0; n--) r = (e * r + (0 | this.words[n])) % t;
                    return r
                }, BN.prototype.idivn = function idivn(t) {
                    assert(t <= 67108863);
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = (0 | this.words[r]) + 67108864 * e;
                        this.words[r] = n / t | 0, e = n % t
                    }
                    return this.strip()
                }, BN.prototype.divn = function divn(t) {
                    return this.clone().idivn(t)
                }, BN.prototype.egcd = function egcd(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n = new BN(1), i = new BN(0), o = new BN(0), a = new BN(1), s = 0; e.isEven() && r.isEven();) e.iushrn(1), r.iushrn(1), ++s;
                    for (var u = r.clone(), c = e.clone(); !e.isZero();) {
                        for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                        if (l > 0)
                            for (e.iushrn(l); l-- > 0;)(n.isOdd() || i.isOdd()) && (n.iadd(u), i.isub(c)), n.iushrn(1), i.iushrn(1);
                        for (var d = 0, p = 1; 0 == (r.words[0] & p) && d < 26; ++d, p <<= 1);
                        if (d > 0)
                            for (r.iushrn(d); d-- > 0;)(o.isOdd() || a.isOdd()) && (o.iadd(u), a.isub(c)), o.iushrn(1), a.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), n.isub(o), i.isub(a)) : (r.isub(e), o.isub(n), a.isub(i))
                    }
                    return {
                        a: o,
                        b: a,
                        gcd: r.iushln(s)
                    }
                }, BN.prototype._invmp = function _invmp(t) {
                    assert(0 === t.negative), assert(!t.isZero());
                    var e = this,
                        r = t.clone();
                    e = 0 !== e.negative ? e.umod(t) : e.clone();
                    for (var n, i = new BN(1), o = new BN(0), a = r.clone(); e.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var s = 0, u = 1; 0 == (e.words[0] & u) && s < 26; ++s, u <<= 1);
                        if (s > 0)
                            for (e.iushrn(s); s-- > 0;) i.isOdd() && i.iadd(a), i.iushrn(1);
                        for (var c = 0, l = 1; 0 == (r.words[0] & l) && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(a), o.iushrn(1);
                        e.cmp(r) >= 0 ? (e.isub(r), i.isub(o)) : (r.isub(e), o.isub(i))
                    }
                    return (n = 0 === e.cmpn(1) ? i : o).cmpn(0) < 0 && n.iadd(t), n
                }, BN.prototype.gcd = function gcd(t) {
                    if (this.isZero()) return t.abs();
                    if (t.isZero()) return this.abs();
                    var e = this.clone(),
                        r = t.clone();
                    e.negative = 0, r.negative = 0;
                    for (var n = 0; e.isEven() && r.isEven(); n++) e.iushrn(1), r.iushrn(1);
                    for (;;) {
                        for (; e.isEven();) e.iushrn(1);
                        for (; r.isEven();) r.iushrn(1);
                        var i = e.cmp(r);
                        if (i < 0) {
                            var o = e;
                            e = r, r = o
                        } else if (0 === i || 0 === r.cmpn(1)) break;
                        e.isub(r)
                    }
                    return r.iushln(n)
                }, BN.prototype.invm = function invm(t) {
                    return this.egcd(t).a.umod(t)
                }, BN.prototype.isEven = function isEven() {
                    return 0 == (1 & this.words[0])
                }, BN.prototype.isOdd = function isOdd() {
                    return 1 == (1 & this.words[0])
                }, BN.prototype.andln = function andln(t) {
                    return this.words[0] & t
                }, BN.prototype.bincn = function bincn(t) {
                    assert("number" == typeof t);
                    var e = t % 26,
                        r = (t - e) / 26,
                        n = 1 << e;
                    if (this.length <= r) return this._expand(r + 1), this.words[r] |= n, this;
                    for (var i = n, o = r; 0 !== i && o < this.length; o++) {
                        var a = 0 | this.words[o];
                        i = (a += i) >>> 26, a &= 67108863, this.words[o] = a
                    }
                    return 0 !== i && (this.words[o] = i, this.length++), this
                }, BN.prototype.isZero = function isZero() {
                    return 1 === this.length && 0 === this.words[0]
                }, BN.prototype.cmpn = function cmpn(t) {
                    var e, r = t < 0;
                    if (0 !== this.negative && !r) return -1;
                    if (0 === this.negative && r) return 1;
                    if (this.strip(), this.length > 1) e = 1;
                    else {
                        r && (t = -t), assert(t <= 67108863, "Number is too big");
                        var n = 0 | this.words[0];
                        e = n === t ? 0 : n < t ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.cmp = function cmp(t) {
                    if (0 !== this.negative && 0 === t.negative) return -1;
                    if (0 === this.negative && 0 !== t.negative) return 1;
                    var e = this.ucmp(t);
                    return 0 !== this.negative ? 0 | -e : e
                }, BN.prototype.ucmp = function ucmp(t) {
                    if (this.length > t.length) return 1;
                    if (this.length < t.length) return -1;
                    for (var e = 0, r = this.length - 1; r >= 0; r--) {
                        var n = 0 | this.words[r],
                            i = 0 | t.words[r];
                        if (n !== i) {
                            n < i ? e = -1 : n > i && (e = 1);
                            break
                        }
                    }
                    return e
                }, BN.prototype.gtn = function gtn(t) {
                    return 1 === this.cmpn(t)
                }, BN.prototype.gt = function gt(t) {
                    return 1 === this.cmp(t)
                }, BN.prototype.gten = function gten(t) {
                    return this.cmpn(t) >= 0
                }, BN.prototype.gte = function gte(t) {
                    return this.cmp(t) >= 0
                }, BN.prototype.ltn = function ltn(t) {
                    return -1 === this.cmpn(t)
                }, BN.prototype.lt = function lt(t) {
                    return -1 === this.cmp(t)
                }, BN.prototype.lten = function lten(t) {
                    return this.cmpn(t) <= 0
                }, BN.prototype.lte = function lte(t) {
                    return this.cmp(t) <= 0
                }, BN.prototype.eqn = function eqn(t) {
                    return 0 === this.cmpn(t)
                }, BN.prototype.eq = function eq(t) {
                    return 0 === this.cmp(t)
                }, BN.red = function red(t) {
                    return new Red(t)
                }, BN.prototype.toRed = function toRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), assert(0 === this.negative, "red works only with positives"), t.convertTo(this)._forceRed(t)
                }, BN.prototype.fromRed = function fromRed() {
                    return assert(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, BN.prototype._forceRed = function _forceRed(t) {
                    return this.red = t, this
                }, BN.prototype.forceRed = function forceRed(t) {
                    return assert(!this.red, "Already a number in reduction context"), this._forceRed(t)
                }, BN.prototype.redAdd = function redAdd(t) {
                    return assert(this.red, "redAdd works only with red numbers"), this.red.add(this, t)
                }, BN.prototype.redIAdd = function redIAdd(t) {
                    return assert(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t)
                }, BN.prototype.redSub = function redSub(t) {
                    return assert(this.red, "redSub works only with red numbers"), this.red.sub(this, t)
                }, BN.prototype.redISub = function redISub(t) {
                    return assert(this.red, "redISub works only with red numbers"), this.red.isub(this, t)
                }, BN.prototype.redShl = function redShl(t) {
                    return assert(this.red, "redShl works only with red numbers"), this.red.shl(this, t)
                }, BN.prototype.redMul = function redMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.mul(this, t)
                }, BN.prototype.redIMul = function redIMul(t) {
                    return assert(this.red, "redMul works only with red numbers"), this.red._verify2(this, t), this.red.imul(this, t)
                }, BN.prototype.redSqr = function redSqr() {
                    return assert(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, BN.prototype.redISqr = function redISqr() {
                    return assert(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, BN.prototype.redSqrt = function redSqrt() {
                    return assert(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, BN.prototype.redInvm = function redInvm() {
                    return assert(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, BN.prototype.redNeg = function redNeg() {
                    return assert(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, BN.prototype.redPow = function redPow(t) {
                    return assert(this.red && !t.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t)
                };
                var u = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function MPrime(t, e) {
                    this.name = t, this.p = new BN(e, 16), this.n = this.p.bitLength(), this.k = new BN(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function K256() {
                    MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function P224() {
                    MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function P192() {
                    MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function P25519() {
                    MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function Red(t) {
                    if ("string" == typeof t) {
                        var e = BN._prime(t);
                        this.m = e.p, this.prime = e
                    } else assert(t.gtn(1), "modulus must be greater than 1"), this.m = t, this.prime = null
                }

                function Mont(t) {
                    Red.call(this, t), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new BN(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                MPrime.prototype._tmp = function _tmp() {
                    var t = new BN(null);
                    return t.words = new Array(Math.ceil(this.n / 13)), t
                }, MPrime.prototype.ireduce = function ireduce(t) {
                    var e, r = t;
                    do {
                        this.split(r, this.tmp), e = (r = (r = this.imulK(r)).iadd(this.tmp)).bitLength()
                    } while (e > this.n);
                    var n = e < this.n ? -1 : r.ucmp(this.p);
                    return 0 === n ? (r.words[0] = 0, r.length = 1) : n > 0 ? r.isub(this.p) : r.strip(), r
                }, MPrime.prototype.split = function split(t, e) {
                    t.iushrn(this.n, 0, e)
                }, MPrime.prototype.imulK = function imulK(t) {
                    return t.imul(this.k)
                }, inherits(K256, MPrime), K256.prototype.split = function split(t, e) {
                    for (var r = Math.min(t.length, 9), n = 0; n < r; n++) e.words[n] = t.words[n];
                    if (e.length = r, t.length <= 9) return t.words[0] = 0, void(t.length = 1);
                    var i = t.words[9];
                    for (e.words[e.length++] = 4194303 & i, n = 10; n < t.length; n++) {
                        var o = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & o) << 4 | i >>> 22, i = o
                    }
                    i >>>= 22, t.words[n - 10] = i, 0 === i && t.length > 10 ? t.length -= 10 : t.length -= 9
                }, K256.prototype.imulK = function imulK(t) {
                    t.words[t.length] = 0, t.words[t.length + 1] = 0, t.length += 2;
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 0 | t.words[r];
                        e += 977 * n, t.words[r] = 67108863 & e, e = 64 * n + (e / 67108864 | 0)
                    }
                    return 0 === t.words[t.length - 1] && (t.length--, 0 === t.words[t.length - 1] && t.length--), t
                }, inherits(P224, MPrime), inherits(P192, MPrime), inherits(P25519, MPrime), P25519.prototype.imulK = function imulK(t) {
                    for (var e = 0, r = 0; r < t.length; r++) {
                        var n = 19 * (0 | t.words[r]) + e,
                            i = 67108863 & n;
                        n >>>= 26, t.words[r] = i, e = n
                    }
                    return 0 !== e && (t.words[t.length++] = e), t
                }, BN._prime = function prime(t) {
                    if (u[t]) return u[t];
                    var prime;
                    if ("k256" === t) prime = new K256;
                    else if ("p224" === t) prime = new P224;
                    else if ("p192" === t) prime = new P192;
                    else {
                        if ("p25519" !== t) throw new Error("Unknown prime " + t);
                        prime = new P25519
                    }
                    return u[t] = prime, prime
                }, Red.prototype._verify1 = function _verify1(t) {
                    assert(0 === t.negative, "red works only with positives"), assert(t.red, "red works only with red numbers")
                }, Red.prototype._verify2 = function _verify2(t, e) {
                    assert(0 == (t.negative | e.negative), "red works only with positives"), assert(t.red && t.red === e.red, "red works only with red numbers")
                }, Red.prototype.imod = function imod(t) {
                    return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this)
                }, Red.prototype.neg = function neg(t) {
                    return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this)
                }, Red.prototype.add = function add(t, e) {
                    this._verify2(t, e);
                    var r = t.add(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r._forceRed(this)
                }, Red.prototype.iadd = function iadd(t, e) {
                    this._verify2(t, e);
                    var r = t.iadd(e);
                    return r.cmp(this.m) >= 0 && r.isub(this.m), r
                }, Red.prototype.sub = function sub(t, e) {
                    this._verify2(t, e);
                    var r = t.sub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r._forceRed(this)
                }, Red.prototype.isub = function isub(t, e) {
                    this._verify2(t, e);
                    var r = t.isub(e);
                    return r.cmpn(0) < 0 && r.iadd(this.m), r
                }, Red.prototype.shl = function shl(t, e) {
                    return this._verify1(t), this.imod(t.ushln(e))
                }, Red.prototype.imul = function imul(t, e) {
                    return this._verify2(t, e), this.imod(t.imul(e))
                }, Red.prototype.mul = function mul(t, e) {
                    return this._verify2(t, e), this.imod(t.mul(e))
                }, Red.prototype.isqr = function isqr(t) {
                    return this.imul(t, t.clone())
                }, Red.prototype.sqr = function sqr(t) {
                    return this.mul(t, t)
                }, Red.prototype.sqrt = function sqrt(t) {
                    if (t.isZero()) return t.clone();
                    var e = this.m.andln(3);
                    if (assert(e % 2 == 1), 3 === e) {
                        var r = this.m.add(new BN(1)).iushrn(2);
                        return this.pow(t, r)
                    }
                    for (var n = this.m.subn(1), i = 0; !n.isZero() && 0 === n.andln(1);) i++, n.iushrn(1);
                    assert(!n.isZero());
                    var o = new BN(1).toRed(this),
                        a = o.redNeg(),
                        s = this.m.subn(1).iushrn(1),
                        u = this.m.bitLength();
                    for (u = new BN(2 * u * u).toRed(this); 0 !== this.pow(u, s).cmp(a);) u.redIAdd(a);
                    for (var c = this.pow(u, n), l = this.pow(t, n.addn(1).iushrn(1)), h = this.pow(t, n), d = i; 0 !== h.cmp(o);) {
                        for (var p = h, m = 0; 0 !== p.cmp(o); m++) p = p.redSqr();
                        assert(m < d);
                        var y = this.pow(c, new BN(1).iushln(d - m - 1));
                        l = l.redMul(y), c = y.redSqr(), h = h.redMul(c), d = m
                    }
                    return l
                }, Red.prototype.invm = function invm(t) {
                    var e = t._invmp(this.m);
                    return 0 !== e.negative ? (e.negative = 0, this.imod(e).redNeg()) : this.imod(e)
                }, Red.prototype.pow = function pow(t, e) {
                    if (e.isZero()) return new BN(1).toRed(this);
                    if (0 === e.cmpn(1)) return t.clone();
                    var r = new Array(16);
                    r[0] = new BN(1).toRed(this), r[1] = t;
                    for (var n = 2; n < r.length; n++) r[n] = this.mul(r[n - 1], t);
                    var i = r[0],
                        o = 0,
                        a = 0,
                        s = e.bitLength() % 26;
                    for (0 === s && (s = 26), n = e.length - 1; n >= 0; n--) {
                        for (var u = e.words[n], c = s - 1; c >= 0; c--) {
                            var l = u >> c & 1;
                            i !== r[0] && (i = this.sqr(i)), 0 !== l || 0 !== o ? (o <<= 1, o |= l, (4 === ++a || 0 === n && 0 === c) && (i = this.mul(i, r[o]), a = 0, o = 0)) : a = 0
                        }
                        s = 26
                    }
                    return i
                }, Red.prototype.convertTo = function convertTo(t) {
                    var e = t.umod(this.m);
                    return e === t ? e.clone() : e
                }, Red.prototype.convertFrom = function convertFrom(t) {
                    var e = t.clone();
                    return e.red = null, e
                }, BN.mont = function mont(t) {
                    return new Mont(t)
                }, inherits(Mont, Red), Mont.prototype.convertTo = function convertTo(t) {
                    return this.imod(t.ushln(this.shift))
                }, Mont.prototype.convertFrom = function convertFrom(t) {
                    var e = this.imod(t.mul(this.rinv));
                    return e.red = null, e
                }, Mont.prototype.imul = function imul(t, e) {
                    if (t.isZero() || e.isZero()) return t.words[0] = 0, t.length = 1, t;
                    var r = t.imul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.mul = function mul(t, e) {
                    if (t.isZero() || e.isZero()) return new BN(0)._forceRed(this);
                    var r = t.mul(e),
                        n = r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        i = r.isub(n).iushrn(this.shift),
                        o = i;
                    return i.cmp(this.m) >= 0 ? o = i.isub(this.m) : i.cmpn(0) < 0 && (o = i.iadd(this.m)), o._forceRed(this)
                }, Mont.prototype.invm = function invm(t) {
                    return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(t, this)
        }).call(this, r(8)(t))
    }, function (t, e) {}, function (t, e, r) {
        (function (t) {
            var n = this && this.__importDefault || function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.Address = void 0;
            var i = n(r(18)),
                o = n(r(57)),
                a = r(58),
                s = r(333),
                u = function () {
                    function Address(t) {
                        i.default(20 === t.length, "Invalid address length"), this.buf = t
                    }
                    return Address.zero = function () {
                        return new Address(a.zeros(20))
                    }, Address.fromString = function (t) {
                        return i.default(s.isValidAddress(t), "Invalid address"), new Address(a.toBuffer(t))
                    }, Address.fromPublicKey = function (e) {
                        return i.default(t.isBuffer(e), "Public key should be Buffer"), new Address(s.pubToAddress(e))
                    }, Address.fromPrivateKey = function (e) {
                        return i.default(t.isBuffer(e), "Private key should be Buffer"), new Address(s.privateToAddress(e))
                    }, Address.generate = function (e, r) {
                        return i.default(o.default.isBN(r)), new Address(s.generateAddress(e.buf, r.toArrayLike(t)))
                    }, Address.generate2 = function (e, r, n) {
                        return i.default(t.isBuffer(r)), i.default(t.isBuffer(n)), new Address(s.generateAddress2(e.buf, r, n))
                    }, Address.prototype.equals = function (t) {
                        return this.buf.equals(t.buf)
                    }, Address.prototype.isZero = function () {
                        return this.equals(Address.zero())
                    }, Address.prototype.isPrecompileOrSystemAddress = function () {
                        var t = new o.default(this.buf),
                            e = new o.default(0),
                            r = new o.default("ffff", "hex");
                        return t.gte(e) && t.lte(r)
                    }, Address.prototype.toString = function () {
                        return "0x" + this.buf.toString("hex")
                    }, Address.prototype.toBuffer = function () {
                        return t.from(this.buf)
                    }, Address
                }();
            e.Address = u
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (t) {
            var n = this && this.__importDefault || function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.hashPersonalMessage = e.isValidSignature = e.fromRpcSig = e.toCompactSig = e.toRpcSig = e.ecrecover = e.ecsign = void 0;
            var i = r(121),
                o = n(r(57)),
                a = r(58),
                s = r(198),
                u = r(136),
                c = r(199);

            function calculateSigRecovery(t, e) {
                var r = c.toType(t, c.TypeOutput.BN);
                if (!e) return r.subn(27);
                var n = c.toType(e, c.TypeOutput.BN);
                return r.sub(n.muln(2).addn(35))
            }

            function isValidSigRecovery(t) {
                var e = new o.default(t);
                return e.eqn(0) || e.eqn(1)
            }
            e.ecsign = function ecsign(e, r, n) {
                var o = i.ecdsaSign(e, r),
                    a = o.signature,
                    s = o.recid,
                    u = t.from(a.slice(0, 32)),
                    l = t.from(a.slice(32, 64));
                if (!n || "number" == typeof n) {
                    if (n && !Number.isSafeInteger(n)) throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");
                    return {
                        r: u,
                        s: l,
                        v: n ? s + (2 * n + 35) : s + 27
                    }
                }
                return {
                    r: u,
                    s: l,
                    v: c.toType(n, c.TypeOutput.BN).muln(2).addn(35).addn(s).toArrayLike(t)
                }
            }, e.ecrecover = function (e, r, n, o, s) {
                var u = t.concat([a.setLengthLeft(n, 32), a.setLengthLeft(o, 32)], 64),
                    c = calculateSigRecovery(r, s);
                if (!isValidSigRecovery(c)) throw new Error("Invalid signature v value");
                var l = i.ecdsaRecover(u, c.toNumber(), e);
                return t.from(i.publicKeyConvert(l, !1).slice(1))
            }, e.toRpcSig = function (e, r, n, i) {
                if (!isValidSigRecovery(calculateSigRecovery(e, i))) throw new Error("Invalid signature v value");
                return a.bufferToHex(t.concat([a.setLengthLeft(r, 32), a.setLengthLeft(n, 32), a.toBuffer(e)]))
            }, e.toCompactSig = function (e, r, n, i) {
                if (!isValidSigRecovery(calculateSigRecovery(e, i))) throw new Error("Invalid signature v value");
                var o = c.toType(e, c.TypeOutput.Number),
                    s = n;
                return (o > 28 && o % 2 == 1 || 1 === o || 28 === o) && ((s = t.from(n))[0] |= 128), a.bufferToHex(t.concat([a.setLengthLeft(r, 32), a.setLengthLeft(s, 32)]))
            }, e.fromRpcSig = function (t) {
                var e, r, n, i = a.toBuffer(t);
                if (i.length >= 65) e = i.slice(0, 32), r = i.slice(32, 64), n = a.bufferToInt(i.slice(64));
                else {
                    if (64 !== i.length) throw new Error("Invalid signature length");
                    e = i.slice(0, 32), r = i.slice(32, 64), n = a.bufferToInt(i.slice(32, 33)) >> 7, r[0] &= 127
                }
                return n < 27 && (n += 27), {
                    v: n,
                    r: e,
                    s: r
                }
            }, e.isValidSignature = function (t, e, r, n, i) {
                void 0 === n && (n = !0);
                var a = new o.default("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0", 16),
                    s = new o.default("fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141", 16);
                if (32 !== e.length || 32 !== r.length) return !1;
                if (!isValidSigRecovery(calculateSigRecovery(t, i))) return !1;
                var u = new o.default(e),
                    c = new o.default(r);
                return !(u.isZero() || u.gt(s) || c.isZero() || c.gt(s)) && (!n || 1 !== c.cmp(a))
            }, e.hashPersonalMessage = function (e) {
                u.assertIsBuffer(e);
                var r = t.from("Ethereum Signed Message:\n" + e.length.toString(), "utf-8");
                return s.keccak(t.concat([r, e]))
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (t) {
            var n = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
                    void 0 === n && (n = r), Object.defineProperty(t, n, {
                        enumerable: !0,
                        get: function () {
                            return e[r]
                        }
                    })
                } : function (t, e, r, n) {
                    void 0 === n && (n = r), t[n] = e[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function (t, e) {
                    Object.defineProperty(t, "default", {
                        enumerable: !0,
                        value: e
                    })
                } : function (t, e) {
                    t.default = e
                }),
                o = this && this.__importStar || function (t) {
                    if (t && t.__esModule) return t;
                    var e = {};
                    if (null != t)
                        for (var r in t) "default" !== r && Object.hasOwnProperty.call(t, r) && n(e, t, r);
                    return i(e, t), e
                },
                a = this && this.__importDefault || function (t) {
                    return t && t.__esModule ? t : {
                        default: t
                    }
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            }), e.defineProperties = void 0;
            var s = a(r(18)),
                u = o(r(20)),
                c = o(r(135)),
                l = r(58);
            e.defineProperties = function (e, r, n) {
                if (e.raw = [], e._fields = [], e.toJSON = function (t) {
                        if (void 0 === t && (t = !1), t) {
                            var r = {};
                            return e._fields.forEach((function (t) {
                                r[t] = "0x" + e[t].toString("hex")
                            })), r
                        }
                        return l.baToJSON(e.raw)
                    }, e.serialize = function serialize() {
                        return c.encode(e.raw)
                    }, r.forEach((function (r, n) {
                        function getter() {
                            return e.raw[n]
                        }

                        function setter(i) {
                            "00" !== (i = l.toBuffer(i)).toString("hex") || r.allowZero || (i = t.allocUnsafe(0)), r.allowLess && r.length ? (i = l.unpadBuffer(i), s.default(r.length >= i.length, "The field " + r.name + " must not have more " + r.length + " bytes")) : r.allowZero && 0 === i.length || !r.length || s.default(r.length === i.length, "The field " + r.name + " must have byte length of " + r.length), e.raw[n] = i
                        }
                        e._fields.push(r.name), Object.defineProperty(e, r.name, {
                            enumerable: !0,
                            configurable: !0,
                            get: getter,
                            set: setter
                        }), r.default && (e[r.name] = r.default), r.alias && Object.defineProperty(e, r.alias, {
                            enumerable: !1,
                            configurable: !0,
                            set: setter,
                            get: getter
                        })
                    })), n)
                    if ("string" == typeof n && (n = t.from(u.stripHexPrefix(n), "hex")), t.isBuffer(n) && (n = c.decode(n)), Array.isArray(n)) {
                        if (n.length > e._fields.length) throw new Error("wrong number of fields in data");
                        n.forEach((function (t, r) {
                            e[e._fields[r]] = l.toBuffer(t)
                        }))
                    } else {
                        if ("object" != typeof n) throw new Error("invalid data");
                        var i = Object.keys(n);
                        r.forEach((function (t) {
                            -1 !== i.indexOf(t.name) && (e[t.name] = n[t.name]), -1 !== i.indexOf(t.alias) && (e[t.alias] = n[t.alias])
                        }))
                    }
            }
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        var n = this && this.__createBinding || (Object.create ? function (t, e, r, n) {
                void 0 === n && (n = r), Object.defineProperty(t, n, {
                    enumerable: !0,
                    get: function () {
                        return e[r]
                    }
                })
            } : function (t, e, r, n) {
                void 0 === n && (n = r), t[n] = e[r]
            }),
            i = this && this.__setModuleDefault || (Object.create ? function (t, e) {
                Object.defineProperty(t, "default", {
                    enumerable: !0,
                    value: e
                })
            } : function (t, e) {
                t.default = e
            }),
            o = this && this.__importStar || function (t) {
                if (t && t.__esModule) return t;
                var e = {};
                if (null != t)
                    for (var r in t) "default" !== r && Object.hasOwnProperty.call(t, r) && n(e, t, r);
                return i(e, t), e
            },
            a = this && this.__importDefault || function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            };
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.rlp = e.BN = void 0;
        var s = a(r(57));
        e.BN = s.default;
        var u = o(r(135));
        e.rlp = u
    }, function (t, e, r) {
        (function (t) {
            var n, i = this && this.__extends || (n = function (t, e) {
                    return (n = Object.setPrototypeOf || {
                            __proto__: []
                        }
                        instanceof Array && function (t, e) {
                            t.__proto__ = e
                        } || function (t, e) {
                            for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r])
                        })(t, e)
                }, function (t, e) {
                    function __() {
                        this.constructor = t
                    }
                    n(t, e), t.prototype = null === e ? Object.create(e) : (__.prototype = e.prototype, new __)
                }),
                o = this && this.__assign || function () {
                    return (o = Object.assign || function (t) {
                        for (var e, r = 1, n = arguments.length; r < n; r++)
                            for (var i in e = arguments[r]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                        return t
                    }).apply(this, arguments)
                },
                a = this && this.__read || function (t, e) {
                    var r = "function" == typeof Symbol && t[Symbol.iterator];
                    if (!r) return t;
                    var n, i, o = r.call(t),
                        a = [];
                    try {
                        for (;
                            (void 0 === e || e-- > 0) && !(n = o.next()).done;) a.push(n.value)
                    } catch (t) {
                        i = {
                            error: t
                        }
                    } finally {
                        try {
                            n && !n.done && (r = o.return) && r.call(o)
                        } finally {
                            if (i) throw i.error
                        }
                    }
                    return a
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var s = r(56),
                u = r(200),
                c = r(70),
                l = r(334),
                h = t.from(1..toString(16).padStart(2, "0"), "hex"),
                d = function (e) {
                    function AccessListEIP2930Transaction(t, r) {
                        var n, i;
                        void 0 === r && (r = {});
                        var a = e.call(this, o(o({}, t), {
                            type: 1
                        })) || this;
                        a.DEFAULT_HARDFORK = "berlin";
                        var u = t.chainId,
                            h = t.accessList,
                            d = t.gasPrice;
                        if (a.common = a._getCommon(r.common, u), a.chainId = a.common.chainIdBN(), !a.common.isActivatedEIP(2930)) throw new Error("EIP-2930 not enabled on Common");
                        a.activeCapabilities = a.activeCapabilities.concat([2718, 2930]);
                        var p = l.AccessLists.getAccessListData(null != h ? h : []);
                        if (a.accessList = p.accessList, a.AccessListJSON = p.AccessListJSON, l.AccessLists.verifyAccessList(a.accessList), a.gasPrice = new s.BN(s.toBuffer("" === d ? "0x" : d)), a._validateCannotExceedMaxInteger({
                                gasPrice: a.gasPrice
                            }), a.v && !a.v.eqn(0) && !a.v.eqn(1)) throw new Error("The y-parity of the transaction should either be 0 or 1");
                        if (a.common.gteHardfork("homestead") && (null === (n = a.s) || void 0 === n ? void 0 : n.gt(c.N_DIV_2))) throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");
                        return (null === (i = null == r ? void 0 : r.freeze) || void 0 === i || i) && Object.freeze(a), a
                    }
                    return i(AccessListEIP2930Transaction, e), Object.defineProperty(AccessListEIP2930Transaction.prototype, "senderR", {
                        get: function () {
                            return this.r
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(AccessListEIP2930Transaction.prototype, "senderS", {
                        get: function () {
                            return this.s
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(AccessListEIP2930Transaction.prototype, "yParity", {
                        get: function () {
                            return this.v
                        },
                        enumerable: !1,
                        configurable: !0
                    }), AccessListEIP2930Transaction.fromTxData = function (t, e) {
                        return void 0 === e && (e = {}), new AccessListEIP2930Transaction(t, e)
                    }, AccessListEIP2930Transaction.fromSerializedTx = function (t, e) {
                        if (void 0 === e && (e = {}), !t.slice(0, 1).equals(h)) throw new Error("Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: 1, received: " + t.slice(0, 1).toString("hex"));
                        var r = s.rlp.decode(t.slice(1));
                        if (!Array.isArray(r)) throw new Error("Invalid serialized tx input: must be array");
                        return AccessListEIP2930Transaction.fromValuesArray(r, e)
                    }, AccessListEIP2930Transaction.fromRlpSerializedTx = function (t, e) {
                        return void 0 === e && (e = {}), AccessListEIP2930Transaction.fromSerializedTx(t, e)
                    }, AccessListEIP2930Transaction.fromValuesArray = function (t, e) {
                        if (void 0 === e && (e = {}), 8 !== t.length && 11 !== t.length) throw new Error("Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).");
                        var r = a(t, 11),
                            n = r[0],
                            i = r[1],
                            o = r[2],
                            u = r[3],
                            c = r[4],
                            l = r[5],
                            h = r[6],
                            d = r[7],
                            p = r[8],
                            m = r[9],
                            y = r[10];
                        return new AccessListEIP2930Transaction({
                            chainId: new s.BN(n),
                            nonce: i,
                            gasPrice: o,
                            gasLimit: u,
                            to: c,
                            value: l,
                            data: h,
                            accessList: null != d ? d : [],
                            v: void 0 !== p ? new s.BN(p) : void 0,
                            r: m,
                            s: y
                        }, e)
                    }, AccessListEIP2930Transaction.prototype.getDataFee = function () {
                        var t = e.prototype.getDataFee.call(this);
                        return t.iaddn(l.AccessLists.getDataFeeEIP2930(this.accessList, this.common)), t
                    }, AccessListEIP2930Transaction.prototype.getUpfrontCost = function () {
                        return this.gasLimit.mul(this.gasPrice).add(this.value)
                    }, AccessListEIP2930Transaction.prototype.raw = function () {
                        return [s.bnToUnpaddedBuffer(this.chainId), s.bnToUnpaddedBuffer(this.nonce), s.bnToUnpaddedBuffer(this.gasPrice), s.bnToUnpaddedBuffer(this.gasLimit), void 0 !== this.to ? this.to.buf : t.from([]), s.bnToUnpaddedBuffer(this.value), this.data, this.accessList, void 0 !== this.v ? s.bnToUnpaddedBuffer(this.v) : t.from([]), void 0 !== this.r ? s.bnToUnpaddedBuffer(this.r) : t.from([]), void 0 !== this.s ? s.bnToUnpaddedBuffer(this.s) : t.from([])]
                    }, AccessListEIP2930Transaction.prototype.serialize = function () {
                        var e = this.raw();
                        return t.concat([h, s.rlp.encode(e)])
                    }, AccessListEIP2930Transaction.prototype.getMessageToSign = function (e) {
                        void 0 === e && (e = !0);
                        var r = this.raw().slice(0, 8),
                            n = t.concat([h, s.rlp.encode(r)]);
                        return e ? s.keccak256(n) : n
                    }, AccessListEIP2930Transaction.prototype.hash = function () {
                        if (!this.isSigned()) throw new Error("Cannot call hash method if transaction is not signed");
                        return s.keccak256(this.serialize())
                    }, AccessListEIP2930Transaction.prototype.getMessageToVerifySignature = function () {
                        return this.getMessageToSign()
                    }, AccessListEIP2930Transaction.prototype.getSenderPublicKey = function () {
                        var t;
                        if (!this.isSigned()) throw new Error("Cannot call this method if transaction is not signed");
                        var e = this.getMessageToVerifySignature();
                        if (this.common.gteHardfork("homestead") && (null === (t = this.s) || void 0 === t ? void 0 : t.gt(c.N_DIV_2))) throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");
                        var r = this.yParity,
                            n = this.r,
                            i = this.s;
                        try {
                            return s.ecrecover(e, r.addn(27), s.bnToUnpaddedBuffer(n), s.bnToUnpaddedBuffer(i))
                        } catch (t) {
                            throw new Error("Invalid Signature")
                        }
                    }, AccessListEIP2930Transaction.prototype._processSignature = function (t, e, r) {
                        var n = {
                            common: this.common
                        };
                        return AccessListEIP2930Transaction.fromTxData({
                            chainId: this.chainId,
                            nonce: this.nonce,
                            gasPrice: this.gasPrice,
                            gasLimit: this.gasLimit,
                            to: this.to,
                            value: this.value,
                            data: this.data,
                            accessList: this.accessList,
                            v: new s.BN(t - 27),
                            r: new s.BN(e),
                            s: new s.BN(r)
                        }, n)
                    }, AccessListEIP2930Transaction.prototype.toJSON = function () {
                        var t = l.AccessLists.getAccessListJSON(this.accessList);
                        return {
                            chainId: s.bnToHex(this.chainId),
                            nonce: s.bnToHex(this.nonce),
                            gasPrice: s.bnToHex(this.gasPrice),
                            gasLimit: s.bnToHex(this.gasLimit),
                            to: void 0 !== this.to ? this.to.toString() : void 0,
                            value: s.bnToHex(this.value),
                            data: "0x" + this.data.toString("hex"),
                            accessList: t,
                            v: void 0 !== this.v ? s.bnToHex(this.v) : void 0,
                            r: void 0 !== this.r ? s.bnToHex(this.r) : void 0,
                            s: void 0 !== this.s ? s.bnToHex(this.s) : void 0
                        }
                    }, AccessListEIP2930Transaction
                }(u.BaseTransaction);
            e.default = d
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (t) {
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var n = r(56),
                i = r(331),
                o = function () {
                    function TransactionFactory() {}
                    return TransactionFactory.fromTxData = function (t, e) {
                        if (void 0 === e && (e = {}), "type" in t && void 0 !== t.type) {
                            var r = new n.BN(n.toBuffer(t.type)).toNumber();
                            if (0 === r) return i.Transaction.fromTxData(t, e);
                            if (1 === r) return i.AccessListEIP2930Transaction.fromTxData(t, e);
                            if (2 === r) return i.FeeMarketEIP1559Transaction.fromTxData(t, e);
                            throw new Error("Tx instantiation with type " + r + " not supported")
                        }
                        return i.Transaction.fromTxData(t, e)
                    }, TransactionFactory.fromSerializedData = function (t, e) {
                        if (void 0 === e && (e = {}), t[0] <= 127) {
                            var r = void 0;
                            switch (t[0]) {
                                case 1:
                                    r = 2930;
                                    break;
                                case 2:
                                    r = 1559;
                                    break;
                                default:
                                    throw new Error("TypedTransaction with ID " + t[0] + " unknown")
                            }
                            return 1559 === r ? i.FeeMarketEIP1559Transaction.fromSerializedTx(t, e) : i.AccessListEIP2930Transaction.fromSerializedTx(t, e)
                        }
                        return i.Transaction.fromSerializedTx(t, e)
                    }, TransactionFactory.fromBlockBodyData = function (e, r) {
                        if (void 0 === r && (r = {}), t.isBuffer(e)) return this.fromSerializedData(e, r);
                        if (Array.isArray(e)) return i.Transaction.fromValuesArray(e, r);
                        throw new Error("Cannot decode transaction: unknown type input")
                    }, TransactionFactory.getTransactionClass = function (t, e) {
                        if (void 0 === t && (t = 0), 0 == t || t >= 128 && t <= 255) return i.Transaction;
                        switch (t) {
                            case 1:
                                return i.AccessListEIP2930Transaction;
                            case 2:
                                return i.FeeMarketEIP1559Transaction;
                            default:
                                throw new Error("TypedTransaction with ID " + t + " unknown")
                        }
                    }, TransactionFactory
                }();
            e.default = o
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        (function (t) {
            var n, i = this && this.__extends || (n = function (t, e) {
                    return (n = Object.setPrototypeOf || {
                            __proto__: []
                        }
                        instanceof Array && function (t, e) {
                            t.__proto__ = e
                        } || function (t, e) {
                            for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r])
                        })(t, e)
                }, function (t, e) {
                    function __() {
                        this.constructor = t
                    }
                    n(t, e), t.prototype = null === e ? Object.create(e) : (__.prototype = e.prototype, new __)
                }),
                o = this && this.__assign || function () {
                    return (o = Object.assign || function (t) {
                        for (var e, r = 1, n = arguments.length; r < n; r++)
                            for (var i in e = arguments[r]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                        return t
                    }).apply(this, arguments)
                },
                a = this && this.__read || function (t, e) {
                    var r = "function" == typeof Symbol && t[Symbol.iterator];
                    if (!r) return t;
                    var n, i, o = r.call(t),
                        a = [];
                    try {
                        for (;
                            (void 0 === e || e-- > 0) && !(n = o.next()).done;) a.push(n.value)
                    } catch (t) {
                        i = {
                            error: t
                        }
                    } finally {
                        try {
                            n && !n.done && (r = o.return) && r.call(o)
                        } finally {
                            if (i) throw i.error
                        }
                    }
                    return a
                };
            Object.defineProperty(e, "__esModule", {
                value: !0
            });
            var s = r(56),
                u = r(200),
                c = r(70),
                l = r(334),
                h = t.from(2..toString(16).padStart(2, "0"), "hex"),
                d = function (e) {
                    function FeeMarketEIP1559Transaction(t, r) {
                        var n, i;
                        void 0 === r && (r = {});
                        var a = e.call(this, o(o({}, t), {
                            type: 2
                        })) || this;
                        a.DEFAULT_HARDFORK = "london";
                        var u = t.chainId,
                            h = t.accessList,
                            d = t.maxFeePerGas,
                            p = t.maxPriorityFeePerGas;
                        if (a.common = a._getCommon(r.common, u), a.chainId = a.common.chainIdBN(), !a.common.isActivatedEIP(1559)) throw new Error("EIP-1559 not enabled on Common");
                        a.activeCapabilities = a.activeCapabilities.concat([1559, 2718, 2930]);
                        var m = l.AccessLists.getAccessListData(null != h ? h : []);
                        if (a.accessList = m.accessList, a.AccessListJSON = m.AccessListJSON, l.AccessLists.verifyAccessList(a.accessList), a.maxFeePerGas = new s.BN(s.toBuffer("" === d ? "0x" : d)), a.maxPriorityFeePerGas = new s.BN(s.toBuffer("" === p ? "0x" : p)), a._validateCannotExceedMaxInteger({
                                maxFeePerGas: a.maxFeePerGas,
                                maxPriorityFeePerGas: a.maxPriorityFeePerGas
                            }, 256), a.maxFeePerGas.lt(a.maxPriorityFeePerGas)) throw new Error("maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)");
                        if (a.v && !a.v.eqn(0) && !a.v.eqn(1)) throw new Error("The y-parity of the transaction should either be 0 or 1");
                        if (a.common.gteHardfork("homestead") && (null === (n = a.s) || void 0 === n ? void 0 : n.gt(c.N_DIV_2))) throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");
                        return (null === (i = null == r ? void 0 : r.freeze) || void 0 === i || i) && Object.freeze(a), a
                    }
                    return i(FeeMarketEIP1559Transaction, e), Object.defineProperty(FeeMarketEIP1559Transaction.prototype, "senderR", {
                        get: function () {
                            return this.r
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(FeeMarketEIP1559Transaction.prototype, "senderS", {
                        get: function () {
                            return this.s
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(FeeMarketEIP1559Transaction.prototype, "yParity", {
                        get: function () {
                            return this.v
                        },
                        enumerable: !1,
                        configurable: !0
                    }), FeeMarketEIP1559Transaction.fromTxData = function (t, e) {
                        return void 0 === e && (e = {}), new FeeMarketEIP1559Transaction(t, e)
                    }, FeeMarketEIP1559Transaction.fromSerializedTx = function (t, e) {
                        if (void 0 === e && (e = {}), !t.slice(0, 1).equals(h)) throw new Error("Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: 2, received: " + t.slice(0, 1).toString("hex"));
                        var r = s.rlp.decode(t.slice(1));
                        if (!Array.isArray(r)) throw new Error("Invalid serialized tx input: must be array");
                        return FeeMarketEIP1559Transaction.fromValuesArray(r, e)
                    }, FeeMarketEIP1559Transaction.fromRlpSerializedTx = function (t, e) {
                        return void 0 === e && (e = {}), FeeMarketEIP1559Transaction.fromSerializedTx(t, e)
                    }, FeeMarketEIP1559Transaction.fromValuesArray = function (t, e) {
                        if (void 0 === e && (e = {}), 9 !== t.length && 12 !== t.length) throw new Error("Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).");
                        var r = a(t, 12),
                            n = r[0],
                            i = r[1],
                            o = r[2],
                            u = r[3],
                            c = r[4],
                            l = r[5],
                            h = r[6],
                            d = r[7],
                            p = r[8],
                            m = r[9],
                            y = r[10],
                            b = r[11];
                        return new FeeMarketEIP1559Transaction({
                            chainId: new s.BN(n),
                            nonce: i,
                            maxPriorityFeePerGas: o,
                            maxFeePerGas: u,
                            gasLimit: c,
                            to: l,
                            value: h,
                            data: d,
                            accessList: null != p ? p : [],
                            v: void 0 !== m ? new s.BN(m) : void 0,
                            r: y,
                            s: b
                        }, e)
                    }, FeeMarketEIP1559Transaction.prototype.getDataFee = function () {
                        var t = e.prototype.getDataFee.call(this);
                        return t.iaddn(l.AccessLists.getDataFeeEIP2930(this.accessList, this.common)), t
                    }, FeeMarketEIP1559Transaction.prototype.getUpfrontCost = function (t) {
                        void 0 === t && (t = new s.BN(0));
                        var e = s.BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(t)).add(t);
                        return this.gasLimit.mul(e).add(this.value)
                    }, FeeMarketEIP1559Transaction.prototype.raw = function () {
                        return [s.bnToUnpaddedBuffer(this.chainId), s.bnToUnpaddedBuffer(this.nonce), s.bnToUnpaddedBuffer(this.maxPriorityFeePerGas), s.bnToUnpaddedBuffer(this.maxFeePerGas), s.bnToUnpaddedBuffer(this.gasLimit), void 0 !== this.to ? this.to.buf : t.from([]), s.bnToUnpaddedBuffer(this.value), this.data, this.accessList, void 0 !== this.v ? s.bnToUnpaddedBuffer(this.v) : t.from([]), void 0 !== this.r ? s.bnToUnpaddedBuffer(this.r) : t.from([]), void 0 !== this.s ? s.bnToUnpaddedBuffer(this.s) : t.from([])]
                    }, FeeMarketEIP1559Transaction.prototype.serialize = function () {
                        var e = this.raw();
                        return t.concat([h, s.rlp.encode(e)])
                    }, FeeMarketEIP1559Transaction.prototype.getMessageToSign = function (e) {
                        void 0 === e && (e = !0);
                        var r = this.raw().slice(0, 9),
                            n = t.concat([h, s.rlp.encode(r)]);
                        return e ? s.keccak256(n) : n
                    }, FeeMarketEIP1559Transaction.prototype.hash = function () {
                        if (!this.isSigned()) throw new Error("Cannot call hash method if transaction is not signed");
                        return s.keccak256(this.serialize())
                    }, FeeMarketEIP1559Transaction.prototype.getMessageToVerifySignature = function () {
                        return this.getMessageToSign()
                    }, FeeMarketEIP1559Transaction.prototype.getSenderPublicKey = function () {
                        var t;
                        if (!this.isSigned()) throw new Error("Cannot call this method if transaction is not signed");
                        var e = this.getMessageToVerifySignature();
                        if (this.common.gteHardfork("homestead") && (null === (t = this.s) || void 0 === t ? void 0 : t.gt(c.N_DIV_2))) throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");
                        var r = this.v,
                            n = this.r,
                            i = this.s;
                        try {
                            return s.ecrecover(e, r.addn(27), s.bnToUnpaddedBuffer(n), s.bnToUnpaddedBuffer(i))
                        } catch (t) {
                            throw new Error("Invalid Signature")
                        }
                    }, FeeMarketEIP1559Transaction.prototype._processSignature = function (t, e, r) {
                        var n = {
                            common: this.common
                        };
                        return FeeMarketEIP1559Transaction.fromTxData({
                            chainId: this.chainId,
                            nonce: this.nonce,
                            maxPriorityFeePerGas: this.maxPriorityFeePerGas,
                            maxFeePerGas: this.maxFeePerGas,
                            gasLimit: this.gasLimit,
                            to: this.to,
                            value: this.value,
                            data: this.data,
                            accessList: this.accessList,
                            v: new s.BN(t - 27),
                            r: new s.BN(e),
                            s: new s.BN(r)
                        }, n)
                    }, FeeMarketEIP1559Transaction.prototype.toJSON = function () {
                        var t = l.AccessLists.getAccessListJSON(this.accessList);
                        return {
                            chainId: s.bnToHex(this.chainId),
                            nonce: s.bnToHex(this.nonce),
                            maxPriorityFeePerGas: s.bnToHex(this.maxPriorityFeePerGas),
                            maxFeePerGas: s.bnToHex(this.maxFeePerGas),
                            gasLimit: s.bnToHex(this.gasLimit),
                            to: void 0 !== this.to ? this.to.toString() : void 0,
                            value: s.bnToHex(this.value),
                            data: "0x" + this.data.toString("hex"),
                            accessList: t,
                            v: void 0 !== this.v ? s.bnToHex(this.v) : void 0,
                            r: void 0 !== this.r ? s.bnToHex(this.r) : void 0,
                            s: void 0 !== this.s ? s.bnToHex(this.s) : void 0
                        }
                    }, FeeMarketEIP1559Transaction
                }(u.BaseTransaction);
            e.default = d
        }).call(this, r(0).Buffer)
    }, function (t, e, r) {
        t.exports = function (t) {
            var e, r = this;
            return this.net.getId().then((function (t) {
                return e = t, r.getBlock(0)
            })).then((function (r) {
                var n = "private";
                return "0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3" === r.hash && 1 === e && (n = "main"), "0cd786a2425d16f152c658316c423e6ce1181e15c3295826d7c9904cba9ce303" === r.hash && 2 === e && (n = "morden"), "0x41941023680923e0fe4d74a34bdac8141f2540e3ae90623718e47d66d1ca4a2d" === r.hash && 3 === e && (n = "ropsten"), "0x6341fd3daf94b748c72ced5a5b26028f2474f5f00d824504e4fa37a75767e177" === r.hash && 4 === e && (n = "rinkeby"), "0xbf7e331f7f7c1dd2e05159666b3bf8bc7a8a3a9eb1d518969eab529dd9b88c1a" === r.hash && 5 === e && (n = "goerli"), "0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9" === r.hash && 42 === e && (n = "kovan"), "function" == typeof t && t(null, n), n
            })).catch((function (e) {
                if ("function" != typeof t) throw e;
                t(e)
            }))
        }
    }, function (t, e, r) {
        var n = r(174),
            i = r(180),
            o = r(48),
            a = r(335),
            s = r(25).formatters,
            u = function Personal() {
                var t = this;
                n.packageInit(this, arguments), this.net = new a(this);
                var e = null,
                    r = "latest";
                Object.defineProperty(this, "defaultAccount", {
                    get: function () {
                        return e
                    },
                    set: function (t) {
                        return t && (e = o.toChecksumAddress(s.inputAddressFormatter(t))), u.forEach((function (t) {
                            t.defaultAccount = e
                        })), t
                    },
                    enumerable: !0
                }), Object.defineProperty(this, "defaultBlock", {
                    get: function () {
                        return r
                    },
                    set: function (t) {
                        return r = t, u.forEach((function (t) {
                            t.defaultBlock = r
                        })), t
                    },
                    enumerable: !0
                });
                var u = [new i({
                    name: "getAccounts",
                    call: "personal_listAccounts",
                    params: 0,
                    outputFormatter: o.toChecksumAddress
                }), new i({
                    name: "newAccount",
                    call: "personal_newAccount",
                    params: 1,
                    inputFormatter: [null],
                    outputFormatter: o.toChecksumAddress
                }), new i({
                    name: "unlockAccount",
                    call: "personal_unlockAccount",
                    params: 3,
                    inputFormatter: [s.inputAddressFormatter, null, null]
                }), new i({
                    name: "lockAccount",
                    call: "personal_lockAccount",
                    params: 1,
                    inputFormatter: [s.inputAddressFormatter]
                }), new i({
                    name: "importRawKey",
                    call: "personal_importRawKey",
                    params: 2
                }), new i({
                    name: "sendTransaction",
                    call: "personal_sendTransaction",
                    params: 2,
                    inputFormatter: [s.inputTransactionFormatter, null]
                }), new i({
                    name: "signTransaction",
                    call: "personal_signTransaction",
                    params: 2,
                    inputFormatter: [s.inputTransactionFormatter, null]
                }), new i({
                    name: "sign",
                    call: "personal_sign",
                    params: 3,
                    inputFormatter: [s.inputSignFormatter, s.inputAddressFormatter, null]
                }), new i({
                    name: "ecRecover",
                    call: "personal_ecRecover",
                    params: 2,
                    inputFormatter: [s.inputSignFormatter, null]
                })];
                u.forEach((function (e) {
                    e.attachToObject(t), e.setRequestManager(t._requestManager), e.defaultBlock = t.defaultBlock, e.defaultAccount = t.defaultAccount
                }))
            };
        n.addProviders(u), t.exports = u
    }, function (t, e, r) {
        var n = r(336),
            i = r(339).subscriptions,
            o = r(202),
            a = r(874),
            s = function Shh() {
                var t = this;
                n.packageInit(this, arguments);
                var e = this.setRequestManager;
                this.setRequestManager = function (r) {
                    return e(r), t.net.setRequestManager(r), !0
                };
                var r = this.setProvider;
                this.setProvider = function () {
                    r.apply(t, arguments), t.setRequestManager(t._requestManager)
                }, this.net = new a(this), [new i({
                    name: "subscribe",
                    type: "shh",
                    subscriptions: {
                        messages: {
                            params: 1
                        }
                    }
                }), new o({
                    name: "getVersion",
                    call: "shh_version",
                    params: 0
                }), new o({
                    name: "getInfo",
                    call: "shh_info",
                    params: 0
                }), new o({
                    name: "setMaxMessageSize",
                    call: "shh_setMaxMessageSize",
                    params: 1
                }), new o({
                    name: "setMinPoW",
                    call: "shh_setMinPoW",
                    params: 1
                }), new o({
                    name: "markTrustedPeer",
                    call: "shh_markTrustedPeer",
                    params: 1
                }), new o({
                    name: "newKeyPair",
                    call: "shh_newKeyPair",
                    params: 0
                }), new o({
                    name: "addPrivateKey",
                    call: "shh_addPrivateKey",
                    params: 1
                }), new o({
                    name: "deleteKeyPair",
                    call: "shh_deleteKeyPair",
                    params: 1
                }), new o({
                    name: "hasKeyPair",
                    call: "shh_hasKeyPair",
                    params: 1
                }), new o({
                    name: "getPublicKey",
                    call: "shh_getPublicKey",
                    params: 1
                }), new o({
                    name: "getPrivateKey",
                    call: "shh_getPrivateKey",
                    params: 1
                }), new o({
                    name: "newSymKey",
                    call: "shh_newSymKey",
                    params: 0
                }), new o({
                    name: "addSymKey",
                    call: "shh_addSymKey",
                    params: 1
                }), new o({
                    name: "generateSymKeyFromPassword",
                    call: "shh_generateSymKeyFromPassword",
                    params: 1
                }), new o({
                    name: "hasSymKey",
                    call: "shh_hasSymKey",
                    params: 1
                }), new o({
                    name: "getSymKey",
                    call: "shh_getSymKey",
                    params: 1
                }), new o({
                    name: "deleteSymKey",
                    call: "shh_deleteSymKey",
                    params: 1
                }), new o({
                    name: "newMessageFilter",
                    call: "shh_newMessageFilter",
                    params: 1
                }), new o({
                    name: "getFilterMessages",
                    call: "shh_getFilterMessages",
                    params: 1
                }), new o({
                    name: "deleteMessageFilter",
                    call: "shh_deleteMessageFilter",
                    params: 1
                }), new o({
                    name: "post",
                    call: "shh_post",
                    params: 1,
                    inputFormatter: [null]
                }), new o({
                    name: "unsubscribe",
                    call: "shh_unsubscribe",
                    params: 1
                })].forEach((function (e) {
                    e.attachToObject(t), e.setRequestManager(t._requestManager)
                }))
            };
        s.prototype.clearSubscriptions = function () {
            this._requestManager.clearSubscriptions()
        }, n.addProviders(s), t.exports = s
    }, function (t, e, r) {
        const {
            callbackify: n
        } = r(59);
        var i = r(32).errors,
            o = r(338),
            a = r(864),
            s = r(865),
            u = function RequestManager(t, e) {
                this.provider = null, this.providers = RequestManager.providers, this.setProvider(t, e), this.subscriptions = new Map
            };
        u.givenProvider = s, u.providers = {
            WebsocketProvider: r(866),
            HttpProvider: r(868),
            IpcProvider: r(869)
        }, u.prototype.setProvider = function (t, e) {
            var r = this;
            if (t && "string" == typeof t && this.providers)
                if (/^http(s)?:\/\//i.test(t)) t = new this.providers.HttpProvider(t);
                else if (/^ws(s)?:\/\//i.test(t)) t = new this.providers.WebsocketProvider(t);
            else if (t && "object" == typeof e && "function" == typeof e.connect) t = new this.providers.IpcProvider(t, e);
            else if (t) throw new Error("Can't autodetect provider for \"" + t + '"');
            if (this.provider && this.provider.connected && this.clearSubscriptions(), this.provider = t || null, this.provider && this.provider.on) {
                "function" == typeof t.request ? this.provider.on("message", (function (t) {
                    if (t && "eth_subscription" === t.type && t.data) {
                        const e = t.data;
                        e.subscription && r.subscriptions.has(e.subscription) && r.subscriptions.get(e.subscription).callback(null, e.result)
                    }
                })) : this.provider.on("data", (function data(t, e) {
                    (t = t || e).method && t.params && t.params.subscription && r.subscriptions.has(t.params.subscription) && r.subscriptions.get(t.params.subscription).callback(null, t.params.result)
                })), this.provider.on("connect", (function connect() {
                    r.subscriptions.forEach((function (t) {
                        t.subscription.resubscribe()
                    }))
                })), this.provider.on("error", (function error(error) {
                    r.subscriptions.forEach((function (t) {
                        t.callback(error)
                    }))
                }));
                const e = function disconnect(t) {
                    r._isCleanCloseEvent(t) && !r._isIpcCloseError(t) || (r.subscriptions.forEach((function (e) {
                        e.callback(i.ConnectionCloseError(t)), r.subscriptions.delete(e.subscription.id)
                    })), r.provider && r.provider.emit && r.provider.emit("error", i.ConnectionCloseError(t))), r.provider && r.provider.emit && r.provider.emit("end", t)
                };
                this.provider.on("close", e), this.provider.on("disconnect", e)
            }
        }, u.prototype.send = function (t, e) {
            if (e = e || function () {}, !this.provider) return e(i.InvalidProvider());
            const {
                method: r,
                params: a
            } = t, s = o.toPayload(r, a), u = this._jsonrpcResultCallback(e, s);
            if (this.provider.request) {
                n(this.provider.request.bind(this.provider))({
                    method: r,
                    params: a
                }, e)
            } else if (this.provider.sendAsync) this.provider.sendAsync(s, u);
            else {
                if (!this.provider.send) throw new Error("Provider does not have a request or send method to use.");
                this.provider.send(s, u)
            }
        }, u.prototype.sendBatch = function (t, e) {
            if (!this.provider) return e(i.InvalidProvider());
            var r = o.toBatchPayload(t);
            this.provider[this.provider.sendAsync ? "sendAsync" : "send"](r, (function (t, r) {
                return t ? e(t) : Array.isArray(r) ? void e(null, r) : e(i.InvalidResponse(r))
            }))
        }, u.prototype.addSubscription = function (t, e) {
            if (!this.provider.on) throw new Error("The provider doesn't support subscriptions: " + this.provider.constructor.name);
            this.subscriptions.set(t.id, {
                callback: e,
                subscription: t
            })
        }, u.prototype.removeSubscription = function (t, e) {
            if (this.subscriptions.has(t)) {
                var r = this.subscriptions.get(t).subscription.options.type;
                return this.subscriptions.delete(t), void this.send({
                    method: r + "_unsubscribe",
                    params: [t]
                }, e)
            }
            "function" == typeof e && e(null)
        }, u.prototype.clearSubscriptions = function (t) {
            try {
                var e = this;
                return this.subscriptions.size > 0 && this.subscriptions.forEach((function (r, n) {
                    t && "syncing" === r.name || e.removeSubscription(n)
                })), this.provider.reset && this.provider.reset(), !0
            } catch (t) {
                throw new Error("Error while clearing subscriptions: " + t)
            }
        }, u.prototype._isCleanCloseEvent = function (t) {
            return "object" == typeof t && ([1e3].includes(t.code) || !0 === t.wasClean)
        }, u.prototype._isIpcCloseError = function (t) {
            return "boolean" == typeof t && t
        }, u.prototype._jsonrpcResultCallback = function (t, e) {
            return function (r, n) {
                return n && n.id && e.id !== n.id ? t(new Error(`Wrong response id ${n.id} (expected: ${e.id}) in ${JSON.stringify(e)}`)) : r ? t(r) : n && n.error ? t(i.ErrorResponse(n)) : o.isValidResponse(n) ? void t(null, n.result) : t(i.InvalidResponse(n))
            }
        }, t.exports = {
            Manager: u,
            BatchManager: a
        }
    }, function (t, e, r) {
        t.exports = {
            ErrorResponse: function (t) {
                var e = t && t.error && t.error.message ? t.error.message : JSON.stringify(t),
                    r = t.error && t.error.data ? t.error.data : null,
                    n = new Error("Returned error: " + e);
                return n.data = r, n
            },
            InvalidNumberOfParams: function (t, e, r) {
                return new Error('Invalid number of parameters for "' + r + '". Got ' + t + " expected " + e + "!")
            },
            InvalidConnection: function (t, e) {
                return this.ConnectionError("CONNECTION ERROR: Couldn't connect to node " + t + ".", e)
            },
            InvalidProvider: function () {
                return new Error("Provider not set or invalid")
            },
            InvalidResponse: function (t) {
                var e = t && t.error && t.error.message ? t.error.message : "Invalid JSON RPC response: " + JSON.stringify(t);
                return new Error(e)
            },
            ConnectionTimeout: function (t) {
                return new Error("CONNECTION TIMEOUT: timeout of " + t + " ms achived")
            },
            ConnectionNotOpenError: function (t) {
                return this.ConnectionError("connection not open on send()", t)
            },
            ConnectionCloseError: function (t) {
                return "object" == typeof t && t.code && t.reason ? this.ConnectionError("CONNECTION ERROR: The connection got closed with the close code `" + t.code + "` and the following reason string `" + t.reason + "`", t) : new Error("CONNECTION ERROR: The connection closed unexpectedly")
            },
            MaxAttemptsReachedOnReconnectingError: function () {
                return new Error("Maximum number of reconnect attempts reached!")
            },
            PendingRequestsOnReconnectingError: function () {
                return new Error("CONNECTION ERROR: Provider started to reconnect before the response got received!")
            },
            ConnectionError: function (t, e) {
                const r = new Error(t);
                return e && (r.code = e.code, r.reason = e.reason), r
            },
            RevertInstructionError: function (t, e) {
                var r = new Error("Your request got reverted with the following reason string: " + t);
                return r.reason = t, r.signature = e, r
            },
            TransactionRevertInstructionError: function (t, e, r) {
                var n = new Error("Transaction has been reverted by the EVM:\n" + JSON.stringify(r, null, 2));
                return n.reason = t, n.signature = e, n.receipt = r, n
            },
            TransactionError: function (t, e) {
                var r = new Error(t);
                return r.receipt = e, r
            },
            NoContractAddressFoundError: function (t) {
                return this.TransactionError("The transaction receipt didn't contain a contract address.", t)
            },
            ContractCodeNotStoredError: function (t) {
                return this.TransactionError("The contract code couldn't be stored, please check your gas limit.", t)
            },
            TransactionRevertedWithoutReasonError: function (t) {
                return this.TransactionError("Transaction has been reverted by the EVM:\n" + JSON.stringify(t, null, 2), t)
            },
            TransactionOutOfGasError: function (t) {
                return this.TransactionError("Transaction ran out of gas. Please provide more gas:\n" + JSON.stringify(t, null, 2), t)
            },
            ResolverMethodMissingError: function (t, e) {
                return new Error("The resolver at " + t + 'does not implement requested method: "' + e + '".')
            },
            ContractMissingABIError: function () {
                return new Error("You must provide the json interface of the contract when instantiating a contract object.")
            },
            ContractOnceRequiresCallbackError: function () {
                return new Error("Once requires a callback as the second parameter.")
            },
            ContractEventDoesNotExistError: function (t) {
                return new Error('Event "' + t + "\" doesn't exist in this contract.")
            },
            ContractReservedEventError: function (t) {
                return new Error('The event "' + t + "\" is a reserved event name, you can't use it.")
            },
            ContractMissingDeployDataError: function () {
                return new Error('No "data" specified in neither the given options, nor the default options.')
            },
            ContractNoAddressDefinedError: function () {
                return new Error("This contract object doesn't have address set yet, please set an address first.")
            },
            ContractNoFromAddressDefinedError: function () {
                return new Error('No "from" address specified in neither the given options, nor the default options.')
            }
        }
    }, function (t, e, r) {
        var n = r(99),
            i = r(863),
            outputBigNumberFormatter = function (t) {
                return n.toBN(t).toString(10)
            },
            inputBlockNumberFormatter = function (t) {
                if (void 0 !== t) return function (t) {
                    return "latest" === t || "pending" === t || "earliest" === t
                }(t) ? t : "genesis" === t ? "0x0" : n.isHexStrict(t) ? "string" == typeof t ? t.toLowerCase() : t : n.numberToHex(t)
            },
            _txInputFormatter = function (t) {
                if (t.to && (t.to = inputAddressFormatter(t.to)), t.data && t.input) throw new Error('You can\'t have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.');
                if (!t.data && t.input && (t.data = t.input, delete t.input), t.data && !t.data.startsWith("0x") && (t.data = "0x" + t.data), t.data && !n.isHex(t.data)) throw new Error("The data field must be HEX encoded data.");
                return (t.gas || t.gasLimit) && (t.gas = t.gas || t.gasLimit), (t.maxPriorityFeePerGas || t.maxFeePerGas) && delete t.gasPrice, ["gasPrice", "gas", "value", "maxPriorityFeePerGas", "maxFeePerGas", "nonce"].filter((function (e) {
                    return void 0 !== t[e]
                })).forEach((function (e) {
                    t[e] = n.numberToHex(t[e])
                })), t
            },
            outputTransactionFormatter = function (t) {
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), t.nonce = n.hexToNumber(t.nonce), t.gas = n.hexToNumber(t.gas), t.gasPrice && (t.gasPrice = outputBigNumberFormatter(t.gasPrice)), t.maxFeePerGas && (t.maxFeePerGas = outputBigNumberFormatter(t.maxFeePerGas)), t.maxPriorityFeePerGas && (t.maxPriorityFeePerGas = outputBigNumberFormatter(t.maxPriorityFeePerGas)), t.type && (t.type = n.hexToNumber(t.type)), t.value = outputBigNumberFormatter(t.value), t.to && n.isAddress(t.to) ? t.to = n.toChecksumAddress(t.to) : t.to = null, t.from && (t.from = n.toChecksumAddress(t.from)), t
            },
            outputLogFormatter = function (t) {
                if ("string" == typeof t.blockHash && "string" == typeof t.transactionHash && "string" == typeof t.logIndex) {
                    var e = n.sha3(t.blockHash.replace("0x", "") + t.transactionHash.replace("0x", "") + t.logIndex.replace("0x", ""));
                    t.id = "log_" + e.replace("0x", "").substr(0, 8)
                } else t.id || (t.id = null);
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), null !== t.logIndex && (t.logIndex = n.hexToNumber(t.logIndex)), t.address && (t.address = n.toChecksumAddress(t.address)), t
            },
            inputAddressFormatter = function (t) {
                var e = new i(t);
                if (e.isValid() && e.isDirect()) return e.toAddress().toLowerCase();
                if (n.isAddress(t)) return "0x" + t.toLowerCase().replace("0x", "");
                throw new Error(`Provided address ${t} is invalid, the capitalization checksum test failed, or it's an indirect IBAN address which can't be converted.`)
            };
        t.exports = {
            inputDefaultBlockNumberFormatter: function (t) {
                return inputBlockNumberFormatter(this && null == t ? this.defaultBlock : t)
            },
            inputBlockNumberFormatter: inputBlockNumberFormatter,
            inputCallFormatter: function (t) {
                var e = (t = _txInputFormatter(t)).from || (this ? this.defaultAccount : null);
                return e && (t.from = inputAddressFormatter(e)), t
            },
            inputTransactionFormatter: function (t) {
                if ("number" != typeof (t = _txInputFormatter(t)).from && (!t.from || "object" != typeof t.from)) {
                    if (t.from = t.from || (this ? this.defaultAccount : null), !t.from && "number" != typeof t.from) throw new Error('The send transactions "from" field must be defined!');
                    t.from = inputAddressFormatter(t.from)
                }
                return t
            },
            inputAddressFormatter: inputAddressFormatter,
            inputPostFormatter: function (t) {
                return t.ttl && (t.ttl = n.numberToHex(t.ttl)), t.workToProve && (t.workToProve = n.numberToHex(t.workToProve)), t.priority && (t.priority = n.numberToHex(t.priority)), Array.isArray(t.topics) || (t.topics = t.topics ? [t.topics] : []), t.topics = t.topics.map((function (t) {
                    return 0 === t.indexOf("0x") ? t : n.fromUtf8(t)
                })), t
            },
            inputLogFormatter: function (t) {
                var toTopic = function (t) {
                    return null == t ? null : 0 === (t = String(t)).indexOf("0x") ? t : n.fromUtf8(t)
                };
                return void 0 === t && (t = {}), void 0 === t.fromBlock && (t = {
                    ...t,
                    fromBlock: "latest"
                }), (t.fromBlock || 0 === t.fromBlock) && (t.fromBlock = inputBlockNumberFormatter(t.fromBlock)), (t.toBlock || 0 === t.toBlock) && (t.toBlock = inputBlockNumberFormatter(t.toBlock)), t.topics = t.topics || [], t.topics = t.topics.map((function (t) {
                    return Array.isArray(t) ? t.map(toTopic) : toTopic(t)
                })), toTopic = null, t.address && (t.address = Array.isArray(t.address) ? t.address.map((function (t) {
                    return inputAddressFormatter(t)
                })) : inputAddressFormatter(t.address)), t
            },
            inputSignFormatter: function (t) {
                return n.isHexStrict(t) ? t : n.utf8ToHex(t)
            },
            inputStorageKeysFormatter: function (t) {
                return t.map(n.numberToHex)
            },
            outputProofFormatter: function (t) {
                return t.address = n.toChecksumAddress(t.address), t.nonce = n.hexToNumberString(t.nonce), t.balance = n.hexToNumberString(t.balance), t
            },
            outputBigNumberFormatter: outputBigNumberFormatter,
            outputTransactionFormatter: outputTransactionFormatter,
            outputTransactionReceiptFormatter: function (t) {
                if ("object" != typeof t) throw new Error("Received receipt is invalid: " + t);
                return null !== t.blockNumber && (t.blockNumber = n.hexToNumber(t.blockNumber)), null !== t.transactionIndex && (t.transactionIndex = n.hexToNumber(t.transactionIndex)), t.cumulativeGasUsed = n.hexToNumber(t.cumulativeGasUsed), t.gasUsed = n.hexToNumber(t.gasUsed), Array.isArray(t.logs) && (t.logs = t.logs.map(outputLogFormatter)), t.contractAddress && (t.contractAddress = n.toChecksumAddress(t.contractAddress)), void 0 !== t.status && null !== t.status && (t.status = Boolean(parseInt(t.status))), t
            },
            outputBlockFormatter: function (t) {
                return t.gasLimit = n.hexToNumber(t.gasLimit), t.gasUsed = n.hexToNumber(t.gasUsed), t.size = n.hexToNumber(t.size), t.timestamp = n.hexToNumber(t.timestamp), null !== t.number && (t.number = n.hexToNumber(t.number)), t.difficulty && (t.difficulty = outputBigNumberFormatter(t.difficulty)), t.totalDifficulty && (t.totalDifficulty = outputBigNumberFormatter(t.totalDifficulty)), Array.isArray(t.transactions) && t.transactions.forEach((function (t) {
                    if ("string" != typeof t) return outputTransactionFormatter(t)
                })), t.miner && (t.miner = n.toChecksumAddress(t.miner)), t
            },
            outputLogFormatter: outputLogFormatter,
            outputPostFormatter: function (t) {
                return t.expiry = n.hexToNumber(t.expiry), t.sent = n.hexToNumber(t.sent), t.ttl = n.hexToNumber(t.ttl), t.workProved = n.hexToNumber(t.workProved), t.topics || (t.topics = []), t.topics = t.topics.map((function (t) {
                    return n.toUtf8(t)
                })), t
            },
            outputSyncingFormatter: function (t) {
                return t.startingBlock = n.hexToNumber(t.startingBlock), t.currentBlock = n.hexToNumber(t.currentBlock), t.highestBlock = n.hexToNumber(t.highestBlock), t.knownStates && (t.knownStates = n.hexToNumber(t.knownStates), t.pulledStates = n.hexToNumber(t.pulledStates)), t
            }
        }
    }, function (t, e) {}, function (t, e, r) {
        var n = r(137),
            i = r(337),
            _parseNumber = function (t) {
                var e = typeof t;
                if ("string" === e) return i.isHexStrict(t) ? new n(t.replace(/0x/i, ""), 16) : new n(t, 10);
                if ("number" === e) return new n(t);
                if (i.isBigNumber(t)) return new n(t.toString(10));
                if (i.isBN(t)) return t;
                throw new Error(t + " is not a number")
            },
            _solidityPack = function (t, e, r) {
                var o, a;
                if ("bytes" === (t = function (t) {
                        return t.startsWith("int[") ? "int256" + t.slice(3) : "int" === t ? "int256" : t.startsWith("uint[") ? "uint256" + t.slice(4) : "uint" === t ? "uint256" : t.startsWith("fixed[") ? "fixed128x128" + t.slice(5) : "fixed" === t ? "fixed128x128" : t.startsWith("ufixed[") ? "ufixed128x128" + t.slice(6) : "ufixed" === t ? "ufixed128x128" : t
                    }(t))) {
                    if (e.replace(/^0x/i, "").length % 2 != 0) throw new Error("Invalid bytes characters " + e.length);
                    return e
                }
                if ("string" === t) return i.utf8ToHex(e);
                if ("bool" === t) return e ? "01" : "00";
                if (t.startsWith("address")) {
                    if (o = r ? 64 : 40, !i.isAddress(e)) throw new Error(e + " is not a valid address, or the checksum is invalid.");
                    return i.leftPad(e.toLowerCase(), o)
                }
                if (o = function (t) {
                        var e = /^\D+(\d+).*$/.exec(t);
                        return e ? parseInt(e[1], 10) : null
                    }(t), t.startsWith("bytes")) {
                    if (!o) throw new Error("bytes[] not yet supported in solidity");
                    if (r && (o = 32), o < 1 || o > 32 || o < e.replace(/^0x/i, "").length / 2) throw new Error("Invalid bytes" + o + " for " + e);
                    return i.rightPad(e, 2 * o)
                }
                if (t.startsWith("uint")) {
                    if (o % 8 || o < 8 || o > 256) throw new Error("Invalid uint" + o + " size");
                    if ((a = _parseNumber(e)).bitLength() > o) throw new Error("Supplied uint exceeds width: " + o + " vs " + a.bitLength());
                    if (a.lt(new n(0))) throw new Error("Supplied uint " + a.toString() + " is negative");
                    return o ? i.leftPad(a.toString("hex"), o / 8 * 2) : a
                }
                if (t.startsWith("int")) {
                    if (o % 8 || o < 8 || o > 256) throw new Error("Invalid int" + o + " size");
                    if ((a = _parseNumber(e)).bitLength() > o) throw new Error("Supplied int exceeds width: " + o + " vs " + a.bitLength());
                    return a.lt(new n(0)) ? a.toTwos(o).toString("hex") : o ? i.leftPad(a.toString("hex"), o / 8 * 2) : a
                }
                throw new Error("Unsupported or invalid type: " + t)
            },
            _processSolidityEncodePackedArgs = function (t) {
                if (Array.isArray(t)) throw new Error("Autodetection of array types is not supported.");
                var e, r, o = "";
                if (t && "object" == typeof t && (t.hasOwnProperty("v") || t.hasOwnProperty("t") || t.hasOwnProperty("value") || t.hasOwnProperty("type")) ? (e = t.hasOwnProperty("t") ? t.t : t.type, o = t.hasOwnProperty("v") ? t.v : t.value) : (e = i.toHex(t, !0), o = i.toHex(t), e.startsWith("int") || e.startsWith("uint") || (e = "bytes")), !e.startsWith("int") && !e.startsWith("uint") || "string" != typeof o || /^(-)?0x/i.test(o) || (o = new n(o)), Array.isArray(o)) {
                    if ((r = function (t) {
                            var e = /^\D+\d*\[(\d+)\]$/.exec(t);
                            return e ? parseInt(e[1], 10) : null
                        }(e)) && o.length !== r) throw new Error(e + " is not matching the given array " + JSON.stringify(o));
                    r = o.length
                }
                return Array.isArray(o) ? o.map((function (t) {
                    return _solidityPack(e, t, r).toString("hex").replace("0x", "")
                })).join("") : _solidityPack(e, o, r).toString("hex").replace("0x", "")
            };
        t.exports = {
            soliditySha3: function () {
                var t = Array.prototype.slice.call(arguments),
                    e = t.map(_processSolidityEncodePackedArgs);
                return i.sha3("0x" + e.join(""))
            },
            soliditySha3Raw: function () {
                return i.sha3Raw("0x" + Array.prototype.slice.call(arguments).map(_processSolidityEncodePackedArgs).join(""))
            },
            encodePacked: function () {
                var t = Array.prototype.slice.call(arguments),
                    e = t.map(_processSolidityEncodePackedArgs);
                return "0x" + e.join("").toLowerCase()
            }
        }
    }, function (t, e, r) {
        const n = r(99),
            i = r(137),
            iso13616Prepare = function (t) {
                const e = "A".charCodeAt(0),
                    r = "Z".charCodeAt(0);
                return (t = (t = t.toUpperCase()).substr(4) + t.substr(0, 4)).split("").map((function (t) {
                    const n = t.charCodeAt(0);
                    return n >= e && n <= r ? n - e + 10 : t
                })).join("")
            },
            mod9710 = function (t) {
                let e, r = t;
                for (; r.length > 2;) e = r.slice(0, 9), r = parseInt(e, 10) % 97 + r.slice(e.length);
                return parseInt(r, 10) % 97
            };
        class Iban {
            constructor(t) {
                this._iban = t
            }
            static toAddress(t) {
                if (!(t = new Iban(t)).isDirect()) throw new Error("IBAN is indirect and can't be converted");
                return t.toAddress()
            }
            static toIban(t) {
                return Iban.fromAddress(t).toString()
            }
            static fromAddress(t) {
                if (!n.isAddress(t)) throw new Error("Provided address is not a valid address: " + t);
                t = t.replace("0x", "").replace("0X", "");
                const e = function (t, e) {
                    let r = t;
                    for (; r.length < 2 * e;) r = "0" + r;
                    return r
                }(new i(t, 16).toString(36), 15);
                return Iban.fromBban(e.toUpperCase())
            }
            static fromBban(t) {
                const e = ("0" + (98 - mod9710(iso13616Prepare("XE00" + t)))).slice(-2);
                return new Iban("XE" + e + t)
            }
            static createIndirect(t) {
                return Iban.fromBban("ETH" + t.institution + t.identifier)
            }
            static isValid(t) {
                return new Iban(t).isValid()
            }
            isValid() {
                return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban) && 1 === mod9710(iso13616Prepare(this._iban))
            }
            isDirect() {
                return 34 === this._iban.length || 35 === this._iban.length
            }
            isIndirect() {
                return 20 === this._iban.length
            }
            checksum() {
                return this._iban.substr(2, 2)
            }
            institution() {
                return this.isIndirect() ? this._iban.substr(7, 4) : ""
            }
            client() {
                return this.isIndirect() ? this._iban.substr(11) : ""
            }
            toAddress() {
                if (this.isDirect()) {
                    const t = this._iban.substr(4),
                        e = new i(t, 36);
                    return n.toChecksumAddress(e.toString(16, 20))
                }
                return ""
            }
            toString() {
                return this._iban
            }
        }
        t.exports = Iban
    }, function (t, e, r) {
        var n = r(338),
            i = r(32).errors,
            Batch = function (t) {
                this.requestManager = t, this.requests = []
            };
        Batch.prototype.add = function (t) {
            this.requests.push(t)
        }, Batch.prototype.execute = function () {
            var t = this.requests;
            this.requestManager.sendBatch(t, (function (e, r) {
                r = r || [], t.map((function (t, e) {
                    return r[e] || {}
                })).forEach((function (e, r) {
                    if (t[r].callback) {
                        if (e && e.error) return t[r].callback(i.ErrorResponse(e));
                        if (!n.isValidResponse(e)) return t[r].callback(i.InvalidResponse(e));
                        try {
                            t[r].callback(null, t[r].format ? t[r].format(e.result) : e.result)
                        } catch (e) {
                            t[r].callback(e)
                        }
                    }
                }))
            }))
        }, t.exports = Batch
    }, function (t, e, r) {
        var n, i = null;
        try {
            n = Function("return this")()
        } catch (t) {
            n = window
        }
        void 0 !== n.ethereum ? i = n.ethereum : void 0 !== n.web3 && n.web3.currentProvider && (n.web3.currentProvider.sendAsync && (n.web3.currentProvider.send = n.web3.currentProvider.sendAsync, delete n.web3.currentProvider.sendAsync), !n.web3.currentProvider.on && n.web3.currentProvider.connection && "ipcProviderWrapper" === n.web3.currentProvider.connection.constructor.name && (n.web3.currentProvider.on = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            switch (t) {
                case "data":
                    this.connection.on("data", (function (t) {
                        var r = "";
                        t = t.toString();
                        try {
                            r = JSON.parse(t)
                        } catch (r) {
                            return e(new Error("Couldn't parse response data" + t))
                        }
                        r.id || -1 === r.method.indexOf("_subscription") || e(null, r)
                    }));
                    break;
                default:
                    this.connection.on(t, e)
            }
        }), i = n.web3.currentProvider), t.exports = i
    }, function (t, e, r) {
        var n = r(201),
            i = r(867),
            o = r(32).errors,
            a = r(83).w3cwebsocket,
            s = function WebsocketProvider(t, e) {
                n.call(this), e = e || {}, this.url = t, this._customTimeout = e.timeout || 15e3, this.headers = e.headers || {}, this.protocol = e.protocol || void 0, this.reconnectOptions = Object.assign({
                    auto: !1,
                    delay: 5e3,
                    maxAttempts: !1,
                    onTimeout: !1
                }, e.reconnect), this.clientConfig = e.clientConfig || void 0, this.requestOptions = e.requestOptions || void 0, this.DATA = "data", this.CLOSE = "close", this.ERROR = "error", this.CONNECT = "connect", this.RECONNECT = "reconnect", this.connection = null, this.requestQueue = new Map, this.responseQueue = new Map, this.reconnectAttempts = 0, this.reconnecting = !1;
                var r = i.parseURL(t);
                r.username && r.password && (this.headers.authorization = "Basic " + i.btoa(r.username + ":" + r.password)), r.auth && (this.headers.authorization = "Basic " + i.btoa(r.auth)), Object.defineProperty(this, "connected", {
                    get: function () {
                        return this.connection && this.connection.readyState === this.connection.OPEN
                    },
                    enumerable: !0
                }), this.connect()
            };
        (s.prototype = Object.create(n.prototype)).constructor = s, s.prototype.connect = function () {
            this.connection = new a(this.url, this.protocol, void 0, this.headers, this.requestOptions, this.clientConfig), this._addSocketListeners()
        }, s.prototype._onMessage = function (t) {
            var e = this;
            this._parseResponse("string" == typeof t.data ? t.data : "").forEach((function (t) {
                if (t.method && -1 !== t.method.indexOf("_subscription")) e.emit(e.DATA, t);
                else {
                    var r = t.id;
                    Array.isArray(t) && (r = t[0].id), e.responseQueue.has(r) && (void 0 !== e.responseQueue.get(r).callback && e.responseQueue.get(r).callback(!1, t), e.responseQueue.delete(r))
                }
            }))
        }, s.prototype._onConnect = function () {
            if (this.emit(this.CONNECT), this.reconnectAttempts = 0, this.reconnecting = !1, this.requestQueue.size > 0) {
                var t = this;
                this.requestQueue.forEach((function (e, r) {
                    t.send(e.payload, e.callback), t.requestQueue.delete(r)
                }))
            }
        }, s.prototype._onClose = function (t) {
            var e = this;
            !this.reconnectOptions.auto || [1e3, 1001].includes(t.code) && !1 !== t.wasClean ? (this.emit(this.CLOSE, t), this.requestQueue.size > 0 && this.requestQueue.forEach((function (r, n) {
                r.callback(o.ConnectionNotOpenError(t)), e.requestQueue.delete(n)
            })), this.responseQueue.size > 0 && this.responseQueue.forEach((function (r, n) {
                r.callback(o.InvalidConnection("on WS", t)), e.responseQueue.delete(n)
            })), this._removeSocketListeners(), this.removeAllListeners()) : this.reconnect()
        }, s.prototype._addSocketListeners = function () {
            this.connection.addEventListener("message", this._onMessage.bind(this)), this.connection.addEventListener("open", this._onConnect.bind(this)), this.connection.addEventListener("close", this._onClose.bind(this))
        }, s.prototype._removeSocketListeners = function () {
            this.connection.removeEventListener("message", this._onMessage), this.connection.removeEventListener("open", this._onConnect), this.connection.removeEventListener("close", this._onClose)
        }, s.prototype._parseResponse = function (t) {
            var e = this,
                r = [];
            return t.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach((function (t) {
                e.lastChunk && (t = e.lastChunk + t);
                var n = null;
                try {
                    n = JSON.parse(t)
                } catch (r) {
                    return e.lastChunk = t, clearTimeout(e.lastChunkTimeout), void(e.lastChunkTimeout = setTimeout((function () {
                        e.reconnectOptions.auto && e.reconnectOptions.onTimeout ? e.reconnect() : (e.emit(e.ERROR, o.ConnectionTimeout(e._customTimeout)), e.requestQueue.size > 0 && e.requestQueue.forEach((function (t, r) {
                            t.callback(o.ConnectionTimeout(e._customTimeout)), e.requestQueue.delete(r)
                        })))
                    }), e._customTimeout))
                }
                clearTimeout(e.lastChunkTimeout), e.lastChunk = null, n && r.push(n)
            })), r
        }, s.prototype.send = function (t, e) {
            var r = t.id,
                n = {
                    payload: t,
                    callback: e
                };
            if (Array.isArray(t) && (r = t[0].id), this.connection.readyState === this.connection.CONNECTING || this.reconnecting) this.requestQueue.set(r, n);
            else {
                if (this.connection.readyState !== this.connection.OPEN) return this.requestQueue.delete(r), this.emit(this.ERROR, o.ConnectionNotOpenError()), void n.callback(o.ConnectionNotOpenError());
                this.responseQueue.set(r, n), this.requestQueue.delete(r);
                try {
                    this.connection.send(JSON.stringify(n.payload))
                } catch (t) {
                    n.callback(t), this.responseQueue.delete(r)
                }
            }
        }, s.prototype.reset = function () {
            this.responseQueue.clear(), this.requestQueue.clear(), this.removeAllListeners(), this._removeSocketListeners(), this._addSocketListeners()
        }, s.prototype.disconnect = function (t, e) {
            this._removeSocketListeners(), this.connection.close(t || 1e3, e)
        }, s.prototype.supportsSubscriptions = function () {
            return !0
        }, s.prototype.reconnect = function () {
            var t = this;
            this.reconnecting = !0, this.responseQueue.size > 0 && this.responseQueue.forEach((function (e, r) {
                e.callback(o.PendingRequestsOnReconnectingError()), t.responseQueue.delete(r)
            })), !this.reconnectOptions.maxAttempts || this.reconnectAttempts < this.reconnectOptions.maxAttempts ? setTimeout((function () {
                t.reconnectAttempts++, t._removeSocketListeners(), t.emit(t.RECONNECT, t.reconnectAttempts), t.connect()
            }), this.reconnectOptions.delay) : (this.emit(this.ERROR, o.MaxAttemptsReachedOnReconnectingError()), this.reconnecting = !1, this.requestQueue.size > 0 && this.requestQueue.forEach((function (e, r) {
                e.callback(o.MaxAttemptsReachedOnReconnectingError()), t.requestQueue.delete(r)
            })))
        }, t.exports = s
    }, function (t, e, r) {
        (function (e, n) {
            var i = "[object process]" === Object.prototype.toString.call(void 0 !== e ? e : 0),
                o = "undefined" != typeof navigator && "ReactNative" === navigator.product,
                a = null,
                s = null;
            if (i || o) {
                a = function (t) {
                    return n.from(t).toString("base64")
                };
                var u = r(16);
                if (u.URL) {
                    var c = u.URL;
                    s = function (t) {
                        return new c(t)
                    }
                } else s = r(16).parse
            } else a = btoa.bind(window), s = function (t) {
                return new URL(t)
            };
            t.exports = {
                parseURL: s,
                btoa: a
            }
        }).call(this, r(7), r(0).Buffer)
    }, function (t, e, r) {
        var n = r(32).errors,
            i = r(84).XMLHttpRequest,
            o = r(51),
            a = r(68),
            s = function HttpProvider(t, e) {
                e = e || {}, this.withCredentials = e.withCredentials || !1, this.timeout = e.timeout || 0, this.headers = e.headers, this.agent = e.agent, this.connected = !1;
                const r = !1 !== e.keepAlive;
                this.host = t || "http://localhost:8545", this.agent || ("https" === this.host.substring(0, 5) ? this.httpsAgent = new a.Agent({
                    keepAlive: r
                }) : this.httpAgent = new o.Agent({
                    keepAlive: r
                }))
            };
        s.prototype._prepareRequest = function () {
            var t;
            if ("undefined" != typeof XMLHttpRequest) t = new XMLHttpRequest;
            else {
                t = new i;
                var e = {
                    httpsAgent: this.httpsAgent,
                    httpAgent: this.httpAgent,
                    baseUrl: this.baseUrl
                };
                this.agent && (e.httpsAgent = this.agent.https, e.httpAgent = this.agent.http, e.baseUrl = this.agent.baseUrl), t.nodejsSet(e)
            }
            return t.open("POST", this.host, !0), t.setRequestHeader("Content-Type", "application/json"), t.timeout = this.timeout, t.withCredentials = this.withCredentials, this.headers && this.headers.forEach((function (e) {
                t.setRequestHeader(e.name, e.value)
            })), t
        }, s.prototype.send = function (t, e) {
            var r = this,
                i = this._prepareRequest();
            i.onreadystatechange = function () {
                if (4 === i.readyState && 1 !== i.timeout) {
                    var t = i.responseText,
                        o = null;
                    try {
                        t = JSON.parse(t)
                    } catch (t) {
                        o = n.InvalidResponse(i.responseText)
                    }
                    r.connected = !0, e(o, t)
                }
            }, i.ontimeout = function () {
                r.connected = !1, e(n.ConnectionTimeout(this.timeout))
            };
            try {
                i.send(JSON.stringify(t))
            } catch (t) {
                this.connected = !1, e(n.InvalidConnection(this.host))
            }
        }, s.prototype.disconnect = function () {}, s.prototype.supportsSubscriptions = function () {
            return !1
        }, t.exports = s
    }, function (t, e, r) {
        var n = r(32).errors,
            i = r(870),
            o = function IpcProvider(t, e) {
                var r = this;
                this.responseCallbacks = {}, this.notificationCallbacks = [], this.path = t, this.connected = !1, this.connection = e.connect({
                    path: this.path
                }), this.addDefaultEvents();
                var callback = function (t) {
                    var e = null;
                    Array.isArray(t) ? t.forEach((function (t) {
                        r.responseCallbacks[t.id] && (e = t.id)
                    })) : e = t.id, e || -1 === t.method.indexOf("_subscription") ? r.responseCallbacks[e] && (r.responseCallbacks[e](null, t), delete r.responseCallbacks[e]) : r.notificationCallbacks.forEach((function (e) {
                        "function" == typeof e && e(t)
                    }))
                };
                "Socket" === e.constructor.name ? i(this.connection).done(callback) : this.connection.on("data", (function (t) {
                    r._parseResponse(t.toString()).forEach(callback)
                }))
            };
        o.prototype.addDefaultEvents = function () {
            var t = this;
            this.connection.on("connect", (function () {
                t.connected = !0
            })), this.connection.on("close", (function () {
                t.connected = !1
            })), this.connection.on("error", (function () {
                t._timeout()
            })), this.connection.on("end", (function () {
                t._timeout()
            })), this.connection.on("timeout", (function () {
                t._timeout()
            }))
        }, o.prototype._parseResponse = function (t) {
            var e = this,
                r = [];
            return t.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach((function (t) {
                e.lastChunk && (t = e.lastChunk + t);
                var i = null;
                try {
                    i = JSON.parse(t)
                } catch (r) {
                    return e.lastChunk = t, clearTimeout(e.lastChunkTimeout), void(e.lastChunkTimeout = setTimeout((function () {
                        throw e._timeout(), n.InvalidResponse(t)
                    }), 15e3))
                }
                clearTimeout(e.lastChunkTimeout), e.lastChunk = null, i && r.push(i)
            })), r
        }, o.prototype._addResponseCallback = function (t, e) {
            var r = t.id || t[0].id,
                n = t.method || t[0].method;
            this.responseCallbacks[r] = e, this.responseCallbacks[r].method = n
        }, o.prototype._timeout = function () {
            for (var t in this.responseCallbacks) this.responseCallbacks.hasOwnProperty(t) && (this.responseCallbacks[t](n.InvalidConnection("on IPC")), delete this.responseCallbacks[t])
        }, o.prototype.reconnect = function () {
            this.connection.connect({
                path: this.path
            })
        }, o.prototype.send = function (t, e) {
            this.connection.writable || this.connection.connect({
                path: this.path
            }), this.connection.write(JSON.stringify(t)), this._addResponseCallback(t, e)
        }, o.prototype.on = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            switch (t) {
                case "data":
                    this.notificationCallbacks.push(e);
                    break;
                default:
                    this.connection.on(t, e)
            }
        }, o.prototype.once = function (t, e) {
            if ("function" != typeof e) throw new Error("The second parameter callback must be a function.");
            this.connection.once(t, e)
        }, o.prototype.removeListener = function (t, e) {
            var r = this;
            switch (t) {
                case "data":
                    this.notificationCallbacks.forEach((function (t, n) {
                        t === e && r.notificationCallbacks.splice(n, 1)
                    }));
                    break;
                default:
                    this.connection.removeListener(t, e)
            }
        }, o.prototype.removeAllListeners = function (t) {
            switch (t) {
                case "data":
                    this.notificationCallbacks = [];
                    break;
                default:
                    this.connection.removeAllListeners(t)
            }
        }, o.prototype.reset = function () {
            this._timeout(), this.notificationCallbacks = [], this.connection.removeAllListeners("error"), this.connection.removeAllListeners("end"), this.connection.removeAllListeners("timeout"), this.addDefaultEvents()
        }, o.prototype.supportsSubscriptions = function () {
            return !0
        }, t.exports = o
    }, function (t, e, r) {
        ! function webpackUniversalModuleDefinition(e, r) {
            t.exports = r()
        }("undefined" != typeof self && self, (function () {
            return function (t) {
                var e = {};

                function __webpack_require__(r) {
                    if (e[r]) return e[r].exports;
                    var n = e[r] = {
                        i: r,
                        l: !1,
                        exports: {}
                    };
                    return t[r].call(n.exports, n, n.exports, __webpack_require__), n.l = !0, n.exports
                }
                return __webpack_require__.m = t, __webpack_require__.c = e, __webpack_require__.d = function (t, e, r) {
                    __webpack_require__.o(t, e) || Object.defineProperty(t, e, {
                        configurable: !1,
                        enumerable: !0,
                        get: r
                    })
                }, __webpack_require__.n = function (t) {
                    var e = t && t.__esModule ? function getDefault() {
                        return t.default
                    } : function getModuleExports() {
                        return t
                    };
                    return __webpack_require__.d(e, "a", e), e
                }, __webpack_require__.o = function (t, e) {
                    return Object.prototype.hasOwnProperty.call(t, e)
                }, __webpack_require__.p = "", __webpack_require__(__webpack_require__.s = 7)
            }([function (t, e, r) {
                r.d(e, "j", (function () {
                    return i
                })), r.d(e, "d", (function () {
                    return compose2
                })), r.d(e, "c", (function () {
                    return attr
                })), r.d(e, "h", (function () {
                    return o
                })), r.d(e, "b", (function () {
                    return apply
                })), r.d(e, "k", (function () {
                    return varArgs
                })), r.d(e, "e", (function () {
                    return flip
                })), r.d(e, "g", (function () {
                    return lazyIntersection
                })), r.d(e, "i", (function () {
                    return noop
                })), r.d(e, "a", (function () {
                    return always
                })), r.d(e, "f", (function () {
                    return functor
                }));
                var n = r(1),
                    i = varArgs((function (t, e) {
                        var r = e.length;
                        return varArgs((function (n) {
                            for (var i = 0; i < n.length; i++) e[r + i] = n[i];
                            return e.length = r + n.length, t.apply(this, e)
                        }))
                    }));
                varArgs((function (t) {
                    var e = Object(n.c)(t);

                    function next(t, e) {
                        return [apply(t, e)]
                    }
                    return varArgs((function (t) {
                        return Object(n.f)(next, t, e)[0]
                    }))
                }));

                function compose2(t, e) {
                    return function () {
                        return t.call(this, e.apply(this, arguments))
                    }
                }

                function attr(t) {
                    return function (e) {
                        return e[t]
                    }
                }
                var o = varArgs((function (t) {
                    return varArgs((function (e) {
                        for (var r, n = 0; n < attr("length")(t); n++)
                            if (r = apply(e, t[n])) return r
                    }))
                }));

                function apply(t, e) {
                    return e.apply(void 0, t)
                }

                function varArgs(t) {
                    var e = t.length - 1,
                        r = Array.prototype.slice;
                    if (0 === e) return function () {
                        return t.call(this, r.call(arguments))
                    };
                    if (1 === e) return function () {
                        return t.call(this, arguments[0], r.call(arguments, 1))
                    };
                    var n = Array(t.length);
                    return function () {
                        for (var i = 0; i < e; i++) n[i] = arguments[i];
                        return n[e] = r.call(arguments, e), t.apply(this, n)
                    }
                }

                function flip(t) {
                    return function (e, r) {
                        return t(r, e)
                    }
                }

                function lazyIntersection(t, e) {
                    return function (r) {
                        return t(r) && e(r)
                    }
                }

                function noop() {}

                function always() {
                    return !0
                }

                function functor(t) {
                    return function () {
                        return t
                    }
                }
            }, function (t, e, r) {
                r.d(e, "d", (function () {
                    return cons
                })), r.d(e, "g", (function () {
                    return i
                })), r.d(e, "l", (function () {
                    return o
                })), r.d(e, "c", (function () {
                    return arrayAsList
                })), r.d(e, "h", (function () {
                    return a
                })), r.d(e, "i", (function () {
                    return listAsArray
                })), r.d(e, "j", (function () {
                    return map
                })), r.d(e, "f", (function () {
                    return foldR
                })), r.d(e, "m", (function () {
                    return without
                })), r.d(e, "a", (function () {
                    return all
                })), r.d(e, "b", (function () {
                    return applyEach
                })), r.d(e, "k", (function () {
                    return reverseList
                })), r.d(e, "e", (function () {
                    return first
                }));
                var n = r(0);

                function cons(t, e) {
                    return [t, e]
                }
                var i = Object(n.c)(0),
                    o = Object(n.c)(1);

                function arrayAsList(t) {
                    return reverseList(t.reduce(Object(n.e)(cons), null))
                }
                var a = Object(n.k)(arrayAsList);

                function listAsArray(t) {
                    return foldR((function (t, e) {
                        return t.unshift(e), t
                    }), [], t)
                }

                function map(t, e) {
                    return e ? cons(t(i(e)), map(t, o(e))) : null
                }

                function foldR(t, e, r) {
                    return r ? t(foldR(t, e, o(r)), i(r)) : e
                }

                function without(t, e, r) {
                    return function withoutInner(t, r) {
                        return t ? e(i(t)) ? (r(i(t)), o(t)) : cons(i(t), withoutInner(o(t), r)) : null
                    }(t, r || n.i)
                }

                function all(t, e) {
                    return !e || t(i(e)) && all(t, o(e))
                }

                function applyEach(t, e) {
                    t && (i(t).apply(null, e), applyEach(o(t), e))
                }

                function reverseList(t) {
                    return function reverseInner(t, e) {
                        return t ? reverseInner(o(t), cons(i(t), e)) : e
                    }(t, null)
                }

                function first(t, e) {
                    return e && (t(i(e)) ? i(e) : first(t, o(e)))
                }
            }, function (t, e, r) {
                r.d(e, "c", (function () {
                    return isOfType
                })), r.d(e, "e", (function () {
                    return o
                })), r.d(e, "d", (function () {
                    return a
                })), r.d(e, "a", (function () {
                    return defined
                })), r.d(e, "b", (function () {
                    return hasAllProperties
                }));
                var n = r(1),
                    i = r(0);

                function isOfType(t, e) {
                    return e && e.constructor === t
                }
                var o = Object(i.c)("length"),
                    a = Object(i.j)(isOfType, String);

                function defined(t) {
                    return void 0 !== t
                }

                function hasAllProperties(t, e) {
                    return e instanceof Object && Object(n.a)((function (t) {
                        return t in e
                    }), t)
                }
            }, function (t, e, r) {
                r.d(e, "f", (function () {
                    return i
                })), r.d(e, "d", (function () {
                    return o
                })), r.d(e, "g", (function () {
                    return a
                })), r.d(e, "e", (function () {
                    return s
                })), r.d(e, "b", (function () {
                    return u
                })), r.d(e, "h", (function () {
                    return c
                })), r.d(e, "i", (function () {
                    return l
                })), r.d(e, "c", (function () {
                    return h
                })), r.d(e, "m", (function () {
                    return d
                })), r.d(e, "n", (function () {
                    return p
                })), r.d(e, "a", (function () {
                    return m
                })), r.d(e, "j", (function () {
                    return y
                })), r.d(e, "l", (function () {
                    return b
                })), r.d(e, "k", (function () {
                    return g
                })), r.d(e, "o", (function () {
                    return errorReport
                }));
                var n = 1,
                    i = n++,
                    o = n++,
                    a = n++,
                    s = n++,
                    u = "fail",
                    c = n++,
                    l = n++,
                    h = "start",
                    d = "data",
                    p = "end",
                    m = n++,
                    y = n++,
                    b = n++,
                    g = n++;

                function errorReport(t, e, r) {
                    try {
                        var n = JSON.parse(e)
                    } catch (t) {}
                    return {
                        statusCode: t,
                        body: e,
                        jsonBody: n,
                        thrown: r
                    }
                }
            }, function (t, e, r) {
                r.d(e, "b", (function () {
                    return namedNode
                })), r.d(e, "a", (function () {
                    return i
                })), r.d(e, "c", (function () {
                    return o
                }));
                var n = r(0);

                function namedNode(t, e) {
                    return {
                        key: t,
                        node: e
                    }
                }
                var i = Object(n.c)("key"),
                    o = Object(n.c)("node")
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return oboe
                }));
                var n = r(1),
                    i = r(0),
                    o = r(2),
                    a = r(8),
                    s = r(9);

                function oboe(t) {
                    var e = Object(n.h)("resume", "pause", "pipe"),
                        r = Object(i.j)(o.b, e);
                    return t ? r(t) || Object(o.d)(t) ? Object(a.a)(s.a, t) : Object(a.a)(s.a, t.url, t.method, t.body, t.headers, t.withCredentials, t.cached) : Object(s.a)()
                }
                oboe.drop = function () {
                    return oboe.drop
                }
            }, function (t, e, r) {
                r.d(e, "b", (function () {
                    return incrementalContentBuilder
                })), r.d(e, "a", (function () {
                    return s
                }));
                var n = r(3),
                    i = r(4),
                    o = r(2),
                    a = r(1),
                    s = {};

                function incrementalContentBuilder(t) {
                    var e = t(n.f).emit,
                        r = t(n.d).emit,
                        u = t(n.i).emit,
                        c = t(n.h).emit;

                    function appendBuiltContent(t, e, r) {
                        Object(i.c)(Object(a.g)(t))[e] = r
                    }

                    function keyFound(t, r, n) {
                        t && appendBuiltContent(t, r, n);
                        var o = Object(a.d)(Object(i.b)(r, n), t);
                        return e(o), o
                    }
                    var l = {};
                    return l[n.l] = function nodeOpened(t, e) {
                        if (!t) return u(e), keyFound(t, s, e);
                        var r = function arrayIndicesAreKeys(t, e) {
                                var r = Object(i.c)(Object(a.g)(t));
                                return Object(o.c)(Array, r) ? keyFound(t, Object(o.e)(r), e) : t
                            }(t, e),
                            n = Object(a.l)(r),
                            c = Object(i.a)(Object(a.g)(r));
                        return appendBuiltContent(n, c, e), Object(a.d)(Object(i.b)(c, e), n)
                    }, l[n.k] = function nodeClosed(t) {
                        return r(t), Object(a.l)(t) || c(Object(i.c)(Object(a.g)(t)))
                    }, l[n.j] = keyFound, l
                }
            }, function (t, e, r) {
                Object.defineProperty(e, "__esModule", {
                    value: !0
                });
                var n = r(5);
                e.default = n.a
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return applyDefaults
                }));
                var n = r(2);

                function applyDefaults(t, e, r, i, o, a, s) {
                    return o = o ? JSON.parse(JSON.stringify(o)) : {}, i ? (Object(n.d)(i) || (i = JSON.stringify(i), o["Content-Type"] = o["Content-Type"] || "application/json"), o["Content-Length"] = o["Content-Length"] || i.length) : i = null, t(r || "GET", function modifiedUrl(t, e) {
                        return !1 === e && (-1 === t.indexOf("?") ? t += "?" : t += "&", t += "_=" + (new Date).getTime()), t
                    }(e, s), i, o, a || !1)
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return wire
                }));
                var n = r(10),
                    i = r(12),
                    o = r(6),
                    a = r(13),
                    s = r(14),
                    u = r(16),
                    c = r(17),
                    l = r(18);

                function wire(t, e, r, h, d) {
                    var p = Object(n.a)();
                    return e && Object(l.b)(p, Object(l.a)(), t, e, r, h, d), Object(c.a)(p), Object(i.a)(p, Object(o.b)(p)), Object(a.a)(p, s.a), Object(u.a)(p, e)
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return pubSub
                }));
                var n = r(11),
                    i = r(0);

                function pubSub() {
                    var t = {},
                        e = newSingle("newListener"),
                        r = newSingle("removeListener");

                    function newSingle(i) {
                        return t[i] = Object(n.a)(i, e, r), t[i]
                    }

                    function pubSubInstance(e) {
                        return t[e] || newSingle(e)
                    }
                    return ["emit", "on", "un"].forEach((function (t) {
                        pubSubInstance[t] = Object(i.k)((function (e, r) {
                            Object(i.b)(r, pubSubInstance(e)[t])
                        }))
                    })), pubSubInstance
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return singleEventPubSub
                }));
                var n = r(1),
                    i = r(2),
                    o = r(0);

                function singleEventPubSub(t, e, r) {
                    var a, s;

                    function hasId(t) {
                        return function (e) {
                            return e.id === t
                        }
                    }
                    return {
                        on: function (r, i) {
                            var o = {
                                listener: r,
                                id: i || r
                            };
                            return e && e.emit(t, r, o.id), a = Object(n.d)(o, a), s = Object(n.d)(r, s), this
                        },
                        emit: function () {
                            Object(n.b)(s, arguments)
                        },
                        un: function (e) {
                            var i;
                            a = Object(n.m)(a, hasId(e), (function (t) {
                                i = t
                            })), i && (s = Object(n.m)(s, (function (t) {
                                return t === i.listener
                            })), r && r.emit(t, i.listener, i.id))
                        },
                        listeners: function () {
                            return s
                        },
                        hasListener: function (t) {
                            var e = t ? hasId(t) : o.a;
                            return Object(i.a)(Object(n.e)(e, a))
                        }
                    }
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return ascentManager
                }));
                var n = r(4),
                    i = r(3),
                    o = r(1);

                function ascentManager(t, e) {
                    var r, a = {};

                    function stateAfter(t) {
                        return function (e) {
                            r = t(r, e)
                        }
                    }
                    for (var s in e) t(s).on(stateAfter(e[s]), a);
                    t(i.g).on((function (t) {
                        var e = Object(o.g)(r),
                            i = Object(n.a)(e),
                            a = Object(o.l)(r);
                        a && (Object(n.c)(Object(o.g)(a))[i] = t)
                    })), t(i.e).on((function () {
                        var t = Object(o.g)(r),
                            e = Object(n.a)(t),
                            i = Object(o.l)(r);
                        i && delete Object(n.c)(Object(o.g)(i))[e]
                    })), t(i.a).on((function () {
                        for (var r in e) t(r).un(a)
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return patternAdapter
                }));
                var n = r(3),
                    i = r(1),
                    o = r(4);

                function patternAdapter(t, e) {
                    var r = {
                        node: t(n.d),
                        path: t(n.f)
                    };

                    function addUnderlyingListener(e, r, n) {
                        var a = t(e).emit;
                        r.on((function (t) {
                            var e = n(t);
                            !1 !== e && function emitMatchingNode(t, e, r) {
                                var n = Object(i.k)(r);
                                t(e, Object(i.i)(Object(i.l)(Object(i.j)(o.a, n))), Object(i.i)(Object(i.j)(o.c, n)))
                            }(a, Object(o.c)(e), t)
                        }), e), t("removeListener").on((function (n) {
                            n === e && (t(n).listeners() || r.un(e))
                        }))
                    }
                    t("newListener").on((function (t) {
                        var n = /(node|path):(.*)/.exec(t);
                        if (n) {
                            var i = r[n[1]];
                            i.hasListener(t) || addUnderlyingListener(t, i, e(n[2]))
                        }
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return c
                }));
                var n = r(0),
                    i = r(1),
                    o = r(4),
                    a = r(2),
                    s = r(6),
                    u = r(15),
                    c = Object(u.a)((function (t, e, r, u, c) {
                        var l = Object(n.d)(o.a, i.g),
                            h = Object(n.d)(o.c, i.g);

                        function capture(t, e) {
                            return !!e[1] ? Object(n.g)(t, i.g) : t
                        }

                        function skip1(t) {
                            if (t === n.a) return n.a;
                            return Object(n.g)((function notAtRoot(t) {
                                return l(t) !== s.a
                            }), Object(n.d)(t, i.l))
                        }

                        function rootExpr() {
                            return function (t) {
                                return l(t) === s.a
                            }
                        }

                        function generateClauseReaderIfTokenFound(t, e, r, n, o) {
                            var s = t(r);
                            if (s) {
                                var u = function expressionsReader(t, e, r) {
                                    return Object(i.f)((function (t, e) {
                                        return e(t, r)
                                    }), e, t)
                                }(e, n, s);
                                return o(r.substr(Object(a.e)(s[0])), u)
                            }
                        }

                        function clauseMatcher(t, e) {
                            return Object(n.j)(generateClauseReaderIfTokenFound, t, e)
                        }
                        var d = Object(n.h)(clauseMatcher(t, Object(i.h)(capture, (function duckTypeClause(t, e) {
                            var r = e[3];
                            if (!r) return t;
                            var o = Object(n.j)(a.b, Object(i.c)(r.split(/\W+/))),
                                s = Object(n.d)(o, h);
                            return Object(n.g)(s, t)
                        }), (function nameClause(t, e) {
                            var r = e[2],
                                i = r && "*" !== r ? function (t) {
                                    return String(l(t)) === r
                                } : n.a;
                            return Object(n.g)(i, t)
                        }), skip1)), clauseMatcher(e, Object(i.h)((function skipMany(t) {
                            if (t === n.a) return n.a;
                            var e = rootExpr(),
                                r = t,
                                i = skip1((function (t) {
                                    return o(t)
                                })),
                                o = Object(n.h)(e, r, i);
                            return o
                        }))), clauseMatcher(r, Object(i.h)()), clauseMatcher(u, Object(i.h)(capture, rootExpr)), clauseMatcher(c, Object(i.h)((function statementExpr(t) {
                            return function (e) {
                                var r = t(e);
                                return !0 === r ? Object(i.g)(e) : r
                            }
                        }))), (function (t) {
                            throw Error('"' + t + '" could not be tokenised')
                        }));

                        function returnFoundParser(t, e) {
                            return e
                        }

                        function compileJsonPathToFunction(t, e) {
                            return d(t, e, t ? compileJsonPathToFunction : returnFoundParser)
                        }
                        return function (t) {
                            try {
                                return compileJsonPathToFunction(t, n.a)
                            } catch (e) {
                                throw Error('Could not compile "' + t + '" because ' + e.message)
                            }
                        }
                    }))
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return y
                }));
                var n, i, o, a, s, u, c, l, h, d, p, m = r(0),
                    y = (n = Object(m.k)((function (t) {
                        return t.unshift(/^/),
                            function regexDescriptor(t) {
                                return t.exec.bind(t)
                            }(RegExp(t.map(Object(m.c)("source")).join("")))
                    })), a = n(i = /(\$?)/, /([\w-_]+|\*)/, o = /(?:{([\w ]*?)})?/), s = n(i, /\["([^"]+)"\]/, o), u = n(i, /\[(\d+|\*)\]/, o), c = n(i, /()/, /{([\w ]*?)}/), l = n(/\.\./), h = n(/\./), d = n(i, /!/), p = n(/$/), function (t) {
                        return t(Object(m.h)(a, s, u, c), l, h, d, p)
                    })
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return instanceApi
                }));
                var n = r(3),
                    i = r(0),
                    o = r(2),
                    a = r(5);

                function instanceApi(t, e) {
                    var r, s = /^(node|path):./,
                        u = t(n.h),
                        c = t(n.e).emit,
                        l = t(n.g).emit,
                        h = Object(i.k)((function (e, n) {
                            if (r[e]) Object(i.b)(n, r[e]);
                            else {
                                var o = t(e),
                                    a = n[0];
                                s.test(e) ? addForgettableCallback(o, wrapCallbackToSwapNodeIfSomethingReturned(a)) : o.on(a)
                            }
                            return r
                        }));

                    function addForgettableCallback(t, e, n) {
                        n = n || e;
                        var o = protectedCallback(e);
                        return t.on((function () {
                            var e = !1;
                            r.forget = function () {
                                e = !0
                            }, Object(i.b)(arguments, o), delete r.forget, e && t.un(n)
                        }), n), r
                    }

                    function protectedCallback(t) {
                        return function () {
                            try {
                                return t.apply(r, arguments)
                            } catch (t) {
                                setTimeout((function () {
                                    throw new Error(t.message)
                                }))
                            }
                        }
                    }

                    function wrapCallbackToSwapNodeIfSomethingReturned(t) {
                        return function () {
                            var e = t.apply(this, arguments);
                            Object(o.a)(e) && (e === a.a.drop ? c() : l(e))
                        }
                    }

                    function addSingleNodeOrPathListener(e, r, n) {
                        var i;
                        i = "node" === e ? wrapCallbackToSwapNodeIfSomethingReturned(n) : n, addForgettableCallback(function fullyQualifiedPatternMatchEvent(e, r) {
                            return t(e + ":" + r)
                        }(e, r), i, n)
                    }

                    function addNodeOrPathListenerApi(t, e, n) {
                        return Object(o.d)(e) ? addSingleNodeOrPathListener(t, e, n) : function addMultipleNodeOrPathListeners(t, e) {
                            for (var r in e) addSingleNodeOrPathListener(t, r, e[r])
                        }(t, e), r
                    }
                    return t(n.i).on((function (t) {
                        r.root = Object(i.f)(t)
                    })), t(n.c).on((function (t, e) {
                        r.header = function (t) {
                            return t ? e[t] : e
                        }
                    })), r = {
                        on: h,
                        addListener: h,
                        removeListener: function (e, n, i) {
                            if ("done" === e) u.un(n);
                            else if ("node" === e || "path" === e) t.un(e + ":" + n, i);
                            else {
                                var o = n;
                                t(e).un(o)
                            }
                            return r
                        },
                        emit: t.emit,
                        node: Object(i.j)(addNodeOrPathListenerApi, "node"),
                        path: Object(i.j)(addNodeOrPathListenerApi, "path"),
                        done: Object(i.j)(addForgettableCallback, u),
                        start: Object(i.j)((function addProtectedCallback(e, n) {
                            return t(e).on(protectedCallback(n), n), r
                        }), n.c),
                        fail: t(n.b).on,
                        abort: t(n.a).emit,
                        header: i.i,
                        root: i.i,
                        source: e
                    }
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return clarinet
                }));
                var n = r(3);

                function clarinet(t) {
                    var e, r, i, o, a = t(n.j).emit,
                        s = t(n.l).emit,
                        u = t(n.k).emit,
                        c = t(n.b).emit,
                        l = /[\\"\n]/g,
                        h = 0,
                        d = h++,
                        p = h++,
                        m = h++,
                        y = h++,
                        b = h++,
                        g = h++,
                        v = h++,
                        w = h++,
                        M = h++,
                        A = h++,
                        x = h++,
                        B = h++,
                        E = h++,
                        k = h++,
                        N = h++,
                        T = h++,
                        C = h++,
                        P = h++,
                        I = h++,
                        O = h++,
                        D = 65536,
                        j = "",
                        L = !1,
                        U = !1,
                        H = d,
                        q = [],
                        z = null,
                        G = 0,
                        V = 0,
                        J = 0,
                        W = 0,
                        Z = 1;

                    function emitError(t) {
                        void 0 !== o && (s(o), u(), o = void 0), e = Error(t + "\nLn: " + Z + "\nCol: " + W + "\nChr: " + r), c(Object(n.o)(void 0, void 0, e))
                    }

                    function whitespace(t) {
                        return "\r" === t || "\n" === t || " " === t || "\t" === t
                    }
                    t(n.m).on((function handleData(t) {
                        if (e) return;
                        if (U) return emitError("Cannot write after close");
                        var n = 0;
                        r = t[0];
                        for (; r && (n > 0 && (i = r), r = t[n++]);) switch (J++, "\n" === r ? (Z++, W = 0) : W++, H) {
                            case d:
                                if ("{" === r) H = m;
                                else if ("[" === r) H = b;
                                else if (!whitespace(r)) return emitError("Non-whitespace before {[.");
                                continue;
                            case w:
                            case m:
                                if (whitespace(r)) continue;
                                if (H === w) q.push(M);
                                else {
                                    if ("}" === r) {
                                        s({}), u(), H = q.pop() || p;
                                        continue
                                    }
                                    q.push(y)
                                }
                                if ('"' !== r) return emitError('Malformed object key should start with " ');
                                H = v;
                                continue;
                            case M:
                            case y:
                                if (whitespace(r)) continue;
                                if (":" === r) H === y ? (q.push(y), void 0 !== o && (s({}), a(o), o = void 0), V++) : void 0 !== o && (a(o), o = void 0), H = p;
                                else if ("}" === r) void 0 !== o && (s(o), u(), o = void 0), u(), V--, H = q.pop() || p;
                                else {
                                    if ("," !== r) return emitError("Bad object");
                                    H === y && q.push(y), void 0 !== o && (s(o), u(), o = void 0), H = w
                                }
                                continue;
                            case b:
                            case p:
                                if (whitespace(r)) continue;
                                if (H === b) {
                                    if (s([]), V++, H = p, "]" === r) {
                                        u(), V--, H = q.pop() || p;
                                        continue
                                    }
                                    q.push(g)
                                }
                                if ('"' === r) H = v;
                                else if ("{" === r) H = m;
                                else if ("[" === r) H = b;
                                else if ("t" === r) H = A;
                                else if ("f" === r) H = E;
                                else if ("n" === r) H = C;
                                else if ("-" === r) j += r;
                                else if ("0" === r) j += r, H = 20;
                                else {
                                    if (-1 === "123456789".indexOf(r)) return emitError("Bad value");
                                    j += r, H = 20
                                }
                                continue;
                            case g:
                                if ("," === r) q.push(g), void 0 !== o && (s(o), u(), o = void 0), H = p;
                                else {
                                    if ("]" !== r) {
                                        if (whitespace(r)) continue;
                                        return emitError("Bad array")
                                    }
                                    void 0 !== o && (s(o), u(), o = void 0), u(), V--, H = q.pop() || p
                                }
                                continue;
                            case v:
                                void 0 === o && (o = "");
                                var c = n - 1;
                                t: for (;;) {
                                    for (; G > 0;)
                                        if (z += r, r = t.charAt(n++), 4 === G ? (o += String.fromCharCode(parseInt(z, 16)), G = 0, c = n - 1) : G++, !r) break t;
                                    if ('"' === r && !L) {
                                        H = q.pop() || p, o += t.substring(c, n - 1);
                                        break
                                    }
                                    if (!("\\" !== r || L || (L = !0, o += t.substring(c, n - 1), r = t.charAt(n++)))) break;
                                    if (L) {
                                        if (L = !1, "n" === r ? o += "\n" : "r" === r ? o += "\r" : "t" === r ? o += "\t" : "f" === r ? o += "\f" : "b" === r ? o += "\b" : "u" === r ? (G = 1, z = "") : o += r, r = t.charAt(n++), c = n - 1, r) continue;
                                        break
                                    }
                                    l.lastIndex = n;
                                    var h = l.exec(t);
                                    if (!h) {
                                        n = t.length + 1, o += t.substring(c, n - 1);
                                        break
                                    }
                                    if (n = h.index + 1, !(r = t.charAt(h.index))) {
                                        o += t.substring(c, n - 1);
                                        break
                                    }
                                }
                                continue;
                            case A:
                                if (!r) continue;
                                if ("r" !== r) return emitError("Invalid true started with t" + r);
                                H = x;
                                continue;
                            case x:
                                if (!r) continue;
                                if ("u" !== r) return emitError("Invalid true started with tr" + r);
                                H = B;
                                continue;
                            case B:
                                if (!r) continue;
                                if ("e" !== r) return emitError("Invalid true started with tru" + r);
                                s(!0), u(), H = q.pop() || p;
                                continue;
                            case E:
                                if (!r) continue;
                                if ("a" !== r) return emitError("Invalid false started with f" + r);
                                H = k;
                                continue;
                            case k:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid false started with fa" + r);
                                H = N;
                                continue;
                            case N:
                                if (!r) continue;
                                if ("s" !== r) return emitError("Invalid false started with fal" + r);
                                H = T;
                                continue;
                            case T:
                                if (!r) continue;
                                if ("e" !== r) return emitError("Invalid false started with fals" + r);
                                s(!1), u(), H = q.pop() || p;
                                continue;
                            case C:
                                if (!r) continue;
                                if ("u" !== r) return emitError("Invalid null started with n" + r);
                                H = P;
                                continue;
                            case P:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid null started with nu" + r);
                                H = I;
                                continue;
                            case I:
                                if (!r) continue;
                                if ("l" !== r) return emitError("Invalid null started with nul" + r);
                                s(null), u(), H = q.pop() || p;
                                continue;
                            case O:
                                if ("." !== r) return emitError("Leading zero not followed by .");
                                j += r, H = 20;
                                continue;
                            case 20:
                                if (-1 !== "0123456789".indexOf(r)) j += r;
                                else if ("." === r) {
                                    if (-1 !== j.indexOf(".")) return emitError("Invalid number has two dots");
                                    j += r
                                } else if ("e" === r || "E" === r) {
                                    if (-1 !== j.indexOf("e") || -1 !== j.indexOf("E")) return emitError("Invalid number has two exponential");
                                    j += r
                                } else if ("+" === r || "-" === r) {
                                    if ("e" !== i && "E" !== i) return emitError("Invalid symbol in number");
                                    j += r
                                } else j && (s(parseFloat(j)), u(), j = ""), n--, H = q.pop() || p;
                                continue;
                            default:
                                return emitError("Unknown state: " + H)
                        }
                        J >= D && function checkBufferLength() {
                            var t = 0;
                            void 0 !== o && o.length > 65536 && (emitError("Max buffer length exceeded: textNode"), t = Math.max(t, o.length)), j.length > 65536 && (emitError("Max buffer length exceeded: numberNode"), t = Math.max(t, j.length)), D = 65536 - t + J
                        }()
                    })), t(n.n).on((function handleStreamEnd() {
                        if (H === d) return s({}), u(), void(U = !0);
                        H === p && 0 === V || emitError("Unexpected end");
                        void 0 !== o && (s(o), u(), o = void 0);
                        U = !0
                    }))
                }
            }, function (t, e, r) {
                r.d(e, "a", (function () {
                    return httpTransport
                })), r.d(e, "b", (function () {
                    return streamingHttp
                }));
                var n = r(19),
                    i = r(3),
                    o = r(2),
                    a = r(20),
                    s = r(0);

                function httpTransport() {
                    return new XMLHttpRequest
                }

                function streamingHttp(t, e, r, u, c, l, h) {
                    var d = t(i.m).emit,
                        p = t(i.b).emit,
                        m = 0,
                        y = !0;

                    function handleProgress() {
                        if ("2" === String(e.status)[0]) {
                            var t = e.responseText,
                                r = (" " + t.substr(m)).substr(1);
                            r && d(r), m = Object(o.e)(t)
                        }
                    }

                    function sendStartIfNotAlready(e) {
                        try {
                            y && t(i.c).emit(e.status, Object(a.a)(e.getAllResponseHeaders())), y = !1
                        } catch (t) {}
                    }
                    t(i.a).on((function () {
                        e.onreadystatechange = null, e.abort()
                    })), "onprogress" in e && (e.onprogress = handleProgress), e.onreadystatechange = function () {
                        switch (e.readyState) {
                            case 2:
                            case 3:
                                return sendStartIfNotAlready(e);
                            case 4:
                                sendStartIfNotAlready(e), "2" === String(e.status)[0] ? (handleProgress(), t(i.n).emit()) : p(Object(i.o)(e.status, e.responseText))
                        }
                    };
                    try {
                        for (var b in e.open(r, u, !0), l) e.setRequestHeader(b, l[b]);
                        Object(n.a)(window.location, Object(n.b)(u)) || e.setRequestHeader("X-Requested-With", "XMLHttpRequest"), e.withCredentials = h, e.send(c)
                    } catch (t) {
                        window.setTimeout(Object(s.j)(p, Object(i.o)(void 0, void 0, t)), 0)
                    }
                }
            }, function (t, e, r) {
                function isCrossOrigin(t, e) {
                    function portOf(e) {
                        return String(e.port || function defaultPort(t) {
                            return {
                                "http:": 80,
                                "https:": 443
                            } [t]
                        }(e.protocol || t.protocol))
                    }
                    return !!(e.protocol && e.protocol !== t.protocol || e.host && e.host !== t.host || e.host && portOf(e) !== portOf(t))
                }

                function parseUrlOrigin(t) {
                    var e = /(\w+:)?(?:\/\/)([\w.-]+)?(?::(\d+))?\/?/.exec(t) || [];
                    return {
                        protocol: e[1] || "",
                        host: e[2] || "",
                        port: e[3] || ""
                    }
                }
                r.d(e, "a", (function () {
                    return isCrossOrigin
                })), r.d(e, "b", (function () {
                    return parseUrlOrigin
                }))
            }, function (t, e, r) {
                function parseResponseHeaders(t) {
                    var e = {};
                    return t && t.split("\r\n").forEach((function (t) {
                        var r = t.indexOf(": ");
                        e[t.substring(0, r)] = t.substring(r + 2)
                    })), e
                }
                r.d(e, "a", (function () {
                    return parseResponseHeaders
                }))
            }]).default
        }))
    }, function (t, e, r) {
        var n = r(32).formatters,
            i = r(202),
            o = r(99);
        t.exports = function (t) {
            var ex = function (e) {
                var r;
                return e.property ? (t[e.property] || (t[e.property] = {}), r = t[e.property]) : r = t, e.methods && e.methods.forEach((function (e) {
                    e instanceof i || (e = new i(e)), e.attachToObject(r), e.setRequestManager(t._requestManager)
                })), t
            };
            return ex.formatters = n, ex.utils = o, ex.Method = i, ex
        }
    }, function (t, e, r) {
        var n = r(201),
            i = function PromiEvent(t) {
                var e, r, i = new Promise((function () {
                    e = arguments[0], r = arguments[1]
                }));
                if (t) return {
                    resolve: e,
                    reject: r,
                    eventEmitter: i
                };
                var o = new n;
                return i._events = o._events, i.emit = o.emit, i.on = o.on, i.once = o.once, i.off = o.off, i.listeners = o.listeners, i.addListener = o.addListener, i.removeListener = o.removeListener, i.removeAllListeners = o.removeAllListeners, {
                    resolve: e,
                    reject: r,
                    eventEmitter: i
                }
            };
        i.resolve = function (t) {
            var e = i(!0);
            return e.resolve(t), e.eventEmitter
        }, t.exports = i
    }, function (t, e, r) {
        var n = r(32).errors,
            i = r(201),
            o = r(32).formatters;

        function identity(t) {
            return t
        }

        function Subscription(t) {
            i.call(this), this.id = null, this.callback = identity, this.arguments = null, this.lastBlock = null, this.options = {
                subscription: t.subscription,
                type: t.type,
                requestManager: t.requestManager
            }
        }
        Subscription.prototype = Object.create(i.prototype), Subscription.prototype.constructor = Subscription, Subscription.prototype._extractCallback = function (t) {
            if ("function" == typeof t[t.length - 1]) return t.pop()
        }, Subscription.prototype._validateArgs = function (t) {
            var e = this.options.subscription;
            if (e || (e = {}), e.params || (e.params = 0), t.length !== e.params) throw n.InvalidNumberOfParams(t.length, e.params, e.subscriptionName)
        }, Subscription.prototype._formatInput = function (t) {
            var e = this.options.subscription;
            return e && e.inputFormatter ? e.inputFormatter.map((function (e, r) {
                return e ? e(t[r]) : t[r]
            })) : t
        }, Subscription.prototype._formatOutput = function (t) {
            var e = this.options.subscription;
            return e && e.outputFormatter && t ? e.outputFormatter(t) : t
        }, Subscription.prototype._toPayload = function (t) {
            var e = [];
            if (this.callback = this._extractCallback(t) || identity, this.subscriptionMethod || (this.subscriptionMethod = t.shift(), this.options.subscription.subscriptionName && (this.subscriptionMethod = this.options.subscription.subscriptionName)), this.arguments || (this.arguments = this._formatInput(t), this._validateArgs(this.arguments), t = []), e.push(this.subscriptionMethod), e = e.concat(this.arguments), t.length) throw new Error("Only a callback is allowed as parameter on an already instantiated subscription.");
            return {
                method: this.options.type + "_subscribe",
                params: e
            }
        }, Subscription.prototype.unsubscribe = function (t) {
            this.options.requestManager.removeSubscription(this.id, t), this.id = null, this.lastBlock = null, this.removeAllListeners()
        }, Subscription.prototype.subscribe = function () {
            var t = this,
                e = Array.prototype.slice.call(arguments),
                r = this._toPayload(e);
            if (!r) return this;
            if (!this.options.requestManager.provider) return setTimeout((function () {
                var e = new Error("No provider set.");
                t.callback(e, null, t), t.emit("error", e)
            }), 0), this;
            if (!this.options.requestManager.provider.on) return setTimeout((function () {
                var e = new Error("The current provider doesn't support subscriptions: " + t.options.requestManager.provider.constructor.name);
                t.callback(e, null, t), t.emit("error", e)
            }), 0), this;
            if (this.lastBlock && this.options.params && "object" == typeof this.options.params && (r.params[1] = this.options.params, r.params[1].fromBlock = o.inputBlockNumberFormatter(this.lastBlock + 1)), this.id && this.unsubscribe(), this.options.params = r.params[1], "logs" === r.params[0] && r.params[1] && "object" == typeof r.params[1] && r.params[1].hasOwnProperty("fromBlock") && isFinite(r.params[1].fromBlock)) {
                var n = Object.assign({}, r.params[1]);
                this.options.requestManager.send({
                    method: "eth_getLogs",
                    params: [n]
                }, (function (e, r) {
                    e ? setTimeout((function () {
                        t.callback(e, null, t), t.emit("error", e)
                    }), 0) : r.forEach((function (e) {
                        var r = t._formatOutput(e);
                        t.callback(null, r, t), t.emit("data", r)
                    }))
                }))
            }
            return "object" == typeof r.params[1] && delete r.params[1].fromBlock, this.options.requestManager.send(r, (function (e, n) {
                !e && n ? (t.id = n, t.method = r.params[0], t.emit("connected", n), t.options.requestManager.addSubscription(t, (function (e, r) {
                    e ? (t.callback(e, !1, t), t.emit("error", e)) : (Array.isArray(r) || (r = [r]), r.forEach((function (e) {
                        var r = t._formatOutput(e);
                        if (t.lastBlock = r && "object" == typeof r ? r.blockNumber : null, "function" == typeof t.options.subscription.subscriptionHandler) return t.options.subscription.subscriptionHandler.call(t, r);
                        t.emit("data", r), t.callback(null, r, t)
                    })))
                }))) : setTimeout((function () {
                    t.callback(e, !1, t), t.emit("error", e)
                }), 0)
            })), this
        }, Subscription.prototype.resubscribe = function () {
            this.options.requestManager.removeSubscription(this.id), this.id = null, this.subscribe(this.callback)
        }, t.exports = Subscription
    }, function (t, e, r) {
        var n = r(336),
            i = r(202),
            o = r(99),
            Net = function () {
                var t = this;
                n.packageInit(this, arguments), [new i({
                    name: "getId",
                    call: "net_version",
                    params: 0,
                    outputFormatter: parseInt
                }), new i({
                    name: "isListening",
                    call: "net_listening",
                    params: 0
                }), new i({
                    name: "getPeerCount",
                    call: "net_peerCount",
                    params: 0,
                    outputFormatter: o.hexToNumber
                })].forEach((function (e) {
                    e.attachToObject(t), e.setRequestManager(t._requestManager)
                }))
            };
        n.addProviders(Net), t.exports = Net
    }, function (t, e, r) {
        var n = r(876),
            i = function Bzz(t) {
                this.givenProvider = Bzz.givenProvider, t && t._requestManager && (t = t.currentProvider), "undefined" != typeof document && (this.pick = n.pick), this.setProvider(t)
            };
        i.givenProvider = null, "undefined" != typeof ethereum && ethereum.bzz && (i.givenProvider = ethereum.bzz), i.prototype.setProvider = function (t) {
            if (t && "object" == typeof t && "string" == typeof t.bzz && (t = t.bzz), "string" != typeof t) {
                this.currentProvider = null;
                var e = new Error("No provider set, please set one using bzz.setProvider().");
                return this.download = this.upload = this.isAvailable = function () {
                    throw e
                }, !1
            }
            return this.currentProvider = t, this.download = n.at(t).download, this.upload = n.at(t).upload, this.isAvailable = n.at(t).isAvailable, !0
        }, t.exports = i
    }, function (t, e, r) {
        var n = function unavailable() {
                throw "This swarm.js function isn't available on the browser."
            },
            i = {
                readFile: n
            },
            o = {
                download: n,
                safeDownloadArchived: n,
                directoryTree: n
            },
            a = {
                platform: n,
                arch: n
            },
            s = {
                join: n,
                slice: n
            },
            u = {
                spawn: n
            },
            c = {
                lookup: n
            },
            l = r(877),
            h = r(340),
            d = r(890),
            p = r(892),
            m = r(893);
        t.exports = m({
            fs: i,
            files: o,
            os: a,
            path: s,
            child_process: u,
            defaultArchives: {},
            mimetype: c,
            request: l,
            downloadUrl: null,
            bytes: h,
            hash: d,
            pick: p
        })
    }, function (t, e, r) {
        var n = r(878),
            i = r(881),
            o = r(141),
            a = r(882),
            s = r(883),
            noop = function () {};
        t.exports = function xhrRequest(t, e, r) {
            if (!t || "string" != typeof t) throw new TypeError("must specify a URL");
            "function" == typeof e && (r = e, e = {});
            if (r && "function" != typeof r) throw new TypeError("expected cb to be undefined or a function");
            r = r || noop;
            var u = (e = e || {}).json ? "json" : "text",
                c = (e = o({
                    responseType: u
                }, e)).headers || {},
                l = (e.method || "GET").toUpperCase(),
                h = e.query;
            h && ("string" != typeof h && (h = n.stringify(h)), t = i(t, h));
            "json" === e.responseType && a(c, "Accept", "application/json");
            e.json && "GET" !== l && "HEAD" !== l && (a(c, "Content-Type", "application/json"), e.body = JSON.stringify(e.body));
            return e.method = l, e.url = t, e.headers = c, delete e.query, delete e.json, s(e, r)
        }
    }, function (t, e, r) {
        var n = r(879),
            i = r(141),
            o = r(880);

        function encode(t, e) {
            return e.encode ? e.strict ? n(t) : encodeURIComponent(t) : t
        }

        function extract(t) {
            var e = t.indexOf("?");
            return -1 === e ? "" : t.slice(e + 1)
        }

        function parse(t, e) {
            var r = function parserForArrayFormat(t) {
                    var e;
                    switch (t.arrayFormat) {
                        case "index":
                            return function (t, r, n) {
                                e = /\[(\d*)\]$/.exec(t), t = t.replace(/\[\d*\]$/, ""), e ? (void 0 === n[t] && (n[t] = {}), n[t][e[1]] = r) : n[t] = r
                            };
                        case "bracket":
                            return function (t, r, n) {
                                e = /(\[\])$/.exec(t), t = t.replace(/\[\]$/, ""), e ? void 0 !== n[t] ? n[t] = [].concat(n[t], r) : n[t] = [r] : n[t] = r
                            };
                        default:
                            return function (t, e, r) {
                                void 0 !== r[t] ? r[t] = [].concat(r[t], e) : r[t] = e
                            }
                    }
                }(e = i({
                    arrayFormat: "none"
                }, e)),
                n = Object.create(null);
            return "string" != typeof t ? n : (t = t.trim().replace(/^[?#&]/, "")) ? (t.split("&").forEach((function (t) {
                var e = t.replace(/\+/g, " ").split("="),
                    i = e.shift(),
                    a = e.length > 0 ? e.join("=") : void 0;
                a = void 0 === a ? null : o(a), r(o(i), a, n)
            })), Object.keys(n).sort().reduce((function (t, e) {
                var r = n[e];
                return Boolean(r) && "object" == typeof r && !Array.isArray(r) ? t[e] = function keysSorter(t) {
                    return Array.isArray(t) ? t.sort() : "object" == typeof t ? keysSorter(Object.keys(t)).sort((function (t, e) {
                        return Number(t) - Number(e)
                    })).map((function (e) {
                        return t[e]
                    })) : t
                }(r) : t[e] = r, t
            }), Object.create(null))) : n
        }
        e.extract = extract, e.parse = parse, e.stringify = function (t, e) {
            !1 === (e = i({
                encode: !0,
                strict: !0,
                arrayFormat: "none"
            }, e)).sort && (e.sort = function () {});
            var r = function encoderForArrayFormat(t) {
                switch (t.arrayFormat) {
                    case "index":
                        return function (e, r, n) {
                            return null === r ? [encode(e, t), "[", n, "]"].join("") : [encode(e, t), "[", encode(n, t), "]=", encode(r, t)].join("")
                        };
                    case "bracket":
                        return function (e, r) {
                            return null === r ? encode(e, t) : [encode(e, t), "[]=", encode(r, t)].join("")
                        };
                    default:
                        return function (e, r) {
                            return null === r ? encode(e, t) : [encode(e, t), "=", encode(r, t)].join("")
                        }
                }
            }(e);
            return t ? Object.keys(t).sort(e.sort).map((function (n) {
                var i = t[n];
                if (void 0 === i) return "";
                if (null === i) return encode(n, e);
                if (Array.isArray(i)) {
                    var o = [];
                    return i.slice().forEach((function (t) {
                        void 0 !== t && o.push(r(n, t, o.length))
                    })), o.join("&")
                }
                return encode(n, e) + "=" + encode(i, e)
            })).filter((function (t) {
                return t.length > 0
            })).join("&") : ""
        }, e.parseUrl = function (t, e) {
            return {
                url: t.split("?")[0] || "",
                query: parse(extract(t), e)
            }
        }
    }, function (t, e, r) {
        t.exports = function (t) {
            return encodeURIComponent(t).replace(/[!'()*]/g, (function (t) {
                return "%" + t.charCodeAt(0).toString(16).toUpperCase()
            }))
        }
    }, function (t, e, r) {
        var n = new RegExp("%[a-f0-9]{2}", "gi"),
            i = new RegExp("(%[a-f0-9]{2})+", "gi");

        function decodeComponents(t, e) {
            try {
                return decodeURIComponent(t.join(""))
            } catch (t) {}
            if (1 === t.length) return t;
            e = e || 1;
            var r = t.slice(0, e),
                n = t.slice(e);
            return Array.prototype.concat.call([], decodeComponents(r), decodeComponents(n))
        }

        function decode(t) {
            try {
                return decodeURIComponent(t)
            } catch (i) {
                for (var e = t.match(n), r = 1; r < e.length; r++) e = (t = decodeComponents(e, r).join("")).match(n);
                return t
            }
        }
        t.exports = function (t) {
            if ("string" != typeof t) throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof t + "`");
            try {
                return t = t.replace(/\+/g, " "), decodeURIComponent(t)
            } catch (e) {
                return function customDecodeURIComponent(t) {
                    for (var e = {
                            "%FE%FF": "��",
                            "%FF%FE": "��"
                        }, r = i.exec(t); r;) {
                        try {
                            e[r[0]] = decodeURIComponent(r[0])
                        } catch (t) {
                            var n = decode(r[0]);
                            n !== r[0] && (e[r[0]] = n)
                        }
                        r = i.exec(t)
                    }
                    e["%C2"] = "�";
                    for (var o = Object.keys(e), a = 0; a < o.length; a++) {
                        var s = o[a];
                        t = t.replace(new RegExp(s, "g"), e[s])
                    }
                    return t
                }(t)
            }
        }
    }, function (t, e) {
        t.exports = function urlSetQuery(t, e) {
            if (e) {
                e = (e = e.trim().replace(/^(\?|#|&)/, "")) ? "?" + e : e;
                var r = t.split(/[\?\#]/)[0];
                e && /\:\/\/[^\/]*$/.test(r) && (r += "/");
                var n = t.match(/(\#.*)$/);
                t = r + e, n && (t += n[0])
            }
            return t
        }
    }, function (t, e) {
        t.exports = function ensureHeader(t, e, r) {
            var n = e.toLowerCase();
            t[e] || t[n] || (t[e] = r)
        }
    }, function (t, e, r) {
        var n = r(884),
            i = r(888),
            noop = function () {};
        t.exports = function xhrRequest(t, e) {
            delete t.uri;
            var r = !1;
            "json" === t.responseType && (t.responseType = "text", r = !0);
            var o = n(t, (function xhrRequestResult(n, o, a) {
                    if (r && !n) try {
                        var s = o.rawRequest.responseText;
                        a = JSON.parse(s)
                    } catch (t) {
                        n = t
                    }
                    o = i(t, o), e(n, n ? null : a, o), e = noop
                })),
                a = o.onabort;
            return o.onabort = function () {
                var t = a.apply(o, Array.prototype.slice.call(arguments));
                return e(new Error("XHR Aborted")), e = noop, t
            }, o
        }
    }, function (t, e, r) {
        var n = r(885),
            i = r(886),
            o = r(887),
            a = r(271);

        function initParams(t, e, r) {
            var n = t;
            return i(e) ? (r = e, "string" == typeof t && (n = {
                uri: t
            })) : n = a(e, {
                uri: t
            }), n.callback = r, n
        }

        function createXHR(t, e, r) {
            return _createXHR(e = initParams(t, e, r))
        }

        function _createXHR(t) {
            if (void 0 === t.callback) throw new Error("callback argument missing");
            var e = !1,
                r = function cbOnce(r, n, i) {
                    e || (e = !0, t.callback(r, n, i))
                };

            function getBody() {
                var t = void 0;
                if (t = a.response ? a.response : a.responseText || function getXml(t) {
                        try {
                            if ("document" === t.responseType) return t.responseXML;
                            var e = t.responseXML && "parsererror" === t.responseXML.documentElement.nodeName;
                            if ("" === t.responseType && !e) return t.responseXML
                        } catch (t) {}
                        return null
                    }(a), p) try {
                    t = JSON.parse(t)
                } catch (t) {}
                return t
            }

            function errorFunc(t) {
                return clearTimeout(s), t instanceof Error || (t = new Error("" + (t || "Unknown XMLHttpRequest Error"))), t.statusCode = 0, r(t, m)
            }

            function loadFunc() {
                if (!i) {
                    var e;
                    clearTimeout(s), e = t.useXDR && void 0 === a.status ? 200 : 1223 === a.status ? 204 : a.status;
                    var n = m,
                        l = null;
                    return 0 !== e ? (n = {
                        body: getBody(),
                        statusCode: e,
                        method: c,
                        headers: {},
                        url: u,
                        rawRequest: a
                    }, a.getAllResponseHeaders && (n.headers = o(a.getAllResponseHeaders()))) : l = new Error("Internal XMLHttpRequest Error"), r(l, n, n.body)
                }
            }
            var n, i, a = t.xhr || null;
            a || (a = t.cors || t.useXDR ? new createXHR.XDomainRequest : new createXHR.XMLHttpRequest);
            var s, u = a.url = t.uri || t.url,
                c = a.method = t.method || "GET",
                l = t.body || t.data,
                h = a.headers = t.headers || {},
                d = !!t.sync,
                p = !1,
                m = {
                    body: void 0,
                    headers: {},
                    statusCode: 0,
                    method: c,
                    url: u,
                    rawRequest: a
                };
            if ("json" in t && !1 !== t.json && (p = !0, h.accept || h.Accept || (h.Accept = "application/json"), "GET" !== c && "HEAD" !== c && (h["content-type"] || h["Content-Type"] || (h["Content-Type"] = "application/json"), l = JSON.stringify(!0 === t.json ? l : t.json))), a.onreadystatechange = function readystatechange() {
                    4 === a.readyState && setTimeout(loadFunc, 0)
                }, a.onload = loadFunc, a.onerror = errorFunc, a.onprogress = function () {}, a.onabort = function () {
                    i = !0
                }, a.ontimeout = errorFunc, a.open(c, u, !d, t.username, t.password), d || (a.withCredentials = !!t.withCredentials), !d && t.timeout > 0 && (s = setTimeout((function () {
                    if (!i) {
                        i = !0, a.abort("timeout");
                        var t = new Error("XMLHttpRequest timeout");
                        t.code = "ETIMEDOUT", errorFunc(t)
                    }
                }), t.timeout)), a.setRequestHeader)
                for (n in h) h.hasOwnProperty(n) && a.setRequestHeader(n, h[n]);
            else if (t.headers && ! function isEmpty(t) {
                    for (var e in t)
                        if (t.hasOwnProperty(e)) return !1;
                    return !0
                }(t.headers)) throw new Error("Headers cannot be set on an XDomainRequest object");
            return "responseType" in t && (a.responseType = t.responseType), "beforeSend" in t && "function" == typeof t.beforeSend && t.beforeSend(a), a.send(l || null), a
        }
        t.exports = createXHR, t.exports.default = createXHR, createXHR.XMLHttpRequest = n.XMLHttpRequest || function noop() {}, createXHR.XDomainRequest = "withCredentials" in new createXHR.XMLHttpRequest ? createXHR.XMLHttpRequest : n.XDomainRequest,
            function forEachArray(t, e) {
                for (var r = 0; r < t.length; r++) e(t[r])
            }(["get", "put", "post", "patch", "head", "delete"], (function (t) {
                createXHR["delete" === t ? "del" : t] = function (e, r, n) {
                    return (r = initParams(e, r, n)).method = t.toUpperCase(), _createXHR(r)
                }
            }))
    }, function (t, e, r) {
        (function (e) {
            var r;
            r = "undefined" != typeof window ? window : void 0 !== e ? e : "undefined" != typeof self ? self : {}, t.exports = r
        }).call(this, r(6))
    }, function (t, e) {
        t.exports = function isFunction(t) {
            if (!t) return !1;
            var e = r.call(t);
            return "[object Function]" === e || "function" == typeof t && "[object RegExp]" !== e || "undefined" != typeof window && (t === window.setTimeout || t === window.alert || t === window.confirm || t === window.prompt)
        };
        var r = Object.prototype.toString
    }, function (t, e) {
        var trim = function (t) {
            return t.replace(/^\s+|\s+$/g, "")
        };
        t.exports = function (t) {
            if (!t) return {};
            for (var e, r = {}, n = trim(t).split("\n"), i = 0; i < n.length; i++) {
                var o = n[i],
                    a = o.indexOf(":"),
                    s = trim(o.slice(0, a)).toLowerCase(),
                    u = trim(o.slice(a + 1));
                void 0 === r[s] ? r[s] = u : (e = r[s], "[object Array]" === Object.prototype.toString.call(e) ? r[s].push(u) : r[s] = [r[s], u])
            }
            return r
        }
    }, function (t, e) {
        t.exports = function getResponse(t, e) {
            return e ? {
                statusCode: e.statusCode,
                headers: e.headers,
                method: t.method,
                url: t.url,
                rawRequest: e.rawRequest ? e.rawRequest : e
            } : null
        }
    }, function (t, e) {
        var r = function generate(t, e) {
            for (var r = [], n = 0; n < t; ++n) r.push(e(n));
            return r
        };
        t.exports = {
            generate: r,
            replicate: function replicate(t, e) {
                return r(t, (function () {
                    return e
                }))
            },
            concat: function concat(t, e) {
                return t.concat(e)
            },
            flatten: function flatten(t) {
                for (var e = [], r = 0, n = t.length; r < n; ++r)
                    for (var i = 0, o = t[r].length; i < o; ++i) e.push(t[r][i]);
                return e
            },
            chunksOf: function chunksOf(t, e) {
                for (var r = [], n = 0, i = e.length; n < i; n += t) r.push(e.slice(n, n + t));
                return r
            }
        }
    }, function (t, e, r) {
        var n = r(891).keccak256,
            i = r(340),
            o = function swarmHashBlock(t, e) {
                var r = i.reverse(i.pad(6, i.fromNumber(t))),
                    o = i.flatten([r, "0x0000", e]);
                return n(o).slice(2)
            };
        t.exports = function swarmHash(t) {
            "string" == typeof t && "0x" !== t.slice(0, 2) ? t = i.fromString(t) : "string" != typeof t && void 0 !== t.length && (t = i.fromUint8Array(t));
            var e = i.length(t);
            if (e <= 4096) return o(e, t);
            for (var r = 4096; 128 * r < e;) r *= 128;
            for (var n = [], a = 0; a < e; a += r) {
                var s = r < e - a ? r : e - a;
                n.push(swarmHash(i.slice(t, a, a + s)))
            }
            return o(e, i.flatten(n))
        }
    }, function (t, e) {
        var r = "0123456789abcdef".split(""),
            n = [1, 256, 65536, 16777216],
            i = [0, 8, 16, 24],
            o = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648],
            a = function f(t) {
                var e, r, n, i, a, s, u, c, l, h, d, p, m, y, b, g, v, w, M, A, x, B, E, k, N, T, C, P, I, O, D, j, L, U, H, q, z, G, V, J, W, Z, X, Y, $, Q, tt, et, rt, nt, it, ot, st, ut, ct, ht, dt, pt, mt, yt, bt, vt, wt;
                for (n = 0; n < 48; n += 2) i = t[0] ^ t[10] ^ t[20] ^ t[30] ^ t[40], a = t[1] ^ t[11] ^ t[21] ^ t[31] ^ t[41], s = t[2] ^ t[12] ^ t[22] ^ t[32] ^ t[42], u = t[3] ^ t[13] ^ t[23] ^ t[33] ^ t[43], c = t[4] ^ t[14] ^ t[24] ^ t[34] ^ t[44], l = t[5] ^ t[15] ^ t[25] ^ t[35] ^ t[45], h = t[6] ^ t[16] ^ t[26] ^ t[36] ^ t[46], d = t[7] ^ t[17] ^ t[27] ^ t[37] ^ t[47], e = (p = t[8] ^ t[18] ^ t[28] ^ t[38] ^ t[48]) ^ (s << 1 | u >>> 31), r = (m = t[9] ^ t[19] ^ t[29] ^ t[39] ^ t[49]) ^ (u << 1 | s >>> 31), t[0] ^= e, t[1] ^= r, t[10] ^= e, t[11] ^= r, t[20] ^= e, t[21] ^= r, t[30] ^= e, t[31] ^= r, t[40] ^= e, t[41] ^= r, e = i ^ (c << 1 | l >>> 31), r = a ^ (l << 1 | c >>> 31), t[2] ^= e, t[3] ^= r, t[12] ^= e, t[13] ^= r, t[22] ^= e, t[23] ^= r, t[32] ^= e, t[33] ^= r, t[42] ^= e, t[43] ^= r, e = s ^ (h << 1 | d >>> 31), r = u ^ (d << 1 | h >>> 31), t[4] ^= e, t[5] ^= r, t[14] ^= e, t[15] ^= r, t[24] ^= e, t[25] ^= r, t[34] ^= e, t[35] ^= r, t[44] ^= e, t[45] ^= r, e = c ^ (p << 1 | m >>> 31), r = l ^ (m << 1 | p >>> 31), t[6] ^= e, t[7] ^= r, t[16] ^= e, t[17] ^= r, t[26] ^= e, t[27] ^= r, t[36] ^= e, t[37] ^= r, t[46] ^= e, t[47] ^= r, e = h ^ (i << 1 | a >>> 31), r = d ^ (a << 1 | i >>> 31), t[8] ^= e, t[9] ^= r, t[18] ^= e, t[19] ^= r, t[28] ^= e, t[29] ^= r, t[38] ^= e, t[39] ^= r, t[48] ^= e, t[49] ^= r, y = t[0], b = t[1], Q = t[11] << 4 | t[10] >>> 28, tt = t[10] << 4 | t[11] >>> 28, P = t[20] << 3 | t[21] >>> 29, I = t[21] << 3 | t[20] >>> 29, yt = t[31] << 9 | t[30] >>> 23, bt = t[30] << 9 | t[31] >>> 23, Z = t[40] << 18 | t[41] >>> 14, X = t[41] << 18 | t[40] >>> 14, U = t[2] << 1 | t[3] >>> 31, H = t[3] << 1 | t[2] >>> 31, g = t[13] << 12 | t[12] >>> 20, v = t[12] << 12 | t[13] >>> 20, et = t[22] << 10 | t[23] >>> 22, rt = t[23] << 10 | t[22] >>> 22, O = t[33] << 13 | t[32] >>> 19, D = t[32] << 13 | t[33] >>> 19, vt = t[42] << 2 | t[43] >>> 30, wt = t[43] << 2 | t[42] >>> 30, ut = t[5] << 30 | t[4] >>> 2, ct = t[4] << 30 | t[5] >>> 2, q = t[14] << 6 | t[15] >>> 26, z = t[15] << 6 | t[14] >>> 26, w = t[25] << 11 | t[24] >>> 21, M = t[24] << 11 | t[25] >>> 21, nt = t[34] << 15 | t[35] >>> 17, it = t[35] << 15 | t[34] >>> 17, j = t[45] << 29 | t[44] >>> 3, L = t[44] << 29 | t[45] >>> 3, k = t[6] << 28 | t[7] >>> 4, N = t[7] << 28 | t[6] >>> 4, ht = t[17] << 23 | t[16] >>> 9, dt = t[16] << 23 | t[17] >>> 9, G = t[26] << 25 | t[27] >>> 7, V = t[27] << 25 | t[26] >>> 7, A = t[36] << 21 | t[37] >>> 11, x = t[37] << 21 | t[36] >>> 11, ot = t[47] << 24 | t[46] >>> 8, st = t[46] << 24 | t[47] >>> 8, Y = t[8] << 27 | t[9] >>> 5, $ = t[9] << 27 | t[8] >>> 5, T = t[18] << 20 | t[19] >>> 12, C = t[19] << 20 | t[18] >>> 12, pt = t[29] << 7 | t[28] >>> 25, mt = t[28] << 7 | t[29] >>> 25, J = t[38] << 8 | t[39] >>> 24, W = t[39] << 8 | t[38] >>> 24, B = t[48] << 14 | t[49] >>> 18, E = t[49] << 14 | t[48] >>> 18, t[0] = y ^ ~g & w, t[1] = b ^ ~v & M, t[10] = k ^ ~T & P, t[11] = N ^ ~C & I, t[20] = U ^ ~q & G, t[21] = H ^ ~z & V, t[30] = Y ^ ~Q & et, t[31] = $ ^ ~tt & rt, t[40] = ut ^ ~ht & pt, t[41] = ct ^ ~dt & mt, t[2] = g ^ ~w & A, t[3] = v ^ ~M & x, t[12] = T ^ ~P & O, t[13] = C ^ ~I & D, t[22] = q ^ ~G & J, t[23] = z ^ ~V & W, t[32] = Q ^ ~et & nt, t[33] = tt ^ ~rt & it, t[42] = ht ^ ~pt & yt, t[43] = dt ^ ~mt & bt, t[4] = w ^ ~A & B, t[5] = M ^ ~x & E, t[14] = P ^ ~O & j, t[15] = I ^ ~D & L, t[24] = G ^ ~J & Z, t[25] = V ^ ~W & X, t[34] = et ^ ~nt & ot, t[35] = rt ^ ~it & st, t[44] = pt ^ ~yt & vt, t[45] = mt ^ ~bt & wt, t[6] = A ^ ~B & y, t[7] = x ^ ~E & b, t[16] = O ^ ~j & k, t[17] = D ^ ~L & N, t[26] = J ^ ~Z & U, t[27] = W ^ ~X & H, t[36] = nt ^ ~ot & Y, t[37] = it ^ ~st & $, t[46] = yt ^ ~vt & ut, t[47] = bt ^ ~wt & ct, t[8] = B ^ ~y & g, t[9] = E ^ ~b & v, t[18] = j ^ ~k & T, t[19] = L ^ ~N & C, t[28] = Z ^ ~U & q, t[29] = X ^ ~H & z, t[38] = ot ^ ~Y & Q, t[39] = st ^ ~$ & tt, t[48] = vt ^ ~ut & ht, t[49] = wt ^ ~ct & dt, t[0] ^= o[n], t[1] ^= o[n + 1]
            },
            s = function keccak(t) {
                return function (e) {
                    var o;
                    if ("0x" === e.slice(0, 2)) {
                        o = [];
                        for (var s = 2, u = e.length; s < u; s += 2) o.push(parseInt(e.slice(s, s + 2), 16))
                    } else o = e;
                    return function update(t, e) {
                        for (var o, s = e.length, u = t.blocks, c = t.blockCount << 2, l = t.blockCount, h = t.outputBlocks, d = t.s, p = 0; p < s;) {
                            if (t.reset)
                                for (t.reset = !1, u[0] = t.block, b = 1; b < l + 1; ++b) u[b] = 0;
                            if ("string" != typeof e)
                                for (b = t.start; p < s && b < c; ++p) u[b >> 2] |= e[p] << i[3 & b++];
                            else
                                for (b = t.start; p < s && b < c; ++p)(o = e.charCodeAt(p)) < 128 ? u[b >> 2] |= o << i[3 & b++] : o < 2048 ? (u[b >> 2] |= (192 | o >> 6) << i[3 & b++], u[b >> 2] |= (128 | 63 & o) << i[3 & b++]) : o < 55296 || o >= 57344 ? (u[b >> 2] |= (224 | o >> 12) << i[3 & b++], u[b >> 2] |= (128 | o >> 6 & 63) << i[3 & b++], u[b >> 2] |= (128 | 63 & o) << i[3 & b++]) : (o = 65536 + ((1023 & o) << 10 | 1023 & e.charCodeAt(++p)), u[b >> 2] |= (240 | o >> 18) << i[3 & b++], u[b >> 2] |= (128 | o >> 12 & 63) << i[3 & b++], u[b >> 2] |= (128 | o >> 6 & 63) << i[3 & b++], u[b >> 2] |= (128 | 63 & o) << i[3 & b++]);
                            if (t.lastByteIndex = b, b >= c) {
                                for (t.start = b - c, t.block = u[l], b = 0; b < l; ++b) d[b] ^= u[b];
                                a(d), t.reset = !0
                            } else t.start = b
                        }
                        if (u[(b = t.lastByteIndex) >> 2] |= n[3 & b], t.lastByteIndex === c)
                            for (u[0] = u[l], b = 1; b < l + 1; ++b) u[b] = 0;
                        for (u[l - 1] |= 2147483648, b = 0; b < l; ++b) d[b] ^= u[b];
                        a(d);
                        for (var m, y = "", b = 0, g = 0; g < h;) {
                            for (b = 0; b < l && g < h; ++b, ++g) m = d[b], y += r[m >> 4 & 15] + r[15 & m] + r[m >> 12 & 15] + r[m >> 8 & 15] + r[m >> 20 & 15] + r[m >> 16 & 15] + r[m >> 28 & 15] + r[m >> 24 & 15];
                            g % l == 0 && (a(d), b = 0)
                        }
                        return "0x" + y
                    }(function Keccak(t) {
                        return {
                            blocks: [],
                            reset: !0,
                            block: 0,
                            start: 0,
                            blockCount: 1600 - (t << 1) >> 5,
                            outputBlocks: t >> 5,
                            s: (e = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [].concat(e, e, e, e, e))
                        };
                        var e
                    }(t), o)
                }
            };
        t.exports = {
            keccak256: s(256),
            keccak512: s(512),
            keccak256s: s(256),
            keccak512s: s(512)
        }
    }, function (t, e) {
        var r = function picker(t) {
            return function () {
                return new Promise((function (e, r) {
                    var n, i = function fileLoader(r) {
                        var n = {},
                            i = r.target.files.length,
                            o = 0;
                        [].map.call(r.target.files, (function (r) {
                            var a = new FileReader;
                            a.onload = function (a) {
                                var s = new Uint8Array(a.target.result);
                                if ("directory" === t) {
                                    var u = r.webkitRelativePath;
                                    n[u.slice(u.indexOf("/") + 1)] = {
                                        type: "text/plain",
                                        data: s
                                    }, ++o === i && e(n)
                                } else if ("file" === t) {
                                    var c = r.webkitRelativePath;
                                    e({
                                        type: mimetype.lookup(c),
                                        data: s
                                    })
                                } else e(s)
                            }, a.readAsArrayBuffer(r)
                        }))
                    };
                    "directory" === t ? ((n = document.createElement("input")).addEventListener("change", i), n.type = "file", n.webkitdirectory = !0, n.mozdirectory = !0, n.msdirectory = !0, n.odirectory = !0, n.directory = !0) : ((n = document.createElement("input")).addEventListener("change", i), n.type = "file");
                    var o = document.createEvent("MouseEvents");
                    o.initEvent("click", !0, !1), n.dispatchEvent(o)
                }))
            }
        };
        t.exports = {
            data: r("data"),
            file: r("file"),
            directory: r("directory")
        }
    }, function (t, e) {
        t.exports = function (t) {
            var e = t.fs,
                r = t.files,
                n = t.os,
                i = t.path,
                o = t.child_process,
                a = t.mimetype,
                s = t.defaultArchives,
                u = t.request,
                c = t.downloadUrl,
                l = t.bytes,
                h = t.hash,
                d = t.pick,
                p = function toMap(t) {
                    return function (e) {
                        for (var r = {}, n = 0, i = t.length; n < i; ++n) r[t[n]] = e[n];
                        return r
                    }
                },
                m = function rawUrl(t) {
                    return function (e) {
                        return "".concat(t, "/bzz-raw:/").concat(e)
                    }
                },
                y = function downloadData(t) {
                    return function (e) {
                        return new Promise((function (r, n) {
                            u(m(t)(e), {
                                responseType: "arraybuffer"
                            }, (function (t, e, i) {
                                return t ? n(t) : i.statusCode >= 400 ? n(new Error("Error ".concat(i.statusCode, "."))) : r(new Uint8Array(e))
                            }))
                        }))
                    }
                },
                b = function downloadEntries(t) {
                    return function (e) {
                        return function search(e) {
                            return function (r) {
                                return function (n) {
                                    var i = function downloadEntry(t) {
                                        return void 0 === t.path ? Promise.resolve() : "application/bzz-manifest+json" === t.contentType ? search(t.hash)(r + t.path)(n) : Promise.resolve(function impureInsert(t) {
                                            return function (e) {
                                                return function (r) {
                                                    return r[t] = e, r
                                                }
                                            }
                                        }(r + t.path)(function format(t) {
                                            return {
                                                type: t.contentType,
                                                hash: t.hash
                                            }
                                        }(t))(n))
                                    };
                                    return y(t)(e).then((function (t) {
                                        return JSON.parse(H(t)).entries
                                    })).then((function (t) {
                                        return Promise.all(t.map(i))
                                    })).then((function () {
                                        return n
                                    }))
                                }
                            }
                        }(e)("")({})
                    }
                },
                g = function downloadRoutes(t) {
                    return function (e) {
                        return b(t)(e).then((function (t) {
                            return p(Object.keys(t))(Object.keys(t).map((function (e) {
                                return t[e].hash
                            })))
                        }))
                    }
                },
                v = function downloadDirectory(t) {
                    return function (e) {
                        return b(t)(e).then((function (e) {
                            var r = Object.keys(e),
                                n = r.map((function (t) {
                                    return e[t].hash
                                })),
                                i = r.map((function (t) {
                                    return e[t].type
                                })),
                                o = n.map(y(t));
                            return Promise.all(o).then((function (t) {
                                return p(r)(function files(t) {
                                    return t.map((function (t, e) {
                                        return {
                                            type: i[e],
                                            data: t
                                        }
                                    }))
                                }(t))
                            }))
                        }))
                    }
                },
                w = function downloadDataToDisk(t) {
                    return function (e) {
                        return function (n) {
                            return r.download(m(t)(e))(n)
                        }
                    }
                },
                M = function downloadDirectoryToDisk(t) {
                    return function (e) {
                        return function (r) {
                            return g(t)(e).then((function (e) {
                                var n = [];
                                for (var o in e)
                                    if (o.length > 0) {
                                        var a = i.join(r, o);
                                        n.push(w(t)(e[o])(a))
                                    } return Promise.all(n).then((function () {
                                    return r
                                }))
                            }))
                        }
                    }
                },
                A = function uploadData(t) {
                    return function (e) {
                        return new Promise((function (r, n) {
                            var i = {
                                body: "string" == typeof e ? q(e) : e,
                                method: "POST"
                            };
                            u("".concat(t, "/bzz-raw:/"), i, (function (t, e) {
                                return t ? n(t) : r(e)
                            }))
                        }))
                    }
                },
                x = function uploadToManifest(t) {
                    return function (e) {
                        return function (r) {
                            return function (n) {
                                return function attempt(i) {
                                    var o = "/" === r[0] ? r : "/" + r,
                                        a = "".concat(t, "/bzz:/").concat(e).concat(o),
                                        s = {
                                            method: "PUT",
                                            headers: {
                                                "Content-Type": n.type
                                            },
                                            body: n.data
                                        };
                                    return new Promise((function (t, e) {
                                        u(a, s, (function (r, n) {
                                            return r ? e(r) : -1 !== n.indexOf("error") ? e(n) : t(n)
                                        }))
                                    })).catch((function (t) {
                                        return i > 0 && attempt(i - 1)
                                    }))
                                }(3)
                            }
                        }
                    }
                },
                B = function uploadFile(t) {
                    return function (e) {
                        return k(t)({
                            "": e
                        })
                    }
                },
                E = function uploadFileFromDisk(t) {
                    return function (r) {
                        return e.readFile(r).then((function (e) {
                            return B(t)({
                                type: a.lookup(r),
                                data: e
                            })
                        }))
                    }
                },
                k = function uploadDirectory(t) {
                    return function (e) {
                        return A(t)("{}").then((function (r) {
                            return Object.keys(e).reduce((function uploadToHash(r, n) {
                                return r.then(function uploadRoute(r) {
                                    return function (n) {
                                        return x(t)(n)(r)(e[r])
                                    }
                                }(n))
                            }), Promise.resolve(r))
                        }))
                    }
                },
                N = function uploadDataFromDisk(t) {
                    return function (r) {
                        return e.readFile(r).then(A(t))
                    }
                },
                T = function uploadDirectoryFromDisk(t) {
                    return function (n) {
                        return function (i) {
                            return r.directoryTree(i).then((function (t) {
                                return Promise.all(t.map((function (t) {
                                    return e.readFile(t)
                                }))).then((function (e) {
                                    var r = t.map((function (t) {
                                            return t.slice(i.length)
                                        })),
                                        n = t.map((function (t) {
                                            return a.lookup(t) || "text/plain"
                                        }));
                                    return p(r)(e.map((function (t, e) {
                                        return {
                                            type: n[e],
                                            data: t
                                        }
                                    })))
                                }))
                            })).then((function (t) {
                                return function merge(t) {
                                    return function (e) {
                                        var r = {};
                                        for (var n in t) r[n] = t[n];
                                        for (var i in e) r[i] = e[i];
                                        return r
                                    }
                                }(n ? {
                                    "": t[n]
                                } : {})(t)
                            })).then(k(t))
                        }
                    }
                },
                C = function upload(t) {
                    return function (e) {
                        if ("data" === e.pick) return d.data().then(A(t));
                        if ("file" === e.pick) return d.file().then(B(t));
                        if ("directory" === e.pick) return d.directory().then(k(t));
                        if (e.path) switch (e.kind) {
                            case "data":
                                return N(t)(e.path);
                            case "file":
                                return E(t)(e.path);
                            case "directory":
                                return T(t)(e.defaultFile)(e.path)
                        } else {
                            if (e.length || "string" == typeof e) return A(t)(e);
                            if (e instanceof Object) return k(t)(e)
                        }
                        return Promise.reject(new Error("Bad arguments"))
                    }
                },
                P = function download(t) {
                    return function (e) {
                        return function (r) {
                            return L(t)(e).then((function (n) {
                                return n ? r ? M(t)(e)(r) : v(t)(e) : r ? w(t)(e)(r) : y(t)(e)
                            }))
                        }
                    }
                },
                I = function downloadBinary(t, e) {
                    var i = n.platform().replace("win32", "windows") + "-" + ("x64" === n.arch() ? "amd64" : "386"),
                        o = (e || s)[i],
                        a = c + o.archive + ".tar.gz",
                        u = o.archiveMD5,
                        l = o.binaryMD5;
                    return r.safeDownloadArchived(a)(u)(l)(t)
                },
                O = function startProcess(t) {
                    return new Promise((function (e, r) {
                        var n = o.spawn,
                            i = function hasString(t) {
                                return function (e) {
                                    return -1 !== ("" + e).indexOf(t)
                                }
                            },
                            a = t.account,
                            s = t.password,
                            u = t.dataDir,
                            c = t.ensApi,
                            l = t.privateKey,
                            h = 0,
                            d = n(t.binPath, ["--bzzaccount", a || l, "--datadir", u, "--ens-api", c]),
                            p = function handleProcessOutput(t) {
                                0 === h && i("Passphrase")(t) ? setTimeout((function () {
                                    h = 1, d.stdin.write(s + "\n")
                                }), 500) : i("Swarm http proxy started")(t) && (h = 2, clearTimeout(m), e(d))
                            };
                        d.stdout.on("data", p), d.stderr.on("data", p);
                        var m = setTimeout((function error() {
                            return r(new Error("Couldn't start swarm process."))
                        }), 2e4)
                    }))
                },
                D = function stopProcess(t) {
                    return new Promise((function (e, r) {
                        t.stderr.removeAllListeners("data"), t.stdout.removeAllListeners("data"), t.stdin.removeAllListeners("error"), t.removeAllListeners("error"), t.removeAllListeners("exit"), t.kill("SIGINT");
                        var n = setTimeout((function () {
                            return t.kill("SIGKILL")
                        }), 8e3);
                        t.once("close", (function () {
                            clearTimeout(n), e()
                        }))
                    }))
                },
                j = function isAvailable(t) {
                    return A(t)("test").then((function (t) {
                        return "c9a99c7d326dcc6316f32fe2625b311f6dc49a175e6877681ded93137d3569e7" === t
                    })).catch((function () {
                        return !1
                    }))
                },
                L = function isDirectory(t) {
                    return function (e) {
                        return y(t)(e).then((function (t) {
                            try {
                                return !!JSON.parse(H(t)).entries
                            } catch (t) {
                                return !1
                            }
                        }))
                    }
                },
                U = function uncurry(t) {
                    return function (e, r, n, i, o) {
                        var a;
                        return void 0 !== e && (a = t(e)), void 0 !== r && (a = t(r)), void 0 !== n && (a = t(n)), void 0 !== i && (a = t(i)), void 0 !== o && (a = t(o)), a
                    }
                },
                H = function toString(t) {
                    return l.toString(l.fromUint8Array(t))
                },
                q = function fromString(t) {
                    return l.toUint8Array(l.fromString(t))
                },
                z = function at(t) {
                    return {
                        download: function download(e, r) {
                            return P(t)(e)(r)
                        },
                        downloadData: U(y(t)),
                        downloadDataToDisk: U(w(t)),
                        downloadDirectory: U(v(t)),
                        downloadDirectoryToDisk: U(M(t)),
                        downloadEntries: U(b(t)),
                        downloadRoutes: U(g(t)),
                        isAvailable: function isAvailable() {
                            return j(t)
                        },
                        upload: function upload(e) {
                            return C(t)(e)
                        },
                        uploadData: U(A(t)),
                        uploadFile: U(B(t)),
                        uploadFileFromDisk: U(B(t)),
                        uploadDataFromDisk: U(N(t)),
                        uploadDirectory: U(k(t)),
                        uploadDirectoryFromDisk: U(T(t)),
                        uploadToManifest: U(x(t)),
                        pick: d,
                        hash: h,
                        fromString: q,
                        toString: H
                    }
                };
            return {
                at: z,
                local: function local(t) {
                    return function (e) {
                        return j("http://localhost:8500").then((function (r) {
                            return r ? e(z("http://localhost:8500")).then((function () {})) : I(t.binPath, t.archives).onData((function (e) {
                                return (t.onProgress || function () {})(e.length)
                            })).then((function () {
                                return O(t)
                            })).then((function (t) {
                                return e(z("http://localhost:8500")).then((function () {
                                    return t
                                }))
                            })).then(D)
                        }))
                    }
                },
                download: P,
                downloadBinary: I,
                downloadData: y,
                downloadDataToDisk: w,
                downloadDirectory: v,
                downloadDirectoryToDisk: M,
                downloadEntries: b,
                downloadRoutes: g,
                isAvailable: j,
                startProcess: O,
                stopProcess: D,
                upload: C,
                uploadData: A,
                uploadDataFromDisk: N,
                uploadFile: B,
                uploadFileFromDisk: E,
                uploadDirectory: k,
                uploadDirectoryFromDisk: T,
                uploadToManifest: x,
                pick: d,
                hash: h,
                fromString: q,
                toString: H
            }
        }
    }, function (t, e, r) {
        var n = r(895),
            i = r(230);
        t.exports = function has(t, e) {
            return null != t && i(t, e, n)
        }
    }, function (t, e) {
        var r = Object.prototype.hasOwnProperty;
        t.exports = function baseHas(t, e) {
            return null != t && r.call(t, e)
        }
    }, function (t, e) {
        var r = Math.floor;
        t.exports = function baseRepeat(t, e) {
            var n = "";
            if (!t || e < 1 || e > 9007199254740991) return n;
            do {
                e % 2 && (n += t), (e = r(e / 2)) && (t += t)
            } while (e);
            return n
        }
    }, function (t, e, r) {
        var n = r(898);
        t.exports = function castSlice(t, e, r) {
            var i = t.length;
            return r = void 0 === r ? i : r, !e && r >= i ? t : n(t, e, r)
        }
    }, function (t, e) {
        t.exports = function baseSlice(t, e, r) {
            var n = -1,
                i = t.length;
            e < 0 && (e = -e > i ? 0 : i + e), (r = r > i ? i : r) < 0 && (r += i), i = e > r ? 0 : r - e >>> 0, e >>>= 0;
            for (var o = Array(i); ++n < i;) o[n] = t[n + e];
            return o
        }
    }, function (t, e, r) {
        var n = r(231)("length");
        t.exports = n
    }, function (t, e) {
        var r = "[\\ud800-\\udfff]",
            n = "[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",
            i = "\\ud83c[\\udffb-\\udfff]",
            o = "[^\\ud800-\\udfff]",
            a = "(?:\\ud83c[\\udde6-\\uddff]){2}",
            s = "[\\ud800-\\udbff][\\udc00-\\udfff]",
            u = "(?:" + n + "|" + i + ")" + "?",
            c = "[\\ufe0e\\ufe0f]?" + u + ("(?:\\u200d(?:" + [o, a, s].join("|") + ")[\\ufe0e\\ufe0f]?" + u + ")*"),
            l = "(?:" + [o + n + "?", n, a, s, r].join("|") + ")",
            h = RegExp(i + "(?=" + i + ")|" + l + c, "g");
        t.exports = function unicodeSize(t) {
            for (var e = h.lastIndex = 0; h.test(t);) ++e;
            return e
        }
    }, function (t, e, r) {
        var n = r(902),
            i = r(204),
            o = r(903);
        t.exports = function stringToArray(t) {
            return i(t) ? o(t) : n(t)
        }
    }, function (t, e) {
        t.exports = function asciiToArray(t) {
            return t.split("")
        }
    }, function (t, e) {
        var r = "[\\ud800-\\udfff]",
            n = "[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",
            i = "\\ud83c[\\udffb-\\udfff]",
            o = "[^\\ud800-\\udfff]",
            a = "(?:\\ud83c[\\udde6-\\uddff]){2}",
            s = "[\\ud800-\\udbff][\\udc00-\\udfff]",
            u = "(?:" + n + "|" + i + ")" + "?",
            c = "[\\ufe0e\\ufe0f]?" + u + ("(?:\\u200d(?:" + [o, a, s].join("|") + ")[\\ufe0e\\ufe0f]?" + u + ")*"),
            l = "(?:" + [o + n + "?", n, a, s, r].join("|") + ")",
            h = RegExp(i + "(?=" + i + ")|" + l + c, "g");
        t.exports = function unicodeToArray(t) {
            return t.match(h) || []
        }
    }, function (t, e, r) {
        var n = r(138),
            i = r(905),
            o = new(0, r(908).AbiCoder)((function (t, e) {
                return !t.match(/^u?int/) || n.isArray(e) || n.isObject(e) && "BN" === e.constructor.name ? e : e.toString()
            }));

        function Result() {}
        var ABICoder = function () {};
        ABICoder.prototype.encodeFunctionSignature = function (t) {
            return n.isObject(t) && (t = i._jsonInterfaceMethodToString(t)), i.sha3(t).slice(0, 10)
        }, ABICoder.prototype.encodeEventSignature = function (t) {
            return n.isObject(t) && (t = i._jsonInterfaceMethodToString(t)), i.sha3(t)
        }, ABICoder.prototype.encodeParameter = function (t, e) {
            return this.encodeParameters([t], [e])
        }, ABICoder.prototype.encodeParameters = function (t, e) {
            return o.encode(this.mapTypes(t), e.map((function (t) {
                return i.isBN(t) || i.isBigNumber(t) ? t.toString(10) : t
            })))
        }, ABICoder.prototype.mapTypes = function (t) {
            var e = this,
                r = [];
            return t.forEach((function (t) {
                if (e.isSimplifiedStructFormat(t)) {
                    var n = Object.keys(t)[0];
                    r.push(Object.assign(e.mapStructNameAndType(n), {
                        components: e.mapStructToCoderFormat(t[n])
                    }))
                } else r.push(t)
            })), r
        }, ABICoder.prototype.isSimplifiedStructFormat = function (t) {
            return "object" == typeof t && void 0 === t.components && void 0 === t.name
        }, ABICoder.prototype.mapStructNameAndType = function (t) {
            var e = "tuple";
            return t.indexOf("[]") > -1 && (e = "tuple[]", t = t.slice(0, -2)), {
                type: e,
                name: t
            }
        }, ABICoder.prototype.mapStructToCoderFormat = function (t) {
            var e = this,
                r = [];
            return Object.keys(t).forEach((function (n) {
                "object" != typeof t[n] ? r.push({
                    name: n,
                    type: t[n]
                }) : r.push(Object.assign(e.mapStructNameAndType(n), {
                    components: e.mapStructToCoderFormat(t[n])
                }))
            })), r
        }, ABICoder.prototype.encodeFunctionCall = function (t, e) {
            return this.encodeFunctionSignature(t) + this.encodeParameters(t.inputs, e).replace("0x", "")
        }, ABICoder.prototype.decodeParameter = function (t, e) {
            return this.decodeParameters([t], e)[0]
        }, ABICoder.prototype.decodeParameters = function (t, e) {
            if (t.length > 0 && (!e || "0x" === e || "0X" === e)) throw new Error("Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.");
            var r = o.decode(this.mapTypes(t), "0x" + e.replace(/0x/i, "")),
                i = new Result;
            return i.__length__ = 0, t.forEach((function (t, e) {
                var o = r[i.__length__];
                o = "0x" === o ? null : o, i[e] = o, n.isObject(t) && t.name && (i[t.name] = o), i.__length__++
            })), i
        }, ABICoder.prototype.decodeLog = function (t, e, r) {
            var i = this;
            r = n.isArray(r) ? r : [r], e = e || "";
            var o = [],
                a = [],
                s = 0;
            t.forEach((function (t, e) {
                t.indexed ? (a[e] = ["bool", "int", "uint", "address", "fixed", "ufixed"].find((function (e) {
                    return -1 !== t.type.indexOf(e)
                })) ? i.decodeParameter(t.type, r[s]) : r[s], s++) : o[e] = t
            }));
            var u = e,
                c = u ? this.decodeParameters(o, u) : [],
                l = new Result;
            return l.__length__ = 0, t.forEach((function (t, e) {
                l[e] = "string" === t.type ? "" : null, void 0 !== c[e] && (l[e] = c[e]), void 0 !== a[e] && (l[e] = a[e]), t.name && (l[t.name] = l[e]), l.__length__++
            })), l
        };
        var a = new ABICoder;
        t.exports = a
    }, function (t, e, r) {
        var n = r(138),
            i = r(65),
            o = r(344),
            a = r(907),
            s = r(15),
            _flattenTypes = function (t, e) {
                var r = [];
                return e.forEach((function (e) {
                    if ("object" == typeof e.components) {
                        if ("tuple" !== e.type.substring(0, 5)) throw new Error("components found but type is not tuple; report on GitHub");
                        var i = "",
                            o = e.type.indexOf("[");
                        o >= 0 && (i = e.type.substring(o));
                        var a = _flattenTypes(t, e.components);
                        n.isArray(a) && t ? r.push("tuple(" + a.join(",") + ")" + i) : t ? r.push("(" + a + ")") : r.push("(" + a.join(",") + ")" + i)
                    } else r.push(e.type)
                })), r
            },
            hexToAscii = function (t) {
                if (!o.isHexStrict(t)) throw new Error("The parameter must be a valid HEX string.");
                var e = "",
                    r = 0,
                    n = t.length;
                for ("0x" === t.substring(0, 2) && (r = 2); r < n; r += 2) {
                    var i = parseInt(t.substr(r, 2), 16);
                    e += String.fromCharCode(i)
                }
                return e
            },
            asciiToHex = function (t) {
                if (!t) return "0x00";
                for (var e = "", r = 0; r < t.length; r++) {
                    var n = t.charCodeAt(r).toString(16);
                    e += n.length < 2 ? "0" + n : n
                }
                return "0x" + e
            },
            getUnitValue = function (t) {
                if (t = t ? t.toLowerCase() : "ether", !i.unitMap[t]) throw new Error('This unit "' + t + "\" doesn't exist, please use the one of the following units" + JSON.stringify(i.unitMap, null, 2));
                return t
            };
        t.exports = {
            _fireError: function (t, e, r, i, o) {
                return !n.isObject(t) || t instanceof Error || !t.data || ((n.isObject(t.data) || n.isArray(t.data)) && (t.data = JSON.stringify(t.data, null, 2)), t = t.message + "\n" + t.data), n.isString(t) && (t = new Error(t)), n.isFunction(i) && i(t, o), n.isFunction(r) && ((e && n.isFunction(e.listeners) && e.listeners("error").length || n.isFunction(i)) && e.catch((function () {})), setTimeout((function () {
                    r(t)
                }), 1)), e && n.isFunction(e.emit) && setTimeout((function () {
                    e.emit("error", t, o), e.removeAllListeners()
                }), 1), e
            },
            _jsonInterfaceMethodToString: function (t) {
                return n.isObject(t) && t.name && -1 !== t.name.indexOf("(") ? t.name : t.name + "(" + _flattenTypes(!1, t.inputs).join(",") + ")"
            },
            _flattenTypes: _flattenTypes,
            randomHex: function (t) {
                return "0x" + s(t).toString("hex")
            },
            _: n,
            BN: o.BN,
            isBN: o.isBN,
            isBigNumber: o.isBigNumber,
            isHex: o.isHex,
            isHexStrict: o.isHexStrict,
            sha3: o.sha3,
            sha3Raw: o.sha3Raw,
            keccak256: o.sha3,
            soliditySha3: a.soliditySha3,
            soliditySha3Raw: a.soliditySha3Raw,
            isAddress: o.isAddress,
            checkAddressChecksum: o.checkAddressChecksum,
            toChecksumAddress: function (t) {
                if (void 0 === t) return "";
                if (!/^(0x)?[0-9a-f]{40}$/i.test(t)) throw new Error('Given address "' + t + '" is not a valid Ethereum address.');
                t = t.toLowerCase().replace(/^0x/i, "");
                for (var e = o.sha3(t).replace(/^0x/i, ""), r = "0x", n = 0; n < t.length; n++) parseInt(e[n], 16) > 7 ? r += t[n].toUpperCase() : r += t[n];
                return r
            },
            toHex: o.toHex,
            toBN: o.toBN,
            bytesToHex: o.bytesToHex,
            hexToBytes: o.hexToBytes,
            hexToNumberString: o.hexToNumberString,
            hexToNumber: o.hexToNumber,
            toDecimal: o.hexToNumber,
            numberToHex: o.numberToHex,
            fromDecimal: o.numberToHex,
            hexToUtf8: o.hexToUtf8,
            hexToString: o.hexToUtf8,
            toUtf8: o.hexToUtf8,
            utf8ToHex: o.utf8ToHex,
            stringToHex: o.utf8ToHex,
            fromUtf8: o.utf8ToHex,
            hexToAscii: hexToAscii,
            toAscii: hexToAscii,
            asciiToHex: asciiToHex,
            fromAscii: asciiToHex,
            unitMap: i.unitMap,
            toWei: function (t, e) {
                if (e = getUnitValue(e), !o.isBN(t) && !n.isString(t)) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                return o.isBN(t) ? i.toWei(t, e) : i.toWei(t, e).toString(10)
            },
            fromWei: function (t, e) {
                if (e = getUnitValue(e), !o.isBN(t) && !n.isString(t)) throw new Error("Please pass numbers as strings or BN objects to avoid precision errors.");
                return o.isBN(t) ? i.fromWei(t, e) : i.fromWei(t, e).toString(10)
            },
            padLeft: o.leftPad,
            leftPad: o.leftPad,
            padRight: o.rightPad,
            rightPad: o.rightPad,
            toTwosComplement: o.toTwosComplement,
            isBloom: o.isBloom,
            isUserEthereumAddressInBloom: o.isUserEthereumAddressInBloom,
            isContractAddressInBloom: o.isContractAddressInBloom,
            isTopic: o.isTopic,
            isTopicInBloom: o.isTopicInBloom,
            isInBloom: o.isInBloom
        }
    }, function (t, e) {
        var r = "0123456789abcdef".split(""),
            n = [1, 256, 65536, 16777216],
            i = [0, 8, 16, 24],
            o = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648],
            a = function f(t) {
                var e, r, n, i, a, s, u, c, l, h, d, p, m, y, b, g, v, w, M, A, x, B, E, k, N, T, C, P, I, O, D, j, L, U, H, q, z, G, V, J, W, Z, X, Y, $, Q, tt, et, rt, nt, it, ot, st, ut, ct, ht, dt, pt, mt, yt, bt, vt, wt;
                for (n = 0; n < 48; n += 2) i = t[0] ^ t[10] ^ t[20] ^ t[30] ^ t[40], a = t[1] ^ t[11] ^ t[21] ^ t[31] ^ t[41], s = t[2] ^ t[12] ^ t[22] ^ t[32] ^ t[42], u = t[3] ^ t[13] ^ t[23] ^ t[33] ^ t[43], c = t[4] ^ t[14] ^ t[24] ^ t[34] ^ t[44], l = t[5] ^ t[15] ^ t[25] ^ t[35] ^ t[45], h = t[6] ^ t[16] ^ t[26] ^ t[36] ^ t[46], d = t[7] ^ t[17] ^ t[27] ^ t[37] ^ t[47], e = (p = t[8] ^ t[18] ^ t[28] ^ t[38] ^ t[48]) ^ (s << 1 | u >>> 31), r = (m = t[9] ^ t[19] ^ t[29] ^ t[39] ^ t[49]) ^ (u << 1 | s >>> 31), t[0] ^= e, t[1] ^= r, t[10] ^= e, t[11] ^= r, t[20] ^= e, t[21] ^= r, t[30] ^= e, t[31] ^= r, t[40] ^= e, t[41] ^= r, e = i ^ (c << 1 | l >>> 31), r = a ^ (l << 1 | c >>> 31), t[2] ^= e, t[3] ^= r, t[12] ^= e, t[13] ^= r, t[22] ^= e, t[23] ^= r, t[32] ^= e, t[33] ^= r, t[42] ^= e, t[43] ^= r, e = s ^ (h << 1 | d >>> 31), r = u ^ (d << 1 | h >>> 31), t[4] ^= e, t[5] ^= r, t[14] ^= e, t[15] ^= r, t[24] ^= e, t[25] ^= r, t[34] ^= e, t[35] ^= r, t[44] ^= e, t[45] ^= r, e = c ^ (p << 1 | m >>> 31), r = l ^ (m << 1 | p >>> 31), t[6] ^= e, t[7] ^= r, t[16] ^= e, t[17] ^= r, t[26] ^= e, t[27] ^= r, t[36] ^= e, t[37] ^= r, t[46] ^= e, t[47] ^= r, e = h ^ (i << 1 | a >>> 31), r = d ^ (a << 1 | i >>> 31), t[8] ^= e, t[9] ^= r, t[18] ^= e, t[19] ^= r, t[28] ^= e, t[29] ^= r, t[38] ^= e, t[39] ^= r, t[48] ^= e, t[49] ^= r, y = t[0], b = t[1], Q = t[11] << 4 | t[10] >>> 28, tt = t[10] << 4 | t[11] >>> 28, P = t[20] << 3 | t[21] >>> 29, I = t[21] << 3 | t[20] >>> 29, yt = t[31] << 9 | t[30] >>> 23, bt = t[30] << 9 | t[31] >>> 23, Z = t[40] << 18 | t[41] >>> 14, X = t[41] << 18 | t[40] >>> 14, U = t[2] << 1 | t[3] >>> 31, H = t[3] << 1 | t[2] >>> 31, g = t[13] << 12 | t[12] >>> 20, v = t[12] << 12 | t[13] >>> 20, et = t[22] << 10 | t[23] >>> 22, rt = t[23] << 10 | t[22] >>> 22, O = t[33] << 13 | t[32] >>> 19, D = t[32] << 13 | t[33] >>> 19, vt = t[42] << 2 | t[43] >>> 30, wt = t[43] << 2 | t[42] >>> 30, ut = t[5] << 30 | t[4] >>> 2, ct = t[4] << 30 | t[5] >>> 2, q = t[14] << 6 | t[15] >>> 26, z = t[15] << 6 | t[14] >>> 26, w = t[25] << 11 | t[24] >>> 21, M = t[24] << 11 | t[25] >>> 21, nt = t[34] << 15 | t[35] >>> 17, it = t[35] << 15 | t[34] >>> 17, j = t[45] << 29 | t[44] >>> 3, L = t[44] << 29 | t[45] >>> 3, k = t[6] << 28 | t[7] >>> 4, N = t[7] << 28 | t[6] >>> 4, ht = t[17] << 23 | t[16] >>> 9, dt = t[16] << 23 | t[17] >>> 9, G = t[26] << 25 | t[27] >>> 7, V = t[27] << 25 | t[26] >>> 7, A = t[36] << 21 | t[37] >>> 11, x = t[37] << 21 | t[36] >>> 11, ot = t[47] << 24 | t[46] >>> 8, st = t[46] << 24 | t[47] >>> 8, Y = t[8] << 27 | t[9] >>> 5, $ = t[9] << 27 | t[8] >>> 5, T = t[18] << 20 | t[19] >>> 12, C = t[19] << 20 | t[18] >>> 12, pt = t[29] << 7 | t[28] >>> 25, mt = t[28] << 7 | t[29] >>> 25, J = t[38] << 8 | t[39] >>> 24, W = t[39] << 8 | t[38] >>> 24, B = t[48] << 14 | t[49] >>> 18, E = t[49] << 14 | t[48] >>> 18, t[0] = y ^ ~g & w, t[1] = b ^ ~v & M, t[10] = k ^ ~T & P, t[11] = N ^ ~C & I, t[20] = U ^ ~q & G, t[21] = H ^ ~z & V, t[30] = Y ^ ~Q & et, t[31] = $ ^ ~tt & rt, t[40] = ut ^ ~ht & pt, t[41] = ct ^ ~dt & mt, t[2] = g ^ ~w & A, t[3] = v ^ ~M & x, t[12] = T ^ ~P & O, t[13] = C ^ ~I & D, t[22] = q ^ ~G & J, t[23] = z ^ ~V & W, t[32] = Q ^ ~et & nt, t[33] = tt ^ ~rt & it, t[42] = ht ^ ~pt & yt, t[43] = dt ^ ~mt & bt, t[4] = w ^ ~A & B, t[5] = M ^ ~x & E, t[14] = P ^ ~O & j, t[15] = I ^ ~D & L, t[24] = G ^ ~J & Z, t[25] = V ^ ~W & X, t[34] = et ^ ~nt & ot, t[35] = rt ^ ~it & st, t[44] = pt ^ ~yt & vt, t[45] = mt ^ ~bt & wt, t[6] = A ^ ~B & y, t[7] = x ^ ~E & b, t[16] = O ^ ~j & k, t[17] = D ^ ~L & N, t[26] = J ^ ~Z & U, t[27] = W ^ ~X & H, t[36] = nt ^ ~ot & Y, t[37] = it ^ ~st & $, t[46] = yt ^ ~vt & ut, t[47] = bt ^ ~wt & ct, t[8] = B ^ ~y & g, t[9] = E ^ ~b & v, t[18] = j ^ ~k & T, t[19] = L ^ ~N & C, t[28] = Z ^ ~U & q, t[29] = X ^ ~H & z, t[38] = ot ^ ~Y & Q, t[39] = st ^ ~$ & tt, t[48] = vt ^ ~ut & ht, t[49] = wt ^ ~ct & dt, t[0] ^= o[n], t[1] ^= o[n + 1]
            },
            s = function keccak(t) {
                return function (e) {
                    var o;
                    if ("0x" === e.slice(0, 2)) {
                        o = [];
                        for (var s = 2, u = e.length; s < u; s += 2) o.push(parseInt(e.slice(s, s + 2), 16))
                    } else o = e;
                    return function update(t, e) {
                        for (var o, s = e.length, u = t.blocks, c = t.blockCount << 2, l = t.blockCount, h = t.outputBlocks, d = t.s, p = 0; p < s;) {
                            if (t.reset)
                                for (t.reset = !1, u[0] = t.block, b = 1; b < l + 1; ++b) u[b] = 0;
                            if ("string" != typeof e)
                                for (b = t.start; p < s && b < c; ++p) u[b >> 2] |= e[p] << i[3 & b++];
                            else
                                for (b = t.start; p < s && b < c; ++p)(o = e.charCodeAt(p)) < 128 ? u[b >> 2] |= o << i[3 & b++] : o < 2048 ? (u[b >> 2] |= (192 | o >> 6) << i[3 & b++], u[b >> 2] |= (128 | 63 & o) << i[3 & b++]) : o < 55296 || o >= 57344 ? (u[b >> 2] |= (224 | o >> 12) << i[3 & b++], u[b >> 2] |= (128 | o >> 6 & 63) << i[3 & b++], u[b >> 2] |= (128 | 63 & o) << i[3 & b++]) : (o = 65536 + ((1023 & o) << 10 | 1023 & e.charCodeAt(++p)), u[b >> 2] |= (240 | o >> 18) << i[3 & b++], u[b >> 2] |= (128 | o >> 12 & 63) << i[3 & b++], u[b >> 2] |= (128 | o >> 6 & 63) << i[3 & b++], u[b >> 2] |= (128 | 63 & o) << i[3 & b++]);
                            if (t.lastByteIndex = b, b >= c) {
                                for (t.start = b - c, t.block = u[l], b = 0; b < l; ++b) d[b] ^= u[b];
                                a(d), t.reset = !0
                            } else t.start = b
                        }
                        if (u[(b = t.lastByteIndex) >> 2] |= n[3 & b], t.lastByteIndex === c)
                            for (u[0] = u[l], b = 1; b < l + 1; ++b) u[b] = 0;
                        for (u[l - 1] |= 2147483648, b = 0; b < l; ++b) d[b] ^= u[b];
                        a(d);
                        for (var m, y = "", b = 0, g = 0; g < h;) {
                            for (b = 0; b < l && g < h; ++b, ++g) m = d[b], y += r[m >> 4 & 15] + r[15 & m] + r[m >> 12 & 15] + r[m >> 8 & 15] + r[m >> 20 & 15] + r[m >> 16 & 15] + r[m >> 28 & 15] + r[m >> 24 & 15];
                            g % l == 0 && (a(d), b = 0)
                        }
                        return "0x" + y
                    }(function Keccak(t) {
                        return {
                            blocks: [],
                            reset: !0,
                            block: 0,
                            start: 0,
                            blockCount: 1600 - (t << 1) >> 5,
                            outputBlocks: t >> 5,
                            s: (e = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [].concat(e, e, e, e, e))
                        };
                        var e
                    }(t), o)
                }
            };
        t.exports = {
            keccak256: s(256),
            keccak512: s(512),
            keccak256s: s(256),
            keccak512s: s(512)
        }
    }, function (t, e, r) {
        var n = r(138),
            i = r(2),
            o = r(344),
            _parseNumber = function (t) {
                var e = typeof t;
                if ("string" === e) return o.isHexStrict(t) ? new i(t.replace(/0x/i, ""), 16) : new i(t, 10);
                if ("number" === e) return new i(t);
                if (o.isBigNumber(t)) return new i(t.toString(10));
                if (o.isBN(t)) return t;
                throw new Error(t + " is not a number")
            },
            _solidityPack = function (t, e, r) {
                var n, a;
                if ("bytes" === (t = function (t) {
                        return t.startsWith("int[") ? "int256" + t.slice(3) : "int" === t ? "int256" : t.startsWith("uint[") ? "uint256" + t.slice(4) : "uint" === t ? "uint256" : t.startsWith("fixed[") ? "fixed128x128" + t.slice(5) : "fixed" === t ? "fixed128x128" : t.startsWith("ufixed[") ? "ufixed128x128" + t.slice(6) : "ufixed" === t ? "ufixed128x128" : t
                    }(t))) {
                    if (e.replace(/^0x/i, "").length % 2 != 0) throw new Error("Invalid bytes characters " + e.length);
                    return e
                }
                if ("string" === t) return o.utf8ToHex(e);
                if ("bool" === t) return e ? "01" : "00";
                if (t.startsWith("address")) {
                    if (n = r ? 64 : 40, !o.isAddress(e)) throw new Error(e + " is not a valid address, or the checksum is invalid.");
                    return o.leftPad(e.toLowerCase(), n)
                }
                if (n = function (t) {
                        var e = /^\D+(\d+).*$/.exec(t);
                        return e ? parseInt(e[1], 10) : null
                    }(t), t.startsWith("bytes")) {
                    if (!n) throw new Error("bytes[] not yet supported in solidity");
                    if (r && (n = 32), n < 1 || n > 32 || n < e.replace(/^0x/i, "").length / 2) throw new Error("Invalid bytes" + n + " for " + e);
                    return o.rightPad(e, 2 * n)
                }
                if (t.startsWith("uint")) {
                    if (n % 8 || n < 8 || n > 256) throw new Error("Invalid uint" + n + " size");
                    if ((a = _parseNumber(e)).bitLength() > n) throw new Error("Supplied uint exceeds width: " + n + " vs " + a.bitLength());
                    if (a.lt(new i(0))) throw new Error("Supplied uint " + a.toString() + " is negative");
                    return n ? o.leftPad(a.toString("hex"), n / 8 * 2) : a
                }
                if (t.startsWith("int")) {
                    if (n % 8 || n < 8 || n > 256) throw new Error("Invalid int" + n + " size");
                    if ((a = _parseNumber(e)).bitLength() > n) throw new Error("Supplied int exceeds width: " + n + " vs " + a.bitLength());
                    return a.lt(new i(0)) ? a.toTwos(n).toString("hex") : n ? o.leftPad(a.toString("hex"), n / 8 * 2) : a
                }
                throw new Error("Unsupported or invalid type: " + t)
            },
            _processSoliditySha3Args = function (t) {
                if (n.isArray(t)) throw new Error("Autodetection of array types is not supported.");
                var e, r, a = "";
                if (n.isObject(t) && (t.hasOwnProperty("v") || t.hasOwnProperty("t") || t.hasOwnProperty("value") || t.hasOwnProperty("type")) ? (e = t.hasOwnProperty("t") ? t.t : t.type, a = t.hasOwnProperty("v") ? t.v : t.value) : (e = o.toHex(t, !0), a = o.toHex(t), e.startsWith("int") || e.startsWith("uint") || (e = "bytes")), !e.startsWith("int") && !e.startsWith("uint") || "string" != typeof a || /^(-)?0x/i.test(a) || (a = new i(a)), n.isArray(a)) {
                    if ((r = function (t) {
                            var e = /^\D+\d*\[(\d+)\]$/.exec(t);
                            return e ? parseInt(e[1], 10) : null
                        }(e)) && a.length !== r) throw new Error(e + " is not matching the given array " + JSON.stringify(a));
                    r = a.length
                }
                return n.isArray(a) ? a.map((function (t) {
                    return _solidityPack(e, t, r).toString("hex").replace("0x", "")
                })).join("") : _solidityPack(e, a, r).toString("hex").replace("0x", "")
            };
        t.exports = {
            soliditySha3: function () {
                var t = Array.prototype.slice.call(arguments),
                    e = n.map(t, _processSoliditySha3Args);
                return o.sha3("0x" + e.join(""))
            },
            soliditySha3Raw: function () {
                return o.sha3Raw("0x" + n.map(Array.prototype.slice.call(arguments), _processSoliditySha3Args).join(""))
            }
        }
    }, function (t, e, r) {
        var n, i = this && this.__extends || (n = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (t, e) {
                    t.__proto__ = e
                } || function (t, e) {
                    for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r])
                },
                function (t, e) {
                    function __() {
                        this.constructor = t
                    }
                    n(t, e), t.prototype = null === e ? Object.create(e) : (__.prototype = e.prototype, new __)
                }),
            o = this && this.__importStar || function (t) {
                if (t && t.__esModule) return t;
                var e = {};
                if (null != t)
                    for (var r in t) Object.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e.default = t, e
            };
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var a = r(909),
            s = r(912),
            u = r(71),
            c = r(913),
            l = r(346),
            h = o(r(139)),
            d = new RegExp(/^bytes([0-9]*)$/),
            p = new RegExp(/^(u?int)([0-9]*)$/),
            m = new RegExp(/^(.*)\[([0-9]*)\]$/);
        e.defaultCoerceFunc = function (t, e) {
            var r = t.match(p);
            return r && parseInt(r[2]) <= 48 ? e.toNumber() : e
        };
        var y = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$"),
            b = new RegExp("^[A-Za-z_][A-Za-z0-9_]*$");

        function verifyType(t) {
            return t.match(/^uint($|[^1-9])/) ? t = "uint256" + t.substring(4) : t.match(/^int($|[^1-9])/) && (t = "int256" + t.substring(3)), t
        }

        function parseParam(t, e) {
            function throwError(e) {
                throw new Error('unexpected character "' + t[e] + '" at position ' + e + ' in "' + t + '"')
            }
            for (var r = {
                    type: "",
                    name: "",
                    state: {
                        allowType: !0
                    }
                }, n = r, i = 0; i < t.length; i++) {
                var o = t[i];
                switch (o) {
                    case "(":
                        n.state.allowParams || throwError(i), n.state.allowType = !1, n.type = verifyType(n.type), n.components = [{
                            type: "",
                            name: "",
                            parent: n,
                            state: {
                                allowType: !0
                            }
                        }], n = n.components[0];
                        break;
                    case ")":
                        delete n.state, e && "indexed" === n.name && (n.indexed = !0, n.name = ""), n.type = verifyType(n.type);
                        var a = n;
                        (n = n.parent) || throwError(i), delete a.parent, n.state.allowParams = !1, n.state.allowName = !0, n.state.allowArray = !0;
                        break;
                    case ",":
                        delete n.state, e && "indexed" === n.name && (n.indexed = !0, n.name = ""), n.type = verifyType(n.type);
                        var s = {
                            type: "",
                            name: "",
                            parent: n.parent,
                            state: {
                                allowType: !0
                            }
                        };
                        n.parent.components.push(s), delete n.parent, n = s;
                        break;
                    case " ":
                        n.state.allowType && "" !== n.type && (n.type = verifyType(n.type), delete n.state.allowType, n.state.allowName = !0, n.state.allowParams = !0), n.state.allowName && "" !== n.name && (e && "indexed" === n.name ? (n.indexed = !0, n.name = "") : n.state.allowName = !1);
                        break;
                    case "[":
                        n.state.allowArray || throwError(i), n.type += o, n.state.allowArray = !1, n.state.allowName = !1, n.state.readArray = !0;
                        break;
                    case "]":
                        n.state.readArray || throwError(i), n.type += o, n.state.readArray = !1, n.state.allowArray = !0, n.state.allowName = !0;
                        break;
                    default:
                        n.state.allowType ? (n.type += o, n.state.allowParams = !0, n.state.allowArray = !0) : n.state.allowName ? (n.name += o, delete n.state.allowArray) : n.state.readArray ? n.type += o : throwError(i)
                }
            }
            if (n.parent) throw new Error("unexpected eof");
            return delete r.state, e && "indexed" === n.name && (n.indexed = !0, n.name = ""), r.type = verifyType(r.type), r
        }

        function formatParamType(t) {
            return getParamCoder(e.defaultCoerceFunc, t).type
        }
        e.parseParamType = function parseParamType(t) {
            return parseParam(t, !0)
        }, e.formatParamType = formatParamType, e.formatSignature = function formatSignature(t) {
            return t.name + "(" + t.inputs.map((function (t) {
                return formatParamType(t)
            })).join(",") + ")"
        }, e.parseSignature = function parseSignature(t) {
            if ("string" == typeof t) return "event " === (t = (t = t.replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ")).trim()).substring(0, 6) ? function parseSignatureEvent(t) {
                var e = {
                        anonymous: !1,
                        inputs: [],
                        name: "",
                        type: "event"
                    },
                    r = t.match(y);
                if (!r) throw new Error("invalid event: " + t);
                if (e.name = r[1].trim(), splitNesting(r[2]).forEach((function (t) {
                        (t = parseParam(t, !0)).indexed = !!t.indexed, e.inputs.push(t)
                    })), r[3].split(" ").forEach((function (t) {
                        switch (t) {
                            case "anonymous":
                                e.anonymous = !0;
                                break;
                            case "":
                                break;
                            default:
                                console.log("unknown modifier: " + t)
                        }
                    })), e.name && !e.name.match(b)) throw new Error('invalid identifier: "' + e.name + '"');
                return e
            }(t.substring(6).trim()) : ("function " === t.substring(0, 9) && (t = t.substring(9)), function parseSignatureFunction(t) {
                var e = {
                        constant: !1,
                        inputs: [],
                        name: "",
                        outputs: [],
                        payable: !1,
                        stateMutability: null,
                        type: "function"
                    },
                    r = t.split(" returns "),
                    n = r[0].match(y);
                if (!n) throw new Error("invalid signature");
                if (e.name = n[1].trim(), !e.name.match(b)) throw new Error('invalid identifier: "' + n[1] + '"');
                if (splitNesting(n[2]).forEach((function (t) {
                        e.inputs.push(parseParam(t))
                    })), n[3].split(" ").forEach((function (t) {
                        switch (t) {
                            case "constant":
                                e.constant = !0;
                                break;
                            case "payable":
                                e.payable = !0;
                                break;
                            case "pure":
                                e.constant = !0, e.stateMutability = "pure";
                                break;
                            case "view":
                                e.constant = !0, e.stateMutability = "view";
                                break;
                            case "":
                                break;
                            default:
                                console.log("unknown modifier: " + t)
                        }
                    })), r.length > 1) {
                    var i = r[1].match(y);
                    if ("" != i[1].trim() || "" != i[3].trim()) throw new Error("unexpected tokens");
                    splitNesting(i[2]).forEach((function (t) {
                        e.outputs.push(parseParam(t))
                    }))
                }
                return e
            }(t.trim()));
            throw new Error("unknown signature")
        };
        var g = function g(t, e, r, n, i) {
                this.coerceFunc = t, this.name = e, this.type = r, this.localName = n, this.dynamic = i
            },
            v = function (t) {
                function CoderAnonymous(e) {
                    var r = t.call(this, e.coerceFunc, e.name, e.type, void 0, e.dynamic) || this;
                    return l.defineReadOnly(r, "coder", e), r
                }
                return i(CoderAnonymous, t), CoderAnonymous.prototype.encode = function (t) {
                    return this.coder.encode(t)
                }, CoderAnonymous.prototype.decode = function (t, e) {
                    return this.coder.decode(t, e)
                }, CoderAnonymous
            }(g),
            w = function (t) {
                function CoderNull(e, r) {
                    return t.call(this, e, "null", "", r, !1) || this
                }
                return i(CoderNull, t), CoderNull.prototype.encode = function (t) {
                    return u.arrayify([])
                }, CoderNull.prototype.decode = function (t, e) {
                    if (e > t.length) throw new Error("invalid null");
                    return {
                        consumed: 0,
                        value: this.coerceFunc("null", void 0)
                    }
                }, CoderNull
            }(g),
            M = function (t) {
                function CoderNumber(e, r, n, i) {
                    var o = this,
                        a = (n ? "int" : "uint") + 8 * r;
                    return (o = t.call(this, e, a, a, i, !1) || this).size = r, o.signed = n, o
                }
                return i(CoderNumber, t), CoderNumber.prototype.encode = function (t) {
                    try {
                        var e = s.bigNumberify(t);
                        return e = e.toTwos(8 * this.size).maskn(8 * this.size), this.signed && (e = e.fromTwos(8 * this.size).toTwos(256)), u.padZeros(u.arrayify(e), 32)
                    } catch (e) {
                        h.throwError("invalid number value", h.INVALID_ARGUMENT, {
                            arg: this.localName,
                            coderType: this.name,
                            value: t
                        })
                    }
                    return null
                }, CoderNumber.prototype.decode = function (t, e) {
                    t.length < e + 32 && h.throwError("insufficient data for " + this.name + " type", h.INVALID_ARGUMENT, {
                        arg: this.localName,
                        coderType: this.name,
                        value: u.hexlify(t.slice(e, e + 32))
                    });
                    var r = 32 - this.size,
                        n = s.bigNumberify(t.slice(e + r, e + 32));
                    return n = this.signed ? n.fromTwos(8 * this.size) : n.maskn(8 * this.size), {
                        consumed: 32,
                        value: this.coerceFunc(this.name, n)
                    }
                }, CoderNumber
            }(g),
            A = new M((function (t, e) {
                return e
            }), 32, !1, "none"),
            x = function (t) {
                function CoderBoolean(e, r) {
                    return t.call(this, e, "bool", "bool", r, !1) || this
                }
                return i(CoderBoolean, t), CoderBoolean.prototype.encode = function (t) {
                    return A.encode(t ? 1 : 0)
                }, CoderBoolean.prototype.decode = function (t, e) {
                    try {
                        var r = A.decode(t, e)
                    } catch (t) {
                        throw "insufficient data for uint256 type" === t.reason && h.throwError("insufficient data for boolean type", h.INVALID_ARGUMENT, {
                            arg: this.localName,
                            coderType: "boolean",
                            value: t.value
                        }), t
                    }
                    return {
                        consumed: r.consumed,
                        value: this.coerceFunc("bool", !r.value.isZero())
                    }
                }, CoderBoolean
            }(g),
            B = function (t) {
                function CoderFixedBytes(e, r, n) {
                    var i = this,
                        o = "bytes" + r;
                    return (i = t.call(this, e, o, o, n, !1) || this).length = r, i
                }
                return i(CoderFixedBytes, t), CoderFixedBytes.prototype.encode = function (t) {
                    var e = new Uint8Array(32);
                    try {
                        var r = u.arrayify(t);
                        if (r.length > 32) throw new Error;
                        e.set(r)
                    } catch (e) {
                        h.throwError("invalid " + this.name + " value", h.INVALID_ARGUMENT, {
                            arg: this.localName,
                            coderType: this.name,
                            value: e.value || t
                        })
                    }
                    return e
                }, CoderFixedBytes.prototype.decode = function (t, e) {
                    return t.length < e + 32 && h.throwError("insufficient data for " + name + " type", h.INVALID_ARGUMENT, {
                        arg: this.localName,
                        coderType: this.name,
                        value: u.hexlify(t.slice(e, e + 32))
                    }), {
                        consumed: 32,
                        value: this.coerceFunc(this.name, u.hexlify(t.slice(e, e + this.length)))
                    }
                }, CoderFixedBytes
            }(g),
            E = function (t) {
                function CoderAddress(e, r) {
                    return t.call(this, e, "address", "address", r, !1) || this
                }
                return i(CoderAddress, t), CoderAddress.prototype.encode = function (t) {
                    var e = new Uint8Array(32);
                    try {
                        e.set(u.arrayify(a.getAddress(t)), 12)
                    } catch (e) {
                        h.throwError("invalid address", h.INVALID_ARGUMENT, {
                            arg: this.localName,
                            coderType: "address",
                            value: t
                        })
                    }
                    return e
                }, CoderAddress.prototype.decode = function (t, e) {
                    return t.length < e + 32 && h.throwError("insufficuent data for address type", h.INVALID_ARGUMENT, {
                        arg: this.localName,
                        coderType: "address",
                        value: u.hexlify(t.slice(e, e + 32))
                    }), {
                        consumed: 32,
                        value: this.coerceFunc("address", a.getAddress(u.hexlify(t.slice(e + 12, e + 32))))
                    }
                }, CoderAddress
            }(g);

        function _encodeDynamicBytes(t) {
            var e = 32 * Math.ceil(t.length / 32),
                r = new Uint8Array(e - t.length);
            return u.concat([A.encode(t.length), t, r])
        }

        function _decodeDynamicBytes(t, e, r) {
            t.length < e + 32 && h.throwError("insufficient data for dynamicBytes length", h.INVALID_ARGUMENT, {
                arg: r,
                coderType: "dynamicBytes",
                value: u.hexlify(t.slice(e, e + 32))
            });
            var n = A.decode(t, e).value;
            try {
                n = n.toNumber()
            } catch (t) {
                h.throwError("dynamic bytes count too large", h.INVALID_ARGUMENT, {
                    arg: r,
                    coderType: "dynamicBytes",
                    value: n.toString()
                })
            }
            return t.length < e + 32 + n && h.throwError("insufficient data for dynamicBytes type", h.INVALID_ARGUMENT, {
                arg: r,
                coderType: "dynamicBytes",
                value: u.hexlify(t.slice(e, e + 32 + n))
            }), {
                consumed: 32 + 32 * Math.ceil(n / 32),
                value: t.slice(e + 32, e + 32 + n)
            }
        }
        var k = function (t) {
                function CoderDynamicBytes(e, r) {
                    return t.call(this, e, "bytes", "bytes", r, !0) || this
                }
                return i(CoderDynamicBytes, t), CoderDynamicBytes.prototype.encode = function (t) {
                    try {
                        return _encodeDynamicBytes(u.arrayify(t))
                    } catch (t) {
                        h.throwError("invalid bytes value", h.INVALID_ARGUMENT, {
                            arg: this.localName,
                            coderType: "bytes",
                            value: t.value
                        })
                    }
                    return null
                }, CoderDynamicBytes.prototype.decode = function (t, e) {
                    var r = _decodeDynamicBytes(t, e, this.localName);
                    return r.value = this.coerceFunc("bytes", u.hexlify(r.value)), r
                }, CoderDynamicBytes
            }(g),
            N = function (t) {
                function CoderString(e, r) {
                    return t.call(this, e, "string", "string", r, !0) || this
                }
                return i(CoderString, t), CoderString.prototype.encode = function (t) {
                    return "string" != typeof t && h.throwError("invalid string value", h.INVALID_ARGUMENT, {
                        arg: this.localName,
                        coderType: "string",
                        value: t
                    }), _encodeDynamicBytes(c.toUtf8Bytes(t))
                }, CoderString.prototype.decode = function (t, e) {
                    var r = _decodeDynamicBytes(t, e, this.localName);
                    return r.value = this.coerceFunc("string", c.toUtf8String(r.value)), r
                }, CoderString
            }(g);

        function alignSize(t) {
            return 32 * Math.ceil(t / 32)
        }

        function pack(t, e) {
            if (Array.isArray(e));
            else if (e && "object" == typeof e) {
                var r = [];
                t.forEach((function (t) {
                    r.push(e[t.localName])
                })), e = r
            } else h.throwError("invalid tuple value", h.INVALID_ARGUMENT, {
                coderType: "tuple",
                value: e
            });
            t.length !== e.length && h.throwError("types/value length mismatch", h.INVALID_ARGUMENT, {
                coderType: "tuple",
                value: e
            });
            var n = [];
            t.forEach((function (t, r) {
                n.push({
                    dynamic: t.dynamic,
                    value: t.encode(e[r])
                })
            }));
            var i = 0,
                o = 0;
            n.forEach((function (t) {
                t.dynamic ? (i += 32, o += alignSize(t.value.length)) : i += alignSize(t.value.length)
            }));
            var a = 0,
                s = i,
                u = new Uint8Array(i + o);
            return n.forEach((function (t) {
                t.dynamic ? (u.set(A.encode(s), a), a += 32, u.set(t.value, s), s += alignSize(t.value.length)) : (u.set(t.value, a), a += alignSize(t.value.length))
            })), u
        }

        function unpack(t, e, r) {
            var n = r,
                i = 0,
                o = [];
            return t.forEach((function (t) {
                if (t.dynamic) {
                    var a = A.decode(e, r);
                    (s = t.decode(e, n + a.value.toNumber())).consumed = a.consumed
                } else var s = t.decode(e, r);
                null != s.value && o.push(s.value), r += s.consumed, i += s.consumed
            })), t.forEach((function (t, e) {
                var r = t.localName;
                r && ("length" === r && (r = "_length"), null == o[r] && (o[r] = o[e]))
            })), {
                value: o,
                consumed: i
            }
        }
        var T = function (t) {
                function CoderArray(e, r, n, i) {
                    var o = this,
                        a = r.type + "[" + (n >= 0 ? n : "") + "]",
                        s = -1 === n || r.dynamic;
                    return (o = t.call(this, e, "array", a, i, s) || this).coder = r, o.length = n, o
                }
                return i(CoderArray, t), CoderArray.prototype.encode = function (t) {
                    Array.isArray(t) || h.throwError("expected array value", h.INVALID_ARGUMENT, {
                        arg: this.localName,
                        coderType: "array",
                        value: t
                    });
                    var e = this.length,
                        r = new Uint8Array(0); - 1 === e && (e = t.length, r = A.encode(e)), h.checkArgumentCount(e, t.length, "in coder array" + (this.localName ? " " + this.localName : ""));
                    for (var n = [], i = 0; i < t.length; i++) n.push(this.coder);
                    return u.concat([r, pack(n, t)])
                }, CoderArray.prototype.decode = function (t, e) {
                    var r = 0,
                        n = this.length;
                    if (-1 === n) {
                        try {
                            var i = A.decode(t, e)
                        } catch (t) {
                            h.throwError("insufficient data for dynamic array length", h.INVALID_ARGUMENT, {
                                arg: this.localName,
                                coderType: "array",
                                value: t.value
                            })
                        }
                        try {
                            n = i.value.toNumber()
                        } catch (t) {
                            h.throwError("array count too large", h.INVALID_ARGUMENT, {
                                arg: this.localName,
                                coderType: "array",
                                value: i.value.toString()
                            })
                        }
                        r += i.consumed, e += i.consumed
                    }
                    for (var o = [], a = 0; a < n; a++) o.push(new v(this.coder));
                    var s = unpack(o, t, e);
                    return s.consumed += r, s.value = this.coerceFunc(this.type, s.value), s
                }, CoderArray
            }(g),
            C = function (t) {
                function CoderTuple(e, r, n) {
                    var i = this,
                        o = !1,
                        a = [];
                    r.forEach((function (t) {
                        t.dynamic && (o = !0), a.push(t.type)
                    }));
                    var s = "tuple(" + a.join(",") + ")";
                    return (i = t.call(this, e, "tuple", s, n, o) || this).coders = r, i
                }
                return i(CoderTuple, t), CoderTuple.prototype.encode = function (t) {
                    return pack(this.coders, t)
                }, CoderTuple.prototype.decode = function (t, e) {
                    var r = unpack(this.coders, t, e);
                    return r.value = this.coerceFunc(this.type, r.value), r
                }, CoderTuple
            }(g);

        function splitNesting(t) {
            for (var e = [], r = "", n = 0, i = 0; i < t.length; i++) {
                var o = t[i];
                if ("," === o && 0 === n) e.push(r), r = "";
                else if (r += o, "(" === o) n++;
                else if (")" === o && -1 === --n) throw new Error("unbalanced parenthsis")
            }
            return e.push(r), e
        }
        var P = {
            address: E,
            bool: x,
            string: N,
            bytes: k
        };

        function getParamCoder(t, e) {
            var r, n = P[e.type];
            if (n) return new n(t, e.name);
            if (r = e.type.match(p)) return (0 === (i = parseInt(r[2] || "256")) || i > 256 || i % 8 != 0) && h.throwError("invalid " + r[1] + " bit length", h.INVALID_ARGUMENT, {
                arg: "param",
                value: e
            }), new M(t, i / 8, "int" === r[1], e.name);
            if (r = e.type.match(d)) return (0 === (i = parseInt(r[1])) || i > 32) && h.throwError("invalid bytes length", h.INVALID_ARGUMENT, {
                arg: "param",
                value: e
            }), new B(t, i, e.name);
            if (r = e.type.match(m)) {
                var i = parseInt(r[2] || "-1");
                return (e = l.jsonCopy(e)).type = r[1], new T(t, getParamCoder(t, e), i, e.name)
            }
            return "tuple" === e.type.substring(0, 5) ? function getTupleParamCoder(t, e, r) {
                e || (e = []);
                var n = [];
                return e.forEach((function (e) {
                    n.push(getParamCoder(t, e))
                })), new C(t, n, r)
            }(t, e.components, e.name) : "" === e.type ? new w(t, e.name) : (h.throwError("invalid type", h.INVALID_ARGUMENT, {
                arg: "type",
                value: e.type
            }), null)
        }
        var I = function () {
            function AbiCoder(t) {
                h.checkNew(this, AbiCoder), t || (t = e.defaultCoerceFunc), l.defineReadOnly(this, "coerceFunc", t)
            }
            return AbiCoder.prototype.encode = function (t, e) {
                t.length !== e.length && h.throwError("types/values length mismatch", h.INVALID_ARGUMENT, {
                    count: {
                        types: t.length,
                        values: e.length
                    },
                    value: {
                        types: t,
                        values: e
                    }
                });
                var r = [];
                return t.forEach((function (t) {
                    var e = null;
                    e = "string" == typeof t ? parseParam(t) : t, r.push(getParamCoder(this.coerceFunc, e))
                }), this), u.hexlify(new C(this.coerceFunc, r, "_").encode(e))
            }, AbiCoder.prototype.decode = function (t, e) {
                var r = [];
                return t.forEach((function (t) {
                    var e = null;
                    e = "string" == typeof t ? parseParam(t) : l.jsonCopy(t), r.push(getParamCoder(this.coerceFunc, e))
                }), this), new C(this.coerceFunc, r, "_").decode(u.arrayify(e), 0).value
            }, AbiCoder
        }();
        e.AbiCoder = I, e.defaultAbiCoder = new I
    }, function (t, e, r) {
        var n = this && this.__importDefault || function (t) {
            return t && t.__esModule ? t : {
                default: t
            }
        };
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var i = n(r(2)),
            o = r(71),
            a = r(910),
            s = r(911),
            u = r(139);

        function getChecksumAddress(t) {
            "string" == typeof t && t.match(/^0x[0-9A-Fa-f]{40}$/) || u.throwError("invalid address", u.INVALID_ARGUMENT, {
                arg: "address",
                value: t
            });
            for (var e = (t = t.toLowerCase()).substring(2).split(""), r = new Uint8Array(40), n = 0; n < 40; n++) r[n] = e[n].charCodeAt(0);
            r = o.arrayify(a.keccak256(r));
            for (var i = 0; i < 40; i += 2) r[i >> 1] >> 4 >= 8 && (e[i] = e[i].toUpperCase()), (15 & r[i >> 1]) >= 8 && (e[i + 1] = e[i + 1].toUpperCase());
            return "0x" + e.join("")
        }
        for (var c = {}, l = 0; l < 10; l++) c[String(l)] = String(l);
        for (l = 0; l < 26; l++) c[String.fromCharCode(65 + l)] = String(10 + l);
        var h = Math.floor(function log10(t) {
            return Math.log10 ? Math.log10(t) : Math.log(t) / Math.LN10
        }(9007199254740991));

        function ibanChecksum(t) {
            t = (t = t.toUpperCase()).substring(4) + t.substring(0, 2) + "00";
            var e = "";
            for (t.split("").forEach((function (t) {
                    e += c[t]
                })); e.length >= h;) {
                var r = e.substring(0, h);
                e = parseInt(r, 10) % 97 + e.substring(r.length)
            }
            for (var n = String(98 - parseInt(e, 10) % 97); n.length < 2;) n = "0" + n;
            return n
        }

        function getAddress(t) {
            var e = null;
            if ("string" != typeof t && u.throwError("invalid address", u.INVALID_ARGUMENT, {
                    arg: "address",
                    value: t
                }), t.match(/^(0x)?[0-9a-fA-F]{40}$/)) "0x" !== t.substring(0, 2) && (t = "0x" + t), e = getChecksumAddress(t), t.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && e !== t && u.throwError("bad address checksum", u.INVALID_ARGUMENT, {
                arg: "address",
                value: t
            });
            else if (t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
                for (t.substring(2, 4) !== ibanChecksum(t) && u.throwError("bad icap checksum", u.INVALID_ARGUMENT, {
                        arg: "address",
                        value: t
                    }), e = new i.default.BN(t.substring(4), 36).toString(16); e.length < 40;) e = "0" + e;
                e = getChecksumAddress("0x" + e)
            } else u.throwError("invalid address", u.INVALID_ARGUMENT, {
                arg: "address",
                value: t
            });
            return e
        }
        e.getAddress = getAddress, e.getIcapAddress = function getIcapAddress(t) {
            for (var e = new i.default.BN(getAddress(t).substring(2), 16).toString(36).toUpperCase(); e.length < 30;) e = "0" + e;
            return "XE" + ibanChecksum("XE00" + e) + e
        }, e.getContractAddress = function getContractAddress(t) {
            if (!t.from) throw new Error("missing from address");
            var e = t.nonce;
            return getAddress("0x" + a.keccak256(s.encode([getAddress(t.from), o.stripZeros(o.hexlify(e))])).substring(26))
        }
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = r(72),
            i = r(71);
        e.keccak256 = function keccak256(t) {
            return "0x" + n.keccak_256(i.arrayify(t))
        }
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = r(71);

        function arrayifyInteger(t) {
            for (var e = []; t;) e.unshift(255 & t), t >>= 8;
            return e
        }

        function unarrayifyInteger(t, e, r) {
            for (var n = 0, i = 0; i < r; i++) n = 256 * n + t[e + i];
            return n
        }

        function _decodeChildren(t, e, r, n) {
            for (var i = []; r < e + 1 + n;) {
                var o = _decode(t, r);
                if (i.push(o.result), (r += o.consumed) > e + 1 + n) throw new Error("invalid rlp")
            }
            return {
                consumed: 1 + n,
                result: i
            }
        }

        function _decode(t, e) {
            if (0 === t.length) throw new Error("invalid rlp data");
            if (t[e] >= 248) {
                if (e + 1 + (r = t[e] - 247) > t.length) throw new Error("too short");
                if (e + 1 + r + (i = unarrayifyInteger(t, e + 1, r)) > t.length) throw new Error("to short");
                return _decodeChildren(t, e, e + 1 + r, r + i)
            }
            if (t[e] >= 192) {
                if (e + 1 + (i = t[e] - 192) > t.length) throw new Error("invalid rlp data");
                return _decodeChildren(t, e, e + 1, i)
            }
            if (t[e] >= 184) {
                var r;
                if (e + 1 + (r = t[e] - 183) > t.length) throw new Error("invalid rlp data");
                if (e + 1 + r + (i = unarrayifyInteger(t, e + 1, r)) > t.length) throw new Error("invalid rlp data");
                return {
                    consumed: 1 + r + i,
                    result: n.hexlify(t.slice(e + 1 + r, e + 1 + r + i))
                }
            }
            if (t[e] >= 128) {
                var i;
                if (e + 1 + (i = t[e] - 128) > t.length) throw new Error("invlaid rlp data");
                return {
                    consumed: 1 + i,
                    result: n.hexlify(t.slice(e + 1, e + 1 + i))
                }
            }
            return {
                consumed: 1,
                result: n.hexlify(t[e])
            }
        }
        e.encode = function encode(t) {
            return n.hexlify(function _encode(t) {
                if (Array.isArray(t)) {
                    var e = [];
                    return t.forEach((function (t) {
                        e = e.concat(_encode(t))
                    })), e.length <= 55 ? (e.unshift(192 + e.length), e) : ((r = arrayifyInteger(e.length)).unshift(247 + r.length), r.concat(e))
                }
                var r, i = Array.prototype.slice.call(n.arrayify(t));
                return 1 === i.length && i[0] <= 127 ? i : i.length <= 55 ? (i.unshift(128 + i.length), i) : ((r = arrayifyInteger(i.length)).unshift(183 + r.length), r.concat(i))
            }(t))
        }, e.decode = function decode(t) {
            var e = n.arrayify(t),
                r = _decode(e, 0);
            if (r.consumed !== e.length) throw new Error("invalid rlp data");
            return r.result
        }
    }, function (t, e, r) {
        var n, i = this && this.__extends || (n = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function (t, e) {
                    t.__proto__ = e
                } || function (t, e) {
                    for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r])
                },
                function (t, e) {
                    function __() {
                        this.constructor = t
                    }
                    n(t, e), t.prototype = null === e ? Object.create(e) : (__.prototype = e.prototype, new __)
                }),
            o = this && this.__importDefault || function (t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            },
            a = this && this.__importStar || function (t) {
                if (t && t.__esModule) return t;
                var e = {};
                if (null != t)
                    for (var r in t) Object.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e.default = t, e
            };
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var s = o(r(2)),
            u = r(71),
            c = r(346),
            l = r(345),
            h = a(r(139)),
            d = new s.default.BN(-1);

        function toHex(t) {
            var e = t.toString(16);
            return "-" === e[0] ? e.length % 2 == 0 ? "-0x0" + e.substring(1) : "-0x" + e.substring(1) : e.length % 2 == 1 ? "0x0" + e : "0x" + e
        }

        function toBN(t) {
            return bigNumberify(t)._bn
        }

        function toBigNumber(t) {
            return new p(toHex(t))
        }
        var p = function (t) {
            function BigNumber(e) {
                var r = t.call(this) || this;
                if (h.checkNew(r, BigNumber), "string" == typeof e) u.isHexString(e) ? ("0x" == e && (e = "0x0"), c.defineReadOnly(r, "_hex", e)) : "-" === e[0] && u.isHexString(e.substring(1)) ? c.defineReadOnly(r, "_hex", e) : e.match(/^-?[0-9]*$/) ? ("" == e && (e = "0"), c.defineReadOnly(r, "_hex", toHex(new s.default.BN(e)))) : h.throwError("invalid BigNumber string value", h.INVALID_ARGUMENT, {
                    arg: "value",
                    value: e
                });
                else if ("number" == typeof e) {
                    parseInt(String(e)) !== e && h.throwError("underflow", h.NUMERIC_FAULT, {
                        operation: "setValue",
                        fault: "underflow",
                        value: e,
                        outputValue: parseInt(String(e))
                    });
                    try {
                        c.defineReadOnly(r, "_hex", toHex(new s.default.BN(e)))
                    } catch (t) {
                        h.throwError("overflow", h.NUMERIC_FAULT, {
                            operation: "setValue",
                            fault: "overflow",
                            details: t.message
                        })
                    }
                } else e instanceof BigNumber ? c.defineReadOnly(r, "_hex", e._hex) : e.toHexString ? c.defineReadOnly(r, "_hex", toHex(toBN(e.toHexString()))) : u.isArrayish(e) ? c.defineReadOnly(r, "_hex", toHex(new s.default.BN(u.hexlify(e).substring(2), 16))) : h.throwError("invalid BigNumber value", h.INVALID_ARGUMENT, {
                    arg: "value",
                    value: e
                });
                return r
            }
            return i(BigNumber, t), Object.defineProperty(BigNumber.prototype, "_bn", {
                get: function () {
                    return "-" === this._hex[0] ? new s.default.BN(this._hex.substring(3), 16).mul(d) : new s.default.BN(this._hex.substring(2), 16)
                },
                enumerable: !0,
                configurable: !0
            }), BigNumber.prototype.fromTwos = function (t) {
                return toBigNumber(this._bn.fromTwos(t))
            }, BigNumber.prototype.toTwos = function (t) {
                return toBigNumber(this._bn.toTwos(t))
            }, BigNumber.prototype.add = function (t) {
                return toBigNumber(this._bn.add(toBN(t)))
            }, BigNumber.prototype.sub = function (t) {
                return toBigNumber(this._bn.sub(toBN(t)))
            }, BigNumber.prototype.div = function (t) {
                return bigNumberify(t).isZero() && h.throwError("division by zero", h.NUMERIC_FAULT, {
                    operation: "divide",
                    fault: "division by zero"
                }), toBigNumber(this._bn.div(toBN(t)))
            }, BigNumber.prototype.mul = function (t) {
                return toBigNumber(this._bn.mul(toBN(t)))
            }, BigNumber.prototype.mod = function (t) {
                return toBigNumber(this._bn.mod(toBN(t)))
            }, BigNumber.prototype.pow = function (t) {
                return toBigNumber(this._bn.pow(toBN(t)))
            }, BigNumber.prototype.maskn = function (t) {
                return toBigNumber(this._bn.maskn(t))
            }, BigNumber.prototype.eq = function (t) {
                return this._bn.eq(toBN(t))
            }, BigNumber.prototype.lt = function (t) {
                return this._bn.lt(toBN(t))
            }, BigNumber.prototype.lte = function (t) {
                return this._bn.lte(toBN(t))
            }, BigNumber.prototype.gt = function (t) {
                return this._bn.gt(toBN(t))
            }, BigNumber.prototype.gte = function (t) {
                return this._bn.gte(toBN(t))
            }, BigNumber.prototype.isZero = function () {
                return this._bn.isZero()
            }, BigNumber.prototype.toNumber = function () {
                try {
                    return this._bn.toNumber()
                } catch (t) {
                    h.throwError("overflow", h.NUMERIC_FAULT, {
                        operation: "setValue",
                        fault: "overflow",
                        details: t.message
                    })
                }
                return null
            }, BigNumber.prototype.toString = function () {
                return this._bn.toString(10)
            }, BigNumber.prototype.toHexString = function () {
                return this._hex
            }, BigNumber
        }(l.BigNumber);

        function bigNumberify(t) {
            return t instanceof p ? t : new p(t)
        }
        e.bigNumberify = bigNumberify, e.ConstantNegativeOne = bigNumberify(-1), e.ConstantZero = bigNumberify(0), e.ConstantOne = bigNumberify(1), e.ConstantTwo = bigNumberify(2), e.ConstantWeiPerEther = bigNumberify("1000000000000000000")
    }, function (t, e, r) {
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n, i = r(71);
        ! function (t) {
            t.current = "", t.NFC = "NFC", t.NFD = "NFD", t.NFKC = "NFKC", t.NFKD = "NFKD"
        }(n = e.UnicodeNormalizationForm || (e.UnicodeNormalizationForm = {})), e.toUtf8Bytes = function toUtf8Bytes(t, e) {
            void 0 === e && (e = n.current), e != n.current && (t = t.normalize(e));
            for (var r = [], o = 0, a = 0; a < t.length; a++) {
                var s = t.charCodeAt(a);
                s < 128 ? r[o++] = s : s < 2048 ? (r[o++] = s >> 6 | 192, r[o++] = 63 & s | 128) : 55296 == (64512 & s) && a + 1 < t.length && 56320 == (64512 & t.charCodeAt(a + 1)) ? (s = 65536 + ((1023 & s) << 10) + (1023 & t.charCodeAt(++a)), r[o++] = s >> 18 | 240, r[o++] = s >> 12 & 63 | 128, r[o++] = s >> 6 & 63 | 128, r[o++] = 63 & s | 128) : (r[o++] = s >> 12 | 224, r[o++] = s >> 6 & 63 | 128, r[o++] = 63 & s | 128)
            }
            return i.arrayify(r)
        }, e.toUtf8String = function toUtf8String(t) {
            t = i.arrayify(t);
            for (var e = "", r = 0; r < t.length;) {
                var n = t[r++];
                if (n >> 7 != 0) {
                    if (n >> 6 != 2) {
                        var o = null;
                        if (n >> 5 == 6) o = 1;
                        else if (n >> 4 == 14) o = 2;
                        else if (n >> 3 == 30) o = 3;
                        else if (n >> 2 == 62) o = 4;
                        else {
                            if (n >> 1 != 126) continue;
                            o = 5
                        }
                        if (r + o > t.length) {
                            for (; r < t.length && t[r] >> 6 == 2; r++);
                            if (r != t.length) continue;
                            return e
                        }
                        var a, s = n & (1 << 8 - o - 1) - 1;
                        for (a = 0; a < o; a++) {
                            var u = t[r++];
                            if (u >> 6 != 2) break;
                            s = s << 6 | 63 & u
                        }
                        a == o ? s <= 65535 ? e += String.fromCharCode(s) : (s -= 65536, e += String.fromCharCode(55296 + (s >> 10 & 1023), 56320 + (1023 & s))) : r--
                    }
                } else e += String.fromCharCode(n)
            }
            return e
        }
    }, function (t, e, r) {
        var n = r(342),
            i = r(205),
            o = r(173),
            a = r(149);
        t.exports = function padEnd(t, e, r) {
            t = a(t);
            var s = (e = o(e)) ? i(t) : 0;
            return e && s < e ? t + n(e - s, r) : t
        }
    }, function (t, e, r) {
        var n = r(916),
            i = r(22);
        t.exports = function orderBy(t, e, r, o) {
            return null == t ? [] : (i(e) || (e = null == e ? [] : [e]), i(r = o ? void 0 : r) || (r = null == r ? [] : [r]), n(t, e, r))
        }
    }, function (t, e, r) {
        var n = r(150),
            i = r(104),
            o = r(917),
            a = r(918),
            s = r(216),
            u = r(919),
            c = r(151);
        t.exports = function baseOrderBy(t, e, r) {
            var l = -1;
            e = n(e.length ? e : [c], s(i));
            var h = o(t, (function (t, r, i) {
                return {
                    criteria: n(e, (function (e) {
                        return e(t)
                    })),
                    index: ++l,
                    value: t
                }
            }));
            return a(h, (function (t, e) {
                return u(t, e, r)
            }))
        }
    }, function (t, e, r) {
        var n = r(232),
            i = r(144);
        t.exports = function baseMap(t, e) {
            var r = -1,
                o = i(t) ? Array(t.length) : [];
            return n(t, (function (t, n, i) {
                o[++r] = e(t, n, i)
            })), o
        }
    }, function (t, e) {
        t.exports = function baseSortBy(t, e) {
            var r = t.length;
            for (t.sort(e); r--;) t[r] = t[r].value;
            return t
        }
    }, function (t, e, r) {
        var n = r(920);
        t.exports = function compareMultiple(t, e, r) {
            for (var i = -1, o = t.criteria, a = e.criteria, s = o.length, u = r.length; ++i < s;) {
                var c = n(o[i], a[i]);
                if (c) return i >= u ? c : c * ("desc" == r[i] ? -1 : 1)
            }
            return t.index - e.index
        }
    }, function (t, e, r) {
        var n = r(77);
        t.exports = function compareAscending(t, e) {
            if (t !== e) {
                var r = void 0 !== t,
                    i = null === t,
                    o = t == t,
                    a = n(t),
                    s = void 0 !== e,
                    u = null === e,
                    c = e == e,
                    l = n(e);
                if (!u && !l && !a && t > e || a && s && c && !u && !l || i && s && c || !r && c || !o) return 1;
                if (!i && !a && !l && t < e || l && r && o && !i && !a || u && r && o || !s && o || !c) return -1
            }
            return 0
        }
    }, function (t, e, r) {
        var n = r(922);
        t.exports = function flatten(t) {
            return (null == t ? 0 : t.length) ? n(t, 1) : []
        }
    }, function (t, e, r) {
        var n = r(223),
            i = r(923);
        t.exports = function baseFlatten(t, e, r, o, a) {
            var s = -1,
                u = t.length;
            for (r || (r = i), a || (a = []); ++s < u;) {
                var c = t[s];
                e > 0 && r(c) ? e > 1 ? baseFlatten(c, e - 1, r, o, a) : n(a, c) : o || (a[a.length] = c)
            }
            return a
        }
    }, function (t, e, r) {
        var n = r(75),
            i = r(142),
            o = r(22),
            a = n ? n.isConcatSpreadable : void 0;
        t.exports = function isFlattenable(t) {
            return o(t) || i(t) || !!(a && t && t[a])
        }
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var i, o = n(r(28)),
            a = n(r(29)),
            s = n(r(9)),
            u = n(r(11)),
            c = n(r(23)),
            l = n(r(24)),
            h = n(r(14)),
            d = n(r(167)),
            p = r(81),
            m = r(30),
            y = r(33),
            b = n(r(40)),
            g = n(r(172)),
            v = r(343);

        function _createSuper(t) {
            var e = function _isNativeReflectConstruct() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (t) {
                    return !1
                }
            }();
            return function () {
                var r, n = (0, h.default)(t);
                if (e) {
                    var i = (0, h.default)(this).constructor;
                    r = Reflect.construct(n, arguments, i)
                } else r = n.apply(this, arguments);
                return (0, l.default)(this, r)
            }
        }
        var w = (i = function (t) {
            (0, c.default)(SavingsService, t);
            var e, r, n, i, l, h, d, p, g, w = _createSuper(SavingsService);

            function SavingsService() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : m.ServiceRoles.SAVINGS;
                return (0, s.default)(this, SavingsService), w.call(this, t, ["smartContract", "proxy", "accounts", "web3", m.ServiceRoles.SYSTEM_DATA])
            }
            return (0, u.default)(SavingsService, [{
                key: "join",
                value: (g = (0, a.default)(o.default.mark((function _callee(t, e) {
                    var r;
                    return o.default.wrap((function _callee$(n) {
                        for (;;) switch (n.prev = n.next) {
                            case 0:
                                return r = e.promise, n.next = 3, this.get("proxy").ensureProxy();
                            case 3:
                                return n.abrupt("return", this._proxyActions.join(this._daiAdapterAddress, this._pot.address, t.toFixed("wei"), {
                                    dsProxy: !0,
                                    promise: r
                                }));
                            case 4:
                            case "end":
                                return n.stop()
                        }
                    }), _callee, this)
                }))), function join(t, e) {
                    return g.apply(this, arguments)
                })
            }, {
                key: "exit",
                value: (p = (0, a.default)(o.default.mark((function _callee2(t, e) {
                    var r;
                    return o.default.wrap((function _callee2$(n) {
                        for (;;) switch (n.prev = n.next) {
                            case 0:
                                return r = e.promise, n.next = 3, this.get("proxy").ensureProxy();
                            case 3:
                                return n.abrupt("return", this._proxyActions.exit(this._daiAdapterAddress, this._pot.address, t.toFixed("wei"), {
                                    dsProxy: !0,
                                    promise: r
                                }));
                            case 4:
                            case "end":
                                return n.stop()
                        }
                    }), _callee2, this)
                }))), function exit(t, e) {
                    return p.apply(this, arguments)
                })
            }, {
                key: "exitAll",
                value: (d = (0, a.default)(o.default.mark((function _callee3(t) {
                    var e;
                    return o.default.wrap((function _callee3$(r) {
                        for (;;) switch (r.prev = r.next) {
                            case 0:
                                return e = t.promise, r.next = 3, this.get("proxy").ensureProxy();
                            case 3:
                                return r.abrupt("return", this._proxyActions.exitAll(this._daiAdapterAddress, this._pot.address, {
                                    dsProxy: !0,
                                    promise: e
                                }));
                            case 4:
                            case "end":
                                return r.stop()
                        }
                    }), _callee3, this)
                }))), function exitAll(t) {
                    return d.apply(this, arguments)
                })
            }, {
                key: "balance",
                value: (h = (0, a.default)(o.default.mark((function _callee4() {
                    var t;
                    return o.default.wrap((function _callee4$(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, this.get("proxy").currentProxy();
                            case 2:
                                return t = e.sent, e.abrupt("return", t ? this.balanceOf(t) : (0, y.DAI)(0));
                            case 4:
                            case "end":
                                return e.stop()
                        }
                    }), _callee4, this)
                }))), function balance() {
                    return h.apply(this, arguments)
                })
            }, {
                key: "balanceOf",
                value: (l = (0, a.default)(o.default.mark((function _callee5(t) {
                    var e, r;
                    return o.default.wrap((function _callee5$(n) {
                        for (;;) switch (n.prev = n.next) {
                            case 0:
                                return n.t0 = b.default, n.next = 3, this._pot.pie(t);
                            case 3:
                                return n.t1 = n.sent, e = new n.t0(n.t1), n.next = 7, this.chi();
                            case 7:
                                return r = n.sent, n.abrupt("return", (0, y.DAI)(e.times(r).div(m.WAD).dp(18)));
                            case 9:
                            case "end":
                                return n.stop()
                        }
                    }), _callee5, this)
                }))), function balanceOf(t) {
                    return l.apply(this, arguments)
                })
            }, {
                key: "getTotalDai",
                value: (i = (0, a.default)(o.default.mark((function _callee6() {
                    var t, e;
                    return o.default.wrap((function _callee6$(r) {
                        for (;;) switch (r.prev = r.next) {
                            case 0:
                                return r.t0 = b.default, r.next = 3, this._pot.Pie();
                            case 3:
                                return r.t1 = r.sent, t = new r.t0(r.t1), r.next = 7, this.chi();
                            case 7:
                                return e = r.sent, r.abrupt("return", (0, y.DAI)(t.times(e).div(m.WAD).dp(18)));
                            case 9:
                            case "end":
                                return r.stop()
                        }
                    }), _callee6, this)
                }))), function getTotalDai() {
                    return i.apply(this, arguments)
                })
            }, {
                key: "getYearlyRate",
                value: (n = (0, a.default)(o.default.mark((function _callee7() {
                    var t;
                    return o.default.wrap((function _callee7$(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.t0 = b.default, e.next = 3, this._pot.dsr();
                            case 3:
                                return e.t1 = e.sent, t = new e.t0(e.t1).div(m.RAY), e.abrupt("return", t.pow(m.SECONDS_PER_YEAR).minus(1));
                            case 6:
                            case "end":
                                return e.stop()
                        }
                    }), _callee7, this)
                }))), function getYearlyRate() {
                    return n.apply(this, arguments)
                })
            }, {
                key: "chi",
                value: (r = (0, a.default)(o.default.mark((function _callee8() {
                    return o.default.wrap((function _callee8$(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return t.t0 = b.default, t.next = 3, this._pot.chi();
                            case 3:
                                return t.t1 = t.sent, t.abrupt("return", new t.t0(t.t1).div(m.RAY));
                            case 5:
                            case "end":
                                return t.stop()
                        }
                    }), _callee8, this)
                }))), function chi() {
                    return r.apply(this, arguments)
                })
            }, {
                key: "getEventHistory",
                value: function getEventHistory(t) {
                    return this._eventHistoryCache || (this._eventHistoryCache = {}), (0, v.getDsrEventHistory)(this, t, this._eventHistoryCache)
                }
            }, {
                key: "getEarningsToDate",
                value: (e = (0, a.default)(o.default.mark((function _callee9(t) {
                    var e, r, n;
                    return o.default.wrap((function _callee9$(i) {
                        for (;;) switch (i.prev = i.next) {
                            case 0:
                                return this._eventHistoryCache || (this._eventHistoryCache = {}), i.next = 3, (0, v.getDsrEventHistory)(this, t, this._eventHistoryCache);
                            case 3:
                                return e = i.sent, r = new b.default(0), e.forEach((function (t) {
                                    var e = t.type,
                                        n = t.amount;
                                    "DSR_DEPOSIT" === e && (r = r.plus(n)), "DSR_WITHDRAW" === e && (r = r.minus(n))
                                })), i.next = 8, this.balanceOf(t);
                            case 8:
                                return n = i.sent, i.abrupt("return", n.gt(r) ? n.minus(r) : (0, y.DAI)(0));
                            case 10:
                            case "end":
                                return i.stop()
                        }
                    }), _callee9, this)
                }))), function getEarningsToDate(t) {
                    return e.apply(this, arguments)
                })
            }, {
                key: "resetEventHistoryCache",
                value: function resetEventHistoryCache() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                    null !== t ? delete this._eventHistoryCache[t] : this._eventHistoryCache = {}
                }
            }, {
                key: "_proxyActions",
                get: function get() {
                    return this.get("smartContract").getContract("PROXY_ACTIONS_DSR")
                }
            }, {
                key: "_pot",
                get: function get() {
                    return this.get("smartContract").getContract("MCD_POT")
                }
            }, {
                key: "_daiAdapterAddress",
                get: function get() {
                    return this.get(m.ServiceRoles.SYSTEM_DATA).adapterAddress("DAI")
                }
            }]), SavingsService
        }(p.PublicService), (0, d.default)(i.prototype, "join", [g.default], Object.getOwnPropertyDescriptor(i.prototype, "join"), i.prototype), (0, d.default)(i.prototype, "exit", [g.default], Object.getOwnPropertyDescriptor(i.prototype, "exit"), i.prototype), (0, d.default)(i.prototype, "exitAll", [g.default], Object.getOwnPropertyDescriptor(i.prototype, "exitAll"), i.prototype), i);
        e.default = w
    }, function (t, e, r) {
        var n = r(64),
            i = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var o = i(r(28)),
            a = i(r(29)),
            s = i(r(9)),
            u = i(r(11)),
            c = i(r(23)),
            l = i(r(24)),
            h = i(r(14)),
            d = r(81),
            p = i(r(926)),
            m = r(30),
            y = i(r(18)),
            b = n(r(203));

        function _createSuper(t) {
            var e = function _isNativeReflectConstruct() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (t) {
                    return !1
                }
            }();
            return function () {
                var r, n = (0, h.default)(t);
                if (e) {
                    var i = (0, h.default)(this).constructor;
                    r = Reflect.construct(n, arguments, i)
                } else r = n.apply(this, arguments);
                return (0, l.default)(this, r)
            }
        }
        var g = m.ServiceRoles.CDP_TYPE,
            v = m.ServiceRoles.SYSTEM_DATA,
            w = function (t) {
                (0, c.default)(CdpTypeService, t);
                var e, r, n = _createSuper(CdpTypeService);

                function CdpTypeService() {
                    var t, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : g;
                    return (0, s.default)(this, CdpTypeService), (t = n.call(this, e, [v])).reset = t.resetAllCdpTypes, t
                }
                return (0, u.default)(CdpTypeService, [{
                    key: "initialize",
                    value: function initialize() {
                        var t = this,
                            e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        this.settings = e, this.cdpTypes = (e.cdpTypes || []).map((function (r) {
                            return new p.default(t, r, {
                                prefetch: e.prefetch
                            })
                        }))
                    }
                }, {
                    key: "connect",
                    value: (r = (0, a.default)(o.default.mark((function _callee() {
                        return o.default.wrap((function _callee$(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    if (!this.settings.prefetch) {
                                        t.next = 3;
                                        break
                                    }
                                    return t.next = 3, this.prefetchAllCdpTypes();
                                case 3:
                                case "end":
                                    return t.stop()
                            }
                        }), _callee, this)
                    }))), function connect() {
                        return r.apply(this, arguments)
                    })
                }, {
                    key: "getCdpType",
                    value: function getCdpType(t, e) {
                        var r = this.cdpTypes.filter((function (r) {
                            return !(t && r.currency.symbol !== t.symbol || e && e !== r.ilk)
                        }));
                        if (1 === r.length) return r[0];
                        var n = [t && "currency ".concat(t.symbol), e && "ilk ".concat(e)].filter((function (t) {
                            return t
                        })).join(", ");
                        (0, y.default)(r.length <= 1, "".concat(n, " matches more than one cdp type")), (0, y.default)(r.length > 0, "".concat(n, " matches no cdp type"))
                    }
                }, {
                    key: "resetAllCdpTypes",
                    value: function resetAllCdpTypes() {
                        this.cdpTypes.forEach((function (t) {
                            return t.reset()
                        }))
                    }
                }, {
                    key: "prefetchAllCdpTypes",
                    value: (e = (0, a.default)(o.default.mark((function _callee2() {
                        return o.default.wrap((function _callee2$(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, Promise.all(this.cdpTypes.map((function (t) {
                                        return t.prefetch()
                                    })));
                                case 2:
                                case "end":
                                    return t.stop()
                            }
                        }), _callee2, this)
                    }))), function prefetchAllCdpTypes() {
                        return e.apply(this, arguments)
                    })
                }, {
                    key: "totalDebtAllCdpTypes",
                    get: function get() {
                        return this.cdpTypes.map((function (t) {
                            return t.totalDebt
                        })).reduce((function (t, e) {
                            return t.plus(e)
                        }))
                    }
                }, {
                    key: "totalCollateralValueAllCdpTypes",
                    get: function get() {
                        return this.cdpTypes.map((function (t) {
                            return t.totalCollateral.times(t.price)
                        })).reduce((function (t, e) {
                            return t.plus(e)
                        }))
                    }
                }, {
                    key: "totalCollateralizationRatioAllCdpTypes",
                    get: function get() {
                        return b.collateralizationRatio(this.totalCollateralValueAllCdpTypes, this.totalDebtAllCdpTypes)
                    }
                }]), CdpTypeService
            }(d.PublicService);
        e.default = w
    }, function (t, e, r) {
        var n = r(64),
            i = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var o = i(r(28)),
            a = i(r(29)),
            s = i(r(9)),
            u = i(r(11)),
            c = i(r(18)),
            l = r(30),
            h = r(116),
            d = r(33),
            p = n(r(203)),
            m = function () {
                function CdpType(t, e) {
                    var r = e.currency,
                        n = e.ilk,
                        i = e.decimals,
                        o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
                            prefetch: !0
                        };
                    (0, s.default)(this, CdpType), (0, c.default)(r && n, "currency and ilk are required"), this._cdpTypeService = t, this._systemData = t.get(l.ServiceRoles.SYSTEM_DATA), this._web3Service = this._systemData.get("smartContract").get("web3"), this.currency = r, this.decimals = i || 18, this.ilk = n, this._ilkBytes = (0, h.stringToBytes)(this.ilk), this.cache = {}, o.prefetch && this.prefetch()
                }
                var t, e, r;
                return (0, u.default)(CdpType, [{
                    key: "ilkInfo",
                    value: (r = (0, a.default)(o.default.mark((function _callee() {
                        var t, e = arguments;
                        return o.default.wrap((function _callee$(r) {
                            for (;;) switch (r.prev = r.next) {
                                case 0:
                                    return t = e.length > 0 && void 0 !== e[0] ? e[0] : "vat", r.abrupt("return", this._systemData[t].ilks(this._ilkBytes));
                                case 2:
                                case "end":
                                    return r.stop()
                            }
                        }), _callee, this)
                    }))), function ilkInfo() {
                        return r.apply(this, arguments)
                    })
                }, {
                    key: "prefetch",
                    value: (e = (0, a.default)(o.default.mark((function _callee2() {
                        var t, e, r, n = this;
                        return o.default.wrap((function _callee2$(i) {
                            for (;;) switch (i.prev = i.next) {
                                case 0:
                                    return this._prefetchPromise || (t = this._systemData.adapterAddress(this.ilk), e = this.currency === d.ETH ? d.WETH : this.currency, r = e.symbol, this._prefetchPromise = Promise.all([this._systemData.get("token").getToken(r).balanceOf(t).then((function (t) {
                                        return n.cache.adapterBalance = t
                                    })), this.ilkInfo().then((function (t) {
                                        return n.cache.vatInfo = t
                                    })), this.ilkInfo("cat").then((function (t) {
                                        return n.cache.catInfo = t
                                    })), this.ilkInfo("jug").then((function (t) {
                                        return n.cache.jugInfo = t
                                    })), this.ilkInfo("spot").then((function (t) {
                                        return n.cache.spotInfo = t
                                    })), this._systemData.spot.par().then((function (t) {
                                        return n.cache.par = t
                                    }))])), i.abrupt("return", this._prefetchPromise);
                                case 2:
                                case "end":
                                    return i.stop()
                            }
                        }), _callee2, this)
                    }))), function prefetch() {
                        return e.apply(this, arguments)
                    })
                }, {
                    key: "reset",
                    value: (t = (0, a.default)(o.default.mark((function _callee3() {
                        return o.default.wrap((function _callee3$(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    this._prefetchPromise = null, this.cache = {};
                                case 2:
                                case "end":
                                    return t.stop()
                            }
                        }), _callee3, this)
                    }))), function reset() {
                        return t.apply(this, arguments)
                    })
                }, {
                    key: "_getCached",
                    value: function _getCached(t) {
                        return (0, c.default)(this.cache[t], "".concat(t, " is not cached")), this.cache[t]
                    }
                }, {
                    key: "totalCollateral",
                    get: function get() {
                        return this.currency(this._getCached("adapterBalance"))
                    }
                }, {
                    key: "totalDebt",
                    get: function get() {
                        var t = this._getCached("vatInfo"),
                            e = t.Art,
                            r = t.rate;
                        return d.DAI.wei(e).times(r).shiftedBy(-27)
                    }
                }, {
                    key: "debtCeiling",
                    get: function get() {
                        return p.debtCeiling(this._getCached("vatInfo").line)
                    }
                }, {
                    key: "liquidationRatio",
                    get: function get() {
                        return p.liquidationRatio(this._getCached("spotInfo").mat)
                    }
                }, {
                    key: "price",
                    get: function get() {
                        return p.price(this.currency, this._getCached("par"), this._getCached("vatInfo").spot, this.liquidationRatio)
                    }
                }, {
                    key: "liquidationPenalty",
                    get: function get() {
                        return p.liquidationPenalty(this._getCached("catInfo").chop)
                    }
                }, {
                    key: "annualStabilityFee",
                    get: function get() {
                        return p.annualStabilityFee(this._getCached("jugInfo").duty)
                    }
                }, {
                    key: "_pipAddress",
                    get: function get() {
                        var t = "PIP_" + this.currency.symbol;
                        return this._systemData.get("smartContract").getContractAddress(t)
                    }
                }]), CdpType
            }();
        e.default = m
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var i = n(r(9)),
            o = n(r(11)),
            a = n(r(23)),
            s = n(r(24)),
            u = n(r(14)),
            c = r(81),
            l = n(r(928)),
            h = r(30);

        function _createSuper(t) {
            var e = function _isNativeReflectConstruct() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (t) {
                    return !1
                }
            }();
            return function () {
                var r, n = (0, u.default)(t);
                if (e) {
                    var i = (0, u.default)(this).constructor;
                    r = Reflect.construct(n, arguments, i)
                } else r = n.apply(this, arguments);
                return (0, s.default)(this, r)
            }
        }
        var d = function (t) {
            (0, a.default)(AuctionService, t);
            var e = _createSuper(AuctionService);

            function AuctionService() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : h.ServiceRoles.AUCTION;
                return (0, i.default)(this, AuctionService), e.call(this, t, ["smartContract"])
            }
            return (0, o.default)(AuctionService, [{
                key: "getAuction",
                value: function getAuction(t) {
                    return new l.default(t, this.get("smartContract"))
                }
            }]), AuctionService
        }(c.PublicService);
        e.default = d
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var i = n(r(28)),
            o = n(r(29)),
            a = n(r(9)),
            s = n(r(11)),
            u = r(30),
            c = n(r(40)),
            l = r(33),
            h = function () {
                function Auction(t, e) {
                    switch ((0, a.default)(this, Auction), t) {
                        case l.DAI.symbol:
                            this.contract = e.getContract("MCD_FLAP");
                            break;
                        case "MKR":
                            this.contract = e.getContract("MCD_FLOP");
                            break;
                        default:
                            this.contract = e.getContract("MCD_FLIP_" + t.replace(/-/g, "_"))
                    }
                }
                var t, e, r;
                return (0, s.default)(Auction, [{
                    key: "getMaxBidLifetime",
                    value: (r = (0, o.default)(i.default.mark((function _callee() {
                        return i.default.wrap((function _callee$(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, this.contract.ttl();
                                case 2:
                                    return t.t0 = t.sent, t.abrupt("return", t.t0 / 3600);
                                case 4:
                                case "end":
                                    return t.stop()
                            }
                        }), _callee, this)
                    }))), function getMaxBidLifetime() {
                        return r.apply(this, arguments)
                    })
                }, {
                    key: "getMaxAuctionDuration",
                    value: (e = (0, o.default)(i.default.mark((function _callee2() {
                        return i.default.wrap((function _callee2$(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.next = 2, this.contract.tau();
                                case 2:
                                    return t.t0 = t.sent, t.abrupt("return", t.t0 / 86400);
                                case 4:
                                case "end":
                                    return t.stop()
                            }
                        }), _callee2, this)
                    }))), function getMaxAuctionDuration() {
                        return e.apply(this, arguments)
                    })
                }, {
                    key: "getMinBidIncrease",
                    value: (t = (0, o.default)(i.default.mark((function _callee3() {
                        var t;
                        return i.default.wrap((function _callee3$(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, this.contract.beg();
                                case 2:
                                    return t = e.sent, e.abrupt("return", new c.default(t).div(u.WAD).minus(1).toNumber());
                                case 4:
                                case "end":
                                    return e.stop()
                            }
                        }), _callee3, this)
                    }))), function getMinBidIncrease() {
                        return t.apply(this, arguments)
                    })
                }]), Auction
            }();
        e.default = h
    }, function (t, e, r) {
        var n = r(4);
        Object.defineProperty(e, "__esModule", {
            value: !0
        }), e.default = void 0;
        var i = n(r(115)),
            o = n(r(28)),
            a = n(r(29)),
            s = n(r(9)),
            u = n(r(11)),
            c = n(r(23)),
            l = n(r(24)),
            h = n(r(14)),
            d = r(81),
            p = r(30),
            m = n(r(40)),
            y = r(33);

        function _createSuper(t) {
            var e = function _isNativeReflectConstruct() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function () {}))), !0
                } catch (t) {
                    return !1
                }
            }();
            return function () {
                var r, n = (0, h.default)(t);
                if (e) {
                    var i = (0, h.default)(this).constructor;
                    r = Reflect.construct(n, arguments, i)
                } else r = n.apply(this, arguments);
                return (0, l.default)(this, r)
            }
        }
        var b = function (t) {
            (0, c.default)(SystemDataService, t);
            var e, r, n, l, h, d = _createSuper(SystemDataService);

            function SystemDataService() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : p.ServiceRoles.SYSTEM_DATA;
                return (0, s.default)(this, SystemDataService), d.call(this, t, ["smartContract", "token"])
            }
            return (0, u.default)(SystemDataService, [{
                key: "getAnnualBaseRate",
                value: (h = (0, a.default)(o.default.mark((function _callee() {
                    var t, e;
                    return o.default.wrap((function _callee$(r) {
                        for (;;) switch (r.prev = r.next) {
                            case 0:
                                return r.next = 2, this.jug.base();
                            case 2:
                                return t = r.sent, e = new m.default(t.toString()).dividedBy(p.RAY).plus(1), r.abrupt("return", e.pow(p.SECONDS_PER_YEAR).minus(1).toNumber());
                            case 5:
                            case "end":
                                return r.stop()
                        }
                    }), _callee, this)
                }))), function getAnnualBaseRate() {
                    return h.apply(this, arguments)
                })
            }, {
                key: "getSystemWideDebtCeiling",
                value: (l = (0, a.default)(o.default.mark((function _callee2() {
                    var t;
                    return o.default.wrap((function _callee2$(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, this.vat.Line();
                            case 2:
                                return t = e.sent, e.abrupt("return", new m.default(t.toString()).dividedBy(p.RAD).toNumber());
                            case 4:
                            case "end":
                                return e.stop()
                        }
                    }), _callee2, this)
                }))), function getSystemWideDebtCeiling() {
                    return l.apply(this, arguments)
                })
            }, {
                key: "adapterAddress",
                value: function adapterAddress(t) {
                    var e = "MCD_JOIN_" + t.replace(/-/g, "_");
                    return this.get("smartContract").getContractAddress(e)
                }
            }, {
                key: "isGlobalSettlementInvoked",
                value: (n = (0, a.default)(o.default.mark((function _callee3() {
                    var t;
                    return o.default.wrap((function _callee3$(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, this.get("smartContract").getContract("MCD_END").live();
                            case 2:
                                return t = e.sent, e.abrupt("return", t.eq(0));
                            case 4:
                            case "end":
                                return e.stop()
                        }
                    }), _callee3, this)
                }))), function isGlobalSettlementInvoked() {
                    return n.apply(this, arguments)
                })
            }, {
                key: "getSystemSurplus",
                value: (r = (0, a.default)(o.default.mark((function _callee4() {
                    var t, e, r, n, a;
                    return o.default.wrap((function _callee4$(o) {
                        for (;;) switch (o.prev = o.next) {
                            case 0:
                                return t = this.get("smartContract").getContractAddress("MCD_VOW"), o.next = 3, Promise.all([this.vat.dai(t), this.vat.sin(t)]);
                            case 3:
                                return e = o.sent, r = (0, i.default)(e, 2), n = r[0], a = r[1], o.abrupt("return", y.DAI.rad(n).minus(y.DAI.rad(a)));
                            case 8:
                            case "end":
                                return o.stop()
                        }
                    }), _callee4, this)
                }))), function getSystemSurplus() {
                    return r.apply(this, arguments)
                })
            }, {
                key: "getTotalDai",
                value: (e = (0, a.default)(o.default.mark((function _callee5() {
                    return o.default.wrap((function _callee5$(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return t.t0 = y.DAI, t.next = 3, this.vat.debt();
                            case 3:
                                return t.t1 = t.sent, t.abrupt("return", t.t0.rad.call(t.t0, t.t1));
                            case 5:
                            case "end":
                                return t.stop()
                        }
                    }), _callee5, this)
                }))), function getTotalDai() {
                    return e.apply(this, arguments)
                })
            }, {
                key: "cat",
                get: function get() {
                    return this.get("smartContract").getContract("MCD_CAT")
                }
            }, {
                key: "jug",
                get: function get() {
                    return this.get("smartContract").getContract("MCD_JUG")
                }
            }, {
                key: "vat",
                get: function get() {
                    return this.get("smartContract").getContract("MCD_VAT")
                }
            }, {
                key: "spot",
                get: function get() {
                    return this.get("smartContract").getContract("MCD_SPOT")
                }
            }]), SystemDataService
        }(d.PublicService);
        e.default = b
    }, function (t) {
        t.exports = JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Withdrawal","type":"event"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"deposit","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]')
    }])
}));
//# sourceMappingURL=index.js.map